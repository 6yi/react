{"version":3,"sources":["webpack:///path---redirect-to-codepen-context-theme-detailed-app-227d11ab3eef90e7dea7.js","webpack:///./.cache/json/redirect-to-codepen-context-theme-detailed-app.json"],"names":["webpackJsonp","970","module","exports","pathContext","action","payload"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,OAAA,gCAAAC,QAAA","file":"path---redirect-to-codepen-context-theme-detailed-app-227d11ab3eef90e7dea7.js","sourcesContent":["webpackJsonp([30355646893989],{\n\n/***/ 970:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"action\":\"https://codepen.io/pen/define\",\"payload\":\"{\\\"editors\\\":\\\"0010\\\",\\\"html\\\":\\\"<div id=\\\\\\\"root\\\\\\\"></div>\\\",\\\"js\\\":\\\"import {ThemeContext, themes} from './theme-context';\\\\nimport ThemedButton from './themed-button';\\\\n\\\\n// 一个使用到ThemedButton组件的中间组件\\\\nfunction Toolbar(props) {\\\\n  return (\\\\n    <ThemedButton onClick={props.changeTheme}>\\\\n      Change Theme\\\\n    </ThemedButton>\\\\n  );\\\\n}\\\\n\\\\nclass App extends React.Component {\\\\n  constructor(props) {\\\\n    super(props);\\\\n    this.state = {\\\\n      theme: themes.light,\\\\n    };\\\\n\\\\n    this.toggleTheme = () => {\\\\n      this.setState(state => ({\\\\n        theme:\\\\n          state.theme === themes.dark\\\\n            ? themes.light\\\\n            : themes.dark,\\\\n      }));\\\\n    };\\\\n  }\\\\n\\\\n  render() {\\\\n    //highlight-range{1-3}\\\\n    // ThemedButton 位于 ThemeProvider 内\\\\n    // 在外部使用时使用来自 state 里面的 theme\\\\n    // 默认 dark theme\\\\n    //highlight-range{3-5,7}\\\\n    return (\\\\n      <Page>\\\\n        <ThemeContext.Provider value={this.state.theme}>\\\\n          <Toolbar changeTheme={this.toggleTheme} />\\\\n        </ThemeContext.Provider>\\\\n        <Section>\\\\n          <ThemedButton />\\\\n        </Section>\\\\n      </Page>\\\\n    );\\\\n  }\\\\n}\\\\n\\\\nReactDOM.render(<App />, document.root);\\\\n\\\",\\\"js_external\\\":\\\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\\\",\\\"js_pre_processor\\\":\\\"babel\\\",\\\"layout\\\":\\\"left\\\"}\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---redirect-to-codepen-context-theme-detailed-app-227d11ab3eef90e7dea7.js","module.exports = {\"pathContext\":{\"action\":\"https://codepen.io/pen/define\",\"payload\":\"{\\\"editors\\\":\\\"0010\\\",\\\"html\\\":\\\"<div id=\\\\\\\"root\\\\\\\"></div>\\\",\\\"js\\\":\\\"import {ThemeContext, themes} from './theme-context';\\\\nimport ThemedButton from './themed-button';\\\\n\\\\n// 一个使用到ThemedButton组件的中间组件\\\\nfunction Toolbar(props) {\\\\n  return (\\\\n    <ThemedButton onClick={props.changeTheme}>\\\\n      Change Theme\\\\n    </ThemedButton>\\\\n  );\\\\n}\\\\n\\\\nclass App extends React.Component {\\\\n  constructor(props) {\\\\n    super(props);\\\\n    this.state = {\\\\n      theme: themes.light,\\\\n    };\\\\n\\\\n    this.toggleTheme = () => {\\\\n      this.setState(state => ({\\\\n        theme:\\\\n          state.theme === themes.dark\\\\n            ? themes.light\\\\n            : themes.dark,\\\\n      }));\\\\n    };\\\\n  }\\\\n\\\\n  render() {\\\\n    //highlight-range{1-3}\\\\n    // ThemedButton 位于 ThemeProvider 内\\\\n    // 在外部使用时使用来自 state 里面的 theme\\\\n    // 默认 dark theme\\\\n    //highlight-range{3-5,7}\\\\n    return (\\\\n      <Page>\\\\n        <ThemeContext.Provider value={this.state.theme}>\\\\n          <Toolbar changeTheme={this.toggleTheme} />\\\\n        </ThemeContext.Provider>\\\\n        <Section>\\\\n          <ThemedButton />\\\\n        </Section>\\\\n      </Page>\\\\n    );\\\\n  }\\\\n}\\\\n\\\\nReactDOM.render(<App />, document.root);\\\\n\\\",\\\"js_external\\\":\\\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\\\",\\\"js_pre_processor\\\":\\\"babel\\\",\\\"layout\\\":\\\"left\\\"}\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/redirect-to-codepen-context-theme-detailed-app.json\n// module id = 970\n// module chunks = 30355646893989"],"sourceRoot":""}