{"version":3,"sources":["webpack:///path---redirect-to-codepen-context-app-nested-00df59ac052df7eceeb6.js","webpack:///./.cache/json/redirect-to-codepen-context-app-nested.json"],"names":["webpackJsonp","958","module","exports","pathContext","action","payload"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,OAAA,gCAAAC,QAAA","file":"path---redirect-to-codepen-context-app-nested-00df59ac052df7eceeb6.js","sourcesContent":["webpackJsonp([201119609581963],{\n\n/***/ 958:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"action\":\"https://codepen.io/pen/define\",\"payload\":\"{\\\"editors\\\":\\\"0010\\\",\\\"html\\\":\\\"<div id=\\\\\\\"root\\\\\\\"></div>\\\",\\\"js\\\":\\\"import {ThemeContext, themes} from './theme-context';\\\\nimport ThemeTogglerButton from './theme-toggler-button';\\\\n\\\\nclass App extends React.Component {\\\\n  constructor(props) {\\\\n    super(props);\\\\n\\\\n    this.toggleTheme = () => {\\\\n      this.setState(state => ({\\\\n        theme:\\\\n          state.theme === themes.dark\\\\n            ? themes.light\\\\n            : themes.dark,\\\\n      }));\\\\n    };\\\\n    // State 包含了 updater 函数 所以它可以传递给底层的 context Provider\\\\n    this.state = {\\\\n      theme: themes.light,\\\\n      toggleTheme: this.toggleTheme,\\\\n    };\\\\n  }\\\\n\\\\n  render() {\\\\n    // 入口 state 传递给 provider\\\\n    return (\\\\n      <ThemeContext.Provider value={this.state}>\\\\n        <Content />\\\\n      </ThemeContext.Provider>\\\\n    );\\\\n  }\\\\n}\\\\n\\\\nfunction Content() {\\\\n  return (\\\\n    <div>\\\\n      <ThemeTogglerButton />\\\\n    </div>\\\\n  );\\\\n}\\\\n\\\\nReactDOM.render(<App />, document.root);\\\\n\\\",\\\"js_external\\\":\\\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\\\",\\\"js_pre_processor\\\":\\\"babel\\\",\\\"layout\\\":\\\"left\\\"}\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---redirect-to-codepen-context-app-nested-00df59ac052df7eceeb6.js","module.exports = {\"pathContext\":{\"action\":\"https://codepen.io/pen/define\",\"payload\":\"{\\\"editors\\\":\\\"0010\\\",\\\"html\\\":\\\"<div id=\\\\\\\"root\\\\\\\"></div>\\\",\\\"js\\\":\\\"import {ThemeContext, themes} from './theme-context';\\\\nimport ThemeTogglerButton from './theme-toggler-button';\\\\n\\\\nclass App extends React.Component {\\\\n  constructor(props) {\\\\n    super(props);\\\\n\\\\n    this.toggleTheme = () => {\\\\n      this.setState(state => ({\\\\n        theme:\\\\n          state.theme === themes.dark\\\\n            ? themes.light\\\\n            : themes.dark,\\\\n      }));\\\\n    };\\\\n    // State 包含了 updater 函数 所以它可以传递给底层的 context Provider\\\\n    this.state = {\\\\n      theme: themes.light,\\\\n      toggleTheme: this.toggleTheme,\\\\n    };\\\\n  }\\\\n\\\\n  render() {\\\\n    // 入口 state 传递给 provider\\\\n    return (\\\\n      <ThemeContext.Provider value={this.state}>\\\\n        <Content />\\\\n      </ThemeContext.Provider>\\\\n    );\\\\n  }\\\\n}\\\\n\\\\nfunction Content() {\\\\n  return (\\\\n    <div>\\\\n      <ThemeTogglerButton />\\\\n    </div>\\\\n  );\\\\n}\\\\n\\\\nReactDOM.render(<App />, document.root);\\\\n\\\",\\\"js_external\\\":\\\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\\\",\\\"js_pre_processor\\\":\\\"babel\\\",\\\"layout\\\":\\\"left\\\"}\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/redirect-to-codepen-context-app-nested.json\n// module id = 958\n// module chunks = 201119609581963"],"sourceRoot":""}