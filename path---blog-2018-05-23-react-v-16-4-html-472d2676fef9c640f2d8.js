webpackJsonp([37850556398842],{824:function(e,t){e.exports={data:{markdownRemark:{html:'<p>最新的版本（16.4.0）增加了对经常请求的特性——指针事件的支持；</p>\n<p>这个版本也包含了对于 <code class="gatsby-code-text">getDerivedStateFromProps</code> 的bug修复工作。</p>\n<p>It also includes a bugfix for <code class="gatsby-code-text">getDerivedStateFromProps</code>. 查看下面完整的<a href="#changelog">更新日志</a> 。</p>\n<h2 id="指针事件"><a href="#%E6%8C%87%E9%92%88%E4%BA%8B%E4%BB%B6" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>指针事件</h2>\n<p>在 React DOM 中，现在可以使用如下指针事件：</p>\n<ul>\n<li><code class="gatsby-code-text">onPointerDown</code></li>\n<li><code class="gatsby-code-text">onPointerMove</code></li>\n<li><code class="gatsby-code-text">onPointerUp</code></li>\n<li><code class="gatsby-code-text">onPointerCancel</code></li>\n<li><code class="gatsby-code-text">onGotPointerCapture</code></li>\n<li><code class="gatsby-code-text">onLostPointerCapture</code></li>\n<li><code class="gatsby-code-text">onPointerEnter</code></li>\n<li><code class="gatsby-code-text">onPointerLeave</code></li>\n<li><code class="gatsby-code-text">onPointerOver</code></li>\n<li><code class="gatsby-code-text">onPointerOut</code></li>\n</ul>\n<p>请注意，这些事件只能在支持 <a href="https://developer.mozilla.org/en-US/docs/Web/API/Pointer_events">指针事件</a> 规范的浏览器中工作。(在编写本文时，包括Chrome、Firefox、Edge和Internet Explorer的最新版本。) 如果你的应用程序依赖于指针事件，我们建议使用第三方指针事件 polyfill 。为了避免增加包文件的大小，我们在 React DOM 中不包含这样的 polyfill。（译者注：Polyfill 是一块代码，用来为旧浏览器提供它没有原生支持的较新的功能。）</p>\n<p><a href="https://codesandbox.io/api/v1/sandboxes/define?parameters=N4IgZglgNgpgziAXKADgQwMYGs0HMYB0AVnAPYB2SoGFALjObVSACYwoNvkYTxUC-ggDQgI5NgA9iCZCBqMGTRKIC2KUgCdaAAgBKMTDrAbSK7QHINBjLXMBuADrkIazTv2GAIgHkAstuNTCytDAFoWU3snJ3k4HQBhAEldeIAZAFEAfQBlRIAtdO0AXm0ADgBWR3IYqDQ4OG1PDTwAIVIJbRgJenEGjxsCeNN1ckVtYCdtbTi0emLxyantAAs6-LQUWgBXK0QAtCg4GCFFqZ4NDFhUmDBaPdKABhPyJe1zy5gAFVIUe6fF_hVKYQOBNPC4MS4eZgA5HIHaFBWABuEFIWzg11u8we8MRMBRaLg3xQ2KqiwonlIAHcXiV8WMigA-BYvJa0ZYggggsG4CHkKElWgaLYweFTemMAi0NAafC0AhHWgABVIYnoGnWmx2MAAFBL5eo1TANIkWABKMmsqYAemt2gA6jBprRNE72U6xBBaBADm9SJoWGJZvBtC7tAAjJ1ocOwUOkN4HDBbWpzd1vVb8-CnbS27Qp43aCgEbPszldIWGFVwL2o8ieGBQaV6pGKC0Ay1TCi-Ugt-b64rMiZW7QQMDaHUAQlLcC5oOavMhZpZrymVm2GnIYu0_GzsR0wFgtyEcZQ_Hm04I5eaNirNYpDab-rb1WHF8V2Wl9B1OuA7yuN1oY8_y-H5-CXJlxyHFc3ggC5_1uPZgMxHQAGo8wA55oOA4lENgj5iW0NCXRQTCljA58pkBaJWQoABVEk6RbRgB3HC9uXnPkBX2Q4YAowtyAAcVIWhNXXJ1GIZZk3xgWgP2DH9VjgUTtT2IURTA-EKFSUg4mUqw-yYnQmRLDkZ3fT9dWARS9JgPYYR4jTqPFbpr2VHS7zrB80AMyTlyWPd0KxCTJXQfAAA0twC4ifJCvAYAATUiig4m0NhG28kooJXQ87kCnRQlDUyCDxAl0WQ0jXmI1Sfm0AqLxK1F0WJCrty3erkUajEAPmHK2qKhrCQIwUfi3NcdheNLpXhKiX1XThjR1JcsrOZL92sjYxKAvD4MAmC4JA09zyKmZ6A7fzVojdoPwAT1jTLsymcMA2NPZzAARhQDoyCgCAWG0ABiFgAE5geB8wWqmFQZT5V63oeT7tAebQACZ4YkcGHu0FQxAACRgCBcGWXKABYHn-YcpipX72VhsmAFIMYphF3O9ChXqsFMIBbRnXhm3cLuAm67r814qZYGntCSFIMhyfJ0ghlZ8cJ3KpbSLJcgKBWno0NgNF0NBA3RPZVZljXCjtZGFfUatWfIV7o2-rZ6B57KANw_bysxqq9vwn4tcwLBcBMLZxCGKBND2datX0gB-CwYxFcxtFeoOYAYF3KrRDBlgAQRsWtXvICgYAz1qnKWMaN3HTGAB5AyRZ1bpgIpgCeiQhZgfhGUxqY665nuljiJuW8F2gm53JnXgoFUjQ0SkaRbi8KWpcgJ-gqfyBnhQNG7FtF6Krse07gfO031Vt_o_fOTo08T_4rf1XWbgGyvmcb7X9fT6EtzZ5s1-CAoN_GyH9P5aR0j_bef9gBL3INpXSG1tQgJXNabuTMa7Wnrqg14fEJ4TycP0WgPhfAECsOIBaiwa48jaB0FBpEIhJhUIoAgcp0iwEYYwFo11TQ6ksP6WwZonDPhAPwEQYhJAECJioKAzB5A9CUCAPuDdfpFAcCAEwwlVGMnQZg4RgggA" target="_blank" rel="noreferrer">在沙箱中查看运行这个案例。</a></p>\n<p>非常感谢 <a href="https://github.com/philipp-spiess">Philipp Spiess</a> 对于这个改变的巨大贡献！</p>\n<h2 id="修复-getderivedstatefromprops-bug"><a href="#%E4%BF%AE%E5%A4%8D-getderivedstatefromprops-bug" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>修复 <code class="gatsby-code-text">getDerivedStateFromProps</code> bug</h2>\n<p>不管更新的原因是什么，<code class="gatsby-code-text">getDerivedStateFromProps</code> 这个函数在组件的每一次渲染中都会被调用。以前，只有当父组件重新渲染时，才会调用这个函数。同时，当这个组件执行<code class="gatsby-code-text">setState</code>时不会触发这个函数。这是在最初实施时的疏忽造成的 bug，现在已经修复。这个函数之前的行为更类似于<code class="gatsby-code-text">compoenentWillReceiveProps</code>这个函数。但是，改进后的行为确保了与 React 框架即将推出的异步渲染模式的兼容。</p>\n<p><strong>这个 bug 修复不会影响大部分应用。</strong>但是可能会造成一小部分组件部分的问题。这些罕见的案例主要影响在两个大类：</p>\n<h3 id="1-避免getderivedstatefromprops函数的副作用"><a href="#1-%E9%81%BF%E5%85%8Dgetderivedstatefromprops%E5%87%BD%E6%95%B0%E7%9A%84%E5%89%AF%E4%BD%9C%E7%94%A8" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>1. 避免<code class="gatsby-code-text">getDerivedStateFromProps</code>函数的副作用</h3>\n<p>就像渲染的方法，<code class="gatsby-code-text">getDerivedStateFromProps</code> 函数应该是一个纯净的 props 和 state 的函数。这个函数的副作用在 <code class="gatsby-code-text">getDerivedStateFromProps</code>从来没有支持。但由于它现在比过去的任何时候更受欢迎，最近的变化可能暴露出之前未被发现的一些bug。</p>\n<p>函数产生副作用的代码，应该移动到其他方法中。例如，流量分派方法，通常属于原始事件处理程序内；手动DOM变化方法，通常属于内部 componentDidMount 或 componentDidUpdate 生命周琼函数中。你可以在我们最近关于准备发布的<a href="/blog/2018/03/27/update-on-async-rendering.html">异步呈现文章</a>中，了解更多信息。</p>\n<h3 id="2-计算受控属性时，将新-props-和上一个-props-进行比较"><a href="#2-%E8%AE%A1%E7%AE%97%E5%8F%97%E6%8E%A7%E5%B1%9E%E6%80%A7%E6%97%B6%EF%BC%8C%E5%B0%86%E6%96%B0-props-%E5%92%8C%E4%B8%8A%E4%B8%80%E4%B8%AA-props-%E8%BF%9B%E8%A1%8C%E6%AF%94%E8%BE%83" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>2. 计算受控属性时，将新 props 和上一个 props 进行比较</h3>\n<p>下面的代码假设 <code class="gatsby-code-text">getDerivedStateFromProps</code> 函数只在 props 更新的时候触发：</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code class="gatsby-code-jsx"><span class="token keyword">static</span> <span class="token function">getDerivedStateFromProps</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> state<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>props<span class="token punctuation">.</span>value <span class="token operator">!==</span> state<span class="token punctuation">.</span>controlledValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      <span class="token comment">// Since this method fires on both props and state changes, local updates</span>\n      <span class="token comment">// to the controlled value will be ignored, because the props version</span>\n      <span class="token comment">// always overrides it. Oops!</span>\n      controlledValue<span class="token punctuation">:</span> props<span class="token punctuation">.</span>value<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>解决这个问题的可能的方法是：将传入值与前一个值进行比较。具体方法是将前面的 props存储在 state 中。</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-jsx"><code class="gatsby-code-jsx"><span class="token keyword">static</span> <span class="token function">getDerivedStateFromProps</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> state<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> prevProps <span class="token operator">=</span> state<span class="token punctuation">.</span>prevProps<span class="token punctuation">;</span>\n  <span class="token comment">// Compare the incoming prop to previous prop</span>\n  <span class="token keyword">const</span> controlledValue <span class="token operator">=</span>\n    prevProps<span class="token punctuation">.</span>value <span class="token operator">!==</span> props<span class="token punctuation">.</span>value\n      <span class="token operator">?</span> props<span class="token punctuation">.</span>value\n      <span class="token punctuation">:</span> state<span class="token punctuation">.</span>controlledValue<span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n    <span class="token comment">// Store the previous props in state</span>\n    prevProps<span class="token punctuation">:</span> props<span class="token punctuation">,</span>\n    controlledValue<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>然而， <strong>在 state 中存储“镜像” props 通常会包含 bug</strong>， 不管你使用新的 <code class="gatsby-code-text">getDerivedStateFromProps</code> 函数，或者旧的 <code class="gatsby-code-text">componentWillReceiveProps</code> 函数。我们发表了一篇后续的博客文章，更详细地解释了这些问题， 并且提出了<a href="/blog/2018/06/07/you-probably-dont-need-derived-state.html">不涉及<code class="gatsby-code-text">getDerivedStateFromProps()</code>函数的更简单的解决方案</a>。</p>\n<h2 id="安装"><a href="#%E5%AE%89%E8%A3%85" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>安装</h2>\n<p>你可以通过 npm 获取 React 16.4.0 版本。</p>\n<p>使用 Yarn 安装 React 16 版本，运行下面的代码：</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-bash"><code class="gatsby-code-bash">yarn add react@^16.4.0 react-dom@^16.4.0\n</code></pre>\n      </div>\n<p>使用 npm 安装安装 React 16 版本，运行下面的代码：</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-bash"><code class="gatsby-code-bash"><span class="token function">npm</span> <span class="token function">install</span> --save react@^16.4.0 react-dom@^16.4.0\n</code></pre>\n      </div>\n<p>我们也提供了通过 CDN 的 UMD 方式搭建一个 React：</p>\n<div class="gatsby-highlight">\n      <pre class="gatsby-code-html"><code class="gatsby-code-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">crossorigin</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://unpkg.com/react@16/umd/react.production.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">crossorigin</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://unpkg.com/react-dom@16/umd/react-dom.production.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n</code></pre>\n      </div>\n<p>请参阅文档获取详细的<a href="/docs/installation.html">安装方法</a>。</p>\n<h2 id="更新日志"><a href="#%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>更新日志</h2>\n<h3 id="react"><a href="#react" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>React</h3>\n<ul>\n<li>Add a new <a href="https://github.com/reactjs/rfcs/pull/51">experimental</a> <code class="gatsby-code-text">React.unstable_Profiler</code> component for measuring performance. (<a href="https://github.com/bvaughn">@bvaughn</a> in <a href="https://github.com/facebook/react/pull/12745">#12745</a>)</li>\n</ul>\n<h3 id="react-dom"><a href="#react-dom" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>React DOM</h3>\n<ul>\n<li>Add support for the Pointer Events specification. (<a href="https://github.com/philipp-spiess">@philipp-spiess</a> in <a href="https://github.com/facebook/react/pull/12507">#12507</a>)</li>\n<li>Properly call <code class="gatsby-code-text">getDerivedStateFromProps()</code> regardless of the reason for re-rendering. (<a href="https://github.com/acdlite">@acdlite</a> in <a href="https://github.com/facebook/react/pull/12600">#12600</a> and <a href="https://github.com/facebook/react/pull/12802">#12802</a>)</li>\n<li>Fix a bug that prevented context propagation in some cases. (<a href="https://github.com/gaearon">@gaearon</a> in <a href="https://github.com/facebook/react/pull/12708">#12708</a>)</li>\n<li>Fix re-rendering of components using <code class="gatsby-code-text">forwardRef()</code> on a deeper <code class="gatsby-code-text">setState()</code>. (<a href="https://github.com/gaearon">@gaearon</a> in <a href="https://github.com/facebook/react/pull/12690">#12690</a>)</li>\n<li>Fix some attributes incorrectly getting removed from custom element nodes. (<a href="https://github.com/airamrguez">@airamrguez</a> in <a href="https://github.com/facebook/react/pull/12702">#12702</a>)</li>\n<li>Fix context providers to not bail out on children if there’s a legacy context provider above. (<a href="https://github.com/gaearon">@gaearon</a> in <a href="https://github.com/facebook/react/pull/12586">#12586</a>)</li>\n<li>Add the ability to specify <code class="gatsby-code-text">propTypes</code> on a context provider component. (<a href="https://github.com/nicolevy">@nicolevy</a> in <a href="https://github.com/facebook/react/pull/12658">#12658</a>)</li>\n<li>Fix a false positive warning when using <code class="gatsby-code-text">react-lifecycles-compat</code> in <code class="gatsby-code-text">&lt;StrictMode&gt;</code>. (<a href="https://github.com/bvaughn">@bvaughn</a> in <a href="https://github.com/facebook/react/pull/12644">#12644</a>)</li>\n<li>Warn when the <code class="gatsby-code-text">forwardRef()</code> render function has <code class="gatsby-code-text">propTypes</code> or <code class="gatsby-code-text">defaultProps</code>. (<a href="https://github.com/bvaughn">@bvaughn</a> in <a href="https://github.com/facebook/react/pull/12644">#12644</a>)</li>\n<li>Improve how <code class="gatsby-code-text">forwardRef()</code> and context consumers are displayed in the component stack. (<a href="https://github.com/sophiebits">@sophiebits</a> in <a href="https://github.com/facebook/react/pull/12777">#12777</a>)</li>\n<li>Change internal event names. This can break third-party packages that rely on React internals in unsupported ways. (<a href="https://github.com/philipp-spiess">@philipp-spiess</a> in <a href="https://github.com/facebook/react/pull/12629">#12629</a>)</li>\n</ul>\n<h3 id="react-test-renderer"><a href="#react-test-renderer" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>React Test Renderer</h3>\n<ul>\n<li>Fix the <code class="gatsby-code-text">getDerivedStateFromProps()</code> support to match the new React DOM behavior. (<a href="https://github.com/koba04">@koba04</a> in <a href="https://github.com/facebook/react/pull/12676">#12676</a>)</li>\n<li>Fix a <code class="gatsby-code-text">testInstance.parent</code> crash when the parent is a fragment or another special node. (<a href="https://github.com/gaearon">@gaearon</a> in <a href="https://github.com/facebook/react/pull/12813">#12813</a>)</li>\n<li><code class="gatsby-code-text">forwardRef()</code> components are now discoverable by the test renderer traversal methods. (<a href="https://github.com/gaearon">@gaearon</a> in <a href="https://github.com/facebook/react/pull/12725">#12725</a>)</li>\n<li>Shallow renderer now ignores <code class="gatsby-code-text">setState()</code> updaters that return <code class="gatsby-code-text">null</code> or <code class="gatsby-code-text">undefined</code>. (<a href="https://github.com/koba04">@koba04</a> in <a href="https://github.com/facebook/react/pull/12756">#12756</a>)</li>\n</ul>\n<h3 id="react-art"><a href="#react-art" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>React ART</h3>\n<ul>\n<li>Fix reading context provided from the tree managed by React DOM. (<a href="https://github.com/acdlite">@acdlite</a> in <a href="https://github.com/facebook/react/pull/12779">#12779</a>)</li>\n</ul>\n<h3 id="react-call-return-experimental"><a href="#react-call-return-experimental" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>React Call Return (Experimental)</h3>\n<ul>\n<li>This experiment was deleted because it was affecting the bundle size and the API wasn’t good enough. It’s likely to come back in the future in some other form. (<a href="https://github.com/gaearon">@gaearon</a> in <a href="https://github.com/facebook/react/pull/12820">#12820</a>)</li>\n</ul>\n<h3 id="react-reconciler-experimental"><a href="#react-reconciler-experimental" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>React Reconciler (Experimental)</h3>\n<ul>\n<li>The <a href="https://github.com/facebook/react/blob/c601f7a64640290af85c9f0e33c78480656b46bc/packages/react-noop-renderer/src/createReactNoop.js#L82-L285">new host config shape</a> is flat and doesn’t use nested objects. (<a href="https://github.com/gaearon">@gaearon</a> in <a href="https://github.com/facebook/react/pull/12792">#12792</a>)</li>\n</ul>',excerpt:"最新的版本（16.4.0）增加了对经常请求的特性——指针事件的支持； 这个版本也包含了对于   的bug修复工作。 It also includes a bugfix for  . 查看下面完整的 更新日志  。 指针事件 在 React DOM 中，现在可以使用如下指针事件： 请注意，这些事件只能在支持  指针事件  规范的浏览器中工作。(在编写本文时，包括Chrome、Firefox、Edge和Internet Explorer的最新版本。) 如果你的应用程序依赖于指针事件，我们建议使用第三方指针事件 polyfill 。为了避免增加包文件的大小，我们在 React DOM 中不包含这样的 polyfill。（译者注：Polyfill 是一块代码，用来为旧浏览器提供它没有原生支持的较新的功能。） 非常感谢  Philipp Spiess  对于这个改变的巨大贡献！ 修复   bug 不管更新的原因是什么，  这个函数在组件的每一次渲染中都会被调用。以前，只有当父组件重新渲染时，才会调用这个函数。同时，当这个组件执行 时不会触发这个函数。这是在最初实施时的疏忽造成的 bug…",frontmatter:{title:"React v16.4.0: Pointer Events",next:null,prev:null,author:[{frontmatter:{name:"Andrew Clark",url:"https://twitter.com/acdlite"}}]},fields:{date:"May 22, 2018",path:"blog/2018-05-23-react-v-16-4.md",slug:"/blog/2018/05/23/react-v-16-4.html"}},allMarkdownRemark:{edges:[{node:{frontmatter:{title:"React v16.7: No, This Is Not the One With Hooks"},fields:{slug:"/blog/2018/12/19/react-v-16-7.html"}}},{node:{frontmatter:{title:"React 16.x Roadmap"},fields:{slug:"/blog/2018/11/27/react-16-roadmap.html"}}},{node:{frontmatter:{title:"React Conf recap: Hooks, Suspense, and Concurrent Rendering"},fields:{slug:"/blog/2018/11/13/react-conf-recap.html"}}},{node:{frontmatter:{title:"React v16.6.0: lazy, memo and contextType"},fields:{slug:"/blog/2018/10/23/react-v-16-6.html"}}},{node:{frontmatter:{title:"Create React App 2.0: Babel 7, Sass, and More"},fields:{slug:"/blog/2018/10/01/create-react-app-v2.html"}}},{node:{frontmatter:{title:"Introducing the React Profiler"},fields:{slug:"/blog/2018/09/10/introducing-the-react-profiler.html"}}},{node:{frontmatter:{title:"React v16.4.2: Server-side vulnerability fix"},fields:{slug:"/blog/2018/08/01/react-v-16-4-2.html"}}},{node:{frontmatter:{title:"You Probably Don't Need Derived State"},fields:{slug:"/blog/2018/06/07/you-probably-dont-need-derived-state.html"}}},{node:{frontmatter:{title:"React v16.4.0: Pointer Events"},fields:{slug:"/blog/2018/05/23/react-v-16-4.html"}}},{node:{frontmatter:{title:"React v16.3.0: New lifecycles and context API"},fields:{slug:"/blog/2018/03/29/react-v-16-3.html"}}}]}},pathContext:{slug:"/blog/2018/05/23/react-v-16-4.html"}}}});
//# sourceMappingURL=path---blog-2018-05-23-react-v-16-4-html-472d2676fef9c640f2d8.js.map