{"version":3,"sources":["webpack:///path---docs-lifting-state-up-html-e75e4f3043ac8f1031e0.js","webpack:///./.cache/json/docs-lifting-state-up-html.json"],"names":["webpackJsonp","914","module","exports","data","markdownRemark","html","frontmatter","title","next","prev","fields","path","slug","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA;AAA+/7CC,aAAiiHC,MAAA,OAAAC,KAAA,kCAAAC,KAAA,4BAA0FC,QAAWC,KAAA,2BAAAC,KAAA,gCAAwEC,aAAgBD,KAAA","file":"path---docs-lifting-state-up-html-e75e4f3043ac8f1031e0.js","sourcesContent":["webpackJsonp([37767483572991],{\n\n/***/ 914:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>使用 react 经常会遇到几个组件需要共用状态数据的情况。这种情况下，我们最好将这部分共享的状态提升至他们最近的父组件当中进行管理。我们来看一下具体如何操作吧。</p>\\n<p>这部分内容当中，我们会创建一个温度计算器来计算水是否会在给定的温度下烧开。</p>\\n<p>开始呢，我们先创建一个名为 <code class=\\\"gatsby-code-text\\\">BoilingVerdict</code> 的组件。它会接受 <code class=\\\"gatsby-code-text\\\">celsius</code> 这个温度变量作为它的 props 属性，最后根据温度判断返回内容：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">BoilingVerdict</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">.</span>celsius <span class=\\\"token operator\\\">>=</span> <span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span><span class=\\\"token punctuation\\\">></span></span>水会烧开<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">;</span>\\n</span>  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span><span class=\\\"token punctuation\\\">></span></span>水不会烧开<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">;</span>\\n</span><span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>接下来，我们写一个名为 <code class=\\\"gatsby-code-text\\\">Calculator</code> 的组件。它会渲染一个 <code class=\\\"gatsby-code-text\\\">&lt;input&gt;</code> 来接受用户输入，然后将输入的温度值保存在 <code class=\\\"gatsby-code-text\\\">this.state.temperature</code> 当中。</p>\\n<p>之后呢，它会根据输入的值渲染出 <code class=\\\"gatsby-code-text\\\">BoilingVerdict</code> 组件。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Calculator</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleChange <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleChange<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>temperature<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</span>  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">handleChange</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>temperature<span class=\\\"token punctuation\\\">:</span> e<span class=\\\"token punctuation\\\">.</span>target<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</span>  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">const</span> temperature <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>temperature<span class=\\\"token punctuation\\\">;</span>\\n</span>    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>fieldset</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>legend</span><span class=\\\"token punctuation\\\">></span></span>输入一个摄氏温度<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>legend</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"gatsby-highlight-code-line\\\">        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>input</span>\\n</span><span class=\\\"gatsby-highlight-code-line\\\">          <span class=\\\"token attr-name\\\">value</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>temperature<span class=\\\"token punctuation\\\">}</span></span>\\n</span><span class=\\\"gatsby-highlight-code-line\\\">          <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleChange<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n</span><span class=\\\"gatsby-highlight-code-line\\\">        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>BoilingVerdict</span>\\n</span><span class=\\\"gatsby-highlight-code-line\\\">          <span class=\\\"token attr-name\\\">celsius</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token function\\\">parseFloat</span><span class=\\\"token punctuation\\\">(</span>temperature<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n</span>      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>fieldset</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p><a href=\\\"http://codepen.io/valscion/pen/VpZJRZ?editors=0010\\\">在 CodePen 上试试。</a></p>\\n<h2 id=\\\"添加第二个输入框\\\"><a href=\\\"#%E6%B7%BB%E5%8A%A0%E7%AC%AC%E4%BA%8C%E4%B8%AA%E8%BE%93%E5%85%A5%E6%A1%86\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>添加第二个输入框</h2>\\n<p>现在我们有了一个新的需求，在提供摄氏度输入的基础之上，再提供一个华氏温度输入，并且它们能保持同步。</p>\\n<p>我们可以通过从 <code class=\\\"gatsby-code-text\\\">Calculator</code> 组件中抽离一个 <code class=\\\"gatsby-code-text\\\">TemperatureInput</code> 组件出来。我们也会给它添加一个值为 <code class=\\\"gatsby-code-text\\\">c</code> 或 <code class=\\\"gatsby-code-text\\\">f</code> 的表示温度单位的 <code class=\\\"gatsby-code-text\\\">scale</code> 属性。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"gatsby-highlight-code-line\\\"><span class=\\\"token keyword\\\">const</span> scaleNames <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n</span><span class=\\\"gatsby-highlight-code-line\\\">  c<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Celsius'</span><span class=\\\"token punctuation\\\">,</span>\\n</span><span class=\\\"gatsby-highlight-code-line\\\">  f<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Fahrenheit'</span>\\n</span><span class=\\\"gatsby-highlight-code-line\\\"><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">TemperatureInput</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleChange <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleChange<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>temperature<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">handleChange</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>temperature<span class=\\\"token punctuation\\\">:</span> e<span class=\\\"token punctuation\\\">.</span>target<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> temperature <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>temperature<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">const</span> scale <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>scale<span class=\\\"token punctuation\\\">;</span>\\n</span>    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>fieldset</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"gatsby-highlight-code-line\\\">        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>legend</span><span class=\\\"token punctuation\\\">></span></span>Enter temperature <span class=\\\"token keyword\\\">in</span> <span class=\\\"token punctuation\\\">{</span>scaleNames<span class=\\\"token punctuation\\\">[</span>scale<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>legend</span><span class=\\\"token punctuation\\\">></span></span>\\n</span>        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>input</span> <span class=\\\"token attr-name\\\">value</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>temperature<span class=\\\"token punctuation\\\">}</span></span>\\n               <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleChange<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>fieldset</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>我们现在可以对<code class=\\\"gatsby-code-text\\\">Calculator</code>稍作修改，来渲染两个不同的温度输入框。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Calculator</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"gatsby-highlight-code-line\\\">        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>TemperatureInput</span> <span class=\\\"token attr-name\\\">scale</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>c<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n</span><span class=\\\"gatsby-highlight-code-line\\\">        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>TemperatureInput</span> <span class=\\\"token attr-name\\\">scale</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>f<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n</span>      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p><a href=\\\"http://codepen.io/valscion/pen/GWKbao?editors=0010\\\">在 CodePen 上试试。</a></p>\\n<p>我们现在有了两个输入框，但是当你在其中一个输入时，另一个并不会更新。这显然是不符合我们的需求的。</p>\\n<p>另外，我们此时也不能从 <code class=\\\"gatsby-code-text\\\">Calculator</code> 组件中展示 <code class=\\\"gatsby-code-text\\\">BoilingVerdict</code> 的渲染结果。因为现在表示温度的状态数据只存在于 <code class=\\\"gatsby-code-text\\\">TemperatureInput</code> 组件当中。</p>\\n<h2 id=\\\"写出转换函数\\\"><a href=\\\"#%E5%86%99%E5%87%BA%E8%BD%AC%E6%8D%A2%E5%87%BD%E6%95%B0\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>写出转换函数</h2>\\n<p>首先，我们写两个可以将摄氏度和华氏度互相转换的函数。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">toCelsius</span><span class=\\\"token punctuation\\\">(</span>fahrenheit<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>fahrenheit <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">32</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">5</span> <span class=\\\"token operator\\\">/</span> <span class=\\\"token number\\\">9</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">toFahrenheit</span><span class=\\\"token punctuation\\\">(</span>celsius<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>celsius <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">9</span> <span class=\\\"token operator\\\">/</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">32</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>这两个函数只是单纯转换数字。我们还需要另外一个函数，它接受两个参数，第一个接受字符串 <code class=\\\"gatsby-code-text\\\">temperature</code> 变量，第二个参数则是上面编写的单位转换函数。最后会返回一个字符串。我们会使用它来根据一个输入框的输入计算出另一个输入框的值。</p>\\n<p>我们最后取到输出的小数点后三位，而 <code class=\\\"gatsby-code-text\\\">temperature</code> 输入不合法的时候，这个函数则会返回空字符串。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">tryConvert</span><span class=\\\"token punctuation\\\">(</span>temperature<span class=\\\"token punctuation\\\">,</span> convert<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> input <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">parseFloat</span><span class=\\\"token punctuation\\\">(</span>temperature<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>Number<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">isNaN</span><span class=\\\"token punctuation\\\">(</span>input<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">const</span> output <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">convert</span><span class=\\\"token punctuation\\\">(</span>input<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> rounded <span class=\\\"token operator\\\">=</span> Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">round</span><span class=\\\"token punctuation\\\">(</span>output <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">/</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> rounded<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>举两个例子，<code class=\\\"gatsby-code-text\\\">tryConvert(&#39;abc&#39;, toCelsius)</code> 会返回空字符串，而 <code class=\\\"gatsby-code-text\\\">tryConvert(&#39;10.22&#39;, toFahrenheit)</code> 会返回 <code class=\\\"gatsby-code-text\\\">&#39;50.396&#39;</code>。</p>\\n<h2 id=\\\"状态提升\\\"><a href=\\\"#%E7%8A%B6%E6%80%81%E6%8F%90%E5%8D%87\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>状态提升</h2>\\n<p>到这一步为止，两个<code class=\\\"gatsby-code-text\\\">TemperatureInput</code>组件都是在自己的 state 中独立保存数据。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">TemperatureInput</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleChange <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleChange<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>temperature<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</span>  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">handleChange</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>temperature<span class=\\\"token punctuation\\\">:</span> e<span class=\\\"token punctuation\\\">.</span>target<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</span>  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">const</span> temperature <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>temperature<span class=\\\"token punctuation\\\">;</span>\\n</span>    <span class=\\\"token comment\\\">// ...  </span>\\n</code></pre>\\n      </div>\\n<p>但是，我们想要的是这两个输入能保持同步。当我们更新摄氏输入（Celsius）时，华氏度（Fahrenheit ）这个框应该能显示转换后的的温度数值，反之亦然。</p>\\n<p>在React中，状态分享是通过将state数据提升至离需要这些数据的组件最近的父组件来完成的。这就是所谓的<strong>状态提升</strong>。我们会将 <code class=\\\"gatsby-code-text\\\">TemperatureInput</code> 组件自身保存的 state 移到 <code class=\\\"gatsby-code-text\\\">Calculator</code> 中。</p>\\n<p>如果 <code class=\\\"gatsby-code-text\\\">Calculator</code> 组件拥有了提升上来共享的状态数据，那它就会成为两个温度输入组件的“数据源”。它会传递给下面温度输入组件一致的数据。由于两个 <code class=\\\"gatsby-code-text\\\">TemperatureInput</code> 温度组件的props属性都是来源于共同的父组件 <code class=\\\"gatsby-code-text\\\">Calculator</code>，它们的数据也会保持同步。</p>\\n<p>让我们一步一步来分析如何操作。</p>\\n<p>首先，我们在 <code class=\\\"gatsby-code-text\\\">TemperatureInput</code> 组件中将 <code class=\\\"gatsby-code-text\\\">this.state.temperature</code> 替换为 <code class=\\\"gatsby-code-text\\\">this.props.temperature</code> 。现在，先假定 <code class=\\\"gatsby-code-text\\\">this.props.temperature</code> 值已经存在，将来我们需要从 <code class=\\\"gatsby-code-text\\\">Calculator</code> 组件中传入。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\">  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// 之前的代码: const temperature = this.state.temperature;</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">const</span> temperature <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>temperature<span class=\\\"token punctuation\\\">;</span>\\n</span>    <span class=\\\"token comment\\\">// ...</span>\\n</code></pre>\\n      </div>\\n<p>我们首先知道<a href=\\\"/docs/components-and-props.html#props-are-read-only\\\">props是只读的</a>\\n这么一个事实。而之前<code class=\\\"gatsby-code-text\\\">temperature</code>变量是被保存在其自身的 state 中的，<code class=\\\"gatsby-code-text\\\">TemperatureInput</code> 组件只需要调用 <code class=\\\"gatsby-code-text\\\">this.setState()</code> 就能改变它。但现在，<code class=\\\"gatsby-code-text\\\">temperature</code> 是作为 prop 从父组件传递下来的，<code class=\\\"gatsby-code-text\\\">TemperatureInput</code> 组件是没有控制权的。</p>\\n<p>在React中，这个问题通常是通过让组件“受控”来解决。就像 <code class=\\\"gatsby-code-text\\\">&lt;input&gt;</code> 能够接受 <code class=\\\"gatsby-code-text\\\">value</code> 和 <code class=\\\"gatsby-code-text\\\">onChange</code> 这两个prop属性值，自定义组件 <code class=\\\"gatsby-code-text\\\">TemperatureInput</code> 也能接受来自 <code class=\\\"gatsby-code-text\\\">Calculator</code> 父组件的 <code class=\\\"gatsby-code-text\\\">temperature</code> 变量和 <code class=\\\"gatsby-code-text\\\">onTemperatureChange</code> 方法作为props属性值。</p>\\n<p>做完这些，当 <code class=\\\"gatsby-code-text\\\">TemperatureInput</code> 组件希望更新温度时，就会调用 <code class=\\\"gatsby-code-text\\\">this.props.onTemperatureChange</code>。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\">  <span class=\\\"token function\\\">handleChange</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// 之前的代码: this.setState({temperature: e.target.value});</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">onTemperatureChange</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">.</span>target<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</span>    <span class=\\\"token comment\\\">// ...</span>\\n</code></pre>\\n      </div>\\n<blockquote>\\n<p>注意：</p>\\n<p><code class=\\\"gatsby-code-text\\\">temperature</code> 和 <code class=\\\"gatsby-code-text\\\">onTemperatureChange</code> 这些prop属性的命名没有特殊含义，我们也可以起个其他任何的名字，像是<code class=\\\"gatsby-code-text\\\">value</code>和<code class=\\\"gatsby-code-text\\\">onChange</code>这些只是命名习惯罢了。</p>\\n</blockquote>\\n<p><code class=\\\"gatsby-code-text\\\">onTemperatureChange</code>加上<code class=\\\"gatsby-code-text\\\">temperature</code>一起的两个属性（prop）由父组件<code class=\\\"gatsby-code-text\\\">Calculator</code>提供。父组件处理变化只需通过改变其自身的状态，从而使用新的值来重新渲染两个输入框组件。很快我们将重新改写<code class=\\\"gatsby-code-text\\\">Calculator</code>。</p>\\n<p>在我们改写<code class=\\\"gatsby-code-text\\\">Calculator</code>组件之前，我们先花点时间总结下<code class=\\\"gatsby-code-text\\\">TemperatureInput</code>组件的变化。我们将其自身的 state 从组件中移除，使用 <code class=\\\"gatsby-code-text\\\">this.props.temperature</code> 替代 <code class=\\\"gatsby-code-text\\\">this.state.temperature</code>。当我们想要响应数据改变时，现在是调用由<code class=\\\"gatsby-code-text\\\">Calculator</code>提供的<code class=\\\"gatsby-code-text\\\">this.props.onTemperatureChange()</code> 而不是<code class=\\\"gatsby-code-text\\\">this.setState()</code>：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">TemperatureInput</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleChange <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleChange<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">handleChange</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">onTemperatureChange</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">.</span>target<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</span>  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">const</span> temperature <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>temperature<span class=\\\"token punctuation\\\">;</span>\\n</span>    <span class=\\\"token keyword\\\">const</span> scale <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>scale<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>fieldset</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>legend</span><span class=\\\"token punctuation\\\">></span></span>在<span class=\\\"token punctuation\\\">{</span>scaleNames<span class=\\\"token punctuation\\\">[</span>scale<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span>中输入温度数值<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>legend</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>input</span> <span class=\\\"token attr-name\\\">value</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>temperature<span class=\\\"token punctuation\\\">}</span></span>\\n               <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleChange<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>fieldset</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>现在让我们来转向 <code class=\\\"gatsby-code-text\\\">Calculator</code> 组件。</p>\\n<p>我们将会保存当前输入的<code class=\\\"gatsby-code-text\\\">temperature</code>和<code class=\\\"gatsby-code-text\\\">scale</code>值到它的局部状态（state）中，这是从输入框组件状态中“提升”上来的，它将会用作两个输入框共同的的“数据源”。这是我们为了渲染两个输入框组件需要知道的所有数据最精简表达。</p>\\n<p>举个例子，假如我们在摄氏度输入框中输入37，那么 <code class=\\\"gatsby-code-text\\\">Calculator</code> 的 state 就是：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token punctuation\\\">{</span>\\n  temperature<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'37'</span><span class=\\\"token punctuation\\\">,</span>\\n  scale<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'c'</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>如果我们之后在华氏度输入框输入212，那么 <code class=\\\"gatsby-code-text\\\">Calculator</code> 的状态数据就会是：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token punctuation\\\">{</span>\\n  temperature<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'212'</span><span class=\\\"token punctuation\\\">,</span>\\n  scale<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'f'</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>我们可以一起保存两个输入的值，但这么做似乎没有必要。保存最新输入的温度和温度单位就足够了。我们可以只需基于当前的 <code class=\\\"gatsby-code-text\\\">temperature</code> 和 <code class=\\\"gatsby-code-text\\\">scale</code> 计算出另一个输入框中的值。</p>\\n<p>现在这两个输入框中的值能保持同步了，因为它们使用的是通过同一个 state 计算出来的值。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Calculator</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleCelsiusChange <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleCelsiusChange<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleFahrenheitChange <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleFahrenheitChange<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>temperature<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span> scale<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'c'</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</span>  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">handleCelsiusChange</span><span class=\\\"token punctuation\\\">(</span>temperature<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>scale<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'c'</span><span class=\\\"token punctuation\\\">,</span> temperature<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</span>  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">handleFahrenheitChange</span><span class=\\\"token punctuation\\\">(</span>temperature<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>scale<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'f'</span><span class=\\\"token punctuation\\\">,</span> temperature<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</span>  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">const</span> scale <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>scale<span class=\\\"token punctuation\\\">;</span>\\n</span><span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">const</span> temperature <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>temperature<span class=\\\"token punctuation\\\">;</span>\\n</span><span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">const</span> celsius <span class=\\\"token operator\\\">=</span> scale <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'f'</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token function\\\">tryConvert</span><span class=\\\"token punctuation\\\">(</span>temperature<span class=\\\"token punctuation\\\">,</span> toCelsius<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">:</span> temperature<span class=\\\"token punctuation\\\">;</span>\\n</span><span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">const</span> fahrenheit <span class=\\\"token operator\\\">=</span> scale <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'c'</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token function\\\">tryConvert</span><span class=\\\"token punctuation\\\">(</span>temperature<span class=\\\"token punctuation\\\">,</span> toFahrenheit<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">:</span> temperature<span class=\\\"token punctuation\\\">;</span>\\n</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>TemperatureInput</span>\\n          <span class=\\\"token attr-name\\\">scale</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>c<span class=\\\"token punctuation\\\">\\\"</span></span>\\n<span class=\\\"gatsby-highlight-code-line\\\">          <span class=\\\"token attr-name\\\">temperature</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>celsius<span class=\\\"token punctuation\\\">}</span></span>\\n</span><span class=\\\"gatsby-highlight-code-line\\\">          <span class=\\\"token attr-name\\\">onTemperatureChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleCelsiusChange<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n</span>        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>TemperatureInput</span>\\n          <span class=\\\"token attr-name\\\">scale</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>f<span class=\\\"token punctuation\\\">\\\"</span></span>\\n<span class=\\\"gatsby-highlight-code-line\\\">          <span class=\\\"token attr-name\\\">temperature</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>fahrenheit<span class=\\\"token punctuation\\\">}</span></span>\\n</span><span class=\\\"gatsby-highlight-code-line\\\">          <span class=\\\"token attr-name\\\">onTemperatureChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleFahrenheitChange<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n</span>        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>BoilingVerdict</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">          <span class=\\\"token attr-name\\\">celsius</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token function\\\">parseFloat</span><span class=\\\"token punctuation\\\">(</span>celsius<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n</span>      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p><a href=\\\"http://codepen.io/valscion/pen/jBNjja?editors=0010\\\">在 Codepen 上试试。</a></p>\\n<p>现在，无论你编辑哪一个输入框，<code class=\\\"gatsby-code-text\\\">Calculator</code> 组件中 <code class=\\\"gatsby-code-text\\\">this.state.temperature</code> 和 <code class=\\\"gatsby-code-text\\\">this.state.scale</code> 都会更新。向其中一个输入框输入值，另一个输入框总是基于这个值显示计算结果。</p>\\n<p>让我们梳理下编辑输入框时所发生的一系列活动：</p>\\n<ul>\\n<li>React在DOM的<code class=\\\"gatsby-code-text\\\">&lt;input&gt;</code>上调用被指定为<code class=\\\"gatsby-code-text\\\">onChange</code>的函数。在本例中，是<code class=\\\"gatsby-code-text\\\">TemperatureInput</code>组件上的<code class=\\\"gatsby-code-text\\\">handleChange</code>函数。</li>\\n<li><code class=\\\"gatsby-code-text\\\">TemperatureInput</code>组件的<code class=\\\"gatsby-code-text\\\">handleChange</code>函数会用新输入值调用<code class=\\\"gatsby-code-text\\\">this.props.onTemperatureChange()</code>函数。输入框组件的属性，包括<code class=\\\"gatsby-code-text\\\">onTemperatureChange</code>都是由父组件<code class=\\\"gatsby-code-text\\\">Calculator</code>提供的。</li>\\n<li>当最开始渲染时，<code class=\\\"gatsby-code-text\\\">Calculator</code>组件的<code class=\\\"gatsby-code-text\\\">handleCelsiusChange</code>方法被指定给摄氏温度输入组件<code class=\\\"gatsby-code-text\\\">TemperatureInput</code>的<code class=\\\"gatsby-code-text\\\">onTemperatureChange</code>方法，同时把<code class=\\\"gatsby-code-text\\\">handleFahrenheitChange</code>方法指定给华氏输入组件<code class=\\\"gatsby-code-text\\\">TemperatureInput</code>的<code class=\\\"gatsby-code-text\\\">onTemperatureChange</code>方法。所以<code class=\\\"gatsby-code-text\\\">Calculator</code>组件的两个方法都会在相应输入框被编辑时被调用。</li>\\n<li>在这些方法内部，<code class=\\\"gatsby-code-text\\\">Calculator</code>组件会使用编辑输入的新值和当前输入框的温度单位来让React调用<code class=\\\"gatsby-code-text\\\">this.setState()</code>方法来重渲染自身。</li>\\n<li>React调用<code class=\\\"gatsby-code-text\\\">Calculator</code>组件的<code class=\\\"gatsby-code-text\\\">render</code>方法来识别UI界面的样子。基于当前值和激活的温度单位，两个输入框的值会被重新计算。温度转换就是在这里被执行的。</li>\\n<li>React使用由<code class=\\\"gatsby-code-text\\\">Calculator</code>指定的新props来调用各个<code class=\\\"gatsby-code-text\\\">TemperatureInput</code>组件的<code class=\\\"gatsby-code-text\\\">render</code>方法，React也会识别出子组件的UI界面。</li>\\n<li>React调用<code class=\\\"gatsby-code-text\\\">BoilingVerdict</code>组件的<code class=\\\"gatsby-code-text\\\">render</code>方法，传递摄氏温度作为它的属性。</li>\\n<li>React DOM 会用沸腾裁决更新DOM来匹配渴望的输入值。我们编辑的输入框获取新值，而另一个输入框则用经过转换的温度值进行更新。</li>\\n</ul>\\n<p>一切更新都是经过同样的步骤，因而输入框能保持同步的。</p>\\n<h2 id=\\\"经验教训\\\"><a href=\\\"#%E7%BB%8F%E9%AA%8C%E6%95%99%E8%AE%AD\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>经验教训</h2>\\n<p>在React应用中，对应任何可变数据理应只有一个单一“数据源”。通常，状态都是首先添加在需要渲染数据的组件中。然后，如果另一个组件也需要这些数据，你可以将数据提升至离它们最近的共同祖先中。你应该依赖 <a href=\\\"/docs/state-and-lifecycle.html#%E6%95%B0%E6%8D%AE%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%B5%81%E5%8A%A8\\\">自上而下的数据流</a>，而不是尝试在不同组件中同步状态。</p>\\n<p>状态提升要写更多的“炉墙代码”，比起双向绑定方式，但带来的好处是，你也可以花更少的工作量找到和隔离bug。因为任何<em>生活</em>在某些组件中的状态数据，也只有该组件它自己能够操作这些数据，发生bug的表面积就被大大地减小了。此外，你也可以使用自定义逻辑来拒绝（reject）或转换（transform）用户的输入。</p>\\n<p>如果某些数据可以由props或者state推导出来，那么它很有可能不应该在state中出现。举个例子，我们没有同时保存 <code class=\\\"gatsby-code-text\\\">celsiusValue</code> 和 <code class=\\\"gatsby-code-text\\\">fahrenheitValue</code>，而只是保存最新编辑的<code class=\\\"gatsby-code-text\\\">temperature</code>和它的<code class=\\\"gatsby-code-text\\\">scale</code>值。另一个输入框中的值总是可以在 <code class=\\\"gatsby-code-text\\\">render()</code> 函数中由这些保存的数据计算出来。这样我们在不损失任何用户输入精度的情况下，可以对另一字段清除或应用四舍五入。</p>\\n<p>当你在开发UI界面遇到问题时，你可以使用 <a href=\\\"https://github.com/facebook/react-devtools\\\">React 开发者工具</a>来检查props属性，并且可以点击查看组件树，直到你找到负责目前状态更新的组件。这能让你到追踪到产生 bug 的源头。</p>\\n<img src=\\\"https://reactjs.org/react-devtools-state-ef94afc3447d75cdc245c77efb0d63be.gif\\\" alt=\\\"Monitoring State in React DevTools\\\" width=\\\"100%\\\">\",\"frontmatter\":{\"title\":\"状态提升\",\"next\":\"composition-vs-inheritance.html\",\"prev\":\"state-and-lifecycle.html\"},\"fields\":{\"path\":\"docs/lifting-state-up.md\",\"slug\":\"docs/lifting-state-up.html\"}}},\"pathContext\":{\"slug\":\"docs/lifting-state-up.html\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-lifting-state-up-html-e75e4f3043ac8f1031e0.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>使用 react 经常会遇到几个组件需要共用状态数据的情况。这种情况下，我们最好将这部分共享的状态提升至他们最近的父组件当中进行管理。我们来看一下具体如何操作吧。</p>\\n<p>这部分内容当中，我们会创建一个温度计算器来计算水是否会在给定的温度下烧开。</p>\\n<p>开始呢，我们先创建一个名为 <code class=\\\"gatsby-code-text\\\">BoilingVerdict</code> 的组件。它会接受 <code class=\\\"gatsby-code-text\\\">celsius</code> 这个温度变量作为它的 props 属性，最后根据温度判断返回内容：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">BoilingVerdict</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">.</span>celsius <span class=\\\"token operator\\\">>=</span> <span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span><span class=\\\"token punctuation\\\">></span></span>水会烧开<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">;</span>\\n</span>  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span><span class=\\\"token punctuation\\\">></span></span>水不会烧开<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">;</span>\\n</span><span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>接下来，我们写一个名为 <code class=\\\"gatsby-code-text\\\">Calculator</code> 的组件。它会渲染一个 <code class=\\\"gatsby-code-text\\\">&lt;input&gt;</code> 来接受用户输入，然后将输入的温度值保存在 <code class=\\\"gatsby-code-text\\\">this.state.temperature</code> 当中。</p>\\n<p>之后呢，它会根据输入的值渲染出 <code class=\\\"gatsby-code-text\\\">BoilingVerdict</code> 组件。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Calculator</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleChange <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleChange<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>temperature<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</span>  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">handleChange</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>temperature<span class=\\\"token punctuation\\\">:</span> e<span class=\\\"token punctuation\\\">.</span>target<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</span>  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">const</span> temperature <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>temperature<span class=\\\"token punctuation\\\">;</span>\\n</span>    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>fieldset</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>legend</span><span class=\\\"token punctuation\\\">></span></span>输入一个摄氏温度<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>legend</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"gatsby-highlight-code-line\\\">        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>input</span>\\n</span><span class=\\\"gatsby-highlight-code-line\\\">          <span class=\\\"token attr-name\\\">value</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>temperature<span class=\\\"token punctuation\\\">}</span></span>\\n</span><span class=\\\"gatsby-highlight-code-line\\\">          <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleChange<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n</span><span class=\\\"gatsby-highlight-code-line\\\">        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>BoilingVerdict</span>\\n</span><span class=\\\"gatsby-highlight-code-line\\\">          <span class=\\\"token attr-name\\\">celsius</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token function\\\">parseFloat</span><span class=\\\"token punctuation\\\">(</span>temperature<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n</span>      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>fieldset</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p><a href=\\\"http://codepen.io/valscion/pen/VpZJRZ?editors=0010\\\">在 CodePen 上试试。</a></p>\\n<h2 id=\\\"添加第二个输入框\\\"><a href=\\\"#%E6%B7%BB%E5%8A%A0%E7%AC%AC%E4%BA%8C%E4%B8%AA%E8%BE%93%E5%85%A5%E6%A1%86\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>添加第二个输入框</h2>\\n<p>现在我们有了一个新的需求，在提供摄氏度输入的基础之上，再提供一个华氏温度输入，并且它们能保持同步。</p>\\n<p>我们可以通过从 <code class=\\\"gatsby-code-text\\\">Calculator</code> 组件中抽离一个 <code class=\\\"gatsby-code-text\\\">TemperatureInput</code> 组件出来。我们也会给它添加一个值为 <code class=\\\"gatsby-code-text\\\">c</code> 或 <code class=\\\"gatsby-code-text\\\">f</code> 的表示温度单位的 <code class=\\\"gatsby-code-text\\\">scale</code> 属性。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"gatsby-highlight-code-line\\\"><span class=\\\"token keyword\\\">const</span> scaleNames <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n</span><span class=\\\"gatsby-highlight-code-line\\\">  c<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Celsius'</span><span class=\\\"token punctuation\\\">,</span>\\n</span><span class=\\\"gatsby-highlight-code-line\\\">  f<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Fahrenheit'</span>\\n</span><span class=\\\"gatsby-highlight-code-line\\\"><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">TemperatureInput</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleChange <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleChange<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>temperature<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">handleChange</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>temperature<span class=\\\"token punctuation\\\">:</span> e<span class=\\\"token punctuation\\\">.</span>target<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> temperature <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>temperature<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">const</span> scale <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>scale<span class=\\\"token punctuation\\\">;</span>\\n</span>    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>fieldset</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"gatsby-highlight-code-line\\\">        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>legend</span><span class=\\\"token punctuation\\\">></span></span>Enter temperature <span class=\\\"token keyword\\\">in</span> <span class=\\\"token punctuation\\\">{</span>scaleNames<span class=\\\"token punctuation\\\">[</span>scale<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>legend</span><span class=\\\"token punctuation\\\">></span></span>\\n</span>        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>input</span> <span class=\\\"token attr-name\\\">value</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>temperature<span class=\\\"token punctuation\\\">}</span></span>\\n               <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleChange<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>fieldset</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>我们现在可以对<code class=\\\"gatsby-code-text\\\">Calculator</code>稍作修改，来渲染两个不同的温度输入框。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Calculator</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"gatsby-highlight-code-line\\\">        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>TemperatureInput</span> <span class=\\\"token attr-name\\\">scale</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>c<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n</span><span class=\\\"gatsby-highlight-code-line\\\">        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>TemperatureInput</span> <span class=\\\"token attr-name\\\">scale</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>f<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n</span>      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p><a href=\\\"http://codepen.io/valscion/pen/GWKbao?editors=0010\\\">在 CodePen 上试试。</a></p>\\n<p>我们现在有了两个输入框，但是当你在其中一个输入时，另一个并不会更新。这显然是不符合我们的需求的。</p>\\n<p>另外，我们此时也不能从 <code class=\\\"gatsby-code-text\\\">Calculator</code> 组件中展示 <code class=\\\"gatsby-code-text\\\">BoilingVerdict</code> 的渲染结果。因为现在表示温度的状态数据只存在于 <code class=\\\"gatsby-code-text\\\">TemperatureInput</code> 组件当中。</p>\\n<h2 id=\\\"写出转换函数\\\"><a href=\\\"#%E5%86%99%E5%87%BA%E8%BD%AC%E6%8D%A2%E5%87%BD%E6%95%B0\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>写出转换函数</h2>\\n<p>首先，我们写两个可以将摄氏度和华氏度互相转换的函数。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">toCelsius</span><span class=\\\"token punctuation\\\">(</span>fahrenheit<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>fahrenheit <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">32</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">5</span> <span class=\\\"token operator\\\">/</span> <span class=\\\"token number\\\">9</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">toFahrenheit</span><span class=\\\"token punctuation\\\">(</span>celsius<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>celsius <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">9</span> <span class=\\\"token operator\\\">/</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">32</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>这两个函数只是单纯转换数字。我们还需要另外一个函数，它接受两个参数，第一个接受字符串 <code class=\\\"gatsby-code-text\\\">temperature</code> 变量，第二个参数则是上面编写的单位转换函数。最后会返回一个字符串。我们会使用它来根据一个输入框的输入计算出另一个输入框的值。</p>\\n<p>我们最后取到输出的小数点后三位，而 <code class=\\\"gatsby-code-text\\\">temperature</code> 输入不合法的时候，这个函数则会返回空字符串。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">tryConvert</span><span class=\\\"token punctuation\\\">(</span>temperature<span class=\\\"token punctuation\\\">,</span> convert<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> input <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">parseFloat</span><span class=\\\"token punctuation\\\">(</span>temperature<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>Number<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">isNaN</span><span class=\\\"token punctuation\\\">(</span>input<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">const</span> output <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">convert</span><span class=\\\"token punctuation\\\">(</span>input<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> rounded <span class=\\\"token operator\\\">=</span> Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">round</span><span class=\\\"token punctuation\\\">(</span>output <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">/</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> rounded<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>举两个例子，<code class=\\\"gatsby-code-text\\\">tryConvert(&#39;abc&#39;, toCelsius)</code> 会返回空字符串，而 <code class=\\\"gatsby-code-text\\\">tryConvert(&#39;10.22&#39;, toFahrenheit)</code> 会返回 <code class=\\\"gatsby-code-text\\\">&#39;50.396&#39;</code>。</p>\\n<h2 id=\\\"状态提升\\\"><a href=\\\"#%E7%8A%B6%E6%80%81%E6%8F%90%E5%8D%87\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>状态提升</h2>\\n<p>到这一步为止，两个<code class=\\\"gatsby-code-text\\\">TemperatureInput</code>组件都是在自己的 state 中独立保存数据。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">TemperatureInput</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleChange <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleChange<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>temperature<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</span>  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">handleChange</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>temperature<span class=\\\"token punctuation\\\">:</span> e<span class=\\\"token punctuation\\\">.</span>target<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</span>  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">const</span> temperature <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>temperature<span class=\\\"token punctuation\\\">;</span>\\n</span>    <span class=\\\"token comment\\\">// ...  </span>\\n</code></pre>\\n      </div>\\n<p>但是，我们想要的是这两个输入能保持同步。当我们更新摄氏输入（Celsius）时，华氏度（Fahrenheit ）这个框应该能显示转换后的的温度数值，反之亦然。</p>\\n<p>在React中，状态分享是通过将state数据提升至离需要这些数据的组件最近的父组件来完成的。这就是所谓的<strong>状态提升</strong>。我们会将 <code class=\\\"gatsby-code-text\\\">TemperatureInput</code> 组件自身保存的 state 移到 <code class=\\\"gatsby-code-text\\\">Calculator</code> 中。</p>\\n<p>如果 <code class=\\\"gatsby-code-text\\\">Calculator</code> 组件拥有了提升上来共享的状态数据，那它就会成为两个温度输入组件的“数据源”。它会传递给下面温度输入组件一致的数据。由于两个 <code class=\\\"gatsby-code-text\\\">TemperatureInput</code> 温度组件的props属性都是来源于共同的父组件 <code class=\\\"gatsby-code-text\\\">Calculator</code>，它们的数据也会保持同步。</p>\\n<p>让我们一步一步来分析如何操作。</p>\\n<p>首先，我们在 <code class=\\\"gatsby-code-text\\\">TemperatureInput</code> 组件中将 <code class=\\\"gatsby-code-text\\\">this.state.temperature</code> 替换为 <code class=\\\"gatsby-code-text\\\">this.props.temperature</code> 。现在，先假定 <code class=\\\"gatsby-code-text\\\">this.props.temperature</code> 值已经存在，将来我们需要从 <code class=\\\"gatsby-code-text\\\">Calculator</code> 组件中传入。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\">  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// 之前的代码: const temperature = this.state.temperature;</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">const</span> temperature <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>temperature<span class=\\\"token punctuation\\\">;</span>\\n</span>    <span class=\\\"token comment\\\">// ...</span>\\n</code></pre>\\n      </div>\\n<p>我们首先知道<a href=\\\"/docs/components-and-props.html#props-are-read-only\\\">props是只读的</a>\\n这么一个事实。而之前<code class=\\\"gatsby-code-text\\\">temperature</code>变量是被保存在其自身的 state 中的，<code class=\\\"gatsby-code-text\\\">TemperatureInput</code> 组件只需要调用 <code class=\\\"gatsby-code-text\\\">this.setState()</code> 就能改变它。但现在，<code class=\\\"gatsby-code-text\\\">temperature</code> 是作为 prop 从父组件传递下来的，<code class=\\\"gatsby-code-text\\\">TemperatureInput</code> 组件是没有控制权的。</p>\\n<p>在React中，这个问题通常是通过让组件“受控”来解决。就像 <code class=\\\"gatsby-code-text\\\">&lt;input&gt;</code> 能够接受 <code class=\\\"gatsby-code-text\\\">value</code> 和 <code class=\\\"gatsby-code-text\\\">onChange</code> 这两个prop属性值，自定义组件 <code class=\\\"gatsby-code-text\\\">TemperatureInput</code> 也能接受来自 <code class=\\\"gatsby-code-text\\\">Calculator</code> 父组件的 <code class=\\\"gatsby-code-text\\\">temperature</code> 变量和 <code class=\\\"gatsby-code-text\\\">onTemperatureChange</code> 方法作为props属性值。</p>\\n<p>做完这些，当 <code class=\\\"gatsby-code-text\\\">TemperatureInput</code> 组件希望更新温度时，就会调用 <code class=\\\"gatsby-code-text\\\">this.props.onTemperatureChange</code>。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\">  <span class=\\\"token function\\\">handleChange</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// 之前的代码: this.setState({temperature: e.target.value});</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">onTemperatureChange</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">.</span>target<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</span>    <span class=\\\"token comment\\\">// ...</span>\\n</code></pre>\\n      </div>\\n<blockquote>\\n<p>注意：</p>\\n<p><code class=\\\"gatsby-code-text\\\">temperature</code> 和 <code class=\\\"gatsby-code-text\\\">onTemperatureChange</code> 这些prop属性的命名没有特殊含义，我们也可以起个其他任何的名字，像是<code class=\\\"gatsby-code-text\\\">value</code>和<code class=\\\"gatsby-code-text\\\">onChange</code>这些只是命名习惯罢了。</p>\\n</blockquote>\\n<p><code class=\\\"gatsby-code-text\\\">onTemperatureChange</code>加上<code class=\\\"gatsby-code-text\\\">temperature</code>一起的两个属性（prop）由父组件<code class=\\\"gatsby-code-text\\\">Calculator</code>提供。父组件处理变化只需通过改变其自身的状态，从而使用新的值来重新渲染两个输入框组件。很快我们将重新改写<code class=\\\"gatsby-code-text\\\">Calculator</code>。</p>\\n<p>在我们改写<code class=\\\"gatsby-code-text\\\">Calculator</code>组件之前，我们先花点时间总结下<code class=\\\"gatsby-code-text\\\">TemperatureInput</code>组件的变化。我们将其自身的 state 从组件中移除，使用 <code class=\\\"gatsby-code-text\\\">this.props.temperature</code> 替代 <code class=\\\"gatsby-code-text\\\">this.state.temperature</code>。当我们想要响应数据改变时，现在是调用由<code class=\\\"gatsby-code-text\\\">Calculator</code>提供的<code class=\\\"gatsby-code-text\\\">this.props.onTemperatureChange()</code> 而不是<code class=\\\"gatsby-code-text\\\">this.setState()</code>：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">TemperatureInput</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleChange <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleChange<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">handleChange</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">onTemperatureChange</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">.</span>target<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</span>  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">const</span> temperature <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>temperature<span class=\\\"token punctuation\\\">;</span>\\n</span>    <span class=\\\"token keyword\\\">const</span> scale <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>scale<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>fieldset</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>legend</span><span class=\\\"token punctuation\\\">></span></span>在<span class=\\\"token punctuation\\\">{</span>scaleNames<span class=\\\"token punctuation\\\">[</span>scale<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">:</span>中输入温度数值<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>legend</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>input</span> <span class=\\\"token attr-name\\\">value</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>temperature<span class=\\\"token punctuation\\\">}</span></span>\\n               <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleChange<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>fieldset</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>现在让我们来转向 <code class=\\\"gatsby-code-text\\\">Calculator</code> 组件。</p>\\n<p>我们将会保存当前输入的<code class=\\\"gatsby-code-text\\\">temperature</code>和<code class=\\\"gatsby-code-text\\\">scale</code>值到它的局部状态（state）中，这是从输入框组件状态中“提升”上来的，它将会用作两个输入框共同的的“数据源”。这是我们为了渲染两个输入框组件需要知道的所有数据最精简表达。</p>\\n<p>举个例子，假如我们在摄氏度输入框中输入37，那么 <code class=\\\"gatsby-code-text\\\">Calculator</code> 的 state 就是：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token punctuation\\\">{</span>\\n  temperature<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'37'</span><span class=\\\"token punctuation\\\">,</span>\\n  scale<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'c'</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>如果我们之后在华氏度输入框输入212，那么 <code class=\\\"gatsby-code-text\\\">Calculator</code> 的状态数据就会是：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token punctuation\\\">{</span>\\n  temperature<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'212'</span><span class=\\\"token punctuation\\\">,</span>\\n  scale<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'f'</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>我们可以一起保存两个输入的值，但这么做似乎没有必要。保存最新输入的温度和温度单位就足够了。我们可以只需基于当前的 <code class=\\\"gatsby-code-text\\\">temperature</code> 和 <code class=\\\"gatsby-code-text\\\">scale</code> 计算出另一个输入框中的值。</p>\\n<p>现在这两个输入框中的值能保持同步了，因为它们使用的是通过同一个 state 计算出来的值。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Calculator</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleCelsiusChange <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleCelsiusChange<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleFahrenheitChange <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleFahrenheitChange<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>temperature<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span> scale<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'c'</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</span>  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">handleCelsiusChange</span><span class=\\\"token punctuation\\\">(</span>temperature<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>scale<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'c'</span><span class=\\\"token punctuation\\\">,</span> temperature<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</span>  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">handleFahrenheitChange</span><span class=\\\"token punctuation\\\">(</span>temperature<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>scale<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'f'</span><span class=\\\"token punctuation\\\">,</span> temperature<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</span>  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">const</span> scale <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>scale<span class=\\\"token punctuation\\\">;</span>\\n</span><span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">const</span> temperature <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>temperature<span class=\\\"token punctuation\\\">;</span>\\n</span><span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">const</span> celsius <span class=\\\"token operator\\\">=</span> scale <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'f'</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token function\\\">tryConvert</span><span class=\\\"token punctuation\\\">(</span>temperature<span class=\\\"token punctuation\\\">,</span> toCelsius<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">:</span> temperature<span class=\\\"token punctuation\\\">;</span>\\n</span><span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token keyword\\\">const</span> fahrenheit <span class=\\\"token operator\\\">=</span> scale <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'c'</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token function\\\">tryConvert</span><span class=\\\"token punctuation\\\">(</span>temperature<span class=\\\"token punctuation\\\">,</span> toFahrenheit<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">:</span> temperature<span class=\\\"token punctuation\\\">;</span>\\n</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>TemperatureInput</span>\\n          <span class=\\\"token attr-name\\\">scale</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>c<span class=\\\"token punctuation\\\">\\\"</span></span>\\n<span class=\\\"gatsby-highlight-code-line\\\">          <span class=\\\"token attr-name\\\">temperature</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>celsius<span class=\\\"token punctuation\\\">}</span></span>\\n</span><span class=\\\"gatsby-highlight-code-line\\\">          <span class=\\\"token attr-name\\\">onTemperatureChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleCelsiusChange<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n</span>        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>TemperatureInput</span>\\n          <span class=\\\"token attr-name\\\">scale</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>f<span class=\\\"token punctuation\\\">\\\"</span></span>\\n<span class=\\\"gatsby-highlight-code-line\\\">          <span class=\\\"token attr-name\\\">temperature</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>fahrenheit<span class=\\\"token punctuation\\\">}</span></span>\\n</span><span class=\\\"gatsby-highlight-code-line\\\">          <span class=\\\"token attr-name\\\">onTemperatureChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleFahrenheitChange<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n</span>        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>BoilingVerdict</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">          <span class=\\\"token attr-name\\\">celsius</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token function\\\">parseFloat</span><span class=\\\"token punctuation\\\">(</span>celsius<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n</span>      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p><a href=\\\"http://codepen.io/valscion/pen/jBNjja?editors=0010\\\">在 Codepen 上试试。</a></p>\\n<p>现在，无论你编辑哪一个输入框，<code class=\\\"gatsby-code-text\\\">Calculator</code> 组件中 <code class=\\\"gatsby-code-text\\\">this.state.temperature</code> 和 <code class=\\\"gatsby-code-text\\\">this.state.scale</code> 都会更新。向其中一个输入框输入值，另一个输入框总是基于这个值显示计算结果。</p>\\n<p>让我们梳理下编辑输入框时所发生的一系列活动：</p>\\n<ul>\\n<li>React在DOM的<code class=\\\"gatsby-code-text\\\">&lt;input&gt;</code>上调用被指定为<code class=\\\"gatsby-code-text\\\">onChange</code>的函数。在本例中，是<code class=\\\"gatsby-code-text\\\">TemperatureInput</code>组件上的<code class=\\\"gatsby-code-text\\\">handleChange</code>函数。</li>\\n<li><code class=\\\"gatsby-code-text\\\">TemperatureInput</code>组件的<code class=\\\"gatsby-code-text\\\">handleChange</code>函数会用新输入值调用<code class=\\\"gatsby-code-text\\\">this.props.onTemperatureChange()</code>函数。输入框组件的属性，包括<code class=\\\"gatsby-code-text\\\">onTemperatureChange</code>都是由父组件<code class=\\\"gatsby-code-text\\\">Calculator</code>提供的。</li>\\n<li>当最开始渲染时，<code class=\\\"gatsby-code-text\\\">Calculator</code>组件的<code class=\\\"gatsby-code-text\\\">handleCelsiusChange</code>方法被指定给摄氏温度输入组件<code class=\\\"gatsby-code-text\\\">TemperatureInput</code>的<code class=\\\"gatsby-code-text\\\">onTemperatureChange</code>方法，同时把<code class=\\\"gatsby-code-text\\\">handleFahrenheitChange</code>方法指定给华氏输入组件<code class=\\\"gatsby-code-text\\\">TemperatureInput</code>的<code class=\\\"gatsby-code-text\\\">onTemperatureChange</code>方法。所以<code class=\\\"gatsby-code-text\\\">Calculator</code>组件的两个方法都会在相应输入框被编辑时被调用。</li>\\n<li>在这些方法内部，<code class=\\\"gatsby-code-text\\\">Calculator</code>组件会使用编辑输入的新值和当前输入框的温度单位来让React调用<code class=\\\"gatsby-code-text\\\">this.setState()</code>方法来重渲染自身。</li>\\n<li>React调用<code class=\\\"gatsby-code-text\\\">Calculator</code>组件的<code class=\\\"gatsby-code-text\\\">render</code>方法来识别UI界面的样子。基于当前值和激活的温度单位，两个输入框的值会被重新计算。温度转换就是在这里被执行的。</li>\\n<li>React使用由<code class=\\\"gatsby-code-text\\\">Calculator</code>指定的新props来调用各个<code class=\\\"gatsby-code-text\\\">TemperatureInput</code>组件的<code class=\\\"gatsby-code-text\\\">render</code>方法，React也会识别出子组件的UI界面。</li>\\n<li>React调用<code class=\\\"gatsby-code-text\\\">BoilingVerdict</code>组件的<code class=\\\"gatsby-code-text\\\">render</code>方法，传递摄氏温度作为它的属性。</li>\\n<li>React DOM 会用沸腾裁决更新DOM来匹配渴望的输入值。我们编辑的输入框获取新值，而另一个输入框则用经过转换的温度值进行更新。</li>\\n</ul>\\n<p>一切更新都是经过同样的步骤，因而输入框能保持同步的。</p>\\n<h2 id=\\\"经验教训\\\"><a href=\\\"#%E7%BB%8F%E9%AA%8C%E6%95%99%E8%AE%AD\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>经验教训</h2>\\n<p>在React应用中，对应任何可变数据理应只有一个单一“数据源”。通常，状态都是首先添加在需要渲染数据的组件中。然后，如果另一个组件也需要这些数据，你可以将数据提升至离它们最近的共同祖先中。你应该依赖 <a href=\\\"/docs/state-and-lifecycle.html#%E6%95%B0%E6%8D%AE%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%B5%81%E5%8A%A8\\\">自上而下的数据流</a>，而不是尝试在不同组件中同步状态。</p>\\n<p>状态提升要写更多的“炉墙代码”，比起双向绑定方式，但带来的好处是，你也可以花更少的工作量找到和隔离bug。因为任何<em>生活</em>在某些组件中的状态数据，也只有该组件它自己能够操作这些数据，发生bug的表面积就被大大地减小了。此外，你也可以使用自定义逻辑来拒绝（reject）或转换（transform）用户的输入。</p>\\n<p>如果某些数据可以由props或者state推导出来，那么它很有可能不应该在state中出现。举个例子，我们没有同时保存 <code class=\\\"gatsby-code-text\\\">celsiusValue</code> 和 <code class=\\\"gatsby-code-text\\\">fahrenheitValue</code>，而只是保存最新编辑的<code class=\\\"gatsby-code-text\\\">temperature</code>和它的<code class=\\\"gatsby-code-text\\\">scale</code>值。另一个输入框中的值总是可以在 <code class=\\\"gatsby-code-text\\\">render()</code> 函数中由这些保存的数据计算出来。这样我们在不损失任何用户输入精度的情况下，可以对另一字段清除或应用四舍五入。</p>\\n<p>当你在开发UI界面遇到问题时，你可以使用 <a href=\\\"https://github.com/facebook/react-devtools\\\">React 开发者工具</a>来检查props属性，并且可以点击查看组件树，直到你找到负责目前状态更新的组件。这能让你到追踪到产生 bug 的源头。</p>\\n<img src=\\\"https://reactjs.org/react-devtools-state-ef94afc3447d75cdc245c77efb0d63be.gif\\\" alt=\\\"Monitoring State in React DevTools\\\" width=\\\"100%\\\">\",\"frontmatter\":{\"title\":\"状态提升\",\"next\":\"composition-vs-inheritance.html\",\"prev\":\"state-and-lifecycle.html\"},\"fields\":{\"path\":\"docs/lifting-state-up.md\",\"slug\":\"docs/lifting-state-up.html\"}}},\"pathContext\":{\"slug\":\"docs/lifting-state-up.html\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-lifting-state-up-html.json\n// module id = 914\n// module chunks = 37767483572991"],"sourceRoot":""}