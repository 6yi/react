{"version":3,"sources":["webpack:///path---docs-code-splitting-html-2fbf4a65aceb86a67007.js","webpack:///./.cache/json/docs-code-splitting-html.json"],"names":["webpackJsonp","859","module","exports","data","markdownRemark","html","frontmatter","title","next","prev","fields","path","slug","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,oqnBAAy6oBC,aAAqDC,MAAA,iBAAAC,KAAA,KAAAC,KAAA,MAAiDC,QAAWC,KAAA,yBAAAC,KAAA,8BAAoEC,aAAgBD,KAAA","file":"path---docs-code-splitting-html-2fbf4a65aceb86a67007.js","sourcesContent":["webpackJsonp([124533957295565],{\n\n/***/ 859:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2 id=\\\"打包\\\"><a href=\\\"#%E6%89%93%E5%8C%85\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>打包</h2>\\n<p>大多数 React 应用都会通过类似 <a href=\\\"https://webpack.js.org/\\\">Webpack</a> 或 <a href=\\\"http://browserify.org/\\\">Browserify</a> 构建自己的文件 “包（bundled）”。构建是一个将文件引入并合并到一个单独文件：“包（bundle）” 的环节。该包包含在一个 web  页面上用以立刻加载整个应用。</p>\\n<h4 id=\\\"例子\\\"><a href=\\\"#%E4%BE%8B%E5%AD%90\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>例子</h4>\\n<p><strong>App:</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token comment\\\">// app.js</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> add <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./math.js'</span><span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">add</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">16</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">26</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 42</span>\\n</code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token comment\\\">// math.js</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">add</span><span class=\\\"token punctuation\\\">(</span>a<span class=\\\"token punctuation\\\">,</span> b<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> a <span class=\\\"token operator\\\">+</span> b<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p><strong>Bundle:</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">add</span><span class=\\\"token punctuation\\\">(</span>a<span class=\\\"token punctuation\\\">,</span> b<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> a <span class=\\\"token operator\\\">+</span> b<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">add</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">16</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">26</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 42</span>\\n</code></pre>\\n      </div>\\n<blockquote>\\n<p>注意：</p>\\n<p>你的包最终看起来会和这个有很大的不同。</p>\\n</blockquote>\\n<p>若你正在使用 <a href=\\\"https://github.com/facebookincubator/create-react-app\\\">Create React App</a>, <a href=\\\"https://github.com/zeit/next.js/\\\">Next.js</a>、<a href=\\\"https://www.gatsbyjs.org/\\\">Gatsby</a> 或类似工具，你将有一个能够立即对你的应用进行打包的 webpack 配置。</p>\\n<p>若你未使用，你职责需要自己来进行配置。例如，查看 webpack 文档上的<a href=\\\"https://webpack.js.org/guides/installation/\\\">安装</a>和\\n<a href=\\\"https://webpack.js.org/guides/getting-started/\\\">入门</a>指南。</p>\\n<h2 id=\\\"代码分隔\\\"><a href=\\\"#%E4%BB%A3%E7%A0%81%E5%88%86%E9%9A%94\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>代码分隔</h2>\\n<p>打包非常棒，但随着你的应用增长，你的代码包也将随之增长。尤其是如果你包含了体积大的第三方库。你需要关注你代码包中所包含的代码以避免体积过大而使得加载时间过长。</p>\\n<p>为了避免清理大体积的代码包，在一开始就解决该问题并开始对代码包进行分割则十分不错。<a href=\\\"https://webpack.js.org/guides/code-splitting/\\\">代码分割</a>是由如 webpack 和 Browserify（通过 <a href=\\\"https://github.com/browserify/factor-bundle\\\">factor-bundle</a>）等打包器支持的一项能够创建多个包并在运行时动态加载的特性。</p>\\n<p>代码分割你的应用能够帮助你“懒加载”当前用户所需要的内容，能够显著地提高你的应用性能。尽管你不用减少你的应用中过多的代码体积，你仍然能够避免加载用户永远不需要的代码，并在初始化时候减少所需加载的代码量。</p>\\n<h2 id=\\\"import\\\"><a href=\\\"#import\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code class=\\\"gatsby-code-text\\\">import()</code></h2>\\n<p>在你的应用中引入代码分割的最佳方式是通过动态 <code class=\\\"gatsby-code-text\\\">import()</code> 语法。</p>\\n<p><strong>之前:</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> add <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./math'</span><span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">add</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">16</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">26</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p><strong>之后:</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token keyword\\\">import</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"./math\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>math <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">add</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">16</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">26</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<blockquote>\\n<p>注意：</p>\\n<p>动态 <code class=\\\"gatsby-code-text\\\">imports()</code> 语法目前是 ECMAScript (JavaScript) <a href=\\\"https://github.com/tc39/proposal-dynamic-import\\\">提案</a> 而不是语言标准。期待其在不远的将来被接纳成为标准的一部分。</p>\\n</blockquote>\\n<p>当 Webpack 解析到该语法时，它会自动地开始进行代码分割。如果你使用 Create React App，该功能已配置好，你已可以<a href=\\\"https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/template/README.md#code-splitting\\\">开始使用</a>。<a href=\\\"https://github.com/zeit/next.js/#dynamic-import\\\">Next.js</a> 也已支持该特性而无需再配置(out of box)。</p>\\n<p>如果你自己配置 Webpack，你可能要阅读下 Webpack <a href=\\\"https://webpack.js.org/guides/code-splitting/\\\">关于代码分割的指南</a>。你的 Webpack 配置应该看起来有点<a href=\\\"https://gist.github.com/gaearon/ca6e803f5c604d37468b0091d9959269\\\">类似于此</a>。</p>\\n<p>当使用 <a href=\\\"http://babeljs.io/\\\">Babel</a> 时，你需要确保 Babel 能够解析动态引入语法而不是将其进行转换。对于这一要求你需要 <a href=\\\"https://yarnpkg.com/en/package/babel-plugin-syntax-dynamic-import\\\">babel-plugin-syntax-dynamic-import</a>。</p>\\n<h2 id=\\\"库\\\"><a href=\\\"#%E5%BA%93\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>库</h2>\\n<h3 id=\\\"react-loadable\\\"><a href=\\\"#react-loadable\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>React Loadable</h3>\\n<p><a href=\\\"https://github.com/thejameskyle/react-loadable\\\">React Loadable</a> 将动态引入(dynamic import)封装成了一个对 React 友好的 API 来在特定组件下引入代码分割的功能。</p>\\n<p><strong>之前:</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token keyword\\\">import</span> OtherComponent <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./OtherComponent'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">MyComponent</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>OtherComponent</span><span class=\\\"token punctuation\\\">/></span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p><strong>之后:</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token keyword\\\">import</span> Loadable <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-loadable'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> LoadableOtherComponent <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">Loadable</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  loader<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">import</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./OtherComponent'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  loading<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>Loading<span class=\\\"token operator\\\">...</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">MyComponent</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>LoadableOtherComponent</span><span class=\\\"token punctuation\\\">/></span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>React Loadable 帮助你创建<a href=\\\"https://github.com/thejameskyle/react-loadable#creating-a-great-loading-component\\\">加载状态</a>、<a href=\\\"https://github.com/thejameskyle/react-loadable#loading-error-states\\\">错误状态</a>、<a href=\\\"https://github.com/thejameskyle/react-loadable#timing-out-when-the-loader-is-taking-too-long\\\">超时</a>、<a href=\\\"https://github.com/thejameskyle/react-loadable#preloading\\\">预加载</a>等等。它甚至能通过大量的代码分割帮助进行<a href=\\\"https://github.com/thejameskyle/react-loadable#------------server-side-rendering\\\">服务端渲染</a>。</p>\\n<h2 id=\\\"基于路由的代码分隔\\\"><a href=\\\"#%E5%9F%BA%E4%BA%8E%E8%B7%AF%E7%94%B1%E7%9A%84%E4%BB%A3%E7%A0%81%E5%88%86%E9%9A%94\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>基于路由的代码分隔</h2>\\n<p>决定在哪引入代码分割则需要一些技巧。你需要确保选择的位置能够均匀地分割代码包而不会影响用户体验。</p>\\n<p>一个不错的位置是从路由开始。大多数网络用户习惯于花费些时间在页面交互。你也可以立刻重渲整个页面这样你的用户则无法与页面的其他元素进行交互。</p>\\n<p>这有一个使用类似 <a href=\\\"https://reacttraining.com/react-router/\\\">React Router</a> 和\\n<a href=\\\"https://github.com/thejameskyle/react-loadable\\\">React Loadable</a> 库的关于如何配置基于路由的代码分割的例子。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> BrowserRouter <span class=\\\"token keyword\\\">as</span> Router<span class=\\\"token punctuation\\\">,</span> Route<span class=\\\"token punctuation\\\">,</span> Switch <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-router-dom'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Loadable <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-loadable'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">Loading</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>Loading<span class=\\\"token operator\\\">...</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> Home <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">Loadable</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  loader<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">import</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./routes/Home'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  loading<span class=\\\"token punctuation\\\">:</span> Loading<span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> About <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">Loadable</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  loader<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">import</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./routes/About'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  loading<span class=\\\"token punctuation\\\">:</span> Loading<span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">App</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Router</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Switch</span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Route</span> <span class=\\\"token attr-name\\\">exact</span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>/<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">component</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>Home<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Route</span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>/about<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">component</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>About<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Switch</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Router</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\",\"frontmatter\":{\"title\":\"Code-Splitting\",\"next\":null,\"prev\":null},\"fields\":{\"path\":\"docs/code-splitting.md\",\"slug\":\"docs/code-splitting.html\"}}},\"pathContext\":{\"slug\":\"docs/code-splitting.html\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-code-splitting-html-2fbf4a65aceb86a67007.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2 id=\\\"打包\\\"><a href=\\\"#%E6%89%93%E5%8C%85\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>打包</h2>\\n<p>大多数 React 应用都会通过类似 <a href=\\\"https://webpack.js.org/\\\">Webpack</a> 或 <a href=\\\"http://browserify.org/\\\">Browserify</a> 构建自己的文件 “包（bundled）”。构建是一个将文件引入并合并到一个单独文件：“包（bundle）” 的环节。该包包含在一个 web  页面上用以立刻加载整个应用。</p>\\n<h4 id=\\\"例子\\\"><a href=\\\"#%E4%BE%8B%E5%AD%90\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>例子</h4>\\n<p><strong>App:</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token comment\\\">// app.js</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> add <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./math.js'</span><span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">add</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">16</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">26</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 42</span>\\n</code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token comment\\\">// math.js</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">add</span><span class=\\\"token punctuation\\\">(</span>a<span class=\\\"token punctuation\\\">,</span> b<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> a <span class=\\\"token operator\\\">+</span> b<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p><strong>Bundle:</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">add</span><span class=\\\"token punctuation\\\">(</span>a<span class=\\\"token punctuation\\\">,</span> b<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> a <span class=\\\"token operator\\\">+</span> b<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">add</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">16</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">26</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 42</span>\\n</code></pre>\\n      </div>\\n<blockquote>\\n<p>注意：</p>\\n<p>你的包最终看起来会和这个有很大的不同。</p>\\n</blockquote>\\n<p>若你正在使用 <a href=\\\"https://github.com/facebookincubator/create-react-app\\\">Create React App</a>, <a href=\\\"https://github.com/zeit/next.js/\\\">Next.js</a>、<a href=\\\"https://www.gatsbyjs.org/\\\">Gatsby</a> 或类似工具，你将有一个能够立即对你的应用进行打包的 webpack 配置。</p>\\n<p>若你未使用，你职责需要自己来进行配置。例如，查看 webpack 文档上的<a href=\\\"https://webpack.js.org/guides/installation/\\\">安装</a>和\\n<a href=\\\"https://webpack.js.org/guides/getting-started/\\\">入门</a>指南。</p>\\n<h2 id=\\\"代码分隔\\\"><a href=\\\"#%E4%BB%A3%E7%A0%81%E5%88%86%E9%9A%94\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>代码分隔</h2>\\n<p>打包非常棒，但随着你的应用增长，你的代码包也将随之增长。尤其是如果你包含了体积大的第三方库。你需要关注你代码包中所包含的代码以避免体积过大而使得加载时间过长。</p>\\n<p>为了避免清理大体积的代码包，在一开始就解决该问题并开始对代码包进行分割则十分不错。<a href=\\\"https://webpack.js.org/guides/code-splitting/\\\">代码分割</a>是由如 webpack 和 Browserify（通过 <a href=\\\"https://github.com/browserify/factor-bundle\\\">factor-bundle</a>）等打包器支持的一项能够创建多个包并在运行时动态加载的特性。</p>\\n<p>代码分割你的应用能够帮助你“懒加载”当前用户所需要的内容，能够显著地提高你的应用性能。尽管你不用减少你的应用中过多的代码体积，你仍然能够避免加载用户永远不需要的代码，并在初始化时候减少所需加载的代码量。</p>\\n<h2 id=\\\"import\\\"><a href=\\\"#import\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a><code class=\\\"gatsby-code-text\\\">import()</code></h2>\\n<p>在你的应用中引入代码分割的最佳方式是通过动态 <code class=\\\"gatsby-code-text\\\">import()</code> 语法。</p>\\n<p><strong>之前:</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> add <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./math'</span><span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">add</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">16</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">26</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p><strong>之后:</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token keyword\\\">import</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"./math\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>math <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">add</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">16</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">26</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<blockquote>\\n<p>注意：</p>\\n<p>动态 <code class=\\\"gatsby-code-text\\\">imports()</code> 语法目前是 ECMAScript (JavaScript) <a href=\\\"https://github.com/tc39/proposal-dynamic-import\\\">提案</a> 而不是语言标准。期待其在不远的将来被接纳成为标准的一部分。</p>\\n</blockquote>\\n<p>当 Webpack 解析到该语法时，它会自动地开始进行代码分割。如果你使用 Create React App，该功能已配置好，你已可以<a href=\\\"https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/template/README.md#code-splitting\\\">开始使用</a>。<a href=\\\"https://github.com/zeit/next.js/#dynamic-import\\\">Next.js</a> 也已支持该特性而无需再配置(out of box)。</p>\\n<p>如果你自己配置 Webpack，你可能要阅读下 Webpack <a href=\\\"https://webpack.js.org/guides/code-splitting/\\\">关于代码分割的指南</a>。你的 Webpack 配置应该看起来有点<a href=\\\"https://gist.github.com/gaearon/ca6e803f5c604d37468b0091d9959269\\\">类似于此</a>。</p>\\n<p>当使用 <a href=\\\"http://babeljs.io/\\\">Babel</a> 时，你需要确保 Babel 能够解析动态引入语法而不是将其进行转换。对于这一要求你需要 <a href=\\\"https://yarnpkg.com/en/package/babel-plugin-syntax-dynamic-import\\\">babel-plugin-syntax-dynamic-import</a>。</p>\\n<h2 id=\\\"库\\\"><a href=\\\"#%E5%BA%93\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>库</h2>\\n<h3 id=\\\"react-loadable\\\"><a href=\\\"#react-loadable\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>React Loadable</h3>\\n<p><a href=\\\"https://github.com/thejameskyle/react-loadable\\\">React Loadable</a> 将动态引入(dynamic import)封装成了一个对 React 友好的 API 来在特定组件下引入代码分割的功能。</p>\\n<p><strong>之前:</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token keyword\\\">import</span> OtherComponent <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./OtherComponent'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">MyComponent</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>OtherComponent</span><span class=\\\"token punctuation\\\">/></span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p><strong>之后:</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token keyword\\\">import</span> Loadable <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-loadable'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> LoadableOtherComponent <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">Loadable</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  loader<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">import</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./OtherComponent'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  loading<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>Loading<span class=\\\"token operator\\\">...</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">MyComponent</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>LoadableOtherComponent</span><span class=\\\"token punctuation\\\">/></span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>React Loadable 帮助你创建<a href=\\\"https://github.com/thejameskyle/react-loadable#creating-a-great-loading-component\\\">加载状态</a>、<a href=\\\"https://github.com/thejameskyle/react-loadable#loading-error-states\\\">错误状态</a>、<a href=\\\"https://github.com/thejameskyle/react-loadable#timing-out-when-the-loader-is-taking-too-long\\\">超时</a>、<a href=\\\"https://github.com/thejameskyle/react-loadable#preloading\\\">预加载</a>等等。它甚至能通过大量的代码分割帮助进行<a href=\\\"https://github.com/thejameskyle/react-loadable#------------server-side-rendering\\\">服务端渲染</a>。</p>\\n<h2 id=\\\"基于路由的代码分隔\\\"><a href=\\\"#%E5%9F%BA%E4%BA%8E%E8%B7%AF%E7%94%B1%E7%9A%84%E4%BB%A3%E7%A0%81%E5%88%86%E9%9A%94\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>基于路由的代码分隔</h2>\\n<p>决定在哪引入代码分割则需要一些技巧。你需要确保选择的位置能够均匀地分割代码包而不会影响用户体验。</p>\\n<p>一个不错的位置是从路由开始。大多数网络用户习惯于花费些时间在页面交互。你也可以立刻重渲整个页面这样你的用户则无法与页面的其他元素进行交互。</p>\\n<p>这有一个使用类似 <a href=\\\"https://reacttraining.com/react-router/\\\">React Router</a> 和\\n<a href=\\\"https://github.com/thejameskyle/react-loadable\\\">React Loadable</a> 库的关于如何配置基于路由的代码分割的例子。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code class=\\\"gatsby-code-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> BrowserRouter <span class=\\\"token keyword\\\">as</span> Router<span class=\\\"token punctuation\\\">,</span> Route<span class=\\\"token punctuation\\\">,</span> Switch <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-router-dom'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Loadable <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-loadable'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">Loading</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>Loading<span class=\\\"token operator\\\">...</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> Home <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">Loadable</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  loader<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">import</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./routes/Home'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  loading<span class=\\\"token punctuation\\\">:</span> Loading<span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> About <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">Loadable</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  loader<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">import</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./routes/About'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  loading<span class=\\\"token punctuation\\\">:</span> Loading<span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">App</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Router</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Switch</span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Route</span> <span class=\\\"token attr-name\\\">exact</span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>/<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">component</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>Home<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Route</span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>/about<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">component</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>About<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Switch</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Router</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\",\"frontmatter\":{\"title\":\"Code-Splitting\",\"next\":null,\"prev\":null},\"fields\":{\"path\":\"docs/code-splitting.md\",\"slug\":\"docs/code-splitting.html\"}}},\"pathContext\":{\"slug\":\"docs/code-splitting.html\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-code-splitting-html.json\n// module id = 859\n// module chunks = 124533957295565"],"sourceRoot":""}