{
  "nodes": {
    "SitePage /dev-404-page/": {
      "path": "/dev-404-page/",
      "id": "SitePage /dev-404-page/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "f91d29e10ba680b413138cf9ed86e655",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin dev-404-page": {
      "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby/dist/internal-plugins/dev-404-page",
      "id": "Plugin dev-404-page",
      "name": "dev-404-page",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "createPagesStatefully"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby/dist/internal-plugins/dev-404-page",
      "packageJson": {
        "name": "dev-404-page",
        "description": "Internal plugin to add a 404 page in development with helpful information",
        "version": "1.0.0",
        "main": "index.js",
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "9b9b1bea314ef2c875208a78ec9bfe02",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin component-page-creator": {
      "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby/dist/internal-plugins/component-page-creator",
      "id": "Plugin component-page-creator",
      "name": "component-page-creator",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "createPagesStatefully"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby/dist/internal-plugins/component-page-creator",
      "packageJson": {
        "name": "component-page-creator",
        "description": "An internal Gatsby plugin that creates pages from component files in src/pages",
        "version": "1.0.0",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "311fe6271b6a848515c38050b2af25e6",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin component-layout-creator": {
      "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby/dist/internal-plugins/component-layout-creator",
      "id": "Plugin component-layout-creator",
      "name": "component-layout-creator",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "createLayouts"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby/dist/internal-plugins/component-layout-creator",
      "packageJson": {
        "name": "component-layout-creator",
        "description": "An internal Gatsby plugin that creates pages from component files in src/layouts",
        "version": "1.0.0",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "ee1de638c7919e7771d96080cd8ce631",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin internal-data-bridge": {
      "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby/dist/internal-plugins/internal-data-bridge",
      "id": "Plugin internal-data-bridge",
      "name": "internal-data-bridge",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "sourceNodes",
        "onCreatePage"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby/dist/internal-plugins/internal-data-bridge",
      "packageJson": {
        "name": "internal-data-bridge",
        "description": "An internal Gatsby plugin which creates data nodes from internal data",
        "version": "1.0.0",
        "main": "index.js",
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "ab592c6f187f689c73533f799c7fda59",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin prod-404": {
      "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby/dist/internal-plugins/prod-404",
      "id": "Plugin prod-404",
      "name": "prod-404",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onCreatePage"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby/dist/internal-plugins/prod-404",
      "packageJson": {
        "name": "prod-404",
        "description": "Internal plugin to detect various flavors of 404 pages and ensure there's a 404.html path created as well to ensure compatability with static hosts",
        "version": "1.0.0",
        "main": "index.js",
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "6be7b398748212f1b40f43bd7a43ed0c",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin query-runner": {
      "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby/dist/internal-plugins/query-runner",
      "id": "Plugin query-runner",
      "name": "query-runner",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onCreatePage",
        "onCreateLayout"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby/dist/internal-plugins/query-runner",
      "packageJson": {
        "name": "query-runner",
        "description": "Internal plugin for running queries",
        "version": "1.0.0",
        "main": "index.js",
        "author": "",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "b5dff90d54642af41ae69ab94c21c400",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-source-react-error-codes": {
      "resolve": "/Users/yubolun/Desktop/react/plugins/gatsby-source-react-error-codes",
      "name": "gatsby-source-react-error-codes",
      "id": "Plugin gatsby-source-react-error-codes",
      "version": "0.0.1",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "sourceNodes"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/yubolun/Desktop/react/plugins/gatsby-source-react-error-codes",
      "packageJson": {
        "name": "gatsby-source-react-error-codes",
        "version": "0.0.1",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "68838cf680b4c90f72455260f861bc26",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-transformer-authors-yaml": {
      "resolve": "/Users/yubolun/Desktop/react/plugins/gatsby-transformer-authors-yaml",
      "name": "gatsby-transformer-authors-yaml",
      "id": "Plugin gatsby-transformer-authors-yaml",
      "version": "0.0.1",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "sourceNodes"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/yubolun/Desktop/react/plugins/gatsby-transformer-authors-yaml",
      "packageJson": {
        "name": "gatsby-transformer-authors-yaml",
        "version": "0.0.1",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "eabe50dc048200ae0e1313aa003bc1d9",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-transformer-home-example-code": {
      "resolve": "/Users/yubolun/Desktop/react/plugins/gatsby-transformer-home-example-code",
      "name": "gatsby-transformer-home-example-code",
      "id": "Plugin gatsby-transformer-home-example-code",
      "version": "0.0.1",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "sourceNodes"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/yubolun/Desktop/react/plugins/gatsby-transformer-home-example-code",
      "packageJson": {
        "name": "gatsby-transformer-home-example-code",
        "version": "0.0.1",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "734b537ca7a83dbcaef12a29647ee12e",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-netlify": {
      "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby-plugin-netlify",
      "id": "Plugin gatsby-plugin-netlify",
      "name": "gatsby-plugin-netlify",
      "version": "1.0.19",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "modifyWebpackConfig",
        "onPostBuild"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby-plugin-netlify",
      "packageJson": {
        "name": "gatsby-plugin-netlify",
        "description": "A Gatsby plugin which generates a _headers file for netlify",
        "version": "1.0.19",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "http/2-server-push",
          "netlify"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          },
          {
            "name": "fs-extra",
            "version": "^4.0.2"
          },
          {
            "name": "lodash",
            "version": "^4.17.4"
          },
          {
            "name": "webpack-assets-manifest",
            "version": "^1.0.0"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": "^1.0.0"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "f0b484b6d7b4a78046a820b3b9f798da",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-glamor": {
      "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby-plugin-glamor",
      "id": "Plugin gatsby-plugin-glamor",
      "name": "gatsby-plugin-glamor",
      "version": "1.6.13",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "modifyWebpackConfig",
        "modifyBabelrc"
      ],
      "browserAPIs": [
        "onClientEntry"
      ],
      "ssrAPIs": [
        "replaceRenderer"
      ],
      "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby-plugin-glamor",
      "packageJson": {
        "name": "gatsby-plugin-glamor",
        "description": "Gatsby plugin to add support for Glamor",
        "version": "1.6.13",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "glamor"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          },
          {
            "name": "glamor",
            "version": "^2.20.29"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": "^1.0.0"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "5a58b9f6b552940d30b685d10aaa31c7",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-react-next": {
      "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby-plugin-react-next",
      "id": "Plugin gatsby-plugin-react-next",
      "name": "gatsby-plugin-react-next",
      "version": "1.0.11",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "modifyWebpackConfig"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby-plugin-react-next",
      "packageJson": {
        "name": "gatsby-plugin-react-next",
        "description": "Use React 16 with your Gatsby v1 site",
        "version": "1.0.11",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          },
          {
            "name": "core-js",
            "version": "^2.5.1"
          },
          {
            "name": "react",
            "version": "^16.0.0"
          },
          {
            "name": "react-dom",
            "version": "^16.0.0"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": "^1.0.0"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "25df4339c2cccdacb437d0b22a2b3956",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-nprogress": {
      "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby-plugin-nprogress",
      "id": "Plugin gatsby-plugin-nprogress",
      "name": "gatsby-plugin-nprogress",
      "version": "1.0.14",
      "pluginOptions": {
        "plugins": [],
        "color": "#61dafb"
      },
      "nodeAPIs": [],
      "browserAPIs": [
        "onClientEntry"
      ],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby-plugin-nprogress",
      "packageJson": {
        "name": "gatsby-plugin-nprogress",
        "description": "Shows page loading indicator when loading page resources is delayed",
        "version": "1.0.14",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin"
        ],
        "author": "Kyle Mathews<mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          },
          {
            "name": "nprogress",
            "version": "^0.2.0"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": "^1.0.0"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "d86f5a9233f3c77157a185192fc31ca7",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-source-filesystem": {
      "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby-source-filesystem",
      "id": "Plugin gatsby-source-filesystem",
      "name": "gatsby-source-filesystem",
      "version": "1.5.27",
      "pluginOptions": {
        "plugins": [],
        "name": "packages",
        "path": "/Users/yubolun/Desktop/react/content/"
      },
      "nodeAPIs": [
        "sourceNodes",
        "setFieldsOnGraphQLNodeType"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby-source-filesystem",
      "packageJson": {
        "name": "gatsby-source-filesystem",
        "description": "Gatsby plugin which parses files within a directory for further parsing by other plugins",
        "version": "1.5.27",
        "keywords": [
          "gatsby",
          "gatsby-plugin"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          },
          {
            "name": "bluebird",
            "version": "^3.5.0"
          },
          {
            "name": "chokidar",
            "version": "^1.7.0"
          },
          {
            "name": "fs-extra",
            "version": "^4.0.1"
          },
          {
            "name": "got",
            "version": "^7.1.0"
          },
          {
            "name": "md5-file",
            "version": "^3.1.1"
          },
          {
            "name": "mime",
            "version": "^1.3.6"
          },
          {
            "name": "pretty-bytes",
            "version": "^4.0.2"
          },
          {
            "name": "slash",
            "version": "^1.0.0"
          },
          {
            "name": "valid-url",
            "version": "^1.0.9"
          }
        ],
        "devDependencies": [
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "b78d49d5ab3d7ff51bdca888db007c9b",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-transformer-remark": {
      "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby-transformer-remark",
      "id": "Plugin gatsby-transformer-remark",
      "name": "gatsby-transformer-remark",
      "version": "1.7.39",
      "pluginOptions": {
        "plugins": [
          {
            "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby-remark-responsive-iframe",
            "id": "Plugin gatsby-remark-responsive-iframe",
            "name": "gatsby-remark-responsive-iframe",
            "version": "1.4.18",
            "pluginOptions": {
              "plugins": [],
              "wrapperStyle": ""
            },
            "nodeAPIs": [],
            "browserAPIs": [],
            "ssrAPIs": [],
            "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby-remark-responsive-iframe"
          },
          {
            "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby-remark-images",
            "id": "Plugin gatsby-remark-images",
            "name": "gatsby-remark-images",
            "version": "1.5.60",
            "pluginOptions": {
              "plugins": [],
              "maxWidth": 840,
              "wrapperStyle": "",
              "backgroundColor": "white",
              "linkImagesToOriginal": true,
              "showCaptions": false,
              "pathPrefix": ""
            },
            "nodeAPIs": [],
            "browserAPIs": [],
            "ssrAPIs": [],
            "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby-remark-images"
          },
          {
            "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby-remark-autolink-headers",
            "id": "Plugin gatsby-remark-autolink-headers",
            "name": "gatsby-remark-autolink-headers",
            "version": "1.4.15",
            "pluginOptions": {
              "plugins": []
            },
            "nodeAPIs": [],
            "browserAPIs": [
              "onClientEntry",
              "onRouteUpdate"
            ],
            "ssrAPIs": [
              "onRenderBody"
            ],
            "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby-remark-autolink-headers"
          },
          {
            "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby-remark-code-repls",
            "id": "Plugin gatsby-remark-code-repls",
            "name": "gatsby-remark-code-repls",
            "version": "1.0.10",
            "pluginOptions": {
              "plugins": [],
              "defaultText": "Try it on CodePen",
              "directory": "/Users/yubolun/Desktop/react/examples/",
              "externals": [
                "//unpkg.com/react/umd/react.development.js",
                "//unpkg.com/react-dom/umd/react-dom.development.js"
              ],
              "redirectTemplate": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
              "target": "_blank"
            },
            "nodeAPIs": [
              "createPages"
            ],
            "browserAPIs": [],
            "ssrAPIs": [],
            "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby-remark-code-repls"
          },
          {
            "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby-remark-embed-snippet",
            "id": "Plugin gatsby-remark-embed-snippet",
            "name": "gatsby-remark-embed-snippet",
            "version": "1.0.17",
            "pluginOptions": {
              "plugins": [],
              "classPrefix": "gatsby-code-",
              "directory": "/Users/yubolun/Desktop/react/examples/"
            },
            "nodeAPIs": [],
            "browserAPIs": [],
            "ssrAPIs": [],
            "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby-remark-embed-snippet"
          },
          {
            "resolve": "/Users/yubolun/Desktop/react/plugins/gatsby-remark-use-jsx",
            "name": "gatsby-remark-use-jsx",
            "id": "Plugin gatsby-remark-use-jsx",
            "version": "0.0.1",
            "pluginOptions": {
              "plugins": []
            },
            "nodeAPIs": [],
            "browserAPIs": [],
            "ssrAPIs": [],
            "pluginFilepath": "/Users/yubolun/Desktop/react/plugins/gatsby-remark-use-jsx"
          },
          {
            "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby-remark-prismjs",
            "id": "Plugin gatsby-remark-prismjs",
            "name": "gatsby-remark-prismjs",
            "version": "1.2.21",
            "pluginOptions": {
              "plugins": [],
              "classPrefix": "gatsby-code-"
            },
            "nodeAPIs": [],
            "browserAPIs": [],
            "ssrAPIs": [],
            "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby-remark-prismjs"
          },
          {
            "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby-remark-copy-linked-files",
            "id": "Plugin gatsby-remark-copy-linked-files",
            "name": "gatsby-remark-copy-linked-files",
            "version": "1.5.30",
            "pluginOptions": {
              "plugins": [],
              "ignoreFileExtensions": [
                "png",
                "jpg",
                "jpeg",
                "bmp",
                "tiff"
              ]
            },
            "nodeAPIs": [],
            "browserAPIs": [],
            "ssrAPIs": [],
            "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby-remark-copy-linked-files"
          },
          {
            "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby-remark-smartypants",
            "id": "Plugin gatsby-remark-smartypants",
            "name": "gatsby-remark-smartypants",
            "version": "1.4.12",
            "pluginOptions": {
              "plugins": []
            },
            "nodeAPIs": [],
            "browserAPIs": [],
            "ssrAPIs": [],
            "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby-remark-smartypants"
          }
        ]
      },
      "nodeAPIs": [
        "onCreateNode",
        "setFieldsOnGraphQLNodeType"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby-transformer-remark",
      "packageJson": {
        "name": "gatsby-transformer-remark",
        "description": "Gatsby transformer plugin for Markdown using the Remark library and ecosystem",
        "version": "1.7.39",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "markdown",
          "remark"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          },
          {
            "name": "bluebird",
            "version": "^3.5.0"
          },
          {
            "name": "graphql-type-json",
            "version": "^0.1.4"
          },
          {
            "name": "gray-matter",
            "version": "^3.0.0"
          },
          {
            "name": "hast-util-raw",
            "version": "^2.0.2"
          },
          {
            "name": "hast-util-to-html",
            "version": "^3.0.0"
          },
          {
            "name": "lodash",
            "version": "^4.17.4"
          },
          {
            "name": "mdast-util-to-hast",
            "version": "^2.4.0"
          },
          {
            "name": "mdast-util-toc",
            "version": "^2.0.1"
          },
          {
            "name": "remark",
            "version": "^7.0.1"
          },
          {
            "name": "remark-parse",
            "version": "^4.0.0"
          },
          {
            "name": "remark-retext",
            "version": "^3.1.0"
          },
          {
            "name": "remark-stringify",
            "version": "^4.0.0"
          },
          {
            "name": "retext-english",
            "version": "^3.0.0"
          },
          {
            "name": "sanitize-html",
            "version": "^1.14.1"
          },
          {
            "name": "underscore.string",
            "version": "^3.3.4"
          },
          {
            "name": "unified",
            "version": "^6.1.5"
          },
          {
            "name": "unist-util-remove-position",
            "version": "^1.1.1"
          },
          {
            "name": "unist-util-select",
            "version": "^1.5.0"
          },
          {
            "name": "unist-util-visit",
            "version": "^1.1.1"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "babel-plugin-transform-object-rest-spread",
            "version": "^6.20.2"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "2f550771fcee1caa120a11991397615a",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-remark-responsive-iframe": {
      "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby-remark-responsive-iframe",
      "id": "Plugin gatsby-remark-responsive-iframe",
      "name": "gatsby-remark-responsive-iframe",
      "version": "1.4.18",
      "pluginOptions": {
        "plugins": [],
        "wrapperStyle": ""
      },
      "nodeAPIs": [],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby-remark-responsive-iframe",
      "packageJson": {
        "name": "gatsby-remark-responsive-iframe",
        "description": "Make iframes in Markdown processed by Remark responsive",
        "version": "1.4.18",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "remark"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          },
          {
            "name": "bluebird",
            "version": "^3.5.0"
          },
          {
            "name": "cheerio",
            "version": "^1.0.0-rc.2"
          },
          {
            "name": "lodash",
            "version": "^4.17.4"
          },
          {
            "name": "unist-util-visit",
            "version": "^1.1.1"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          },
          {
            "name": "remark",
            "version": "^7.0.0"
          },
          {
            "name": "unist-util-find",
            "version": "^1.0.1"
          }
        ],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "0072828768b392844a44574701834e31",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-remark-images": {
      "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby-remark-images",
      "id": "Plugin gatsby-remark-images",
      "name": "gatsby-remark-images",
      "version": "1.5.60",
      "pluginOptions": {
        "plugins": [],
        "maxWidth": 840,
        "wrapperStyle": "",
        "backgroundColor": "white",
        "linkImagesToOriginal": true,
        "showCaptions": false,
        "pathPrefix": ""
      },
      "nodeAPIs": [],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby-remark-images",
      "packageJson": {
        "name": "gatsby-remark-images",
        "description": "Processes images in markdown so they can be used in the production build.",
        "version": "1.5.60",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "image",
          "markdown",
          "remark",
          "responsive images"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          },
          {
            "name": "cheerio",
            "version": "^1.0.0-rc.2"
          },
          {
            "name": "gatsby-plugin-sharp",
            "version": "^1.6.41"
          },
          {
            "name": "is-relative-url",
            "version": "^2.0.0"
          },
          {
            "name": "lodash",
            "version": "^4.17.4"
          },
          {
            "name": "slash",
            "version": "^1.0.0"
          },
          {
            "name": "unist-util-select",
            "version": "^1.5.0"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "ffd7061aa4cd7d10a9443e92ec4c9756",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-remark-autolink-headers": {
      "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby-remark-autolink-headers",
      "id": "Plugin gatsby-remark-autolink-headers",
      "name": "gatsby-remark-autolink-headers",
      "version": "1.4.15",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [],
      "browserAPIs": [
        "onClientEntry",
        "onRouteUpdate"
      ],
      "ssrAPIs": [
        "onRenderBody"
      ],
      "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby-remark-autolink-headers",
      "packageJson": {
        "name": "gatsby-remark-autolink-headers",
        "description": "Gatsby plugin to autolink headers in markdown processed by Remark",
        "version": "1.4.15",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "remark"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          },
          {
            "name": "github-slugger",
            "version": "^1.1.1"
          },
          {
            "name": "mdast-util-to-string",
            "version": "^1.0.2"
          },
          {
            "name": "unist-util-visit",
            "version": "^1.1.1"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "af5fa6cb2d17d847080b43631a789d62",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-remark-code-repls": {
      "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby-remark-code-repls",
      "id": "Plugin gatsby-remark-code-repls",
      "name": "gatsby-remark-code-repls",
      "version": "1.0.10",
      "pluginOptions": {
        "plugins": [],
        "defaultText": "Try it on CodePen",
        "directory": "/Users/yubolun/Desktop/react/examples/",
        "externals": [
          "//unpkg.com/react/umd/react.development.js",
          "//unpkg.com/react-dom/umd/react-dom.development.js"
        ],
        "redirectTemplate": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
        "target": "_blank"
      },
      "nodeAPIs": [
        "createPages"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby-remark-code-repls",
      "packageJson": {
        "name": "gatsby-remark-code-repls",
        "description": "Gatsby plugin to auto-generate links to popular REPLs like Babel and Codepen",
        "version": "1.0.10",
        "main": "index.js",
        "keywords": [
          "babel",
          "codepen",
          "gatsby",
          "gatsby-plugin",
          "remark",
          "repl"
        ],
        "author": "Brian Vaughn <brian.david.vaughn@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          },
          {
            "name": "lz-string",
            "version": "^1.4.4"
          },
          {
            "name": "normalize-path",
            "version": "^2.1.1"
          },
          {
            "name": "recursive-readdir-synchronous",
            "version": "^0.0.3"
          },
          {
            "name": "unist-util-map",
            "version": "^1.0.3"
          },
          {
            "name": "urijs",
            "version": "^1.19.0"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "d581e021c6b34cbe8147b9757e20ceec",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-remark-embed-snippet": {
      "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby-remark-embed-snippet",
      "id": "Plugin gatsby-remark-embed-snippet",
      "name": "gatsby-remark-embed-snippet",
      "version": "1.0.17",
      "pluginOptions": {
        "plugins": [],
        "classPrefix": "gatsby-code-",
        "directory": "/Users/yubolun/Desktop/react/examples/"
      },
      "nodeAPIs": [],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby-remark-embed-snippet",
      "packageJson": {
        "name": "gatsby-remark-embed-snippet",
        "description": "Gatsby plugin to embed formatted code snippets within markdown",
        "version": "1.0.17",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "prism",
          "remark"
        ],
        "author": "Brian Vaughn <brian.david.vaughn@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          },
          {
            "name": "gatsby-remark-prismjs",
            "version": "^1.2.21"
          },
          {
            "name": "normalize-path",
            "version": "^2.1.1"
          },
          {
            "name": "parse-numeric-range",
            "version": "^0.0.2"
          },
          {
            "name": "unist-util-map",
            "version": "^1.0.3"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "f43dcbd01b3a8acdcaad1529a924e839",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-remark-use-jsx": {
      "resolve": "/Users/yubolun/Desktop/react/plugins/gatsby-remark-use-jsx",
      "name": "gatsby-remark-use-jsx",
      "id": "Plugin gatsby-remark-use-jsx",
      "version": "0.0.1",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/yubolun/Desktop/react/plugins/gatsby-remark-use-jsx",
      "packageJson": {
        "name": "gatsby-remark-use-jsx",
        "version": "0.0.1",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "0102da2c89db4adac73b7f6f2fe24bdb",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-remark-prismjs": {
      "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby-remark-prismjs",
      "id": "Plugin gatsby-remark-prismjs",
      "name": "gatsby-remark-prismjs",
      "version": "1.2.21",
      "pluginOptions": {
        "plugins": [],
        "classPrefix": "gatsby-code-"
      },
      "nodeAPIs": [],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby-remark-prismjs",
      "packageJson": {
        "name": "gatsby-remark-prismjs",
        "description": "Adds syntax highlighting to code blocks at build time using PrismJS",
        "version": "1.2.21",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "prismjs",
          "remark"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          },
          {
            "name": "parse-numeric-range",
            "version": "0.0.2"
          },
          {
            "name": "prismjs",
            "version": "^1.12.2"
          },
          {
            "name": "unist-util-visit",
            "version": "^1.3.0"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "cross-env",
            "version": "^5.1.3"
          },
          {
            "name": "remark",
            "version": "^7.0.1"
          }
        ],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "cb6c879b91cd7e06e3e5b970e5b75963",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-remark-copy-linked-files": {
      "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby-remark-copy-linked-files",
      "id": "Plugin gatsby-remark-copy-linked-files",
      "name": "gatsby-remark-copy-linked-files",
      "version": "1.5.30",
      "pluginOptions": {
        "plugins": [],
        "ignoreFileExtensions": [
          "png",
          "jpg",
          "jpeg",
          "bmp",
          "tiff"
        ]
      },
      "nodeAPIs": [],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby-remark-copy-linked-files",
      "packageJson": {
        "name": "gatsby-remark-copy-linked-files",
        "description": "Find files which are linked to from markdown and copy them to the public directory",
        "version": "1.5.30",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "prismjs",
          "remark"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          },
          {
            "name": "cheerio",
            "version": "^1.0.0-rc.2"
          },
          {
            "name": "fs-extra",
            "version": "^4.0.1"
          },
          {
            "name": "is-relative-url",
            "version": "^2.0.0"
          },
          {
            "name": "lodash",
            "version": "^4.17.4"
          },
          {
            "name": "path-is-inside",
            "version": "^1.0.2"
          },
          {
            "name": "probe-image-size",
            "version": "^3.2.0"
          },
          {
            "name": "unist-util-visit",
            "version": "^1.1.1"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "3aab8551f248a0e298da591378819bdd",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-remark-smartypants": {
      "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby-remark-smartypants",
      "id": "Plugin gatsby-remark-smartypants",
      "name": "gatsby-remark-smartypants",
      "version": "1.4.12",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby-remark-smartypants",
      "packageJson": {
        "name": "gatsby-remark-smartypants",
        "description": "Use retext-smartypants to auto-enhance typography of markdown",
        "version": "1.4.12",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "smartypants"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          },
          {
            "name": "retext",
            "version": "^4.0.0"
          },
          {
            "name": "retext-smartypants",
            "version": "^2.0.0"
          },
          {
            "name": "unist-util-visit",
            "version": "^1.1.1"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "0fc30aa3462cc77e248daf52a3c9d6fb",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-transformer-sharp": {
      "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby-transformer-sharp",
      "id": "Plugin gatsby-transformer-sharp",
      "name": "gatsby-transformer-sharp",
      "version": "1.6.22",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onCreateNode",
        "setFieldsOnGraphQLNodeType",
        "onPreExtractQueries"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby-transformer-sharp",
      "packageJson": {
        "name": "gatsby-transformer-sharp",
        "description": "Gatsby transformer plugin for images using Sharp",
        "version": "1.6.22",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "image",
          "sharp"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          },
          {
            "name": "bluebird",
            "version": "^3.5.0"
          },
          {
            "name": "fs-extra",
            "version": "^4.0.2"
          },
          {
            "name": "probe-image-size",
            "version": "^3.2.0"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "8c0cc28a17bd4af571fa02107a54fe69",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-sharp": {
      "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby-plugin-sharp",
      "id": "Plugin gatsby-plugin-sharp",
      "name": "gatsby-plugin-sharp",
      "version": "1.6.41",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby-plugin-sharp",
      "packageJson": {
        "name": "gatsby-plugin-sharp",
        "description": "Wrapper of the Sharp image manipulation library for Gatsby plugins",
        "version": "1.6.41",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "image",
          "sharp"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "async",
            "version": "^2.1.2"
          },
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          },
          {
            "name": "bluebird",
            "version": "^3.5.0"
          },
          {
            "name": "imagemin",
            "version": "^5.2.2"
          },
          {
            "name": "imagemin-pngquant",
            "version": "^5.0.0"
          },
          {
            "name": "imagemin-webp",
            "version": "^4.0.0"
          },
          {
            "name": "lodash",
            "version": "^4.17.4"
          },
          {
            "name": "potrace",
            "version": "^2.1.1"
          },
          {
            "name": "probe-image-size",
            "version": "^3.2.0"
          },
          {
            "name": "progress",
            "version": "^1.1.8"
          },
          {
            "name": "sharp",
            "version": "^0.20.0"
          },
          {
            "name": "svgo",
            "version": "^0.7.2"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": "^1.0.0"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "6ddd82dff5cce8a6f96a29c616f6e0dc",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-google-analytics": {
      "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby-plugin-google-analytics",
      "id": "Plugin gatsby-plugin-google-analytics",
      "name": "gatsby-plugin-google-analytics",
      "version": "1.0.25",
      "pluginOptions": {
        "plugins": [],
        "trackingId": "UA-45453476-6"
      },
      "nodeAPIs": [],
      "browserAPIs": [
        "onRouteUpdate"
      ],
      "ssrAPIs": [
        "onRenderBody"
      ],
      "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby-plugin-google-analytics",
      "packageJson": {
        "name": "gatsby-plugin-google-analytics",
        "description": "Gatsby plugin to add google analytics onto a site",
        "version": "1.0.25",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "google analytics"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": "^1.0.0"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "eb7ccb36b5711164b8418fe5806d3223",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-feed": {
      "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby-plugin-feed",
      "id": "Plugin gatsby-plugin-feed",
      "name": "gatsby-plugin-feed",
      "version": "1.3.20",
      "pluginOptions": {
        "plugins": [],
        "query": "\n         {\n          site {\n            siteMetadata {\n              title: rssFeedTitle\n              description: rssFeedDescription\n              siteUrl\n              site_url: siteUrl\n            }\n          }\n        }",
        "feeds": [
          {
            "query": "\n              {\n                  allMarkdownRemark\n                  (limit: 10,\n                  filter: {id: {regex: \"/blog/\"}},\n                  sort: {fields: [fields___date],\n                  order: DESC}) {\n                    edges {\n                      node {\n                        fields {\n                          date\n                          slug\n                        }\n                        frontmatter {\n                          title\n                        }\n                        html\n                      }\n                    }\n                  }\n                }\n            ",
            "output": "/feed.xml"
          }
        ]
      },
      "nodeAPIs": [
        "onPostBuild"
      ],
      "browserAPIs": [],
      "ssrAPIs": [
        "onRenderBody"
      ],
      "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby-plugin-feed",
      "packageJson": {
        "name": "gatsby-plugin-feed",
        "description": "Creates an RSS feed for your Gatsby site.",
        "version": "1.3.20",
        "main": "index.js",
        "keywords": [
          "atom",
          "feed",
          "gatsby",
          "gatsby-plugin",
          "rss"
        ],
        "author": "Nicholas Young <nicholas@nicholaswyoung.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          },
          {
            "name": "lodash.merge",
            "version": "^4.6.0"
          },
          {
            "name": "pify",
            "version": "^3.0.0"
          },
          {
            "name": "rss",
            "version": "^1.2.2"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": "^1.0.0"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "5d8970399f9177bb721a8b039aadbc78",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-react-helmet": {
      "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby-plugin-react-helmet",
      "id": "Plugin gatsby-plugin-react-helmet",
      "name": "gatsby-plugin-react-helmet",
      "version": "1.0.8",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [],
      "browserAPIs": [],
      "ssrAPIs": [
        "onRenderBody"
      ],
      "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby-plugin-react-helmet",
      "packageJson": {
        "name": "gatsby-plugin-react-helmet",
        "description": "Stub description for gatsby-plugin-react-helmet",
        "version": "1.0.8",
        "main": "index.js",
        "keywords": [
          "gatsby"
        ],
        "author": "Kyle Mathews &lt;mathews.kyle@gmail.com&gt;",
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          },
          {
            "name": "react-helmet",
            "version": "^5.1.3"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "1f6916037b6d90366b5af9f7ea7914e5",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-catch-links": {
      "resolve": "/Users/yubolun/Desktop/react/node_modules/gatsby-plugin-catch-links",
      "id": "Plugin gatsby-plugin-catch-links",
      "name": "gatsby-plugin-catch-links",
      "version": "1.0.19",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [],
      "browserAPIs": [
        "onClientEntry"
      ],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/yubolun/Desktop/react/node_modules/gatsby-plugin-catch-links",
      "packageJson": {
        "name": "gatsby-plugin-catch-links",
        "description": "Intercepts local links from markdown and other non-react pages and does a client-side pushState to avoid the browser having to refresh the page.",
        "version": "1.0.19",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin"
        ],
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": "^1.0.0"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "280eb97798d9f17f7ac50f1e06df7582",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin default-site-plugin": {
      "resolve": "/Users/yubolun/Desktop/react",
      "id": "Plugin default-site-plugin",
      "name": "default-site-plugin",
      "version": "13636586653efb838c38c38c95678153",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "modifyWebpackConfig",
        "createPages",
        "onCreateNode",
        "onCreatePage"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/yubolun/Desktop/react",
      "packageJson": {
        "name": "react-website",
        "description": "React website",
        "version": "0.0.1",
        "main": "n/a",
        "keywords": [
          "gatsby"
        ],
        "license": "CC",
        "dependencies": [
          {
            "name": "array-from",
            "version": "^2.1.1"
          },
          {
            "name": "babel-eslint",
            "version": "^8.0.1"
          },
          {
            "name": "eslint",
            "version": "^4.8.0"
          },
          {
            "name": "eslint-config-fbjs",
            "version": "^2.0.0"
          },
          {
            "name": "eslint-config-react",
            "version": "^1.1.7"
          },
          {
            "name": "eslint-plugin-babel",
            "version": "^4.1.2"
          },
          {
            "name": "eslint-plugin-flowtype",
            "version": "^2.39.1"
          },
          {
            "name": "eslint-plugin-jsx-a11y",
            "version": "^6.0.2"
          },
          {
            "name": "eslint-plugin-prettier",
            "version": "^2.3.1"
          },
          {
            "name": "eslint-plugin-react",
            "version": "^7.4.0"
          },
          {
            "name": "eslint-plugin-relay",
            "version": "^0.0.19"
          },
          {
            "name": "flow-bin",
            "version": "^0.56.0"
          },
          {
            "name": "gatsby",
            "version": "^1.9.181"
          },
          {
            "name": "gatsby-link",
            "version": "^1.6.9"
          },
          {
            "name": "gatsby-plugin-catch-links",
            "version": "^1.0.9"
          },
          {
            "name": "gatsby-plugin-feed",
            "version": "^1.3.9"
          },
          {
            "name": "gatsby-plugin-glamor",
            "version": "^1.6.4"
          },
          {
            "name": "gatsby-plugin-google-analytics",
            "version": "^1.0.4"
          },
          {
            "name": "gatsby-plugin-manifest",
            "version": "^1.0.4"
          },
          {
            "name": "gatsby-plugin-netlify",
            "version": "^1.0.4"
          },
          {
            "name": "gatsby-plugin-nprogress",
            "version": "^1.0.7"
          },
          {
            "name": "gatsby-plugin-react-helmet",
            "version": "^1.0.3"
          },
          {
            "name": "gatsby-plugin-react-next",
            "version": "^1.0.3"
          },
          {
            "name": "gatsby-plugin-sharp",
            "version": "^1.6.2"
          },
          {
            "name": "gatsby-plugin-twitter",
            "version": "^1.0.10"
          },
          {
            "name": "gatsby-remark-autolink-headers",
            "version": "^1.4.4"
          },
          {
            "name": "gatsby-remark-code-repls",
            "version": "^1.0.2"
          },
          {
            "name": "gatsby-remark-copy-linked-files",
            "version": "^1.5.2"
          },
          {
            "name": "gatsby-remark-embed-snippet",
            "version": "^1.0.3"
          },
          {
            "name": "gatsby-remark-images",
            "version": "^1.5.11"
          },
          {
            "name": "gatsby-remark-prismjs",
            "version": "^1.2.1"
          },
          {
            "name": "gatsby-remark-responsive-iframe",
            "version": "^1.4.3"
          },
          {
            "name": "gatsby-remark-smartypants",
            "version": "^1.4.3"
          },
          {
            "name": "gatsby-source-filesystem",
            "version": "^1.4.4"
          },
          {
            "name": "gatsby-transformer-remark",
            "version": "^1.7.2"
          },
          {
            "name": "gatsby-transformer-sharp",
            "version": "^1.6.1"
          },
          {
            "name": "glamor",
            "version": "^2.20.40"
          },
          {
            "name": "hex2rgba",
            "version": "^0.0.1"
          },
          {
            "name": "prettier",
            "version": "^1.7.4"
          },
          {
            "name": "react-live",
            "version": "1.8.0-0"
          },
          {
            "name": "remarkable",
            "version": "^1.7.1"
          },
          {
            "name": "request-promise",
            "version": "^4.2.2"
          },
          {
            "name": "rimraf",
            "version": "^2.6.1"
          },
          {
            "name": "slugify",
            "version": "^1.2.1"
          },
          {
            "name": "string.prototype.includes",
            "version": "^1.0.0"
          },
          {
            "name": "string.prototype.repeat",
            "version": "^0.2.0"
          },
          {
            "name": "unist-util-visit",
            "version": "^1.1.3"
          }
        ],
        "devDependencies": [
          {
            "name": "eslint-config-prettier",
            "version": "^2.6.0"
          },
          {
            "name": "lz-string",
            "version": "^1.4.4"
          },
          {
            "name": "npm-run-all",
            "version": "^4.1.2"
          },
          {
            "name": "recursive-readdir",
            "version": "^2.2.1"
          },
          {
            "name": "unist-util-map",
            "version": "^1.0.3"
          }
        ],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "d84e87d3de1db11604167900013e76ae",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Site": {
      "siteMetadata": {
        "title": "React 中文文档: 用于构建用户界面的 JavaScript 库",
        "siteUrl": "https://doc.react-china.org",
        "rssFeedTitle": "React 中文文档",
        "rssFeedDescription": "用于构建用户界面的 JavaScript 库"
      },
      "mapping": {
        "MarkdownRemark.frontmatter.author": "AuthorYaml"
      },
      "pathPrefix": "",
      "polyfill": true,
      "buildTime": "2019-05-08T09:44:02.828Z",
      "id": "Site",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "87b01ebe800286a6401f816ab77bf77b",
        "type": "Site",
        "owner": "internal-data-bridge"
      }
    },
    "error-codes": {
      "id": "error-codes",
      "children": [],
      "parent": "ERRORS",
      "internal": {
        "type": "ErrorCodesJson",
        "contentDigest": "{\n  \"0\": \"React.addons.createFragment(...): Encountered an invalid child; DOM elements are not valid children of React components.\",\n  \"1\": \"update(): expected target of %s to be an array; got %s.\",\n  \"2\": \"update(): expected spec of %s to be an array; got %s. Did you forget to wrap your parameter in an array?\",\n  \"3\": \"update(): You provided a key path to update() that did not contain one of %s. Did you forget to include {%s: ...}?\",\n  \"4\": \"Cannot have more than one key in an object with %s\",\n  \"5\": \"update(): %s expects a spec of type 'object'; got %s\",\n  \"6\": \"update(): %s expects a target of type 'object'; got %s\",\n  \"7\": \"Expected %s target to be an array; got %s\",\n  \"8\": \"update(): expected spec of %s to be an array of arrays; got %s. Did you forget to wrap your parameters in an array?\",\n  \"9\": \"update(): expected spec of %s to be a function; got %s.\",\n  \"10\": \"findAllInRenderedTree(...): instance must be a composite component\",\n  \"11\": \"TestUtils.scryRenderedDOMComponentsWithClass expects a className as a second argument.\",\n  \"12\": \"ReactShallowRenderer render(): Invalid component element.%s\",\n  \"13\": \"ReactShallowRenderer render(): Shallow rendering works only with custom components, not primitives (%s). Instead of calling `.render(el)` and inspecting the rendered output, look at `el.props` directly instead.\",\n  \"14\": \"TestUtils.Simulate expects a component instance and not a ReactElement.TestUtils.Simulate will not work if you are using shallow rendering.\",\n  \"15\": \"reactComponentExpect(...): instance must be a composite component\",\n  \"16\": \"Do not override existing functions.\",\n  \"17\": \"All native instances should have a tag.\",\n  \"18\": \"Expected a component class, got %s.%s\",\n  \"19\": \"Expect a native root tag, instead got %s\",\n  \"20\": \"RawText \\\"%s\\\" must be wrapped in an explicit <Text> component.\",\n  \"21\": \"findNodeHandle(...): Argument is not a component (type: %s, keys: %s)\",\n  \"22\": \"findNodeHandle(...): Unable to find node handle for unmounted component.\",\n  \"23\": \"onlyChild must be passed a children with exactly one child.\",\n  \"24\": \"Mismatched list of contexts in callback queue\",\n  \"25\": \"Trying to release an instance into a pool of a different type.\",\n  \"26\": \"Unexpected node: %s\",\n  \"27\": \"Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.\",\n  \"28\": \"Transaction.closeAll(): Cannot close transaction when none are open.\",\n  \"29\": \"accumulate(...): Accumulated items must be not be null or undefined.\",\n  \"30\": \"accumulateInto(...): Accumulated items must not be null or undefined.\",\n  \"31\": \"Objects are not valid as a React child (found: %s).%s\",\n  \"32\": \"Unable to find element with ID %s.\",\n  \"33\": \"getNodeFromInstance: Invalid argument.\",\n  \"34\": \"React DOM tree root should always have a node reference.\",\n  \"35\": \"isAncestor: Invalid argument.\",\n  \"36\": \"getParentInstance: Invalid argument.\",\n  \"37\": \"_registerComponent(...): Target container is not a DOM element.\",\n  \"38\": \"parentComponent must be a valid React Component\",\n  \"39\": \"ReactDOM.render(): Invalid component element.%s\",\n  \"40\": \"unmountComponentAtNode(...): Target container is not a DOM element.\",\n  \"41\": \"mountComponentIntoNode(...): Target container is not valid.\",\n  \"42\": \"You're trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\\n%s\",\n  \"43\": \"You're trying to render a component to the document but you didn't use server rendering. We can't do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.\",\n  \"44\": \"findDOMNode was called on an unmounted component.\",\n  \"45\": \"Element appears to be neither ReactComponent nor DOMNode (keys: %s)\",\n  \"46\": \"renderToString(): You must pass a valid ReactElement.\",\n  \"47\": \"renderToStaticMarkup(): You must pass a valid ReactElement.\",\n  \"48\": \"injectDOMPropertyConfig(...): You're trying to inject DOM property '%s' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.\",\n  \"49\": \"DOMProperty: Properties that have side effects must use property: %s\",\n  \"50\": \"DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s\",\n  \"51\": \"dangerouslyRenderMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString for server rendering.\",\n  \"52\": \"dangerouslyRenderMarkup(...): Missing markup.\",\n  \"53\": \"Danger: Assigning to an already-occupied result index.\",\n  \"54\": \"Danger: Did not assign to every index of resultList.\",\n  \"55\": \"Danger: Expected markup to render %s nodes, but rendered %s.\",\n  \"56\": \"dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.\",\n  \"57\": \"dangerouslyReplaceNodeWithMarkup(...): Missing markup.\",\n  \"58\": \"dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().\",\n  \"59\": \"%s is a void element tag and must not have `children` or use `props.dangerouslySetInnerHTML`.%s\",\n  \"60\": \"Can only set one of `children` or `props.dangerouslySetInnerHTML`.\",\n  \"61\": \"`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.\",\n  \"62\": \"The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.%s\",\n  \"63\": \"Must be mounted to trap events\",\n  \"64\": \"trapBubbledEvent(...): Requires node to be rendered.\",\n  \"65\": \"Invalid tag: %s\",\n  \"66\": \"<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.\",\n  \"67\": \"Missing closing comment for text component %s\",\n  \"68\": \"Expected devtool events to fire for the child before its parent includes it in onSetChildren().\",\n  \"69\": \"Expected onSetDisplayName() to fire for the child before its parent includes it in onSetChildren().\",\n  \"70\": \"Expected onSetChildren() or onSetText() to fire for the child before its parent includes it in onSetChildren().\",\n  \"71\": \"Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().\",\n  \"72\": \"Expected onSetParent() and onSetChildren() to be consistent (%s has parents %s and %s).\",\n  \"73\": \"ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.\",\n  \"74\": \"ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.\",\n  \"75\": \"ReactClass: You're attempting to use a component class or function as a mixin. Instead, just use a regular object.\",\n  \"76\": \"ReactClass: You're attempting to use a component as a mixin. Instead, just use a regular object.\",\n  \"77\": \"ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.\",\n  \"78\": \"ReactClass: You are attempting to define a reserved property, `%s`, that shouldn't be on the \\\"statics\\\" key. Define it as an instance property instead; it will still be accessible on the constructor.\",\n  \"79\": \"ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.\",\n  \"80\": \"mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.\",\n  \"81\": \"mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.\",\n  \"82\": \"%s.getInitialState(): must return an object or null\",\n  \"83\": \"createClass(...): Class specification must implement a `render` method.\",\n  \"84\": \"%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.\",\n  \"85\": \"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\",\n  \"86\": \"SimpleEventPlugin: Unhandled event type, `%s`.\",\n  \"87\": \"Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don't want to use valueLink and vice versa.\",\n  \"88\": \"Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don't want to use valueLink.\",\n  \"89\": \"Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don't want to use checkedLink\",\n  \"90\": \"ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.\",\n  \"91\": \"`dangerouslySetInnerHTML` does not make sense on <textarea>.\",\n  \"92\": \"If you supply `defaultValue` on a <textarea>, do not pass children.\",\n  \"93\": \"<textarea> can only have at most one child.\",\n  \"94\": \"Expected %s listener to be a function, instead got type %s\",\n  \"95\": \"processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.\",\n  \"96\": \"EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.\",\n  \"97\": \"EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.\",\n  \"98\": \"EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.\",\n  \"99\": \"EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.\",\n  \"100\": \"EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.\",\n  \"101\": \"EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.\",\n  \"102\": \"EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.\",\n  \"103\": \"executeDirectDispatch(...): Invalid `event`.\",\n  \"104\": \"ReactCompositeComponent: injectEnvironment() can only be called once.\",\n  \"105\": \"%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.\",\n  \"106\": \"%s.state: must be set to an object or null\",\n  \"107\": \"%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().\",\n  \"108\": \"%s.getChildContext(): key \\\"%s\\\" is not defined in childContextTypes.\",\n  \"109\": \"%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.\",\n  \"110\": \"Stateless function components cannot have refs.\",\n  \"111\": \"There is no registered component for the tag %s\",\n  \"112\": \"getNextDescendantID(%s, %s): Received an invalid React DOM ID.\",\n  \"113\": \"getNextDescendantID(...): React has made an invalid assumption about the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.\",\n  \"114\": \"getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s\",\n  \"115\": \"traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.\",\n  \"116\": \"traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do not have a parent path.\",\n  \"117\": \"traverseParentPath(%s, %s, ...): Detected an infinite loop while traversing the React DOM ID tree. This may be due to malformed IDs: %s\",\n  \"118\": \"updateTextContent called on non-empty component.\",\n  \"119\": \"addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component's `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).\",\n  \"120\": \"removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component's `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).\",\n  \"121\": \"performUpdateIfNecessary: Unexpected batch number (current %s, pending %s)\",\n  \"122\": \"%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.\",\n  \"123\": \"ReactUpdates: must inject a reconcile transaction class and batching strategy\",\n  \"124\": \"Expected flush transaction's stored dirty-components length (%s) to match dirty-components array length (%s).\",\n  \"125\": \"ReactUpdates.asap: Can't enqueue an asap callback in a context where updates are not being batched.\",\n  \"126\": \"ReactUpdates: must provide a reconcile transaction class\",\n  \"127\": \"ReactUpdates: must provide a batching strategy\",\n  \"128\": \"ReactUpdates: must provide a batchedUpdates() function\",\n  \"129\": \"ReactUpdates: must provide an isBatchingUpdates boolean attribute\",\n  \"130\": \"Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\",\n  \"131\": \"Encountered invalid React node of type %s\",\n  \"132\": \"Ended a touch event which was not counted in trackedTouchCount.\",\n  \"133\": \"Touch object is missing identifier\",\n  \"134\": \"Touch data should have been recorded on start\",\n  \"135\": \"Cannot find single active touch\",\n  \"136\": \"Attempted to update component `%s` that has already been unmounted (or failed to mount).\",\n  \"137\": \"%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s\",\n  \"138\": \"Touch object is missing identifier.\",\n  \"139\": \"ReactTestRenderer: .update() can't be called after unmount.\",\n  \"140\": \"Expected hook events to fire for the child before its parent includes it in onSetChildren().\",\n  \"141\": \"Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().\",\n  \"142\": \"Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).\",\n  \"143\": \"React.Children.only expected to receive a single React element child.\",\n  \"144\": \"Item must have been set\",\n  \"145\": \"hostContainerInfo should be populated before getPublicInstance is called.\",\n  \"146\": \"React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.\",\n  \"147\": \"Missing owner for string ref %s. This error is likely caused by a bug in React. Please file an issue.\",\n  \"148\": \"Expected ref to be a function or a string.\",\n  \"149\": \"Element ref was specified as a string (%s) but no owner was set. You may have multiple copies of React loaded. (details: https://fb.me/react-refs-must-have-owner).\",\n  \"150\": \"An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.\",\n  \"151\": \"An iterable object provided no iterator.\",\n  \"152\": \"%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.\",\n  \"153\": \"Resuming work not yet implemented.\",\n  \"154\": \"We should always have pending or current props. This error is likely caused by a bug in React. Please file an issue.\",\n  \"155\": \"An indeterminate component should never have mounted. This error is likely caused by a bug in React. Please file an issue.\",\n  \"156\": \"Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.\",\n  \"157\": \"Invalid type of work. This error is likely caused by a bug in React. Please file an issue.\",\n  \"158\": \"There must be pending props for an initial mount. This error is likely caused by a bug in React. Please file an issue.\",\n  \"159\": \"There should always be pending or memoized props. This error is likely caused by a bug in React. Please file an issue.\",\n  \"160\": \"Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.\",\n  \"161\": \"Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.\",\n  \"162\": \"This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.\",\n  \"163\": \"This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.\",\n  \"164\": \"A coroutine cannot have host component children.\",\n  \"165\": \"Should be resolved by now. This error is likely caused by a bug in React. Please file an issue.\",\n  \"166\": \"We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.\",\n  \"167\": \"An indeterminate component should have become determinate before completing. This error is likely caused by a bug in React. Please file an issue.\",\n  \"168\": \"Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.\",\n  \"169\": \"Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.\",\n  \"170\": \"Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.\",\n  \"171\": \"Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.\",\n  \"172\": \"The custom dialog was already injected.\",\n  \"173\": \"Injected showDialog() must be a function.\",\n  \"174\": \"Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.\",\n  \"175\": \"Expected prepareToHydrateHostInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.\",\n  \"176\": \"Expected prepareToHydrateHostTextInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.\",\n  \"177\": \"Cannot commit the same tree as before. This is probably a bug related to the return field. This error is likely caused by a bug in React. Please file an issue.\",\n  \"178\": \"Should have next effect. This error is likely caused by a bug in React. Please file an issue.\",\n  \"179\": \"Should have a pending commit. This error is likely caused by a bug in React. Please file an issue.\",\n  \"180\": \"Commit phase errors should be scheduled to recover with task priority. This error is likely caused by a bug in React. Please file an issue.\",\n  \"181\": \"Switch statement should be exhuastive. This error is likely caused by a bug in React. Please file an issue.\",\n  \"182\": \"performWork was called recursively. This error is likely caused by a bug in React. Please file an issue.\",\n  \"183\": \"Should have found an error boundary. This error is likely caused by a bug in React. Please file an issue.\",\n  \"184\": \"No error for given unit of work. This error is likely caused by a bug in React. Please file an issue.\",\n  \"185\": \"Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.\",\n  \"186\": \"Task updates can only be scheduled as a nested update or inside batchedUpdates.\",\n  \"187\": \"flushSync was called from inside a lifecycle method. It cannot be called when React is already rendering.\",\n  \"188\": \"Unable to find node on an unmounted component.\",\n  \"189\": \"Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.\",\n  \"190\": \"Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.\",\n  \"191\": \"Invalid argument passed as callback. Expected a function. Instead received: %s\",\n  \"192\": \"React depends on requestAnimationFrame. Make sure that you load a polyfill in older browsers.\",\n  \"193\": \"The server renderer does not implement support for array children yet.\",\n  \"194\": \"Fiber needs to be injected to handle a fiber target for controlled events. This error is likely caused by a bug in React. Please file an issue.\",\n  \"195\": \"The internal instance must be a React host component. This error is likely caused by a bug in React. Please file an issue.\",\n  \"196\": \"Missing injection for fiber getContextForSubtree\",\n  \"197\": \"Injected invokeGuardedCallback() must be a function.\",\n  \"198\": \"clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.\",\n  \"199\": \"Fiber owners should not show up in Stack stack traces.\",\n  \"200\": \"Target container is not a DOM element.\",\n  \"201\": \"ReactDOM.render(): Invalid component element. Instead of passing a string like 'div', pass React.createElement('div') or <div />.\",\n  \"202\": \"ReactDOM.render(): Invalid component element. Instead of passing a class like Foo, pass React.createElement(Foo) or <Foo />.\",\n  \"203\": \"ReactDOM.render(): Invalid component element. This may be caused by unintentionally loading two independent copies of React.\",\n  \"204\": \"ReactDOM.render(): Invalid component element.\",\n  \"205\": \"renderToNodeStream(): Invalid component element.\",\n  \"206\": \"renderToStaticNodeStream(): Invalid component element.\",\n  \"207\": \"ReactDOMServer.renderToNodeStream(): The streaming API is not available in the browser. Use ReactDOMServer.renderToString() instead.\",\n  \"208\": \"ReactDOMServer.renderToStaticNodeStream(): The streaming API is not available in the browser. Use ReactDOMServer.renderToStaticMarkup() instead.\",\n  \"209\": \"renderToString(): Invalid component element.\",\n  \"210\": \"renderToStaticMarkup(): Invalid component element.\",\n  \"211\": \"Missing injection for fiber findDOMNode\",\n  \"212\": \"Missing injection for stack findDOMNode\",\n  \"213\": \"Element appears to be neither ReactComponent nor DOMNode. Keys: %s\",\n  \"214\": \"toTree() does not yet know how to handle nodes with tag=%s\",\n  \"215\": \"something went wrong\",\n  \"216\": \"Text children should already be flattened.\",\n  \"217\": \"ReactART does not support the type \\\"%s\\\"\",\n  \"218\": \"ReactART: Can not insert node before itself\",\n  \"219\": \"getInspectorDataForViewTag() is not available in production\",\n  \"220\": \"Container does not support insertBefore operation\",\n  \"221\": \"Tried to register two views with the same name %s\",\n  \"222\": \"View config not found for name %s\",\n  \"223\": \"Trying to release an event instance  into a pool of a different type.\",\n  \"224\": \"Can't read from currently-mounting component. This error is likely caused by a bug in React. Please file an issue.\",\n  \"225\": \"Unexpected object passed to ReactTestInstance constructor (tag: %s). This is probably a bug in React.\",\n  \"226\": \"Unsupported component type %s in test renderer. This is probably a bug in React.\",\n  \"227\": \"ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM.\",\n  \"228\": \"TestUtils.Simulate expected a DOM node as the first argument but received a React element. Pass the DOM node you wish to simulate the event on instead. Note that TestUtils.Simulate will not work if you are using shallow rendering.\",\n  \"229\": \"TestUtils.Simulate expected a DOM node as the first argument but received a component instance. Pass the DOM node you wish to simulate the event on instead.\",\n  \"230\": \"_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.unstable_createPortal).\",\n  \"231\": \"Expected `%s` listener to be a function, instead got a value of `%s` type.\",\n  \"232\": \"_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).\",\n  \"233\": \"Unsupported top level event type \\\"%s\\\" dispatched\",\n  \"234\": \"Event cannot be both direct and bubbling: %s\",\n  \"235\": \"Persistent reconciler is disabled.\",\n  \"236\": \"Noop reconciler is disabled.\",\n  \"237\": \"Mutating reconciler is disabled.\",\n  \"238\": \"Task updates can only be scheduled as a nested update or inside batchedUpdates. This error is likely caused by a bug in React. Please file an issue.\",\n  \"239\": \"Measure not implemented yet\",\n  \"240\": \"Text components are not supported for now.\",\n  \"241\": \"Text components are not yet supported.\",\n  \"242\": \"%s: %s type `%s` is invalid; it must be a function, usually from the `prop-types` package, but received `%s`.\",\n  \"243\": \"renderRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.\",\n  \"244\": \"Should have a previous and last root. This error is likely caused by a bug in React. Please file an issue.\",\n  \"245\": \"performWorkOnRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.\",\n  \"246\": \"Should be working on a root. This error is likely caused by a bug in React. Please file an issue.\",\n  \"247\": \"A call cannot have host component children.\",\n  \"248\": \"Not implemented.\",\n  \"249\": \"ReactShallowRenderer render(): Shallow rendering works only with custom components, but the provided element type was `%s`.\",\n  \"250\": \"batch.render: Cannot render a batch that already committed.\",\n  \"251\": \"batch.commit: Cannot commit a batch multiple times.\",\n  \"252\": \"The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.\",\n  \"253\": \"work.commit(): Cannot commit while already rendering. This likely means you attempted to commit from inside a lifecycle method.\",\n  \"254\": \"Element ref was specified as a string (%s) but no owner was set. This could happen for one of the following reasons:\\n1. You may be adding a ref to a functional component\\n2. You may be adding a ref to a component that was not created inside a component's render method\\n3. You have multiple copies of React loaded\\nSee https://fb.me/react-refs-must-have-owner for more information.\",\n  \"255\": \"Expected ReactFbErrorUtils.invokeGuardedCallback to be a function.\",\n  \"256\": \"Expected ReactFiberErrorDialog.showErrorDialog to existbe a function.\",\n  \"257\": \"Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render.\",\n  \"258\": \"Unknown element-like object type: %s. This is likely a bug in React. Please file an issue.\",\n  \"259\": \"The experimental Call and Return types are not currently supported by the server renderer.\",\n  \"260\": \"Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.\",\n  \"261\": \"Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.\",\n  \"262\": \"Expired work should have completed. This error is likely caused by a bug in React. Please file an issue.\",\n  \"263\": \"dispatch: Cannot dispatch during the render phase.\",\n  \"264\": \"An error logging effect should not have been scheduled if no errors were captured. This error is likely caused by a bug in React. Please file an issue.\",\n  \"265\": \"This unit of work tag cannot capture errors.  This error is likely caused by a bug in React. Please file an issue.\",\n  \"266\": \"A subscription must return an unsubscribe function.\",\n  \"267\": \"React.cloneElement(...): The argument must be a React element, but you passed %s.\",\n  \"268\": \"Argument appears to not be a ReactComponent. Keys: %s\",\n  \"269\": \"Profiler must specify an \\\"id\\\" string and \\\"onRender\\\" function as props\",\n  \"270\": \"The current renderer does not support persistence. This error is likely caused by a bug in React. Please file an issue.\",\n  \"271\": \"Failed to replay rendering after an error. This is likely caused by a bug in React. Please file an issue with a reproducing case to help us find it.\",\n  \"272\": \"The current renderer does not support hyration. This error is likely caused by a bug in React. Please file an issue.\",\n  \"273\": \"Nesting of <View> within <Text> is not currently supported.\",\n  \"274\": \"Text strings must be rendered within a <Text> component.\",\n  \"275\": \"The current renderer does not support mutation. This error is likely caused by a bug in React. Please file an issue.\",\n  \"276\": \"React depends on requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\",\n  \"277\": \"Context.unstable_read(): Context can only be read while React is rendering, e.g. inside the render method or getDerivedStateFromProps.\",\n  \"278\": \"unstable_createRoot(...): Target container is not a DOM element.\",\n  \"279\": \"Trying to release an event instance into a pool of a different type.\",\n  \"280\": \"setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.\",\n  \"281\": \"Finished root should have a work-in-progress. This error is likely caused by a bug in React. Please file an issue.\",\n  \"282\": \"If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue.\",\n  \"283\": \"Element type is invalid. Received a promise that resolves to: %s. Promise elements must resolve to a class or function.\",\n  \"284\": \"Expected ref to be a function, a string, an object returned by React.createRef(), or null.\",\n  \"285\": \"The root failed to unmount after an error. This is likely a bug in React. Please file an issue.\",\n  \"286\": \"%s(...): the first argument must be a React class instance. Instead received: %s.\",\n  \"287\": \"It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `schedule/tracking` module with `schedule/tracking-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at http://fb.me/react-profiling\",\n  \"288\": \"It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `schedule/tracing` module with `schedule/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at http://fb.me/react-profiling\",\n  \"289\": \"Function components cannot have refs.\",\n  \"290\": \"Element ref was specified as a string (%s) but no owner was set. This could happen for one of the following reasons:\\n1. You may be adding a ref to a function component\\n2. You may be adding a ref to a component that was not created inside a component's render method\\n3. You have multiple copies of React loaded\\nSee https://fb.me/react-refs-must-have-owner for more information.\",\n  \"291\": \"Log of yielded values is not empty. Call expect(Scheduler).toHaveYielded(...) first.\",\n  \"292\": \"The matcher `toHaveYielded` expects an instance of React Test Renderer.\\n\\nTry: expect(Scheduler).toHaveYielded(expectedYields)\",\n  \"293\": \"Context can only be read while React is rendering, e.g. inside the render method or getDerivedStateFromProps.\",\n  \"294\": \"ReactDOMServer does not yet support Suspense.\",\n  \"295\": \"ReactDOMServer does not yet support lazy-loaded components.\",\n  \"296\": \"Log of yielded values is not empty. Call expect(ReactTestRenderer).unstable_toHaveYielded(...) first.\",\n  \"297\": \"The matcher `unstable_toHaveYielded` expects an instance of React Test Renderer.\\n\\nTry: expect(ReactTestRenderer).unstable_toHaveYielded(expectedYields)\",\n  \"298\": \"Hooks can only be called inside the body of a function component.\",\n  \"299\": \"%s(...): Target container is not a DOM element.\",\n  \"300\": \"Rendered fewer hooks than expected. This may be caused by an accidental early return statement.\",\n  \"301\": \"Too many re-renders. React limits the number of renders to prevent an infinite loop.\",\n  \"302\": \"It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at http://fb.me/react-profiling\",\n  \"303\": \"suspense fallback not found, something is broken\",\n  \"304\": \"Maximum number of concurrent React renderers exceeded. This can happen if you are not properly destroying the Readable provided by React. Ensure that you call .destroy() on it if you no longer want to read from it, and did not read to the end. If you use .pipe() this should be automatic.\",\n  \"305\": \"The current renderer does not support hydration. This error is likely caused by a bug in React. Please file an issue.\",\n  \"306\": \"Element type is invalid. Received a promise that resolves to: %s. Lazy element type must resolve to a class or function.%s\",\n  \"307\": \"Hooks can only be called inside the body of a function component. (https://fb.me/react-invalid-hook-call)\",\n  \"308\": \"Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().\",\n  \"309\": \"Function components cannot have refs. Did you mean to use React.forwardRef()?\",\n  \"310\": \"Rendered more hooks than during the previous render.\",\n  \"311\": \"Should have a queue. This is likely a bug in React. Please file an issue.\",\n  \"312\": \"Rendered more hooks than during the previous render\",\n  \"313\": \"Unknown priority level. This error is likely caused by a bug in React. Please file an issue.\",\n  \"314\": \"Pinged unknown suspense boundary type. This is probably a bug in React.\",\n  \"315\": \"Suspense boundaries are never on the root. This is probably a bug in React.\",\n  \"316\": \"Expected skipPastDehydratedSuspenseInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.\",\n  \"317\": \"Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.\",\n  \"318\": \"A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.\",\n  \"319\": \"A dehydrated suspense boundary must commit before trying to render. This is probably a bug in React.\",\n  \"320\": \"Expected ReactFiberErrorDialog.showErrorDialog to be a function.\",\n  \"321\": \"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)\\n2. You might be breaking the Rules of Hooks\\n3. You might have more than one copy of React in the same app\\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.\",\n  \"322\": \"forwardRef requires a render function but was given %s.\"\n}\n",
        "owner": "gatsby-source-react-error-codes"
      }
    },
    "acdlite": {
      "id": "acdlite",
      "children": [],
      "parent": "AUTHORS",
      "internal": {
        "type": "AuthorYaml",
        "contentDigest": "{\"name\":\"Andrew Clark\",\"url\":\"https://twitter.com/acdlite\"}",
        "owner": "gatsby-transformer-authors-yaml"
      },
      "frontmatter": {
        "name": "Andrew Clark",
        "url": "https://twitter.com/acdlite"
      }
    },
    "benigeri": {
      "id": "benigeri",
      "children": [],
      "parent": "AUTHORS",
      "internal": {
        "type": "AuthorYaml",
        "contentDigest": "{\"name\":\"Paul Benigeri\",\"url\":\"https://github.com/benigeri\"}",
        "owner": "gatsby-transformer-authors-yaml"
      },
      "frontmatter": {
        "name": "Paul Benigeri",
        "url": "https://github.com/benigeri"
      }
    },
    "bvaughn": {
      "id": "bvaughn",
      "children": [],
      "parent": "AUTHORS",
      "internal": {
        "type": "AuthorYaml",
        "contentDigest": "{\"name\":\"Brian Vaughn\",\"url\":\"https://github.com/bvaughn\"}",
        "owner": "gatsby-transformer-authors-yaml"
      },
      "frontmatter": {
        "name": "Brian Vaughn",
        "url": "https://github.com/bvaughn"
      }
    },
    "chenglou": {
      "id": "chenglou",
      "children": [],
      "parent": "AUTHORS",
      "internal": {
        "type": "AuthorYaml",
        "contentDigest": "{\"name\":\"Cheng Lou\",\"url\":\"https://twitter.com/_chenglou\"}",
        "owner": "gatsby-transformer-authors-yaml"
      },
      "frontmatter": {
        "name": "Cheng Lou",
        "url": "https://twitter.com/_chenglou"
      }
    },
    "clemmy": {
      "id": "clemmy",
      "children": [],
      "parent": "AUTHORS",
      "internal": {
        "type": "AuthorYaml",
        "contentDigest": "{\"name\":\"Clement Hoang\",\"url\":\"https://twitter.com/c8hoang\"}",
        "owner": "gatsby-transformer-authors-yaml"
      },
      "frontmatter": {
        "name": "Clement Hoang",
        "url": "https://twitter.com/c8hoang"
      }
    },
    "Daniel15": {
      "id": "Daniel15",
      "children": [],
      "parent": "AUTHORS",
      "internal": {
        "type": "AuthorYaml",
        "contentDigest": "{\"name\":\"Daniel Lo Nigro\",\"url\":\"https://d.sb/\"}",
        "owner": "gatsby-transformer-authors-yaml"
      },
      "frontmatter": {
        "name": "Daniel Lo Nigro",
        "url": "https://d.sb/"
      }
    },
    "fisherwebdev": {
      "id": "fisherwebdev",
      "children": [],
      "parent": "AUTHORS",
      "internal": {
        "type": "AuthorYaml",
        "contentDigest": "{\"name\":\"Bill Fisher\",\"url\":\"https://twitter.com/fisherwebdev\"}",
        "owner": "gatsby-transformer-authors-yaml"
      },
      "frontmatter": {
        "name": "Bill Fisher",
        "url": "https://twitter.com/fisherwebdev"
      }
    },
    "flarnie": {
      "id": "flarnie",
      "children": [],
      "parent": "AUTHORS",
      "internal": {
        "type": "AuthorYaml",
        "contentDigest": "{\"name\":\"Flarnie Marchan\",\"url\":\"https://twitter.com/ProbablyFlarnie\"}",
        "owner": "gatsby-transformer-authors-yaml"
      },
      "frontmatter": {
        "name": "Flarnie Marchan",
        "url": "https://twitter.com/ProbablyFlarnie"
      }
    },
    "gaearon": {
      "id": "gaearon",
      "children": [],
      "parent": "AUTHORS",
      "internal": {
        "type": "AuthorYaml",
        "contentDigest": "{\"name\":\"Dan Abramov\",\"url\":\"https://twitter.com/dan_abramov\"}",
        "owner": "gatsby-transformer-authors-yaml"
      },
      "frontmatter": {
        "name": "Dan Abramov",
        "url": "https://twitter.com/dan_abramov"
      }
    },
    "jaredly": {
      "id": "jaredly",
      "children": [],
      "parent": "AUTHORS",
      "internal": {
        "type": "AuthorYaml",
        "contentDigest": "{\"name\":\"Jared Forsyth\",\"url\":\"https://twitter.com/jaredforsyth\"}",
        "owner": "gatsby-transformer-authors-yaml"
      },
      "frontmatter": {
        "name": "Jared Forsyth",
        "url": "https://twitter.com/jaredforsyth"
      }
    },
    "jgebhardt": {
      "id": "jgebhardt",
      "children": [],
      "parent": "AUTHORS",
      "internal": {
        "type": "AuthorYaml",
        "contentDigest": "{\"name\":\"Jonas Gebhardt\",\"url\":\"https://twitter.com/jonasgebhardt\"}",
        "owner": "gatsby-transformer-authors-yaml"
      },
      "frontmatter": {
        "name": "Jonas Gebhardt",
        "url": "https://twitter.com/jonasgebhardt"
      }
    },
    "jimfb": {
      "id": "jimfb",
      "children": [],
      "parent": "AUTHORS",
      "internal": {
        "type": "AuthorYaml",
        "contentDigest": "{\"name\":\"Jim Sproch\",\"url\":\"http://www.jimsproch.com\"}",
        "owner": "gatsby-transformer-authors-yaml"
      },
      "frontmatter": {
        "name": "Jim Sproch",
        "url": "http://www.jimsproch.com"
      }
    },
    "jingc": {
      "id": "jingc",
      "children": [],
      "parent": "AUTHORS",
      "internal": {
        "type": "AuthorYaml",
        "contentDigest": "{\"name\":\"Jing Chen\",\"url\":\"https://twitter.com/jingc\"}",
        "owner": "gatsby-transformer-authors-yaml"
      },
      "frontmatter": {
        "name": "Jing Chen",
        "url": "https://twitter.com/jingc"
      }
    },
    "josephsavona": {
      "id": "josephsavona",
      "children": [],
      "parent": "AUTHORS",
      "internal": {
        "type": "AuthorYaml",
        "contentDigest": "{\"name\":\"Joseph Savona\",\"url\":\"https://twitter.com/en_JS\"}",
        "owner": "gatsby-transformer-authors-yaml"
      },
      "frontmatter": {
        "name": "Joseph Savona",
        "url": "https://twitter.com/en_JS"
      }
    },
    "keyanzhang": {
      "id": "keyanzhang",
      "children": [],
      "parent": "AUTHORS",
      "internal": {
        "type": "AuthorYaml",
        "contentDigest": "{\"name\":\"Keyan Zhang\",\"url\":\"https://twitter.com/keyanzhang\"}",
        "owner": "gatsby-transformer-authors-yaml"
      },
      "frontmatter": {
        "name": "Keyan Zhang",
        "url": "https://twitter.com/keyanzhang"
      }
    },
    "kmeht": {
      "id": "kmeht",
      "children": [],
      "parent": "AUTHORS",
      "internal": {
        "type": "AuthorYaml",
        "contentDigest": "{\"name\":\"Kunal Mehta\",\"url\":\"https://github.com/kmeht\"}",
        "owner": "gatsby-transformer-authors-yaml"
      },
      "frontmatter": {
        "name": "Kunal Mehta",
        "url": "https://github.com/kmeht"
      }
    },
    "LoukaN": {
      "id": "LoukaN",
      "children": [],
      "parent": "AUTHORS",
      "internal": {
        "type": "AuthorYaml",
        "contentDigest": "{\"name\":\"Lou Husson\",\"url\":\"https://twitter.com/loukan42\"}",
        "owner": "gatsby-transformer-authors-yaml"
      },
      "frontmatter": {
        "name": "Lou Husson",
        "url": "https://twitter.com/loukan42"
      }
    },
    "matthewjohnston4": {
      "id": "matthewjohnston4",
      "children": [],
      "parent": "AUTHORS",
      "internal": {
        "type": "AuthorYaml",
        "contentDigest": "{\"name\":\"Matthew Johnston\",\"url\":\"https://github.com/matthewathome\"}",
        "owner": "gatsby-transformer-authors-yaml"
      },
      "frontmatter": {
        "name": "Matthew Johnston",
        "url": "https://github.com/matthewathome"
      }
    },
    "nhunzaker": {
      "id": "nhunzaker",
      "children": [],
      "parent": "AUTHORS",
      "internal": {
        "type": "AuthorYaml",
        "contentDigest": "{\"name\":\"Nathan Hunzaker\",\"url\":\"https://github.com/nhunzaker\"}",
        "owner": "gatsby-transformer-authors-yaml"
      },
      "frontmatter": {
        "name": "Nathan Hunzaker",
        "url": "https://github.com/nhunzaker"
      }
    },
    "petehunt": {
      "id": "petehunt",
      "children": [],
      "parent": "AUTHORS",
      "internal": {
        "type": "AuthorYaml",
        "contentDigest": "{\"name\":\"Pete Hunt\",\"url\":\"https://twitter.com/floydophone\"}",
        "owner": "gatsby-transformer-authors-yaml"
      },
      "frontmatter": {
        "name": "Pete Hunt",
        "url": "https://twitter.com/floydophone"
      }
    },
    "schrockn": {
      "id": "schrockn",
      "children": [],
      "parent": "AUTHORS",
      "internal": {
        "type": "AuthorYaml",
        "contentDigest": "{\"name\":\"Nick Schrock\",\"url\":\"https://twitter.com/schrockn\"}",
        "owner": "gatsby-transformer-authors-yaml"
      },
      "frontmatter": {
        "name": "Nick Schrock",
        "url": "https://twitter.com/schrockn"
      }
    },
    "sebmarkbage": {
      "id": "sebmarkbage",
      "children": [],
      "parent": "AUTHORS",
      "internal": {
        "type": "AuthorYaml",
        "contentDigest": "{\"name\":\"Sebastian Markbåge\",\"url\":\"https://twitter.com/sebmarkbage\"}",
        "owner": "gatsby-transformer-authors-yaml"
      },
      "frontmatter": {
        "name": "Sebastian Markbåge",
        "url": "https://twitter.com/sebmarkbage"
      }
    },
    "sophiebits": {
      "id": "sophiebits",
      "children": [],
      "parent": "AUTHORS",
      "internal": {
        "type": "AuthorYaml",
        "contentDigest": "{\"name\":\"Sophie Alpert\",\"url\":\"https://sophiebits.com/\"}",
        "owner": "gatsby-transformer-authors-yaml"
      },
      "frontmatter": {
        "name": "Sophie Alpert",
        "url": "https://sophiebits.com/"
      }
    },
    "steveluscher": {
      "id": "steveluscher",
      "children": [],
      "parent": "AUTHORS",
      "internal": {
        "type": "AuthorYaml",
        "contentDigest": "{\"name\":\"Steven Luscher\",\"url\":\"https://twitter.com/steveluscher\"}",
        "owner": "gatsby-transformer-authors-yaml"
      },
      "frontmatter": {
        "name": "Steven Luscher",
        "url": "https://twitter.com/steveluscher"
      }
    },
    "timer": {
      "id": "timer",
      "children": [],
      "parent": "AUTHORS",
      "internal": {
        "type": "AuthorYaml",
        "contentDigest": "{\"name\":\"Joe Haddad\",\"url\":\"https://twitter.com/timer150\"}",
        "owner": "gatsby-transformer-authors-yaml"
      },
      "frontmatter": {
        "name": "Joe Haddad",
        "url": "https://twitter.com/timer150"
      }
    },
    "vjeux": {
      "id": "vjeux",
      "children": [],
      "parent": "AUTHORS",
      "internal": {
        "type": "AuthorYaml",
        "contentDigest": "{\"name\":\"Vjeux\",\"url\":\"https://twitter.com/vjeux\"}",
        "owner": "gatsby-transformer-authors-yaml"
      },
      "frontmatter": {
        "name": "Vjeux",
        "url": "https://twitter.com/vjeux"
      }
    },
    "wincent": {
      "id": "wincent",
      "children": [],
      "parent": "AUTHORS",
      "internal": {
        "type": "AuthorYaml",
        "contentDigest": "{\"name\":\"Greg Hurrell\",\"url\":\"https://twitter.com/wincent\"}",
        "owner": "gatsby-transformer-authors-yaml"
      },
      "frontmatter": {
        "name": "Greg Hurrell",
        "url": "https://twitter.com/wincent"
      }
    },
    "zpao": {
      "id": "zpao",
      "children": [],
      "parent": "AUTHORS",
      "internal": {
        "type": "AuthorYaml",
        "contentDigest": "{\"name\":\"Paul O’Shannessy\",\"url\":\"https://twitter.com/zpao\"}",
        "owner": "gatsby-transformer-authors-yaml"
      },
      "frontmatter": {
        "name": "Paul O’Shannessy",
        "url": "https://twitter.com/zpao"
      }
    },
    "tomocchino": {
      "id": "tomocchino",
      "children": [],
      "parent": "AUTHORS",
      "internal": {
        "type": "AuthorYaml",
        "contentDigest": "{\"name\":\"Tom Occhino\",\"url\":\"https://twitter.com/tomocchino\"}",
        "owner": "gatsby-transformer-authors-yaml"
      },
      "frontmatter": {
        "name": "Tom Occhino",
        "url": "https://twitter.com/tomocchino"
      }
    },
    "a-component-using-external-plugins": {
      "id": "a-component-using-external-plugins",
      "children": [],
      "parent": "EXAMPLES",
      "internal": {
        "type": "ExampleCode",
        "contentDigest": "\"class MarkdownEditor extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.handleChange = this.handleChange.bind(this);\\n    this.state = { value: 'Type some *markdown* here!' };\\n  }\\n\\n  handleChange(e) {\\n    this.setState({ value: e.target.value });\\n  }\\n\\n  getRawMarkup() {\\n    const md = new Remarkable();\\n    return { __html: md.render(this.state.value) };\\n  }\\n\\n  render() {\\n    return (\\n      <div className=\\\"MarkdownEditor\\\">\\n        <h3>Input</h3>\\n        <textarea\\n          onChange={this.handleChange}\\n          defaultValue={this.state.value}\\n        />\\n        <h3>Output</h3>\\n        <div\\n          className=\\\"content\\\"\\n          dangerouslySetInnerHTML={this.getRawMarkup()}\\n        />\\n      </div>\\n    );\\n  }\\n}\\n\\nReactDOM.render(<MarkdownEditor />, mountNode);\"",
        "owner": "gatsby-transformer-home-example-code"
      }
    },
    "a-simple-component": {
      "id": "a-simple-component",
      "children": [],
      "parent": "EXAMPLES",
      "internal": {
        "type": "ExampleCode",
        "contentDigest": "\"class HelloMessage extends React.Component {\\n  render() {\\n    return (\\n      <div>\\n        Hello {this.props.name}\\n      </div>\\n    );\\n  }\\n}\\n\\nReactDOM.render(\\n  <HelloMessage name=\\\"Taylor\\\" />,\\n  mountNode\\n);\"",
        "owner": "gatsby-transformer-home-example-code"
      }
    },
    "a-stateful-component": {
      "id": "a-stateful-component",
      "children": [],
      "parent": "EXAMPLES",
      "internal": {
        "type": "ExampleCode",
        "contentDigest": "\"class Timer extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = { seconds: 0 };\\n  }\\n\\n  tick() {\\n    this.setState(prevState => ({\\n      seconds: prevState.seconds + 1\\n    }));\\n  }\\n\\n  componentDidMount() {\\n    this.interval = setInterval(() => this.tick(), 1000);\\n  }\\n\\n  componentWillUnmount() {\\n    clearInterval(this.interval);\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        Seconds: {this.state.seconds}\\n      </div>\\n    );\\n  }\\n}\\n\\nReactDOM.render(<Timer />, mountNode);\"",
        "owner": "gatsby-transformer-home-example-code"
      }
    },
    "an-application": {
      "id": "an-application",
      "children": [],
      "parent": "EXAMPLES",
      "internal": {
        "type": "ExampleCode",
        "contentDigest": "\"class TodoApp extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = { items: [], text: '' };\\n    this.handleChange = this.handleChange.bind(this);\\n    this.handleSubmit = this.handleSubmit.bind(this);\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <h3>TODO</h3>\\n        <TodoList items={this.state.items} />\\n        <form onSubmit={this.handleSubmit}>\\n          <input\\n            onChange={this.handleChange}\\n            value={this.state.text}\\n          />\\n          <button>\\n            Add #{this.state.items.length + 1}\\n          </button>\\n        </form>\\n      </div>\\n    );\\n  }\\n\\n  handleChange(e) {\\n    this.setState({ text: e.target.value });\\n  }\\n\\n  handleSubmit(e) {\\n    e.preventDefault();\\n    if (!this.state.text.length) {\\n      return;\\n    }\\n    const newItem = {\\n      text: this.state.text,\\n      id: Date.now()\\n    };\\n    this.setState(prevState => ({\\n      items: prevState.items.concat(newItem),\\n      text: ''\\n    }));\\n  }\\n}\\n\\nclass TodoList extends React.Component {\\n  render() {\\n    return (\\n      <ul>\\n        {this.props.items.map(item => (\\n          <li key={item.id}>{item.text}</li>\\n        ))}\\n      </ul>\\n    );\\n  }\\n}\\n\\nReactDOM.render(<TodoApp />, mountNode);\"",
        "owner": "gatsby-transformer-home-example-code"
      }
    },
    "/Users/yubolun/Desktop/react/src/pages absPath of file": {
      "id": "/Users/yubolun/Desktop/react/src/pages absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "6eecdb39f04106fb0e859c171947c235",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/yubolun/Desktop/react/src/pages",
      "relativePath": "",
      "extension": "",
      "size": 352,
      "prettySize": "352 B",
      "modifiedTime": "2019-05-08T09:41:08.779Z",
      "accessTime": "2019-05-08T09:44:07.466Z",
      "changeTime": "2019-05-08T09:41:08.779Z",
      "birthTime": "2019-05-08T09:41:08.775Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/src",
      "base": "pages",
      "ext": "",
      "name": "pages",
      "relativeDirectory": "..",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 11,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226430,
      "blocks": 0,
      "atimeMs": 1557308647466.3835,
      "mtimeMs": 1557308468778.886,
      "ctimeMs": 1557308468778.886,
      "birthtimeMs": 1557308468775.2136,
      "atime": "2019-05-08T09:44:07.466Z",
      "mtime": "2019-05-08T09:41:08.779Z",
      "ctime": "2019-05-08T09:41:08.779Z",
      "birthtime": "2019-05-08T09:41:08.775Z"
    },
    "/Users/yubolun/Desktop/react/src/pages/blog absPath of file": {
      "id": "/Users/yubolun/Desktop/react/src/pages/blog absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "ec9e5b302113e9e789ea713d4513393a",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/yubolun/Desktop/react/src/pages/blog",
      "relativePath": "blog",
      "extension": "",
      "size": 96,
      "prettySize": "96 B",
      "modifiedTime": "2019-05-08T09:41:08.776Z",
      "accessTime": "2019-05-08T09:44:07.468Z",
      "changeTime": "2019-05-08T09:41:08.776Z",
      "birthTime": "2019-05-08T09:41:08.776Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/src/pages",
      "base": "blog",
      "ext": "",
      "name": "blog",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 3,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226433,
      "blocks": 0,
      "atimeMs": 1557308647467.968,
      "mtimeMs": 1557308468776.1638,
      "ctimeMs": 1557308468776.1638,
      "birthtimeMs": 1557308468776.0288,
      "atime": "2019-05-08T09:44:07.468Z",
      "mtime": "2019-05-08T09:41:08.776Z",
      "ctime": "2019-05-08T09:41:08.776Z",
      "birthtime": "2019-05-08T09:41:08.776Z"
    },
    "/Users/yubolun/Desktop/react/src/pages/docs absPath of file": {
      "id": "/Users/yubolun/Desktop/react/src/pages/docs absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "5a3068e3a8b7c5e7cd947b3bc398c977",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/yubolun/Desktop/react/src/pages/docs",
      "relativePath": "docs",
      "extension": "",
      "size": 96,
      "prettySize": "96 B",
      "modifiedTime": "2019-05-08T09:41:08.777Z",
      "accessTime": "2019-05-08T09:44:07.468Z",
      "changeTime": "2019-05-08T09:41:08.777Z",
      "birthTime": "2019-05-08T09:41:08.776Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/src/pages",
      "base": "docs",
      "ext": "",
      "name": "docs",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 3,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226435,
      "blocks": 0,
      "atimeMs": 1557308647467.988,
      "mtimeMs": 1557308468776.771,
      "ctimeMs": 1557308468776.771,
      "birthtimeMs": 1557308468776.417,
      "atime": "2019-05-08T09:44:07.468Z",
      "mtime": "2019-05-08T09:41:08.777Z",
      "ctime": "2019-05-08T09:41:08.777Z",
      "birthtime": "2019-05-08T09:41:08.776Z"
    },
    "/Users/yubolun/Desktop/react/src/pages/404.js absPath of file": {
      "id": "/Users/yubolun/Desktop/react/src/pages/404.js absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "e48a8dfa53a537534af08bb7ad257d3c",
        "mediaType": "application/javascript",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/yubolun/Desktop/react/src/pages/404.js",
      "relativePath": "404.js",
      "extension": "js",
      "size": 904,
      "prettySize": "904 B",
      "modifiedTime": "2019-05-08T09:41:08.776Z",
      "accessTime": "2019-05-08T09:43:55.100Z",
      "changeTime": "2019-05-08T09:41:08.776Z",
      "birthTime": "2019-05-08T09:41:08.776Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/src/pages",
      "base": "404.js",
      "ext": ".js",
      "name": "404",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226431,
      "blocks": 8,
      "atimeMs": 1557308635099.8591,
      "mtimeMs": 1557308468775.679,
      "ctimeMs": 1557308468775.679,
      "birthtimeMs": 1557308468775.6213,
      "atime": "2019-05-08T09:43:55.100Z",
      "mtime": "2019-05-08T09:41:08.776Z",
      "ctime": "2019-05-08T09:41:08.776Z",
      "birthtime": "2019-05-08T09:41:08.776Z"
    },
    "/Users/yubolun/Desktop/react/src/pages/acknowledgements.html.js absPath of file": {
      "id": "/Users/yubolun/Desktop/react/src/pages/acknowledgements.html.js absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "dd177be88ea538477abe13a2a8bc75c5",
        "mediaType": "application/javascript",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/yubolun/Desktop/react/src/pages/acknowledgements.html.js",
      "relativePath": "acknowledgements.html.js",
      "extension": "js",
      "size": 2774,
      "prettySize": "2.77 kB",
      "modifiedTime": "2019-05-08T09:41:08.776Z",
      "accessTime": "2019-05-08T09:43:55.100Z",
      "changeTime": "2019-05-08T09:41:08.776Z",
      "birthTime": "2019-05-08T09:41:08.776Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/src/pages",
      "base": "acknowledgements.html.js",
      "ext": ".js",
      "name": "acknowledgements.html",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226432,
      "blocks": 8,
      "atimeMs": 1557308635099.862,
      "mtimeMs": 1557308468775.901,
      "ctimeMs": 1557308468775.901,
      "birthtimeMs": 1557308468775.8428,
      "atime": "2019-05-08T09:43:55.100Z",
      "mtime": "2019-05-08T09:41:08.776Z",
      "ctime": "2019-05-08T09:41:08.776Z",
      "birthtime": "2019-05-08T09:41:08.776Z"
    },
    "/Users/yubolun/Desktop/react/src/pages/favicon.ico absPath of file": {
      "id": "/Users/yubolun/Desktop/react/src/pages/favicon.ico absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "c6acedaff906029fc5455d9ec52c7f42",
        "mediaType": "image/x-icon",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/yubolun/Desktop/react/src/pages/favicon.ico",
      "relativePath": "favicon.ico",
      "extension": "ico",
      "size": 198,
      "prettySize": "198 B",
      "modifiedTime": "2019-05-08T09:41:08.778Z",
      "accessTime": "2019-05-08T09:43:55.100Z",
      "changeTime": "2019-05-08T09:41:08.778Z",
      "birthTime": "2019-05-08T09:41:08.778Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/src/pages",
      "base": "favicon.ico",
      "ext": ".ico",
      "name": "favicon",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226437,
      "blocks": 8,
      "atimeMs": 1557308635099.8757,
      "mtimeMs": 1557308468778.0415,
      "ctimeMs": 1557308468778.0415,
      "birthtimeMs": 1557308468777.975,
      "atime": "2019-05-08T09:43:55.100Z",
      "mtime": "2019-05-08T09:41:08.778Z",
      "ctime": "2019-05-08T09:41:08.778Z",
      "birthtime": "2019-05-08T09:41:08.778Z"
    },
    "/Users/yubolun/Desktop/react/src/pages/index.js absPath of file": {
      "id": "/Users/yubolun/Desktop/react/src/pages/index.js absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "35676b9d513983386d2f1260eb631bbb",
        "mediaType": "application/javascript",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/yubolun/Desktop/react/src/pages/index.js",
      "relativePath": "index.js",
      "extension": "js",
      "size": 11939,
      "prettySize": "11.9 kB",
      "modifiedTime": "2019-05-08T09:41:08.778Z",
      "accessTime": "2019-05-08T09:43:55.100Z",
      "changeTime": "2019-05-08T09:41:08.778Z",
      "birthTime": "2019-05-08T09:41:08.778Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/src/pages",
      "base": "index.js",
      "ext": ".js",
      "name": "index",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226438,
      "blocks": 24,
      "atimeMs": 1557308635099.8784,
      "mtimeMs": 1557308468778.4126,
      "ctimeMs": 1557308468778.4126,
      "birthtimeMs": 1557308468778.3513,
      "atime": "2019-05-08T09:43:55.100Z",
      "mtime": "2019-05-08T09:41:08.778Z",
      "ctime": "2019-05-08T09:41:08.778Z",
      "birthtime": "2019-05-08T09:41:08.778Z"
    },
    "/Users/yubolun/Desktop/react/src/pages/jsx-compiler.html.js absPath of file": {
      "id": "/Users/yubolun/Desktop/react/src/pages/jsx-compiler.html.js absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "b2d1d7b44d2d83d41b4704aa8395b400",
        "mediaType": "application/javascript",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/yubolun/Desktop/react/src/pages/jsx-compiler.html.js",
      "relativePath": "jsx-compiler.html.js",
      "extension": "js",
      "size": 866,
      "prettySize": "866 B",
      "modifiedTime": "2019-05-08T09:41:08.779Z",
      "accessTime": "2019-05-08T09:43:55.100Z",
      "changeTime": "2019-05-08T09:41:08.779Z",
      "birthTime": "2019-05-08T09:41:08.779Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/src/pages",
      "base": "jsx-compiler.html.js",
      "ext": ".js",
      "name": "jsx-compiler.html",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226439,
      "blocks": 8,
      "atimeMs": 1557308635099.8809,
      "mtimeMs": 1557308468778.5962,
      "ctimeMs": 1557308468778.5962,
      "birthtimeMs": 1557308468778.5505,
      "atime": "2019-05-08T09:43:55.100Z",
      "mtime": "2019-05-08T09:41:08.779Z",
      "ctime": "2019-05-08T09:41:08.779Z",
      "birthtime": "2019-05-08T09:41:08.779Z"
    },
    "/Users/yubolun/Desktop/react/src/pages/robots.txt absPath of file": {
      "id": "/Users/yubolun/Desktop/react/src/pages/robots.txt absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "b6216d61c03e6ce0c9aea6ca7808f7ca",
        "mediaType": "text/plain",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/yubolun/Desktop/react/src/pages/robots.txt",
      "relativePath": "robots.txt",
      "extension": "txt",
      "size": 24,
      "prettySize": "24 B",
      "modifiedTime": "2019-05-08T09:41:08.779Z",
      "accessTime": "2019-05-08T09:43:55.100Z",
      "changeTime": "2019-05-08T09:41:08.779Z",
      "birthTime": "2019-05-08T09:41:08.779Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/src/pages",
      "base": "robots.txt",
      "ext": ".txt",
      "name": "robots",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226440,
      "blocks": 8,
      "atimeMs": 1557308635099.8838,
      "mtimeMs": 1557308468778.758,
      "ctimeMs": 1557308468778.758,
      "birthtimeMs": 1557308468778.714,
      "atime": "2019-05-08T09:43:55.100Z",
      "mtime": "2019-05-08T09:41:08.779Z",
      "ctime": "2019-05-08T09:41:08.779Z",
      "birthtime": "2019-05-08T09:41:08.779Z"
    },
    "/Users/yubolun/Desktop/react/src/pages/versions.js absPath of file": {
      "id": "/Users/yubolun/Desktop/react/src/pages/versions.js absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "387f99c7d505182f202d1f4b302b59c0",
        "mediaType": "application/javascript",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/yubolun/Desktop/react/src/pages/versions.js",
      "relativePath": "versions.js",
      "extension": "js",
      "size": 1685,
      "prettySize": "1.69 kB",
      "modifiedTime": "2019-05-08T09:41:08.779Z",
      "accessTime": "2019-05-08T09:43:55.100Z",
      "changeTime": "2019-05-08T09:41:08.779Z",
      "birthTime": "2019-05-08T09:41:08.779Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/src/pages",
      "base": "versions.js",
      "ext": ".js",
      "name": "versions",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226441,
      "blocks": 8,
      "atimeMs": 1557308635099.8862,
      "mtimeMs": 1557308468778.9236,
      "ctimeMs": 1557308468778.9236,
      "birthtimeMs": 1557308468778.8645,
      "atime": "2019-05-08T09:43:55.100Z",
      "mtime": "2019-05-08T09:41:08.779Z",
      "ctime": "2019-05-08T09:41:08.779Z",
      "birthtime": "2019-05-08T09:41:08.779Z"
    },
    "/Users/yubolun/Desktop/react/src/pages/blog/all.html.js absPath of file": {
      "id": "/Users/yubolun/Desktop/react/src/pages/blog/all.html.js absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "e7c95413399aeed250007f03114f77b5",
        "mediaType": "application/javascript",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/yubolun/Desktop/react/src/pages/blog/all.html.js",
      "relativePath": "blog/all.html.js",
      "extension": "js",
      "size": 3403,
      "prettySize": "3.4 kB",
      "modifiedTime": "2019-05-08T09:41:08.776Z",
      "accessTime": "2019-05-08T09:43:55.100Z",
      "changeTime": "2019-05-08T09:41:08.776Z",
      "birthTime": "2019-05-08T09:41:08.776Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/src/pages/blog",
      "base": "all.html.js",
      "ext": ".js",
      "name": "all.html",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226434,
      "blocks": 8,
      "atimeMs": 1557308635099.8674,
      "mtimeMs": 1557308468776.2056,
      "ctimeMs": 1557308468776.2056,
      "birthtimeMs": 1557308468776.152,
      "atime": "2019-05-08T09:43:55.100Z",
      "mtime": "2019-05-08T09:41:08.776Z",
      "ctime": "2019-05-08T09:41:08.776Z",
      "birthtime": "2019-05-08T09:41:08.776Z"
    },
    "/Users/yubolun/Desktop/react/src/pages/docs/error-decoder.html.js absPath of file": {
      "id": "/Users/yubolun/Desktop/react/src/pages/docs/error-decoder.html.js absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "513c3265161909effbb010ad87db57df",
        "mediaType": "application/javascript",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "pages",
      "absolutePath": "/Users/yubolun/Desktop/react/src/pages/docs/error-decoder.html.js",
      "relativePath": "docs/error-decoder.html.js",
      "extension": "js",
      "size": 3224,
      "prettySize": "3.22 kB",
      "modifiedTime": "2019-05-08T09:41:08.777Z",
      "accessTime": "2019-05-08T09:43:55.100Z",
      "changeTime": "2019-05-08T09:41:08.777Z",
      "birthTime": "2019-05-08T09:41:08.777Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/src/pages/docs",
      "base": "error-decoder.html.js",
      "ext": ".js",
      "name": "error-decoder.html",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226436,
      "blocks": 8,
      "atimeMs": 1557308635099.873,
      "mtimeMs": 1557308468776.8152,
      "ctimeMs": 1557308468776.8152,
      "birthtimeMs": 1557308468776.7632,
      "atime": "2019-05-08T09:43:55.100Z",
      "mtime": "2019-05-08T09:41:08.777Z",
      "ctime": "2019-05-08T09:41:08.777Z",
      "birthtime": "2019-05-08T09:41:08.777Z"
    },
    "/Users/yubolun/Desktop/react/content/ absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/ absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "629c2e4c3f89fb0f37f87cb4f3cd0a5e",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/",
      "relativePath": "",
      "extension": "",
      "size": 448,
      "prettySize": "448 B",
      "modifiedTime": "2019-05-08T09:41:08.746Z",
      "accessTime": "2019-05-08T09:44:07.482Z",
      "changeTime": "2019-05-08T09:41:08.746Z",
      "birthTime": "2019-05-08T09:41:08.541Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react",
      "base": "content",
      "ext": "",
      "name": "content",
      "relativeDirectory": "..",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 14,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225858,
      "blocks": 0,
      "atimeMs": 1557308647482.0254,
      "mtimeMs": 1557308468745.5862,
      "ctimeMs": 1557308468745.5862,
      "birthtimeMs": 1557308468540.73,
      "atime": "2019-05-08T09:44:07.482Z",
      "mtime": "2019-05-08T09:41:08.746Z",
      "ctime": "2019-05-08T09:41:08.746Z",
      "birthtime": "2019-05-08T09:41:08.541Z"
    },
    "/Users/yubolun/Desktop/react/content/blog absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "4ce0455f3b3bc887586243079d741532",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog",
      "relativePath": "blog",
      "extension": "",
      "size": 4288,
      "prettySize": "4.29 kB",
      "modifiedTime": "2019-05-08T09:41:08.572Z",
      "accessTime": "2019-05-08T09:44:07.484Z",
      "changeTime": "2019-05-08T09:41:08.572Z",
      "birthTime": "2019-05-08T09:41:08.541Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content",
      "base": "blog",
      "ext": "",
      "name": "blog",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 134,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225862,
      "blocks": 0,
      "atimeMs": 1557308647484.294,
      "mtimeMs": 1557308468572.3977,
      "ctimeMs": 1557308468572.3977,
      "birthtimeMs": 1557308468541.2744,
      "atime": "2019-05-08T09:44:07.484Z",
      "mtime": "2019-05-08T09:41:08.572Z",
      "ctime": "2019-05-08T09:41:08.572Z",
      "birthtime": "2019-05-08T09:41:08.541Z"
    },
    "/Users/yubolun/Desktop/react/content/community absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "43cb16df5339b04a899a70b25223dc6d",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community",
      "relativePath": "community",
      "extension": "",
      "size": 1120,
      "prettySize": "1.12 kB",
      "modifiedTime": "2019-05-08T09:41:08.581Z",
      "accessTime": "2019-05-08T09:44:07.484Z",
      "changeTime": "2019-05-08T09:41:08.581Z",
      "birthTime": "2019-05-08T09:41:08.573Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content",
      "base": "community",
      "ext": "",
      "name": "community",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 35,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225995,
      "blocks": 0,
      "atimeMs": 1557308647484.0667,
      "mtimeMs": 1557308468581.1145,
      "ctimeMs": 1557308468581.1145,
      "birthtimeMs": 1557308468572.5364,
      "atime": "2019-05-08T09:44:07.484Z",
      "mtime": "2019-05-08T09:41:08.581Z",
      "ctime": "2019-05-08T09:41:08.581Z",
      "birthtime": "2019-05-08T09:41:08.573Z"
    },
    "/Users/yubolun/Desktop/react/content/docs absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "325792ff18e04c8731b08d5dce25926f",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs",
      "relativePath": "docs",
      "extension": "",
      "size": 2688,
      "prettySize": "2.69 kB",
      "modifiedTime": "2019-05-08T09:41:08.602Z",
      "accessTime": "2019-05-08T09:44:07.484Z",
      "changeTime": "2019-05-08T09:41:08.602Z",
      "birthTime": "2019-05-08T09:41:08.581Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content",
      "base": "docs",
      "ext": "",
      "name": "docs",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 84,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226029,
      "blocks": 0,
      "atimeMs": 1557308647484.1123,
      "mtimeMs": 1557308468601.938,
      "ctimeMs": 1557308468601.938,
      "birthtimeMs": 1557308468581.264,
      "atime": "2019-05-08T09:44:07.484Z",
      "mtime": "2019-05-08T09:41:08.602Z",
      "ctime": "2019-05-08T09:41:08.602Z",
      "birthtime": "2019-05-08T09:41:08.581Z"
    },
    "/Users/yubolun/Desktop/react/content/images absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "aa38254fe13a1d67c4e0c660d1899d6b",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images",
      "relativePath": "images",
      "extension": "",
      "size": 512,
      "prettySize": "512 B",
      "modifiedTime": "2019-05-08T09:41:08.744Z",
      "accessTime": "2019-05-08T09:44:07.484Z",
      "changeTime": "2019-05-08T09:41:08.744Z",
      "birthTime": "2019-05-08T09:41:08.610Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content",
      "base": "images",
      "ext": "",
      "name": "images",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 16,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226126,
      "blocks": 0,
      "atimeMs": 1557308647484.04,
      "mtimeMs": 1557308468743.9463,
      "ctimeMs": 1557308468743.9463,
      "birthtimeMs": 1557308468610.0505,
      "atime": "2019-05-08T09:44:07.484Z",
      "mtime": "2019-05-08T09:41:08.744Z",
      "ctime": "2019-05-08T09:41:08.744Z",
      "birthtime": "2019-05-08T09:41:08.610Z"
    },
    "/Users/yubolun/Desktop/react/content/home absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/home absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "323631db8890e744350359cedef5a2d9",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/home",
      "relativePath": "home",
      "extension": "",
      "size": 128,
      "prettySize": "128 B",
      "modifiedTime": "2019-05-08T09:41:08.610Z",
      "accessTime": "2019-05-08T09:44:07.484Z",
      "changeTime": "2019-05-08T09:41:08.610Z",
      "birthTime": "2019-05-08T09:41:08.602Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content",
      "base": "home",
      "ext": "",
      "name": "home",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 4,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226112,
      "blocks": 0,
      "atimeMs": 1557308647484.0251,
      "mtimeMs": 1557308468609.5046,
      "ctimeMs": 1557308468609.5046,
      "birthtimeMs": 1557308468602.082,
      "atime": "2019-05-08T09:44:07.484Z",
      "mtime": "2019-05-08T09:41:08.610Z",
      "ctime": "2019-05-08T09:41:08.610Z",
      "birthtime": "2019-05-08T09:41:08.602Z"
    },
    "/Users/yubolun/Desktop/react/content/tutorial absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/tutorial absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "6978a549541a7daf8e82bcbd87185fd2",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/tutorial",
      "relativePath": "tutorial",
      "extension": "",
      "size": 128,
      "prettySize": "128 B",
      "modifiedTime": "2019-05-08T09:41:08.745Z",
      "accessTime": "2019-05-08T09:44:07.484Z",
      "changeTime": "2019-05-08T09:41:08.745Z",
      "birthTime": "2019-05-08T09:41:08.745Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content",
      "base": "tutorial",
      "ext": "",
      "name": "tutorial",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 4,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226254,
      "blocks": 0,
      "atimeMs": 1557308647484.0852,
      "mtimeMs": 1557308468745.343,
      "ctimeMs": 1557308468745.343,
      "birthtimeMs": 1557308468744.9585,
      "atime": "2019-05-08T09:44:07.484Z",
      "mtime": "2019-05-08T09:41:08.745Z",
      "ctime": "2019-05-08T09:41:08.745Z",
      "birthtime": "2019-05-08T09:41:08.745Z"
    },
    "/Users/yubolun/Desktop/react/content/warnings absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/warnings absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "a0afb6999b95bd48e401c96b5f5b0f6d",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/warnings",
      "relativePath": "warnings",
      "extension": "",
      "size": 256,
      "prettySize": "256 B",
      "modifiedTime": "2019-05-08T09:41:08.747Z",
      "accessTime": "2019-05-08T09:44:07.484Z",
      "changeTime": "2019-05-08T09:41:08.747Z",
      "birthTime": "2019-05-08T09:41:08.746Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content",
      "base": "warnings",
      "ext": "",
      "name": "warnings",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 8,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226258,
      "blocks": 0,
      "atimeMs": 1557308647484.0986,
      "mtimeMs": 1557308468746.5906,
      "ctimeMs": 1557308468746.5906,
      "birthtimeMs": 1557308468745.5745,
      "atime": "2019-05-08T09:44:07.484Z",
      "mtime": "2019-05-08T09:41:08.747Z",
      "ctime": "2019-05-08T09:41:08.747Z",
      "birthtime": "2019-05-08T09:41:08.746Z"
    },
    "/Users/yubolun/Desktop/react/content/home/examples absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/home/examples absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "88e864751c7cc035c6b3a1adf9988803",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/home/examples",
      "relativePath": "home/examples",
      "extension": "",
      "size": 320,
      "prettySize": "320 B",
      "modifiedTime": "2019-05-08T09:41:08.609Z",
      "accessTime": "2019-05-08T09:44:07.497Z",
      "changeTime": "2019-05-08T09:41:08.609Z",
      "birthTime": "2019-05-08T09:41:08.602Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/home",
      "base": "examples",
      "ext": "",
      "name": "examples",
      "relativeDirectory": "home",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 10,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226113,
      "blocks": 0,
      "atimeMs": 1557308647496.951,
      "mtimeMs": 1557308468609.3738,
      "ctimeMs": 1557308468609.3738,
      "birthtimeMs": 1557308468602.1682,
      "atime": "2019-05-08T09:44:07.497Z",
      "mtime": "2019-05-08T09:41:08.609Z",
      "ctime": "2019-05-08T09:41:08.609Z",
      "birthtime": "2019-05-08T09:41:08.602Z"
    },
    "/Users/yubolun/Desktop/react/content/home/marketing absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/home/marketing absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "4dd219597d53413dd04c284a930777f9",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/home/marketing",
      "relativePath": "home/marketing",
      "extension": "",
      "size": 160,
      "prettySize": "160 B",
      "modifiedTime": "2019-05-08T09:41:08.610Z",
      "accessTime": "2019-05-08T09:44:07.497Z",
      "changeTime": "2019-05-08T09:41:08.610Z",
      "birthTime": "2019-05-08T09:41:08.609Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/home",
      "base": "marketing",
      "ext": "",
      "name": "marketing",
      "relativeDirectory": "home",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 5,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226122,
      "blocks": 0,
      "atimeMs": 1557308647497.0276,
      "mtimeMs": 1557308468609.924,
      "ctimeMs": 1557308468609.924,
      "birthtimeMs": 1557308468609.4968,
      "atime": "2019-05-08T09:44:07.497Z",
      "mtime": "2019-05-08T09:41:08.610Z",
      "ctime": "2019-05-08T09:41:08.610Z",
      "birthtime": "2019-05-08T09:41:08.609Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "7f8d89b19667e162ab1d0aa8d2acb8c0",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog",
      "relativePath": "images/blog",
      "extension": "",
      "size": 2624,
      "prettySize": "2.62 kB",
      "modifiedTime": "2019-05-08T09:41:08.732Z",
      "accessTime": "2019-05-08T09:44:07.497Z",
      "changeTime": "2019-05-08T09:41:08.732Z",
      "birthTime": "2019-05-08T09:41:08.610Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images",
      "base": "blog",
      "ext": "",
      "name": "blog",
      "relativeDirectory": "images",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 82,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226127,
      "blocks": 0,
      "atimeMs": 1557308647497.2356,
      "mtimeMs": 1557308468732.054,
      "ctimeMs": 1557308468732.054,
      "birthtimeMs": 1557308468610.148,
      "atime": "2019-05-08T09:44:07.497Z",
      "mtime": "2019-05-08T09:41:08.732Z",
      "ctime": "2019-05-08T09:41:08.732Z",
      "birthtime": "2019-05-08T09:41:08.610Z"
    },
    "/Users/yubolun/Desktop/react/content/images/docs absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "e261400c442cfe60bc0c108ed004f45f",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/docs",
      "relativePath": "images/docs",
      "extension": "",
      "size": 704,
      "prettySize": "704 B",
      "modifiedTime": "2019-05-08T09:41:08.742Z",
      "accessTime": "2019-05-08T09:44:07.497Z",
      "changeTime": "2019-05-08T09:41:08.742Z",
      "birthTime": "2019-05-08T09:41:08.732Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images",
      "base": "docs",
      "ext": "",
      "name": "docs",
      "relativeDirectory": "images",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 22,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226217,
      "blocks": 0,
      "atimeMs": 1557308647497.163,
      "mtimeMs": 1557308468741.558,
      "ctimeMs": 1557308468741.558,
      "birthtimeMs": 1557308468732.1995,
      "atime": "2019-05-08T09:44:07.497Z",
      "mtime": "2019-05-08T09:41:08.742Z",
      "ctime": "2019-05-08T09:41:08.742Z",
      "birthtime": "2019-05-08T09:41:08.732Z"
    },
    "/Users/yubolun/Desktop/react/content/images/tutorial absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/tutorial absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "3f12bcdcdf687f88516d6f398c3110f3",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/tutorial",
      "relativePath": "images/tutorial",
      "extension": "",
      "size": 160,
      "prettySize": "160 B",
      "modifiedTime": "2019-05-08T09:41:08.745Z",
      "accessTime": "2019-05-08T09:44:07.497Z",
      "changeTime": "2019-05-08T09:41:08.745Z",
      "birthTime": "2019-05-08T09:41:08.744Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images",
      "base": "tutorial",
      "ext": "",
      "name": "tutorial",
      "relativeDirectory": "images",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 5,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226249,
      "blocks": 0,
      "atimeMs": 1557308647497.203,
      "mtimeMs": 1557308468744.6443,
      "ctimeMs": 1557308468744.6443,
      "birthtimeMs": 1557308468743.936,
      "atime": "2019-05-08T09:44:07.497Z",
      "mtime": "2019-05-08T09:41:08.745Z",
      "ctime": "2019-05-08T09:41:08.745Z",
      "birthtime": "2019-05-08T09:41:08.744Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "610031702f4c97e79639e94374390293",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration",
      "relativePath": "images/blog/create-apps-with-no-configuration",
      "extension": "",
      "size": 224,
      "prettySize": "224 B",
      "modifiedTime": "2019-05-08T09:41:08.644Z",
      "accessTime": "2019-05-08T09:44:07.502Z",
      "changeTime": "2019-05-08T09:41:08.644Z",
      "birthTime": "2019-05-08T09:41:08.640Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "create-apps-with-no-configuration",
      "ext": "",
      "name": "create-apps-with-no-configuration",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 7,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226136,
      "blocks": 0,
      "atimeMs": 1557308647501.827,
      "mtimeMs": 1557308468644.3738,
      "ctimeMs": 1557308468644.3738,
      "birthtimeMs": 1557308468639.5105,
      "atime": "2019-05-08T09:44:07.502Z",
      "mtime": "2019-05-08T09:41:08.644Z",
      "ctime": "2019-05-08T09:41:08.644Z",
      "birthtime": "2019-05-08T09:41:08.640Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/relay-components absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/relay-components absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "9c885c13c66480e115d87c3ea19c5334",
        "type": "Directory",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/relay-components",
      "relativePath": "images/blog/relay-components",
      "extension": "",
      "size": 192,
      "prettySize": "192 B",
      "modifiedTime": "2019-05-08T09:41:08.688Z",
      "accessTime": "2019-05-08T09:44:07.502Z",
      "changeTime": "2019-05-08T09:41:08.688Z",
      "birthTime": "2019-05-08T09:41:08.686Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "relay-components",
      "ext": "",
      "name": "relay-components",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 6,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226184,
      "blocks": 0,
      "atimeMs": 1557308647501.8042,
      "mtimeMs": 1557308468688.2769,
      "ctimeMs": 1557308468688.2769,
      "birthtimeMs": 1557308468686.4224,
      "atime": "2019-05-08T09:44:07.502Z",
      "mtime": "2019-05-08T09:41:08.688Z",
      "ctime": "2019-05-08T09:41:08.688Z",
      "birthtime": "2019-05-08T09:41:08.686Z"
    },
    "/Users/yubolun/Desktop/react/content/404.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/404.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/404.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "1f9695a0f6444b161f44fb4486c15d18",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/404.md",
      "relativePath": "404.md",
      "extension": "md",
      "size": 152,
      "prettySize": "152 B",
      "modifiedTime": "2019-05-08T09:41:08.541Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.541Z",
      "birthTime": "2019-05-08T09:41:08.541Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content",
      "base": "404.md",
      "ext": ".md",
      "name": "404",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225859,
      "blocks": 8,
      "atimeMs": 1557308635097.8223,
      "mtimeMs": 1557308468540.8342,
      "ctimeMs": 1557308468540.8342,
      "birthtimeMs": 1557308468540.8005,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.541Z",
      "ctime": "2019-05-08T09:41:08.541Z",
      "birthtime": "2019-05-08T09:41:08.541Z"
    },
    "/Users/yubolun/Desktop/react/content/acknowledgements.yml absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/acknowledgements.yml absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "fa362d09fc059044b84fec52b361fd46",
        "mediaType": "text/yaml",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/acknowledgements.yml",
      "relativePath": "acknowledgements.yml",
      "extension": "yml",
      "size": 17299,
      "prettySize": "17.3 kB",
      "modifiedTime": "2019-05-08T09:41:08.541Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.541Z",
      "birthTime": "2019-05-08T09:41:08.541Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content",
      "base": "acknowledgements.yml",
      "ext": ".yml",
      "name": "acknowledgements",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225860,
      "blocks": 40,
      "atimeMs": 1557308635097.825,
      "mtimeMs": 1557308468541.053,
      "ctimeMs": 1557308468541.053,
      "birthtimeMs": 1557308468541.017,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.541Z",
      "ctime": "2019-05-08T09:41:08.541Z",
      "birthtime": "2019-05-08T09:41:08.541Z"
    },
    "/Users/yubolun/Desktop/react/content/authors.yml absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/authors.yml absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "7015a74930dfb2bab62dbec17c300d35",
        "mediaType": "text/yaml",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/authors.yml",
      "relativePath": "authors.yml",
      "extension": "yml",
      "size": 2143,
      "prettySize": "2.14 kB",
      "modifiedTime": "2019-05-08T09:41:08.541Z",
      "accessTime": "2019-05-08T09:44:07.482Z",
      "changeTime": "2019-05-08T09:41:08.541Z",
      "birthTime": "2019-05-08T09:41:08.541Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content",
      "base": "authors.yml",
      "ext": ".yml",
      "name": "authors",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225861,
      "blocks": 8,
      "atimeMs": 1557308647482.1304,
      "mtimeMs": 1557308468541.2085,
      "ctimeMs": 1557308468541.2085,
      "birthtimeMs": 1557308468541.1753,
      "atime": "2019-05-08T09:44:07.482Z",
      "mtime": "2019-05-08T09:41:08.541Z",
      "ctime": "2019-05-08T09:41:08.541Z",
      "birthtime": "2019-05-08T09:41:08.541Z"
    },
    "/Users/yubolun/Desktop/react/content/index.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/index.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/index.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "405b05d8ed389f3cc678b9b329cec9e4",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/index.md",
      "relativePath": "index.md",
      "extension": "md",
      "size": 3411,
      "prettySize": "3.41 kB",
      "modifiedTime": "2019-05-08T09:41:08.745Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.745Z",
      "birthTime": "2019-05-08T09:41:08.745Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content",
      "base": "index.md",
      "ext": ".md",
      "name": "index",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226253,
      "blocks": 8,
      "atimeMs": 1557308635099.3662,
      "mtimeMs": 1557308468744.8792,
      "ctimeMs": 1557308468744.8792,
      "birthtimeMs": 1557308468744.8193,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.745Z",
      "ctime": "2019-05-08T09:41:08.745Z",
      "birthtime": "2019-05-08T09:41:08.745Z"
    },
    "/Users/yubolun/Desktop/react/content/versions.yml absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/versions.yml absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "d896ee922a0a755df0cd4b1e73ac0d83",
        "mediaType": "text/yaml",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/versions.yml",
      "relativePath": "versions.yml",
      "extension": "yml",
      "size": 1628,
      "prettySize": "1.63 kB",
      "modifiedTime": "2019-05-08T09:41:08.746Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.746Z",
      "birthTime": "2019-05-08T09:41:08.745Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content",
      "base": "versions.yml",
      "ext": ".yml",
      "name": "versions",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226257,
      "blocks": 8,
      "atimeMs": 1557308635099.3772,
      "mtimeMs": 1557308468745.5078,
      "ctimeMs": 1557308468745.5078,
      "birthtimeMs": 1557308468745.474,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.746Z",
      "ctime": "2019-05-08T09:41:08.746Z",
      "birthtime": "2019-05-08T09:41:08.745Z"
    },
    "/Users/yubolun/Desktop/react/content/images/external.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/external.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/external.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "46c50c6df8c6b6caefefb973a1eddd1a",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/external.png",
      "relativePath": "images/external.png",
      "extension": "png",
      "size": 189,
      "prettySize": "189 B",
      "modifiedTime": "2019-05-08T09:41:08.742Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.742Z",
      "birthTime": "2019-05-08T09:41:08.742Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images",
      "base": "external.png",
      "ext": ".png",
      "name": "external",
      "relativeDirectory": "images",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226238,
      "blocks": 8,
      "atimeMs": 1557308635099.212,
      "mtimeMs": 1557308468741.8655,
      "ctimeMs": 1557308468741.8655,
      "birthtimeMs": 1557308468741.8052,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.742Z",
      "ctime": "2019-05-08T09:41:08.742Z",
      "birthtime": "2019-05-08T09:41:08.742Z"
    },
    "/Users/yubolun/Desktop/react/content/images/external_2x.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/external_2x.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/external_2x.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "93ed76553ae53a4c567ce595928c35ae",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/external_2x.png",
      "relativePath": "images/external_2x.png",
      "extension": "png",
      "size": 134,
      "prettySize": "134 B",
      "modifiedTime": "2019-05-08T09:41:08.742Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.742Z",
      "birthTime": "2019-05-08T09:41:08.742Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images",
      "base": "external_2x.png",
      "ext": ".png",
      "name": "external_2x",
      "relativeDirectory": "images",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226239,
      "blocks": 8,
      "atimeMs": 1557308635099.227,
      "mtimeMs": 1557308468742.034,
      "ctimeMs": 1557308468742.034,
      "birthtimeMs": 1557308468741.9834,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.742Z",
      "ctime": "2019-05-08T09:41:08.742Z",
      "birthtime": "2019-05-08T09:41:08.742Z"
    },
    "/Users/yubolun/Desktop/react/content/images/logo.svg absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/logo.svg absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "3d593052bb2819bdf7709d9f7e512c8f",
        "mediaType": "image/svg+xml",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/logo.svg",
      "relativePath": "images/logo.svg",
      "extension": "svg",
      "size": 1837,
      "prettySize": "1.84 kB",
      "modifiedTime": "2019-05-08T09:41:08.742Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.742Z",
      "birthTime": "2019-05-08T09:41:08.742Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images",
      "base": "logo.svg",
      "ext": ".svg",
      "name": "logo",
      "relativeDirectory": "images",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226240,
      "blocks": 8,
      "atimeMs": 1557308635099.2322,
      "mtimeMs": 1557308468742.205,
      "ctimeMs": 1557308468742.205,
      "birthtimeMs": 1557308468742.1477,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.742Z",
      "ctime": "2019-05-08T09:41:08.742Z",
      "birthtime": "2019-05-08T09:41:08.742Z"
    },
    "/Users/yubolun/Desktop/react/content/images/logo_og.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/logo_og.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/logo_og.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "cba0b89d2bf2d96a1ed26edb5849f804",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/logo_og.png",
      "relativePath": "images/logo_og.png",
      "extension": "png",
      "size": 10754,
      "prettySize": "10.8 kB",
      "modifiedTime": "2019-05-08T09:41:08.742Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.742Z",
      "birthTime": "2019-05-08T09:41:08.742Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images",
      "base": "logo_og.png",
      "ext": ".png",
      "name": "logo_og",
      "relativeDirectory": "images",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226241,
      "blocks": 24,
      "atimeMs": 1557308635099.2375,
      "mtimeMs": 1557308468742.4246,
      "ctimeMs": 1557308468742.4246,
      "birthtimeMs": 1557308468742.3567,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.742Z",
      "ctime": "2019-05-08T09:41:08.742Z",
      "birthtime": "2019-05-08T09:41:08.742Z"
    },
    "/Users/yubolun/Desktop/react/content/images/logo_small.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/logo_small.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/logo_small.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "1e727cbeb19128d7e228c3b923268a0d",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/logo_small.png",
      "relativePath": "images/logo_small.png",
      "extension": "png",
      "size": 4379,
      "prettySize": "4.38 kB",
      "modifiedTime": "2019-05-08T09:41:08.743Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.743Z",
      "birthTime": "2019-05-08T09:41:08.743Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images",
      "base": "logo_small.png",
      "ext": ".png",
      "name": "logo_small",
      "relativeDirectory": "images",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226242,
      "blocks": 16,
      "atimeMs": 1557308635099.307,
      "mtimeMs": 1557308468742.6223,
      "ctimeMs": 1557308468742.6223,
      "birthtimeMs": 1557308468742.5598,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.743Z",
      "ctime": "2019-05-08T09:41:08.743Z",
      "birthtime": "2019-05-08T09:41:08.743Z"
    },
    "/Users/yubolun/Desktop/react/content/images/logo_small_2x.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/logo_small_2x.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/logo_small_2x.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "865e2781259889229dd32ec649051518",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/logo_small_2x.png",
      "relativePath": "images/logo_small_2x.png",
      "extension": "png",
      "size": 12770,
      "prettySize": "12.8 kB",
      "modifiedTime": "2019-05-08T09:41:08.743Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.743Z",
      "birthTime": "2019-05-08T09:41:08.743Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images",
      "base": "logo_small_2x.png",
      "ext": ".png",
      "name": "logo_small_2x",
      "relativeDirectory": "images",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226243,
      "blocks": 32,
      "atimeMs": 1557308635099.3115,
      "mtimeMs": 1557308468742.861,
      "ctimeMs": 1557308468742.861,
      "birthtimeMs": 1557308468742.7915,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.743Z",
      "ctime": "2019-05-08T09:41:08.743Z",
      "birthtime": "2019-05-08T09:41:08.743Z"
    },
    "/Users/yubolun/Desktop/react/content/images/logo_small_gray.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/logo_small_gray.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/logo_small_gray.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "021ef9f4e00feeec42baa91aae80b89c",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/logo_small_gray.png",
      "relativePath": "images/logo_small_gray.png",
      "extension": "png",
      "size": 1797,
      "prettySize": "1.8 kB",
      "modifiedTime": "2019-05-08T09:41:08.743Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.743Z",
      "birthTime": "2019-05-08T09:41:08.743Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images",
      "base": "logo_small_gray.png",
      "ext": ".png",
      "name": "logo_small_gray",
      "relativeDirectory": "images",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226244,
      "blocks": 8,
      "atimeMs": 1557308635099.3394,
      "mtimeMs": 1557308468743.1514,
      "ctimeMs": 1557308468743.1514,
      "birthtimeMs": 1557308468743.0872,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.743Z",
      "ctime": "2019-05-08T09:41:08.743Z",
      "birthtime": "2019-05-08T09:41:08.743Z"
    },
    "/Users/yubolun/Desktop/react/content/images/logo_small_gray_2x.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/logo_small_gray_2x.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/logo_small_gray_2x.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "cd272cd4dd80fe7ce8069353fbe5f0ca",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/logo_small_gray_2x.png",
      "relativePath": "images/logo_small_gray_2x.png",
      "extension": "png",
      "size": 4313,
      "prettySize": "4.31 kB",
      "modifiedTime": "2019-05-08T09:41:08.743Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.743Z",
      "birthTime": "2019-05-08T09:41:08.743Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images",
      "base": "logo_small_gray_2x.png",
      "ext": ".png",
      "name": "logo_small_gray_2x",
      "relativeDirectory": "images",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226245,
      "blocks": 16,
      "atimeMs": 1557308635099.343,
      "mtimeMs": 1557308468743.3125,
      "ctimeMs": 1557308468743.3125,
      "birthtimeMs": 1557308468743.2612,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.743Z",
      "ctime": "2019-05-08T09:41:08.743Z",
      "birthtime": "2019-05-08T09:41:08.743Z"
    },
    "/Users/yubolun/Desktop/react/content/images/noise.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/noise.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/noise.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "915749cd3d0bd959e00f5dd5627eb794",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/noise.png",
      "relativePath": "images/noise.png",
      "extension": "png",
      "size": 22596,
      "prettySize": "22.6 kB",
      "modifiedTime": "2019-05-08T09:41:08.744Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.744Z",
      "birthTime": "2019-05-08T09:41:08.743Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images",
      "base": "noise.png",
      "ext": ".png",
      "name": "noise",
      "relativeDirectory": "images",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226246,
      "blocks": 48,
      "atimeMs": 1557308635099.346,
      "mtimeMs": 1557308468743.506,
      "ctimeMs": 1557308468743.506,
      "birthtimeMs": 1557308468743.4526,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.744Z",
      "ctime": "2019-05-08T09:41:08.744Z",
      "birthtime": "2019-05-08T09:41:08.743Z"
    },
    "/Users/yubolun/Desktop/react/content/images/oss_logo.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/oss_logo.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/oss_logo.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "7c4422e43a85dfb456682c253834b72c",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/oss_logo.png",
      "relativePath": "images/oss_logo.png",
      "extension": "png",
      "size": 3964,
      "prettySize": "3.96 kB",
      "modifiedTime": "2019-05-08T09:41:08.744Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.744Z",
      "birthTime": "2019-05-08T09:41:08.744Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images",
      "base": "oss_logo.png",
      "ext": ".png",
      "name": "oss_logo",
      "relativeDirectory": "images",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226247,
      "blocks": 8,
      "atimeMs": 1557308635099.3486,
      "mtimeMs": 1557308468743.6821,
      "ctimeMs": 1557308468743.6821,
      "birthtimeMs": 1557308468743.6233,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.744Z",
      "ctime": "2019-05-08T09:41:08.744Z",
      "birthtime": "2019-05-08T09:41:08.744Z"
    },
    "/Users/yubolun/Desktop/react/content/images/search.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/search.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/search.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "5da9d7d556adba5278cc696b3b4fd3d7",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/search.png",
      "relativePath": "images/search.png",
      "extension": "png",
      "size": 244,
      "prettySize": "244 B",
      "modifiedTime": "2019-05-08T09:41:08.744Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.744Z",
      "birthTime": "2019-05-08T09:41:08.744Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images",
      "base": "search.png",
      "ext": ".png",
      "name": "search",
      "relativeDirectory": "images",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226248,
      "blocks": 8,
      "atimeMs": 1557308635099.3516,
      "mtimeMs": 1557308468743.842,
      "ctimeMs": 1557308468743.842,
      "birthtimeMs": 1557308468743.7842,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.744Z",
      "ctime": "2019-05-08T09:41:08.744Z",
      "birthtime": "2019-05-08T09:41:08.744Z"
    },
    "/Users/yubolun/Desktop/react/content/community/articles.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/articles.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/community/articles.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "cd5d435df6b2de456b033bb48a3d3354",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/articles.md",
      "relativePath": "community/articles.md",
      "extension": "md",
      "size": 1318,
      "prettySize": "1.32 kB",
      "modifiedTime": "2019-05-08T09:41:08.574Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.574Z",
      "birthTime": "2019-05-08T09:41:08.574Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "articles.md",
      "ext": ".md",
      "name": "articles",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225996,
      "blocks": 8,
      "atimeMs": 1557308635098.3286,
      "mtimeMs": 1557308468573.9153,
      "ctimeMs": 1557308468573.9153,
      "birthtimeMs": 1557308468573.6084,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.574Z",
      "ctime": "2019-05-08T09:41:08.574Z",
      "birthtime": "2019-05-08T09:41:08.574Z"
    },
    "/Users/yubolun/Desktop/react/content/community/complementary-tools.it-IT.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/complementary-tools.it-IT.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/community/complementary-tools.it-IT.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "820453d7af3f02b575fa221438be8da6",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/complementary-tools.it-IT.md",
      "relativePath": "community/complementary-tools.it-IT.md",
      "extension": "md",
      "size": 141,
      "prettySize": "141 B",
      "modifiedTime": "2019-05-08T09:41:08.575Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.575Z",
      "birthTime": "2019-05-08T09:41:08.575Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "complementary-tools.it-IT.md",
      "ext": ".md",
      "name": "complementary-tools.it-IT",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225997,
      "blocks": 8,
      "atimeMs": 1557308635098.3315,
      "mtimeMs": 1557308468574.943,
      "ctimeMs": 1557308468574.943,
      "birthtimeMs": 1557308468574.8845,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.575Z",
      "ctime": "2019-05-08T09:41:08.575Z",
      "birthtime": "2019-05-08T09:41:08.575Z"
    },
    "/Users/yubolun/Desktop/react/content/community/complementary-tools.ko-KR.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/complementary-tools.ko-KR.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/community/complementary-tools.ko-KR.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "9ee81197e02150551f1366ef4c7701b4",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/complementary-tools.ko-KR.md",
      "relativePath": "community/complementary-tools.ko-KR.md",
      "extension": "md",
      "size": 141,
      "prettySize": "141 B",
      "modifiedTime": "2019-05-08T09:41:08.575Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.575Z",
      "birthTime": "2019-05-08T09:41:08.575Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "complementary-tools.ko-KR.md",
      "ext": ".md",
      "name": "complementary-tools.ko-KR",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225998,
      "blocks": 8,
      "atimeMs": 1557308635098.3347,
      "mtimeMs": 1557308468575.1077,
      "ctimeMs": 1557308468575.1077,
      "birthtimeMs": 1557308468575.0547,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.575Z",
      "ctime": "2019-05-08T09:41:08.575Z",
      "birthtime": "2019-05-08T09:41:08.575Z"
    },
    "/Users/yubolun/Desktop/react/content/community/complementary-tools.zh-CN.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/complementary-tools.zh-CN.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/community/complementary-tools.zh-CN.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "ad1e871d8187f1b9e1d482e9f26b9742",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/complementary-tools.zh-CN.md",
      "relativePath": "community/complementary-tools.zh-CN.md",
      "extension": "md",
      "size": 141,
      "prettySize": "141 B",
      "modifiedTime": "2019-05-08T09:41:08.575Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.575Z",
      "birthTime": "2019-05-08T09:41:08.575Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "complementary-tools.zh-CN.md",
      "ext": ".md",
      "name": "complementary-tools.zh-CN",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226000,
      "blocks": 8,
      "atimeMs": 1557308635098.3406,
      "mtimeMs": 1557308468575.4202,
      "ctimeMs": 1557308468575.4202,
      "birthtimeMs": 1557308468575.3777,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.575Z",
      "ctime": "2019-05-08T09:41:08.575Z",
      "birthtime": "2019-05-08T09:41:08.575Z"
    },
    "/Users/yubolun/Desktop/react/content/community/complementary-tools.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/complementary-tools.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/community/complementary-tools.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "04ef107b3f8240badbcb1165880e2fa8",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/complementary-tools.md",
      "relativePath": "community/complementary-tools.md",
      "extension": "md",
      "size": 135,
      "prettySize": "135 B",
      "modifiedTime": "2019-05-08T09:41:08.575Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.575Z",
      "birthTime": "2019-05-08T09:41:08.575Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "complementary-tools.md",
      "ext": ".md",
      "name": "complementary-tools",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225999,
      "blocks": 8,
      "atimeMs": 1557308635098.3376,
      "mtimeMs": 1557308468575.28,
      "ctimeMs": 1557308468575.28,
      "birthtimeMs": 1557308468575.2122,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.575Z",
      "ctime": "2019-05-08T09:41:08.575Z",
      "birthtime": "2019-05-08T09:41:08.575Z"
    },
    "/Users/yubolun/Desktop/react/content/community/conferences.it-IT.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/conferences.it-IT.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/community/conferences.it-IT.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "466c4fff163b65beac526f5b907026c3",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/conferences.it-IT.md",
      "relativePath": "community/conferences.it-IT.md",
      "extension": "md",
      "size": 661,
      "prettySize": "661 B",
      "modifiedTime": "2019-05-08T09:41:08.576Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.576Z",
      "birthTime": "2019-05-08T09:41:08.576Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "conferences.it-IT.md",
      "ext": ".md",
      "name": "conferences.it-IT",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226001,
      "blocks": 8,
      "atimeMs": 1557308635098.3435,
      "mtimeMs": 1557308468575.5764,
      "ctimeMs": 1557308468575.5764,
      "birthtimeMs": 1557308468575.5203,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.576Z",
      "ctime": "2019-05-08T09:41:08.576Z",
      "birthtime": "2019-05-08T09:41:08.576Z"
    },
    "/Users/yubolun/Desktop/react/content/community/conferences.ko-KR.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/conferences.ko-KR.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/community/conferences.ko-KR.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "c40882590072432bd18a651e94a03123",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/conferences.ko-KR.md",
      "relativePath": "community/conferences.ko-KR.md",
      "extension": "md",
      "size": 694,
      "prettySize": "694 B",
      "modifiedTime": "2019-05-08T09:41:08.576Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.576Z",
      "birthTime": "2019-05-08T09:41:08.576Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "conferences.ko-KR.md",
      "ext": ".md",
      "name": "conferences.ko-KR",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226002,
      "blocks": 8,
      "atimeMs": 1557308635098.3462,
      "mtimeMs": 1557308468575.7688,
      "ctimeMs": 1557308468575.7688,
      "birthtimeMs": 1557308468575.6853,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.576Z",
      "ctime": "2019-05-08T09:41:08.576Z",
      "birthtime": "2019-05-08T09:41:08.576Z"
    },
    "/Users/yubolun/Desktop/react/content/community/conferences.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/conferences.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/community/conferences.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "18790eddfc526c50074330874706529d",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/conferences.md",
      "relativePath": "community/conferences.md",
      "extension": "md",
      "size": 10673,
      "prettySize": "10.7 kB",
      "modifiedTime": "2019-05-08T09:41:08.576Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.576Z",
      "birthTime": "2019-05-08T09:41:08.576Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "conferences.md",
      "ext": ".md",
      "name": "conferences",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226003,
      "blocks": 24,
      "atimeMs": 1557308635098.349,
      "mtimeMs": 1557308468576.1108,
      "ctimeMs": 1557308468576.1108,
      "birthtimeMs": 1557308468576.059,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.576Z",
      "ctime": "2019-05-08T09:41:08.576Z",
      "birthtime": "2019-05-08T09:41:08.576Z"
    },
    "/Users/yubolun/Desktop/react/content/community/conferences.zh-CN.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/conferences.zh-CN.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/community/conferences.zh-CN.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "07829d20a58167b23c01412a0006cfd8",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/conferences.zh-CN.md",
      "relativePath": "community/conferences.zh-CN.md",
      "extension": "md",
      "size": 929,
      "prettySize": "929 B",
      "modifiedTime": "2019-05-08T09:41:08.576Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.576Z",
      "birthTime": "2019-05-08T09:41:08.576Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "conferences.zh-CN.md",
      "ext": ".md",
      "name": "conferences.zh-CN",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226004,
      "blocks": 8,
      "atimeMs": 1557308635098.3523,
      "mtimeMs": 1557308468576.2656,
      "ctimeMs": 1557308468576.2656,
      "birthtimeMs": 1557308468576.2192,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.576Z",
      "ctime": "2019-05-08T09:41:08.576Z",
      "birthtime": "2019-05-08T09:41:08.576Z"
    },
    "/Users/yubolun/Desktop/react/content/community/courses.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/courses.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/community/courses.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "fb155da8eb31c38644dfe6d3d683032b",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/courses.md",
      "relativePath": "community/courses.md",
      "extension": "md",
      "size": 2692,
      "prettySize": "2.69 kB",
      "modifiedTime": "2019-05-08T09:41:08.576Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.576Z",
      "birthTime": "2019-05-08T09:41:08.576Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "courses.md",
      "ext": ".md",
      "name": "courses",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226005,
      "blocks": 8,
      "atimeMs": 1557308635098.355,
      "mtimeMs": 1557308468576.4302,
      "ctimeMs": 1557308468576.4302,
      "birthtimeMs": 1557308468576.382,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.576Z",
      "ctime": "2019-05-08T09:41:08.576Z",
      "birthtime": "2019-05-08T09:41:08.576Z"
    },
    "/Users/yubolun/Desktop/react/content/community/examples.it-IT.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/examples.it-IT.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/community/examples.it-IT.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "322055b54824b304bc41c0bf32c9623b",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/examples.it-IT.md",
      "relativePath": "community/examples.it-IT.md",
      "extension": "md",
      "size": 119,
      "prettySize": "119 B",
      "modifiedTime": "2019-05-08T09:41:08.577Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.577Z",
      "birthTime": "2019-05-08T09:41:08.577Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "examples.it-IT.md",
      "ext": ".md",
      "name": "examples.it-IT",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226006,
      "blocks": 8,
      "atimeMs": 1557308635098.3577,
      "mtimeMs": 1557308468576.569,
      "ctimeMs": 1557308468576.569,
      "birthtimeMs": 1557308468576.5261,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.577Z",
      "ctime": "2019-05-08T09:41:08.577Z",
      "birthtime": "2019-05-08T09:41:08.577Z"
    },
    "/Users/yubolun/Desktop/react/content/community/examples.ko-KR.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/examples.ko-KR.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/community/examples.ko-KR.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "8dff825b86b9714f6fa1b96e4eda1ed1",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/examples.ko-KR.md",
      "relativePath": "community/examples.ko-KR.md",
      "extension": "md",
      "size": 119,
      "prettySize": "119 B",
      "modifiedTime": "2019-05-08T09:41:08.577Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.577Z",
      "birthTime": "2019-05-08T09:41:08.577Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "examples.ko-KR.md",
      "ext": ".md",
      "name": "examples.ko-KR",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226007,
      "blocks": 8,
      "atimeMs": 1557308635098.36,
      "mtimeMs": 1557308468576.7148,
      "ctimeMs": 1557308468576.7148,
      "birthtimeMs": 1557308468576.66,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.577Z",
      "ctime": "2019-05-08T09:41:08.577Z",
      "birthtime": "2019-05-08T09:41:08.577Z"
    },
    "/Users/yubolun/Desktop/react/content/community/examples.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/examples.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/community/examples.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "044c690f8f3100606f74c4e6ecadf55f",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/examples.md",
      "relativePath": "community/examples.md",
      "extension": "md",
      "size": 2092,
      "prettySize": "2.09 kB",
      "modifiedTime": "2019-05-08T09:41:08.577Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.577Z",
      "birthTime": "2019-05-08T09:41:08.577Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "examples.md",
      "ext": ".md",
      "name": "examples",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226008,
      "blocks": 8,
      "atimeMs": 1557308635098.363,
      "mtimeMs": 1557308468576.8743,
      "ctimeMs": 1557308468576.8743,
      "birthtimeMs": 1557308468576.8267,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.577Z",
      "ctime": "2019-05-08T09:41:08.577Z",
      "birthtime": "2019-05-08T09:41:08.577Z"
    },
    "/Users/yubolun/Desktop/react/content/community/examples.zh-CN.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/examples.zh-CN.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/community/examples.zh-CN.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "0957ab83e1121f125da5984979fb4bf0",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/examples.zh-CN.md",
      "relativePath": "community/examples.zh-CN.md",
      "extension": "md",
      "size": 119,
      "prettySize": "119 B",
      "modifiedTime": "2019-05-08T09:41:08.577Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.577Z",
      "birthTime": "2019-05-08T09:41:08.577Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "examples.zh-CN.md",
      "ext": ".md",
      "name": "examples.zh-CN",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226009,
      "blocks": 8,
      "atimeMs": 1557308635098.3657,
      "mtimeMs": 1557308468577.0493,
      "ctimeMs": 1557308468577.0493,
      "birthtimeMs": 1557308468576.9941,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.577Z",
      "ctime": "2019-05-08T09:41:08.577Z",
      "birthtime": "2019-05-08T09:41:08.577Z"
    },
    "/Users/yubolun/Desktop/react/content/community/external-resources.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/external-resources.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/community/external-resources.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "170c089cb00f97ace9bab37c9c465ca4",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/external-resources.md",
      "relativePath": "community/external-resources.md",
      "extension": "md",
      "size": 915,
      "prettySize": "915 B",
      "modifiedTime": "2019-05-08T09:41:08.577Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.577Z",
      "birthTime": "2019-05-08T09:41:08.577Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "external-resources.md",
      "ext": ".md",
      "name": "external-resources",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226010,
      "blocks": 8,
      "atimeMs": 1557308635098.3687,
      "mtimeMs": 1557308468577.2385,
      "ctimeMs": 1557308468577.2385,
      "birthtimeMs": 1557308468577.1562,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.577Z",
      "ctime": "2019-05-08T09:41:08.577Z",
      "birthtime": "2019-05-08T09:41:08.577Z"
    },
    "/Users/yubolun/Desktop/react/content/community/meetups.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/meetups.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/community/meetups.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "9e5049fd40741d79bffb1978bc79be7d",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/meetups.md",
      "relativePath": "community/meetups.md",
      "extension": "md",
      "size": 4664,
      "prettySize": "4.66 kB",
      "modifiedTime": "2019-05-08T09:41:08.577Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.577Z",
      "birthTime": "2019-05-08T09:41:08.577Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "meetups.md",
      "ext": ".md",
      "name": "meetups",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226011,
      "blocks": 16,
      "atimeMs": 1557308635098.3716,
      "mtimeMs": 1557308468577.47,
      "ctimeMs": 1557308468577.47,
      "birthtimeMs": 1557308468577.4094,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.577Z",
      "ctime": "2019-05-08T09:41:08.577Z",
      "birthtime": "2019-05-08T09:41:08.577Z"
    },
    "/Users/yubolun/Desktop/react/content/community/nav.yml absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/nav.yml absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "bb9b701a8bf6b8945a54d9c6d9303c19",
        "mediaType": "text/yaml",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/nav.yml",
      "relativePath": "community/nav.yml",
      "extension": "yml",
      "size": 886,
      "prettySize": "886 B",
      "modifiedTime": "2019-05-08T09:41:08.578Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.578Z",
      "birthTime": "2019-05-08T09:41:08.578Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "nav.yml",
      "ext": ".yml",
      "name": "nav",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226012,
      "blocks": 8,
      "atimeMs": 1557308635098.3743,
      "mtimeMs": 1557308468577.797,
      "ctimeMs": 1557308468577.797,
      "birthtimeMs": 1557308468577.7385,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.578Z",
      "ctime": "2019-05-08T09:41:08.578Z",
      "birthtime": "2019-05-08T09:41:08.578Z"
    },
    "/Users/yubolun/Desktop/react/content/community/podcasts.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/podcasts.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/community/podcasts.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "e8fac29f5f74267deaa2337290c097b7",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/podcasts.md",
      "relativePath": "community/podcasts.md",
      "extension": "md",
      "size": 935,
      "prettySize": "935 B",
      "modifiedTime": "2019-05-08T09:41:08.578Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.578Z",
      "birthTime": "2019-05-08T09:41:08.578Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "podcasts.md",
      "ext": ".md",
      "name": "podcasts",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226013,
      "blocks": 8,
      "atimeMs": 1557308635098.3772,
      "mtimeMs": 1557308468577.9739,
      "ctimeMs": 1557308468577.9739,
      "birthtimeMs": 1557308468577.9067,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.578Z",
      "ctime": "2019-05-08T09:41:08.578Z",
      "birthtime": "2019-05-08T09:41:08.578Z"
    },
    "/Users/yubolun/Desktop/react/content/community/support.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/support.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/community/support.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "4eb196200138364c1e57120228130f80",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/support.md",
      "relativePath": "community/support.md",
      "extension": "md",
      "size": 1527,
      "prettySize": "1.53 kB",
      "modifiedTime": "2019-05-08T09:41:08.578Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.578Z",
      "birthTime": "2019-05-08T09:41:08.578Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "support.md",
      "ext": ".md",
      "name": "support",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226014,
      "blocks": 8,
      "atimeMs": 1557308635098.38,
      "mtimeMs": 1557308468578.1458,
      "ctimeMs": 1557308468578.1458,
      "birthtimeMs": 1557308468578.1,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.578Z",
      "ctime": "2019-05-08T09:41:08.578Z",
      "birthtime": "2019-05-08T09:41:08.578Z"
    },
    "/Users/yubolun/Desktop/react/content/community/tools-comp-workbenches.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/tools-comp-workbenches.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/community/tools-comp-workbenches.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "ff3e835af239abc6c00d1a830f88a74d",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/tools-comp-workbenches.md",
      "relativePath": "community/tools-comp-workbenches.md",
      "extension": "md",
      "size": 1741,
      "prettySize": "1.74 kB",
      "modifiedTime": "2019-05-08T09:41:08.578Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.578Z",
      "birthTime": "2019-05-08T09:41:08.578Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "tools-comp-workbenches.md",
      "ext": ".md",
      "name": "tools-comp-workbenches",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226015,
      "blocks": 8,
      "atimeMs": 1557308635098.383,
      "mtimeMs": 1557308468578.2944,
      "ctimeMs": 1557308468578.2944,
      "birthtimeMs": 1557308468578.2517,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.578Z",
      "ctime": "2019-05-08T09:41:08.578Z",
      "birthtime": "2019-05-08T09:41:08.578Z"
    },
    "/Users/yubolun/Desktop/react/content/community/tools-data-fetching.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/tools-data-fetching.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/community/tools-data-fetching.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "201692dd34326d94f13f52cb2880d528",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/tools-data-fetching.md",
      "relativePath": "community/tools-data-fetching.md",
      "extension": "md",
      "size": 662,
      "prettySize": "662 B",
      "modifiedTime": "2019-05-08T09:41:08.578Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.578Z",
      "birthTime": "2019-05-08T09:41:08.578Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "tools-data-fetching.md",
      "ext": ".md",
      "name": "tools-data-fetching",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226016,
      "blocks": 8,
      "atimeMs": 1557308635098.386,
      "mtimeMs": 1557308468578.4746,
      "ctimeMs": 1557308468578.4746,
      "birthtimeMs": 1557308468578.4226,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.578Z",
      "ctime": "2019-05-08T09:41:08.578Z",
      "birthtime": "2019-05-08T09:41:08.578Z"
    },
    "/Users/yubolun/Desktop/react/content/community/tools-debugging.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/tools-debugging.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/community/tools-debugging.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "56c42b087f5b456326d379ea866afd67",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/tools-debugging.md",
      "relativePath": "community/tools-debugging.md",
      "extension": "md",
      "size": 581,
      "prettySize": "581 B",
      "modifiedTime": "2019-05-08T09:41:08.579Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.579Z",
      "birthTime": "2019-05-08T09:41:08.579Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "tools-debugging.md",
      "ext": ".md",
      "name": "tools-debugging",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226017,
      "blocks": 8,
      "atimeMs": 1557308635098.389,
      "mtimeMs": 1557308468578.625,
      "ctimeMs": 1557308468578.625,
      "birthtimeMs": 1557308468578.5747,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.579Z",
      "ctime": "2019-05-08T09:41:08.579Z",
      "birthtime": "2019-05-08T09:41:08.579Z"
    },
    "/Users/yubolun/Desktop/react/content/community/tools-jsx.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/tools-jsx.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/community/tools-jsx.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "7485ab1649432b16ec40f5aae2cb9711",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/tools-jsx.md",
      "relativePath": "community/tools-jsx.md",
      "extension": "md",
      "size": 6093,
      "prettySize": "6.09 kB",
      "modifiedTime": "2019-05-08T09:41:08.579Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.579Z",
      "birthTime": "2019-05-08T09:41:08.579Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "tools-jsx.md",
      "ext": ".md",
      "name": "tools-jsx",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226018,
      "blocks": 16,
      "atimeMs": 1557308635098.3918,
      "mtimeMs": 1557308468578.9011,
      "ctimeMs": 1557308468578.9011,
      "birthtimeMs": 1557308468578.8174,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.579Z",
      "ctime": "2019-05-08T09:41:08.579Z",
      "birthtime": "2019-05-08T09:41:08.579Z"
    },
    "/Users/yubolun/Desktop/react/content/community/tools-misc.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/tools-misc.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/community/tools-misc.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "1f80e304fd29f421e97b19eb2f1a973a",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/tools-misc.md",
      "relativePath": "community/tools-misc.md",
      "extension": "md",
      "size": 1703,
      "prettySize": "1.7 kB",
      "modifiedTime": "2019-05-08T09:41:08.579Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.579Z",
      "birthTime": "2019-05-08T09:41:08.579Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "tools-misc.md",
      "ext": ".md",
      "name": "tools-misc",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226019,
      "blocks": 8,
      "atimeMs": 1557308635098.3945,
      "mtimeMs": 1557308468579.1006,
      "ctimeMs": 1557308468579.1006,
      "birthtimeMs": 1557308468579.0334,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.579Z",
      "ctime": "2019-05-08T09:41:08.579Z",
      "birthtime": "2019-05-08T09:41:08.579Z"
    },
    "/Users/yubolun/Desktop/react/content/community/tools-model-mgmt.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/tools-model-mgmt.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/community/tools-model-mgmt.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "dcaece2d87a06604514211ff46a22232",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/tools-model-mgmt.md",
      "relativePath": "community/tools-model-mgmt.md",
      "extension": "md",
      "size": 1770,
      "prettySize": "1.77 kB",
      "modifiedTime": "2019-05-08T09:41:08.579Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.579Z",
      "birthTime": "2019-05-08T09:41:08.579Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "tools-model-mgmt.md",
      "ext": ".md",
      "name": "tools-model-mgmt",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226020,
      "blocks": 8,
      "atimeMs": 1557308635098.3975,
      "mtimeMs": 1557308468579.3325,
      "ctimeMs": 1557308468579.3325,
      "birthtimeMs": 1557308468579.2834,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.579Z",
      "ctime": "2019-05-08T09:41:08.579Z",
      "birthtime": "2019-05-08T09:41:08.579Z"
    },
    "/Users/yubolun/Desktop/react/content/community/tools-routing.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/tools-routing.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/community/tools-routing.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "54fc6fb7f80ada079477128e7af3c29d",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/tools-routing.md",
      "relativePath": "community/tools-routing.md",
      "extension": "md",
      "size": 1388,
      "prettySize": "1.39 kB",
      "modifiedTime": "2019-05-08T09:41:08.580Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.580Z",
      "birthTime": "2019-05-08T09:41:08.579Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "tools-routing.md",
      "ext": ".md",
      "name": "tools-routing",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226021,
      "blocks": 8,
      "atimeMs": 1557308635098.4001,
      "mtimeMs": 1557308468579.5134,
      "ctimeMs": 1557308468579.5134,
      "birthtimeMs": 1557308468579.4673,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.580Z",
      "ctime": "2019-05-08T09:41:08.580Z",
      "birthtime": "2019-05-08T09:41:08.579Z"
    },
    "/Users/yubolun/Desktop/react/content/community/tools-starter-kits.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/tools-starter-kits.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/community/tools-starter-kits.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "deb82d91b786faaa64ada61e638ea2f9",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/tools-starter-kits.md",
      "relativePath": "community/tools-starter-kits.md",
      "extension": "md",
      "size": 5090,
      "prettySize": "5.09 kB",
      "modifiedTime": "2019-05-08T09:41:08.580Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.580Z",
      "birthTime": "2019-05-08T09:41:08.580Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "tools-starter-kits.md",
      "ext": ".md",
      "name": "tools-starter-kits",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226022,
      "blocks": 16,
      "atimeMs": 1557308635098.4033,
      "mtimeMs": 1557308468579.7273,
      "ctimeMs": 1557308468579.7273,
      "birthtimeMs": 1557308468579.6672,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.580Z",
      "ctime": "2019-05-08T09:41:08.580Z",
      "birthtime": "2019-05-08T09:41:08.580Z"
    },
    "/Users/yubolun/Desktop/react/content/community/tools-testing.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/tools-testing.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/community/tools-testing.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "f33a2768ee07a9ea07f95e4d41255933",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/tools-testing.md",
      "relativePath": "community/tools-testing.md",
      "extension": "md",
      "size": 1032,
      "prettySize": "1.03 kB",
      "modifiedTime": "2019-05-08T09:41:08.580Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.580Z",
      "birthTime": "2019-05-08T09:41:08.580Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "tools-testing.md",
      "ext": ".md",
      "name": "tools-testing",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226023,
      "blocks": 8,
      "atimeMs": 1557308635098.406,
      "mtimeMs": 1557308468580.0178,
      "ctimeMs": 1557308468580.0178,
      "birthtimeMs": 1557308468579.9338,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.580Z",
      "ctime": "2019-05-08T09:41:08.580Z",
      "birthtime": "2019-05-08T09:41:08.580Z"
    },
    "/Users/yubolun/Desktop/react/content/community/tools-ui-components.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/tools-ui-components.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/community/tools-ui-components.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "c11983b6d87a4e6651f9a6824bb722d6",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/tools-ui-components.md",
      "relativePath": "community/tools-ui-components.md",
      "extension": "md",
      "size": 8546,
      "prettySize": "8.55 kB",
      "modifiedTime": "2019-05-08T09:41:08.580Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.580Z",
      "birthTime": "2019-05-08T09:41:08.580Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "tools-ui-components.md",
      "ext": ".md",
      "name": "tools-ui-components",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226024,
      "blocks": 24,
      "atimeMs": 1557308635098.4087,
      "mtimeMs": 1557308468580.32,
      "ctimeMs": 1557308468580.32,
      "birthtimeMs": 1557308468580.2712,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.580Z",
      "ctime": "2019-05-08T09:41:08.580Z",
      "birthtime": "2019-05-08T09:41:08.580Z"
    },
    "/Users/yubolun/Desktop/react/content/community/videos.it-IT.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/videos.it-IT.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/community/videos.it-IT.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "0202fb56b561e6022efa2b33535c5158",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/videos.it-IT.md",
      "relativePath": "community/videos.it-IT.md",
      "extension": "md",
      "size": 8412,
      "prettySize": "8.41 kB",
      "modifiedTime": "2019-05-08T09:41:08.581Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.581Z",
      "birthTime": "2019-05-08T09:41:08.580Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "videos.it-IT.md",
      "ext": ".md",
      "name": "videos.it-IT",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226025,
      "blocks": 24,
      "atimeMs": 1557308635098.4116,
      "mtimeMs": 1557308468580.527,
      "ctimeMs": 1557308468580.527,
      "birthtimeMs": 1557308468580.4678,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.581Z",
      "ctime": "2019-05-08T09:41:08.581Z",
      "birthtime": "2019-05-08T09:41:08.580Z"
    },
    "/Users/yubolun/Desktop/react/content/community/videos.ko-KR.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/videos.ko-KR.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/community/videos.ko-KR.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "c08df1460d35114b8b8244052a3139c1",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/videos.ko-KR.md",
      "relativePath": "community/videos.ko-KR.md",
      "extension": "md",
      "size": 8711,
      "prettySize": "8.71 kB",
      "modifiedTime": "2019-05-08T09:41:08.581Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.581Z",
      "birthTime": "2019-05-08T09:41:08.581Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "videos.ko-KR.md",
      "ext": ".md",
      "name": "videos.ko-KR",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226026,
      "blocks": 24,
      "atimeMs": 1557308635098.4155,
      "mtimeMs": 1557308468580.7146,
      "ctimeMs": 1557308468580.7146,
      "birthtimeMs": 1557308468580.6694,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.581Z",
      "ctime": "2019-05-08T09:41:08.581Z",
      "birthtime": "2019-05-08T09:41:08.581Z"
    },
    "/Users/yubolun/Desktop/react/content/community/videos.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/videos.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/community/videos.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "6b17650c51646da0c25b603e4d8b1136",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/videos.md",
      "relativePath": "community/videos.md",
      "extension": "md",
      "size": 4739,
      "prettySize": "4.74 kB",
      "modifiedTime": "2019-05-08T09:41:08.581Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.581Z",
      "birthTime": "2019-05-08T09:41:08.581Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "videos.md",
      "ext": ".md",
      "name": "videos",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226027,
      "blocks": 16,
      "atimeMs": 1557308635098.4197,
      "mtimeMs": 1557308468580.8948,
      "ctimeMs": 1557308468580.8948,
      "birthtimeMs": 1557308468580.85,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.581Z",
      "ctime": "2019-05-08T09:41:08.581Z",
      "birthtime": "2019-05-08T09:41:08.581Z"
    },
    "/Users/yubolun/Desktop/react/content/community/videos.zh-CN.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/community/videos.zh-CN.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/community/videos.zh-CN.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "938258d027d43f6f63afcceda2a92182",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/community/videos.zh-CN.md",
      "relativePath": "community/videos.zh-CN.md",
      "extension": "md",
      "size": 7758,
      "prettySize": "7.76 kB",
      "modifiedTime": "2019-05-08T09:41:08.581Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.581Z",
      "birthTime": "2019-05-08T09:41:08.581Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/community",
      "base": "videos.zh-CN.md",
      "ext": ".md",
      "name": "videos.zh-CN",
      "relativeDirectory": "community",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226028,
      "blocks": 16,
      "atimeMs": 1557308635098.4243,
      "mtimeMs": 1557308468581.158,
      "ctimeMs": 1557308468581.158,
      "birthtimeMs": 1557308468581.1055,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.581Z",
      "ctime": "2019-05-08T09:41:08.581Z",
      "birthtime": "2019-05-08T09:41:08.581Z"
    },
    "/Users/yubolun/Desktop/react/content/tutorial/nav.yml absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/tutorial/nav.yml absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "6bf950b6e48bf0b210ddf08861f01ec6",
        "mediaType": "text/yaml",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/tutorial/nav.yml",
      "relativePath": "tutorial/nav.yml",
      "extension": "yml",
      "size": 3210,
      "prettySize": "3.21 kB",
      "modifiedTime": "2019-05-08T09:41:08.745Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.745Z",
      "birthTime": "2019-05-08T09:41:08.745Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/tutorial",
      "base": "nav.yml",
      "ext": ".yml",
      "name": "nav",
      "relativeDirectory": "tutorial",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226255,
      "blocks": 8,
      "atimeMs": 1557308635099.3713,
      "mtimeMs": 1557308468745.1245,
      "ctimeMs": 1557308468745.1245,
      "birthtimeMs": 1557308468745.0889,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.745Z",
      "ctime": "2019-05-08T09:41:08.745Z",
      "birthtime": "2019-05-08T09:41:08.745Z"
    },
    "/Users/yubolun/Desktop/react/content/warnings/dont-call-proptypes.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/warnings/dont-call-proptypes.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/warnings/dont-call-proptypes.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "b62d475271e81aaee457bd979def7075",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/warnings/dont-call-proptypes.md",
      "relativePath": "warnings/dont-call-proptypes.md",
      "extension": "md",
      "size": 4141,
      "prettySize": "4.14 kB",
      "modifiedTime": "2019-05-08T09:41:08.746Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.746Z",
      "birthTime": "2019-05-08T09:41:08.746Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/warnings",
      "base": "dont-call-proptypes.md",
      "ext": ".md",
      "name": "dont-call-proptypes",
      "relativeDirectory": "warnings",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226259,
      "blocks": 16,
      "atimeMs": 1557308635099.3994,
      "mtimeMs": 1557308468745.7192,
      "ctimeMs": 1557308468745.7192,
      "birthtimeMs": 1557308468745.6626,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.746Z",
      "ctime": "2019-05-08T09:41:08.746Z",
      "birthtime": "2019-05-08T09:41:08.746Z"
    },
    "/Users/yubolun/Desktop/react/content/tutorial/tutorial.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/tutorial/tutorial.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/tutorial/tutorial.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "e4b9b25ca84258f3bad3a74be3917d90",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/tutorial/tutorial.md",
      "relativePath": "tutorial/tutorial.md",
      "extension": "md",
      "size": 44456,
      "prettySize": "44.5 kB",
      "modifiedTime": "2019-05-08T09:41:08.745Z",
      "accessTime": "2019-05-08T09:41:12.763Z",
      "changeTime": "2019-05-08T09:41:08.745Z",
      "birthTime": "2019-05-08T09:41:08.745Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/tutorial",
      "base": "tutorial.md",
      "ext": ".md",
      "name": "tutorial",
      "relativeDirectory": "tutorial",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226256,
      "blocks": 88,
      "atimeMs": 1557308472762.699,
      "mtimeMs": 1557308468745.3772,
      "ctimeMs": 1557308468745.3772,
      "birthtimeMs": 1557308468745.3372,
      "atime": "2019-05-08T09:41:12.763Z",
      "mtime": "2019-05-08T09:41:08.745Z",
      "ctime": "2019-05-08T09:41:08.745Z",
      "birthtime": "2019-05-08T09:41:08.745Z"
    },
    "/Users/yubolun/Desktop/react/content/warnings/invalid-aria-prop.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/warnings/invalid-aria-prop.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/warnings/invalid-aria-prop.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "de9fd25a76a0a1dcb77c9c4f86cf3058",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/warnings/invalid-aria-prop.md",
      "relativePath": "warnings/invalid-aria-prop.md",
      "extension": "md",
      "size": 773,
      "prettySize": "773 B",
      "modifiedTime": "2019-05-08T09:41:08.746Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.746Z",
      "birthTime": "2019-05-08T09:41:08.746Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/warnings",
      "base": "invalid-aria-prop.md",
      "ext": ".md",
      "name": "invalid-aria-prop",
      "relativeDirectory": "warnings",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226260,
      "blocks": 8,
      "atimeMs": 1557308635099.402,
      "mtimeMs": 1557308468745.8972,
      "ctimeMs": 1557308468745.8972,
      "birthtimeMs": 1557308468745.8381,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.746Z",
      "ctime": "2019-05-08T09:41:08.746Z",
      "birthtime": "2019-05-08T09:41:08.746Z"
    },
    "/Users/yubolun/Desktop/react/content/warnings/legacy-factories.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/warnings/legacy-factories.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/warnings/legacy-factories.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "559e20bf2eabfca60cb139085c27c3d8",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/warnings/legacy-factories.md",
      "relativePath": "warnings/legacy-factories.md",
      "extension": "md",
      "size": 1491,
      "prettySize": "1.49 kB",
      "modifiedTime": "2019-05-08T09:41:08.746Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.746Z",
      "birthTime": "2019-05-08T09:41:08.746Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/warnings",
      "base": "legacy-factories.md",
      "ext": ".md",
      "name": "legacy-factories",
      "relativeDirectory": "warnings",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226261,
      "blocks": 8,
      "atimeMs": 1557308635099.4048,
      "mtimeMs": 1557308468746.0737,
      "ctimeMs": 1557308468746.0737,
      "birthtimeMs": 1557308468746.014,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.746Z",
      "ctime": "2019-05-08T09:41:08.746Z",
      "birthtime": "2019-05-08T09:41:08.746Z"
    },
    "/Users/yubolun/Desktop/react/content/warnings/refs-must-have-owner.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/warnings/refs-must-have-owner.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/warnings/refs-must-have-owner.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "7ebf361b8e31a6ec8d96be43a81521e3",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/warnings/refs-must-have-owner.md",
      "relativePath": "warnings/refs-must-have-owner.md",
      "extension": "md",
      "size": 1709,
      "prettySize": "1.71 kB",
      "modifiedTime": "2019-05-08T09:41:08.746Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.746Z",
      "birthTime": "2019-05-08T09:41:08.746Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/warnings",
      "base": "refs-must-have-owner.md",
      "ext": ".md",
      "name": "refs-must-have-owner",
      "relativeDirectory": "warnings",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226262,
      "blocks": 8,
      "atimeMs": 1557308635099.4077,
      "mtimeMs": 1557308468746.2532,
      "ctimeMs": 1557308468746.2532,
      "birthtimeMs": 1557308468746.2012,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.746Z",
      "ctime": "2019-05-08T09:41:08.746Z",
      "birthtime": "2019-05-08T09:41:08.746Z"
    },
    "/Users/yubolun/Desktop/react/content/warnings/special-props.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/warnings/special-props.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/warnings/special-props.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "46fd414d675325c3b12cdac18a6029d3",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/warnings/special-props.md",
      "relativePath": "warnings/special-props.md",
      "extension": "md",
      "size": 646,
      "prettySize": "646 B",
      "modifiedTime": "2019-05-08T09:41:08.746Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.746Z",
      "birthTime": "2019-05-08T09:41:08.746Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/warnings",
      "base": "special-props.md",
      "ext": ".md",
      "name": "special-props",
      "relativeDirectory": "warnings",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226263,
      "blocks": 8,
      "atimeMs": 1557308635099.4102,
      "mtimeMs": 1557308468746.423,
      "ctimeMs": 1557308468746.423,
      "birthtimeMs": 1557308468746.3662,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.746Z",
      "ctime": "2019-05-08T09:41:08.746Z",
      "birthtime": "2019-05-08T09:41:08.746Z"
    },
    "/Users/yubolun/Desktop/react/content/warnings/unknown-prop.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/warnings/unknown-prop.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/warnings/unknown-prop.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "48e2d4769c03badb94a0bd405cc81aa2",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/warnings/unknown-prop.md",
      "relativePath": "warnings/unknown-prop.md",
      "extension": "md",
      "size": 3107,
      "prettySize": "3.11 kB",
      "modifiedTime": "2019-05-08T09:41:08.747Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.747Z",
      "birthTime": "2019-05-08T09:41:08.747Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/warnings",
      "base": "unknown-prop.md",
      "ext": ".md",
      "name": "unknown-prop",
      "relativeDirectory": "warnings",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226264,
      "blocks": 8,
      "atimeMs": 1557308635099.4128,
      "mtimeMs": 1557308468746.6326,
      "ctimeMs": 1557308468746.6326,
      "birthtimeMs": 1557308468746.5828,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.747Z",
      "ctime": "2019-05-08T09:41:08.747Z",
      "birthtime": "2019-05-08T09:41:08.747Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/accessibility.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/accessibility.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/accessibility.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "9f900a29d7cbf096f507c20b1ba8a8a2",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/accessibility.md",
      "relativePath": "docs/accessibility.md",
      "extension": "md",
      "size": 12287,
      "prettySize": "12.3 kB",
      "modifiedTime": "2019-05-08T09:41:08.581Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.581Z",
      "birthTime": "2019-05-08T09:41:08.581Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "accessibility.md",
      "ext": ".md",
      "name": "accessibility",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226030,
      "blocks": 24,
      "atimeMs": 1557308635098.442,
      "mtimeMs": 1557308468581.4907,
      "ctimeMs": 1557308468581.4907,
      "birthtimeMs": 1557308468581.4387,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.581Z",
      "ctime": "2019-05-08T09:41:08.581Z",
      "birthtime": "2019-05-08T09:41:08.581Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/add-react-to-a-new-app.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/add-react-to-a-new-app.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/add-react-to-a-new-app.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "5eda418978dea2c8349f4d88d2df3412",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/add-react-to-a-new-app.md",
      "relativePath": "docs/add-react-to-a-new-app.md",
      "extension": "md",
      "size": 3001,
      "prettySize": "3 kB",
      "modifiedTime": "2019-05-08T09:41:08.582Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.582Z",
      "birthTime": "2019-05-08T09:41:08.582Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "add-react-to-a-new-app.md",
      "ext": ".md",
      "name": "add-react-to-a-new-app",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226031,
      "blocks": 8,
      "atimeMs": 1557308635098.445,
      "mtimeMs": 1557308468581.7808,
      "ctimeMs": 1557308468581.7808,
      "birthtimeMs": 1557308468581.733,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.582Z",
      "ctime": "2019-05-08T09:41:08.582Z",
      "birthtime": "2019-05-08T09:41:08.582Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/add-react-to-an-existing-app.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/add-react-to-an-existing-app.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/add-react-to-an-existing-app.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "a034f5a1c4f5808d31acc683aee8b8a1",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/add-react-to-an-existing-app.md",
      "relativePath": "docs/add-react-to-an-existing-app.md",
      "extension": "md",
      "size": 4887,
      "prettySize": "4.89 kB",
      "modifiedTime": "2019-05-08T09:41:08.582Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.582Z",
      "birthTime": "2019-05-08T09:41:08.582Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "add-react-to-an-existing-app.md",
      "ext": ".md",
      "name": "add-react-to-an-existing-app",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226032,
      "blocks": 16,
      "atimeMs": 1557308635098.448,
      "mtimeMs": 1557308468581.9722,
      "ctimeMs": 1557308468581.9722,
      "birthtimeMs": 1557308468581.9126,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.582Z",
      "ctime": "2019-05-08T09:41:08.582Z",
      "birthtime": "2019-05-08T09:41:08.582Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/addons-animation.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/addons-animation.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/addons-animation.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "b3c10b8bc675d17037fadbaf62992813",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/addons-animation.md",
      "relativePath": "docs/addons-animation.md",
      "extension": "md",
      "size": 13365,
      "prettySize": "13.4 kB",
      "modifiedTime": "2019-05-08T09:41:08.582Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.582Z",
      "birthTime": "2019-05-08T09:41:08.582Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "addons-animation.md",
      "ext": ".md",
      "name": "addons-animation",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226033,
      "blocks": 32,
      "atimeMs": 1557308635098.451,
      "mtimeMs": 1557308468582.1838,
      "ctimeMs": 1557308468582.1838,
      "birthtimeMs": 1557308468582.132,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.582Z",
      "ctime": "2019-05-08T09:41:08.582Z",
      "birthtime": "2019-05-08T09:41:08.582Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/addons-create-fragment.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/addons-create-fragment.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/addons-create-fragment.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "c4348a1ca42b695f4c24b39679951ce3",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/addons-create-fragment.md",
      "relativePath": "docs/addons-create-fragment.md",
      "extension": "md",
      "size": 2355,
      "prettySize": "2.35 kB",
      "modifiedTime": "2019-05-08T09:41:08.582Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.582Z",
      "birthTime": "2019-05-08T09:41:08.582Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "addons-create-fragment.md",
      "ext": ".md",
      "name": "addons-create-fragment",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226034,
      "blocks": 8,
      "atimeMs": 1557308635098.4539,
      "mtimeMs": 1557308468582.35,
      "ctimeMs": 1557308468582.35,
      "birthtimeMs": 1557308468582.3013,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.582Z",
      "ctime": "2019-05-08T09:41:08.582Z",
      "birthtime": "2019-05-08T09:41:08.582Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/addons-perf.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/addons-perf.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/addons-perf.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "2642cb42770d75bb49130da5af4919e1",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/addons-perf.md",
      "relativePath": "docs/addons-perf.md",
      "extension": "md",
      "size": 4761,
      "prettySize": "4.76 kB",
      "modifiedTime": "2019-05-08T09:41:08.583Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.583Z",
      "birthTime": "2019-05-08T09:41:08.582Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "addons-perf.md",
      "ext": ".md",
      "name": "addons-perf",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226035,
      "blocks": 16,
      "atimeMs": 1557308635098.457,
      "mtimeMs": 1557308468582.5457,
      "ctimeMs": 1557308468582.5457,
      "birthtimeMs": 1557308468582.4976,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.583Z",
      "ctime": "2019-05-08T09:41:08.583Z",
      "birthtime": "2019-05-08T09:41:08.582Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/addons-pure-render-mixin.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/addons-pure-render-mixin.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/addons-pure-render-mixin.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "cf121d75d53ba5f4a47ff84e474bf55f",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/addons-pure-render-mixin.md",
      "relativePath": "docs/addons-pure-render-mixin.md",
      "extension": "md",
      "size": 1617,
      "prettySize": "1.62 kB",
      "modifiedTime": "2019-05-08T09:41:08.583Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.583Z",
      "birthTime": "2019-05-08T09:41:08.583Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "addons-pure-render-mixin.md",
      "ext": ".md",
      "name": "addons-pure-render-mixin",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226036,
      "blocks": 8,
      "atimeMs": 1557308635098.4597,
      "mtimeMs": 1557308468582.87,
      "ctimeMs": 1557308468582.87,
      "birthtimeMs": 1557308468582.8105,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.583Z",
      "ctime": "2019-05-08T09:41:08.583Z",
      "birthtime": "2019-05-08T09:41:08.583Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/addons-shallow-compare.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/addons-shallow-compare.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/addons-shallow-compare.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "4d664b12781a7bf751ab5d413b1a14cf",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/addons-shallow-compare.md",
      "relativePath": "docs/addons-shallow-compare.md",
      "extension": "md",
      "size": 1725,
      "prettySize": "1.73 kB",
      "modifiedTime": "2019-05-08T09:41:08.583Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.583Z",
      "birthTime": "2019-05-08T09:41:08.583Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "addons-shallow-compare.md",
      "ext": ".md",
      "name": "addons-shallow-compare",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226037,
      "blocks": 8,
      "atimeMs": 1557308635098.463,
      "mtimeMs": 1557308468583.0564,
      "ctimeMs": 1557308468583.0564,
      "birthtimeMs": 1557308468582.9897,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.583Z",
      "ctime": "2019-05-08T09:41:08.583Z",
      "birthtime": "2019-05-08T09:41:08.583Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/addons-shallow-renderer.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/addons-shallow-renderer.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/addons-shallow-renderer.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "6009d70a161fa42c736a939f0ba142d8",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/addons-shallow-renderer.md",
      "relativePath": "docs/addons-shallow-renderer.md",
      "extension": "md",
      "size": 2064,
      "prettySize": "2.06 kB",
      "modifiedTime": "2019-05-08T09:41:08.583Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.583Z",
      "birthTime": "2019-05-08T09:41:08.583Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "addons-shallow-renderer.md",
      "ext": ".md",
      "name": "addons-shallow-renderer",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226038,
      "blocks": 8,
      "atimeMs": 1557308635098.4656,
      "mtimeMs": 1557308468583.236,
      "ctimeMs": 1557308468583.236,
      "birthtimeMs": 1557308468583.1785,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.583Z",
      "ctime": "2019-05-08T09:41:08.583Z",
      "birthtime": "2019-05-08T09:41:08.583Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/addons-test-utils.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/addons-test-utils.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/addons-test-utils.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "62dc3fdac3ea7955fdcf7650340c47d7",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/addons-test-utils.md",
      "relativePath": "docs/addons-test-utils.md",
      "extension": "md",
      "size": 7155,
      "prettySize": "7.16 kB",
      "modifiedTime": "2019-05-08T09:41:08.583Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.583Z",
      "birthTime": "2019-05-08T09:41:08.583Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "addons-test-utils.md",
      "ext": ".md",
      "name": "addons-test-utils",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226039,
      "blocks": 16,
      "atimeMs": 1557308635098.4683,
      "mtimeMs": 1557308468583.4307,
      "ctimeMs": 1557308468583.4307,
      "birthtimeMs": 1557308468583.3728,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.583Z",
      "ctime": "2019-05-08T09:41:08.583Z",
      "birthtime": "2019-05-08T09:41:08.583Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/addons-two-way-binding-helpers.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/addons-two-way-binding-helpers.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/addons-two-way-binding-helpers.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "b3817383772da370b858c55fa55571cf",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/addons-two-way-binding-helpers.md",
      "relativePath": "docs/addons-two-way-binding-helpers.md",
      "extension": "md",
      "size": 5561,
      "prettySize": "5.56 kB",
      "modifiedTime": "2019-05-08T09:41:08.584Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.584Z",
      "birthTime": "2019-05-08T09:41:08.584Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "addons-two-way-binding-helpers.md",
      "ext": ".md",
      "name": "addons-two-way-binding-helpers",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226040,
      "blocks": 16,
      "atimeMs": 1557308635098.4714,
      "mtimeMs": 1557308468583.6094,
      "ctimeMs": 1557308468583.6094,
      "birthtimeMs": 1557308468583.5625,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.584Z",
      "ctime": "2019-05-08T09:41:08.584Z",
      "birthtime": "2019-05-08T09:41:08.584Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/addons-update.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/addons-update.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/addons-update.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "dce1a8fe47a2dd9b9d74ee211838b32b",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/addons-update.md",
      "relativePath": "docs/addons-update.md",
      "extension": "md",
      "size": 4549,
      "prettySize": "4.55 kB",
      "modifiedTime": "2019-05-08T09:41:08.584Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.584Z",
      "birthTime": "2019-05-08T09:41:08.584Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "addons-update.md",
      "ext": ".md",
      "name": "addons-update",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226041,
      "blocks": 16,
      "atimeMs": 1557308635098.4756,
      "mtimeMs": 1557308468583.9666,
      "ctimeMs": 1557308468583.9666,
      "birthtimeMs": 1557308468583.9019,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.584Z",
      "ctime": "2019-05-08T09:41:08.584Z",
      "birthtime": "2019-05-08T09:41:08.584Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/addons.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/addons.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/addons.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "272847a6181bfe9db66e40ae97faf901",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/addons.md",
      "relativePath": "docs/addons.md",
      "extension": "md",
      "size": 2395,
      "prettySize": "2.4 kB",
      "modifiedTime": "2019-05-08T09:41:08.584Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.584Z",
      "birthTime": "2019-05-08T09:41:08.584Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "addons.md",
      "ext": ".md",
      "name": "addons",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226042,
      "blocks": 8,
      "atimeMs": 1557308635098.4988,
      "mtimeMs": 1557308468584.1309,
      "ctimeMs": 1557308468584.1309,
      "birthtimeMs": 1557308468584.0813,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.584Z",
      "ctime": "2019-05-08T09:41:08.584Z",
      "birthtime": "2019-05-08T09:41:08.584Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/cdn-links.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/cdn-links.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/cdn-links.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "e3c2003f83cd7017a6ac69ff76a102e2",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/cdn-links.md",
      "relativePath": "docs/cdn-links.md",
      "extension": "md",
      "size": 1408,
      "prettySize": "1.41 kB",
      "modifiedTime": "2019-05-08T09:41:08.584Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.584Z",
      "birthTime": "2019-05-08T09:41:08.584Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "cdn-links.md",
      "ext": ".md",
      "name": "cdn-links",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226043,
      "blocks": 8,
      "atimeMs": 1557308635098.5105,
      "mtimeMs": 1557308468584.3792,
      "ctimeMs": 1557308468584.3792,
      "birthtimeMs": 1557308468584.2595,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.584Z",
      "ctime": "2019-05-08T09:41:08.584Z",
      "birthtime": "2019-05-08T09:41:08.584Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/code-splitting.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/code-splitting.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/code-splitting.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "75be70ca8289c2d35ee1bb2356601228",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/code-splitting.md",
      "relativePath": "docs/code-splitting.md",
      "extension": "md",
      "size": 5913,
      "prettySize": "5.91 kB",
      "modifiedTime": "2019-05-08T09:41:08.585Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.585Z",
      "birthTime": "2019-05-08T09:41:08.585Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "code-splitting.md",
      "ext": ".md",
      "name": "code-splitting",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226044,
      "blocks": 16,
      "atimeMs": 1557308635098.5134,
      "mtimeMs": 1557308468584.5872,
      "ctimeMs": 1557308468584.5872,
      "birthtimeMs": 1557308468584.5251,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.585Z",
      "ctime": "2019-05-08T09:41:08.585Z",
      "birthtime": "2019-05-08T09:41:08.585Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/codebase-overview.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/codebase-overview.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/codebase-overview.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "31a8012807d21bf66f43623c01262ac9",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/codebase-overview.md",
      "relativePath": "docs/codebase-overview.md",
      "extension": "md",
      "size": 26690,
      "prettySize": "26.7 kB",
      "modifiedTime": "2019-05-08T09:41:08.585Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.585Z",
      "birthTime": "2019-05-08T09:41:08.585Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "codebase-overview.md",
      "ext": ".md",
      "name": "codebase-overview",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226045,
      "blocks": 56,
      "atimeMs": 1557308635098.516,
      "mtimeMs": 1557308468584.963,
      "ctimeMs": 1557308468584.963,
      "birthtimeMs": 1557308468584.9033,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.585Z",
      "ctime": "2019-05-08T09:41:08.585Z",
      "birthtime": "2019-05-08T09:41:08.585Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/components-and-props.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/components-and-props.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/components-and-props.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "89272efa2801c317ebe08a8756a68fd2",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/components-and-props.md",
      "relativePath": "docs/components-and-props.md",
      "extension": "md",
      "size": 8172,
      "prettySize": "8.17 kB",
      "modifiedTime": "2019-05-08T09:41:08.585Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.585Z",
      "birthTime": "2019-05-08T09:41:08.585Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "components-and-props.md",
      "ext": ".md",
      "name": "components-and-props",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226046,
      "blocks": 16,
      "atimeMs": 1557308635098.519,
      "mtimeMs": 1557308468585.1882,
      "ctimeMs": 1557308468585.1882,
      "birthtimeMs": 1557308468585.133,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.585Z",
      "ctime": "2019-05-08T09:41:08.585Z",
      "birthtime": "2019-05-08T09:41:08.585Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/composition-vs-inheritance.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/composition-vs-inheritance.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/composition-vs-inheritance.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "dca2588a13ad85cf38cfa3c45fcde8db",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/composition-vs-inheritance.md",
      "relativePath": "docs/composition-vs-inheritance.md",
      "extension": "md",
      "size": 4699,
      "prettySize": "4.7 kB",
      "modifiedTime": "2019-05-08T09:41:08.585Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.585Z",
      "birthTime": "2019-05-08T09:41:08.585Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "composition-vs-inheritance.md",
      "ext": ".md",
      "name": "composition-vs-inheritance",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226047,
      "blocks": 16,
      "atimeMs": 1557308635098.522,
      "mtimeMs": 1557308468585.475,
      "ctimeMs": 1557308468585.475,
      "birthtimeMs": 1557308468585.3716,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.585Z",
      "ctime": "2019-05-08T09:41:08.585Z",
      "birthtime": "2019-05-08T09:41:08.585Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/conditional-rendering.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/conditional-rendering.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/conditional-rendering.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "994e43b69a055a76b088b3c9214bad25",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/conditional-rendering.md",
      "relativePath": "docs/conditional-rendering.md",
      "extension": "md",
      "size": 6763,
      "prettySize": "6.76 kB",
      "modifiedTime": "2019-05-08T09:41:08.586Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.586Z",
      "birthTime": "2019-05-08T09:41:08.586Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "conditional-rendering.md",
      "ext": ".md",
      "name": "conditional-rendering",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226048,
      "blocks": 16,
      "atimeMs": 1557308635098.525,
      "mtimeMs": 1557308468585.7214,
      "ctimeMs": 1557308468585.7214,
      "birthtimeMs": 1557308468585.6409,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.586Z",
      "ctime": "2019-05-08T09:41:08.586Z",
      "birthtime": "2019-05-08T09:41:08.586Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/context.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/context.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/context.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "7153a5843d376afc7c9f8ba0b4e3ddf1",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/context.md",
      "relativePath": "docs/context.md",
      "extension": "md",
      "size": 7026,
      "prettySize": "7.03 kB",
      "modifiedTime": "2019-05-08T09:41:08.586Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.586Z",
      "birthTime": "2019-05-08T09:41:08.586Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "context.md",
      "ext": ".md",
      "name": "context",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226049,
      "blocks": 16,
      "atimeMs": 1557308635098.5278,
      "mtimeMs": 1557308468586.0947,
      "ctimeMs": 1557308468586.0947,
      "birthtimeMs": 1557308468585.8774,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.586Z",
      "ctime": "2019-05-08T09:41:08.586Z",
      "birthtime": "2019-05-08T09:41:08.586Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/cross-origin-errors.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/cross-origin-errors.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/cross-origin-errors.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "19fb97776d4ce02f6b67ca072a26ffdc",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/cross-origin-errors.md",
      "relativePath": "docs/cross-origin-errors.md",
      "extension": "md",
      "size": 1843,
      "prettySize": "1.84 kB",
      "modifiedTime": "2019-05-08T09:41:08.587Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.587Z",
      "birthTime": "2019-05-08T09:41:08.587Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "cross-origin-errors.md",
      "ext": ".md",
      "name": "cross-origin-errors",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226051,
      "blocks": 8,
      "atimeMs": 1557308635098.5332,
      "mtimeMs": 1557308468586.6206,
      "ctimeMs": 1557308468586.6206,
      "birthtimeMs": 1557308468586.5574,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.587Z",
      "ctime": "2019-05-08T09:41:08.587Z",
      "birthtime": "2019-05-08T09:41:08.587Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/create-a-new-react-app.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/create-a-new-react-app.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/create-a-new-react-app.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "e2341b0e2dd5ac4720eff61042c2aac4",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/create-a-new-react-app.md",
      "relativePath": "docs/create-a-new-react-app.md",
      "extension": "md",
      "size": 6045,
      "prettySize": "6.04 kB",
      "modifiedTime": "2019-05-08T09:41:08.586Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.586Z",
      "birthTime": "2019-05-08T09:41:08.586Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "create-a-new-react-app.md",
      "ext": ".md",
      "name": "create-a-new-react-app",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226050,
      "blocks": 16,
      "atimeMs": 1557308635098.5305,
      "mtimeMs": 1557308468586.398,
      "ctimeMs": 1557308468586.398,
      "birthtimeMs": 1557308468586.294,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.586Z",
      "ctime": "2019-05-08T09:41:08.586Z",
      "birthtime": "2019-05-08T09:41:08.586Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/design-principles.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/design-principles.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/design-principles.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "bad2fa0e0e5d39b176ddde95dbb48a38",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/design-principles.md",
      "relativePath": "docs/design-principles.md",
      "extension": "md",
      "size": 19416,
      "prettySize": "19.4 kB",
      "modifiedTime": "2019-05-08T09:41:08.587Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.587Z",
      "birthTime": "2019-05-08T09:41:08.587Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "design-principles.md",
      "ext": ".md",
      "name": "design-principles",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226052,
      "blocks": 40,
      "atimeMs": 1557308635098.5361,
      "mtimeMs": 1557308468586.9336,
      "ctimeMs": 1557308468586.9336,
      "birthtimeMs": 1557308468586.849,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.587Z",
      "ctime": "2019-05-08T09:41:08.587Z",
      "birthtime": "2019-05-08T09:41:08.587Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/error-boundaries.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/error-boundaries.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/error-boundaries.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "aff024abfac6526f1de0a1ecfdbe5561",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/error-boundaries.md",
      "relativePath": "docs/error-boundaries.md",
      "extension": "md",
      "size": 8278,
      "prettySize": "8.28 kB",
      "modifiedTime": "2019-05-08T09:41:08.587Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.587Z",
      "birthTime": "2019-05-08T09:41:08.587Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "error-boundaries.md",
      "ext": ".md",
      "name": "error-boundaries",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226053,
      "blocks": 24,
      "atimeMs": 1557308635098.5388,
      "mtimeMs": 1557308468587.2205,
      "ctimeMs": 1557308468587.2205,
      "birthtimeMs": 1557308468587.1526,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.587Z",
      "ctime": "2019-05-08T09:41:08.587Z",
      "birthtime": "2019-05-08T09:41:08.587Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/error-decoder.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/error-decoder.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/error-decoder.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "329c21fa7c35bfe7a43bd209d5ae570e",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/error-decoder.md",
      "relativePath": "docs/error-decoder.md",
      "extension": "md",
      "size": 691,
      "prettySize": "691 B",
      "modifiedTime": "2019-05-08T09:41:08.587Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.587Z",
      "birthTime": "2019-05-08T09:41:08.587Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "error-decoder.md",
      "ext": ".md",
      "name": "error-decoder",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226054,
      "blocks": 8,
      "atimeMs": 1557308635098.542,
      "mtimeMs": 1557308468587.4292,
      "ctimeMs": 1557308468587.4292,
      "birthtimeMs": 1557308468587.363,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.587Z",
      "ctime": "2019-05-08T09:41:08.587Z",
      "birthtime": "2019-05-08T09:41:08.587Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/faq-ajax.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/faq-ajax.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/faq-ajax.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "c78c13472140b3962b3ead509567e6bc",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/faq-ajax.md",
      "relativePath": "docs/faq-ajax.md",
      "extension": "md",
      "size": 2128,
      "prettySize": "2.13 kB",
      "modifiedTime": "2019-05-08T09:41:08.588Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.588Z",
      "birthTime": "2019-05-08T09:41:08.588Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "faq-ajax.md",
      "ext": ".md",
      "name": "faq-ajax",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226055,
      "blocks": 8,
      "atimeMs": 1557308635098.545,
      "mtimeMs": 1557308468587.7568,
      "ctimeMs": 1557308468587.7568,
      "birthtimeMs": 1557308468587.6985,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.588Z",
      "ctime": "2019-05-08T09:41:08.588Z",
      "birthtime": "2019-05-08T09:41:08.588Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/faq-build.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/faq-build.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/faq-build.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "9fd703589e56b966f1b479ae4c800038",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/faq-build.md",
      "relativePath": "docs/faq-build.md",
      "extension": "md",
      "size": 479,
      "prettySize": "479 B",
      "modifiedTime": "2019-05-08T09:41:08.588Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.588Z",
      "birthTime": "2019-05-08T09:41:08.588Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "faq-build.md",
      "ext": ".md",
      "name": "faq-build",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226056,
      "blocks": 8,
      "atimeMs": 1557308635098.5476,
      "mtimeMs": 1557308468587.928,
      "ctimeMs": 1557308468587.928,
      "birthtimeMs": 1557308468587.8794,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.588Z",
      "ctime": "2019-05-08T09:41:08.588Z",
      "birthtime": "2019-05-08T09:41:08.588Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/faq-functions.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/faq-functions.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/faq-functions.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "4980a2fbba3d6c8a411dd7a6919930a9",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/faq-functions.md",
      "relativePath": "docs/faq-functions.md",
      "extension": "md",
      "size": 10625,
      "prettySize": "10.6 kB",
      "modifiedTime": "2019-05-08T09:41:08.588Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.588Z",
      "birthTime": "2019-05-08T09:41:08.588Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "faq-functions.md",
      "ext": ".md",
      "name": "faq-functions",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226057,
      "blocks": 24,
      "atimeMs": 1557308635098.5503,
      "mtimeMs": 1557308468588.1985,
      "ctimeMs": 1557308468588.1985,
      "birthtimeMs": 1557308468588.0986,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.588Z",
      "ctime": "2019-05-08T09:41:08.588Z",
      "birthtime": "2019-05-08T09:41:08.588Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/faq-internals.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/faq-internals.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/faq-internals.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "61c488d9643b98ca924b0bd71f06272b",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/faq-internals.md",
      "relativePath": "docs/faq-internals.md",
      "extension": "md",
      "size": 1614,
      "prettySize": "1.61 kB",
      "modifiedTime": "2019-05-08T09:41:08.588Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.588Z",
      "birthTime": "2019-05-08T09:41:08.588Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "faq-internals.md",
      "ext": ".md",
      "name": "faq-internals",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226058,
      "blocks": 8,
      "atimeMs": 1557308635098.5535,
      "mtimeMs": 1557308468588.4097,
      "ctimeMs": 1557308468588.4097,
      "birthtimeMs": 1557308468588.3398,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.588Z",
      "ctime": "2019-05-08T09:41:08.588Z",
      "birthtime": "2019-05-08T09:41:08.588Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/faq-state.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/faq-state.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/faq-state.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "d3fef7dfcbf5b5ae62617b3019cbcc2b",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/faq-state.md",
      "relativePath": "docs/faq-state.md",
      "extension": "md",
      "size": 4536,
      "prettySize": "4.54 kB",
      "modifiedTime": "2019-05-08T09:41:08.589Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.589Z",
      "birthTime": "2019-05-08T09:41:08.589Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "faq-state.md",
      "ext": ".md",
      "name": "faq-state",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226059,
      "blocks": 16,
      "atimeMs": 1557308635098.5562,
      "mtimeMs": 1557308468588.6155,
      "ctimeMs": 1557308468588.6155,
      "birthtimeMs": 1557308468588.5684,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.589Z",
      "ctime": "2019-05-08T09:41:08.589Z",
      "birthtime": "2019-05-08T09:41:08.589Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/faq-structure.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/faq-structure.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/faq-structure.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "a3b1e52d0de858288e0495bb10f9a3aa",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/faq-structure.md",
      "relativePath": "docs/faq-structure.md",
      "extension": "md",
      "size": 2955,
      "prettySize": "2.96 kB",
      "modifiedTime": "2019-05-08T09:41:08.589Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.589Z",
      "birthTime": "2019-05-08T09:41:08.589Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "faq-structure.md",
      "ext": ".md",
      "name": "faq-structure",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226060,
      "blocks": 8,
      "atimeMs": 1557308635098.5588,
      "mtimeMs": 1557308468588.7966,
      "ctimeMs": 1557308468588.7966,
      "birthtimeMs": 1557308468588.7476,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.589Z",
      "ctime": "2019-05-08T09:41:08.589Z",
      "birthtime": "2019-05-08T09:41:08.589Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/faq-styling.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/faq-styling.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/faq-styling.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "0135d6a4626ee4a5d127ed46d29832a4",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/faq-styling.md",
      "relativePath": "docs/faq-styling.md",
      "extension": "md",
      "size": 1600,
      "prettySize": "1.6 kB",
      "modifiedTime": "2019-05-08T09:41:08.589Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.589Z",
      "birthTime": "2019-05-08T09:41:08.589Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "faq-styling.md",
      "ext": ".md",
      "name": "faq-styling",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226061,
      "blocks": 8,
      "atimeMs": 1557308635098.5618,
      "mtimeMs": 1557308468588.9731,
      "ctimeMs": 1557308468588.9731,
      "birthtimeMs": 1557308468588.9255,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.589Z",
      "ctime": "2019-05-08T09:41:08.589Z",
      "birthtime": "2019-05-08T09:41:08.589Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/forms.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/forms.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/forms.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "18e8685a007ac08244ada64a46a8f1d7",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/forms.md",
      "relativePath": "docs/forms.md",
      "extension": "md",
      "size": 9005,
      "prettySize": "9.01 kB",
      "modifiedTime": "2019-05-08T09:41:08.589Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.589Z",
      "birthTime": "2019-05-08T09:41:08.589Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "forms.md",
      "ext": ".md",
      "name": "forms",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226062,
      "blocks": 24,
      "atimeMs": 1557308635098.5647,
      "mtimeMs": 1557308468589.1804,
      "ctimeMs": 1557308468589.1804,
      "birthtimeMs": 1557308468589.1306,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.589Z",
      "ctime": "2019-05-08T09:41:08.589Z",
      "birthtime": "2019-05-08T09:41:08.589Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/forwarding-refs.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/forwarding-refs.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/forwarding-refs.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "55e4fabb16ab9e4cbcb636cec6134b76",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/forwarding-refs.md",
      "relativePath": "docs/forwarding-refs.md",
      "extension": "md",
      "size": 1372,
      "prettySize": "1.37 kB",
      "modifiedTime": "2019-05-08T09:41:08.589Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.589Z",
      "birthTime": "2019-05-08T09:41:08.589Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "forwarding-refs.md",
      "ext": ".md",
      "name": "forwarding-refs",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226063,
      "blocks": 8,
      "atimeMs": 1557308635098.5676,
      "mtimeMs": 1557308468589.3691,
      "ctimeMs": 1557308468589.3691,
      "birthtimeMs": 1557308468589.3093,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.589Z",
      "ctime": "2019-05-08T09:41:08.589Z",
      "birthtime": "2019-05-08T09:41:08.589Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/fragments.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/fragments.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/fragments.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "5eeb3e241db1dd5b7269d7d9623d953b",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/fragments.md",
      "relativePath": "docs/fragments.md",
      "extension": "md",
      "size": 2948,
      "prettySize": "2.95 kB",
      "modifiedTime": "2019-05-08T09:41:08.590Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.590Z",
      "birthTime": "2019-05-08T09:41:08.589Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "fragments.md",
      "ext": ".md",
      "name": "fragments",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226064,
      "blocks": 8,
      "atimeMs": 1557308635098.5703,
      "mtimeMs": 1557308468589.537,
      "ctimeMs": 1557308468589.537,
      "birthtimeMs": 1557308468589.4922,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.590Z",
      "ctime": "2019-05-08T09:41:08.590Z",
      "birthtime": "2019-05-08T09:41:08.589Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/getting-started.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/getting-started.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/getting-started.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "aebf493a54a97d5ce90c9287c1230737",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/getting-started.md",
      "relativePath": "docs/getting-started.md",
      "extension": "md",
      "size": 8025,
      "prettySize": "8.03 kB",
      "modifiedTime": "2019-05-08T09:41:08.590Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.590Z",
      "birthTime": "2019-05-08T09:41:08.590Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "getting-started.md",
      "ext": ".md",
      "name": "getting-started",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226065,
      "blocks": 16,
      "atimeMs": 1557308635098.5732,
      "mtimeMs": 1557308468589.757,
      "ctimeMs": 1557308468589.757,
      "birthtimeMs": 1557308468589.6982,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.590Z",
      "ctime": "2019-05-08T09:41:08.590Z",
      "birthtime": "2019-05-08T09:41:08.590Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/handling-events.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/handling-events.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/handling-events.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "57380e41c9fab368ae767c263baf2591",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/handling-events.md",
      "relativePath": "docs/handling-events.md",
      "extension": "md",
      "size": 6633,
      "prettySize": "6.63 kB",
      "modifiedTime": "2019-05-08T09:41:08.590Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.590Z",
      "birthTime": "2019-05-08T09:41:08.590Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "handling-events.md",
      "ext": ".md",
      "name": "handling-events",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226066,
      "blocks": 16,
      "atimeMs": 1557308635098.5762,
      "mtimeMs": 1557308468590.1243,
      "ctimeMs": 1557308468590.1243,
      "birthtimeMs": 1557308468590.052,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.590Z",
      "ctime": "2019-05-08T09:41:08.590Z",
      "birthtime": "2019-05-08T09:41:08.590Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/hello-world.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/hello-world.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/hello-world.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "d4b16cf82053cb1eb1464e81483ea275",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/hello-world.md",
      "relativePath": "docs/hello-world.md",
      "extension": "md",
      "size": 2235,
      "prettySize": "2.23 kB",
      "modifiedTime": "2019-05-08T09:41:08.590Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.590Z",
      "birthTime": "2019-05-08T09:41:08.590Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "hello-world.md",
      "ext": ".md",
      "name": "hello-world",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226067,
      "blocks": 8,
      "atimeMs": 1557308635098.579,
      "mtimeMs": 1557308468590.3054,
      "ctimeMs": 1557308468590.3054,
      "birthtimeMs": 1557308468590.2493,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.590Z",
      "ctime": "2019-05-08T09:41:08.590Z",
      "birthtime": "2019-05-08T09:41:08.590Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/higher-order-components.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/higher-order-components.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/higher-order-components.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "e07086d5d72f223276716e907798652f",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/higher-order-components.md",
      "relativePath": "docs/higher-order-components.md",
      "extension": "md",
      "size": 17317,
      "prettySize": "17.3 kB",
      "modifiedTime": "2019-05-08T09:41:08.591Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.591Z",
      "birthTime": "2019-05-08T09:41:08.590Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "higher-order-components.md",
      "ext": ".md",
      "name": "higher-order-components",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226068,
      "blocks": 40,
      "atimeMs": 1557308635098.582,
      "mtimeMs": 1557308468590.5479,
      "ctimeMs": 1557308468590.5479,
      "birthtimeMs": 1557308468590.499,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.591Z",
      "ctime": "2019-05-08T09:41:08.591Z",
      "birthtime": "2019-05-08T09:41:08.590Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/hooks-custom.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/hooks-custom.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/hooks-custom.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "c2f85fa1552b2e35c9c1d0e20ab883e0",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/hooks-custom.md",
      "relativePath": "docs/hooks-custom.md",
      "extension": "md",
      "size": 10447,
      "prettySize": "10.4 kB",
      "modifiedTime": "2019-05-08T09:41:08.591Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.591Z",
      "birthTime": "2019-05-08T09:41:08.591Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "hooks-custom.md",
      "ext": ".md",
      "name": "hooks-custom",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226069,
      "blocks": 24,
      "atimeMs": 1557308635098.585,
      "mtimeMs": 1557308468590.7703,
      "ctimeMs": 1557308468590.7703,
      "birthtimeMs": 1557308468590.7212,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.591Z",
      "ctime": "2019-05-08T09:41:08.591Z",
      "birthtime": "2019-05-08T09:41:08.591Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/hooks-effect.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/hooks-effect.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/hooks-effect.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "7c7acfe0da52e4e4088b8fe02396e2c5",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/hooks-effect.md",
      "relativePath": "docs/hooks-effect.md",
      "extension": "md",
      "size": 22115,
      "prettySize": "22.1 kB",
      "modifiedTime": "2019-05-08T09:41:08.591Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.591Z",
      "birthTime": "2019-05-08T09:41:08.591Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "hooks-effect.md",
      "ext": ".md",
      "name": "hooks-effect",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226070,
      "blocks": 48,
      "atimeMs": 1557308635098.588,
      "mtimeMs": 1557308468591.0393,
      "ctimeMs": 1557308468591.0393,
      "birthtimeMs": 1557308468590.9885,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.591Z",
      "ctime": "2019-05-08T09:41:08.591Z",
      "birthtime": "2019-05-08T09:41:08.591Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/hooks-faq.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/hooks-faq.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/hooks-faq.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "ae54fa2f15921ce06a2e8fbf60a5730c",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/hooks-faq.md",
      "relativePath": "docs/hooks-faq.md",
      "extension": "md",
      "size": 28946,
      "prettySize": "28.9 kB",
      "modifiedTime": "2019-05-08T09:41:08.591Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.591Z",
      "birthTime": "2019-05-08T09:41:08.591Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "hooks-faq.md",
      "ext": ".md",
      "name": "hooks-faq",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226071,
      "blocks": 64,
      "atimeMs": 1557308635098.5906,
      "mtimeMs": 1557308468591.41,
      "ctimeMs": 1557308468591.41,
      "birthtimeMs": 1557308468591.2979,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.591Z",
      "ctime": "2019-05-08T09:41:08.591Z",
      "birthtime": "2019-05-08T09:41:08.591Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/hooks-intro.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/hooks-intro.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/hooks-intro.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "5da99b5020030587eaf811f64145ee41",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/hooks-intro.md",
      "relativePath": "docs/hooks-intro.md",
      "extension": "md",
      "size": 9369,
      "prettySize": "9.37 kB",
      "modifiedTime": "2019-05-08T09:41:08.592Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.592Z",
      "birthTime": "2019-05-08T09:41:08.592Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "hooks-intro.md",
      "ext": ".md",
      "name": "hooks-intro",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226072,
      "blocks": 24,
      "atimeMs": 1557308635098.5935,
      "mtimeMs": 1557308468591.6736,
      "ctimeMs": 1557308468591.6736,
      "birthtimeMs": 1557308468591.61,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.592Z",
      "ctime": "2019-05-08T09:41:08.592Z",
      "birthtime": "2019-05-08T09:41:08.592Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/hooks-overview.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/hooks-overview.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/hooks-overview.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "f406eb74270c6b8d25c483ef194c4050",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/hooks-overview.md",
      "relativePath": "docs/hooks-overview.md",
      "extension": "md",
      "size": 11877,
      "prettySize": "11.9 kB",
      "modifiedTime": "2019-05-08T09:41:08.592Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.592Z",
      "birthTime": "2019-05-08T09:41:08.592Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "hooks-overview.md",
      "ext": ".md",
      "name": "hooks-overview",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226073,
      "blocks": 24,
      "atimeMs": 1557308635098.5967,
      "mtimeMs": 1557308468591.9153,
      "ctimeMs": 1557308468591.9153,
      "birthtimeMs": 1557308468591.8657,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.592Z",
      "ctime": "2019-05-08T09:41:08.592Z",
      "birthtime": "2019-05-08T09:41:08.592Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/hooks-reference.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/hooks-reference.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/hooks-reference.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "a15e25f3f2ebc9de3e54df2b5cc0a7d5",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/hooks-reference.md",
      "relativePath": "docs/hooks-reference.md",
      "extension": "md",
      "size": 14903,
      "prettySize": "14.9 kB",
      "modifiedTime": "2019-05-08T09:41:08.592Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.592Z",
      "birthTime": "2019-05-08T09:41:08.592Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "hooks-reference.md",
      "ext": ".md",
      "name": "hooks-reference",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226074,
      "blocks": 32,
      "atimeMs": 1557308635098.5996,
      "mtimeMs": 1557308468592.1902,
      "ctimeMs": 1557308468592.1902,
      "birthtimeMs": 1557308468592.1125,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.592Z",
      "ctime": "2019-05-08T09:41:08.592Z",
      "birthtime": "2019-05-08T09:41:08.592Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/hooks-rules.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/hooks-rules.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/hooks-rules.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "2a0458a85ba5b2b9d0f35541a1b4b22e",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/hooks-rules.md",
      "relativePath": "docs/hooks-rules.md",
      "extension": "md",
      "size": 5971,
      "prettySize": "5.97 kB",
      "modifiedTime": "2019-05-08T09:41:08.592Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.592Z",
      "birthTime": "2019-05-08T09:41:08.592Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "hooks-rules.md",
      "ext": ".md",
      "name": "hooks-rules",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226075,
      "blocks": 16,
      "atimeMs": 1557308635098.6025,
      "mtimeMs": 1557308468592.4778,
      "ctimeMs": 1557308468592.4778,
      "birthtimeMs": 1557308468592.425,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.592Z",
      "ctime": "2019-05-08T09:41:08.592Z",
      "birthtime": "2019-05-08T09:41:08.592Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/hooks-state.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/hooks-state.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/hooks-state.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "34d28aab05818ed90e41eefe65fd0aee",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/hooks-state.md",
      "relativePath": "docs/hooks-state.md",
      "extension": "md",
      "size": 19175,
      "prettySize": "19.2 kB",
      "modifiedTime": "2019-05-08T09:41:08.593Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.593Z",
      "birthTime": "2019-05-08T09:41:08.593Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "hooks-state.md",
      "ext": ".md",
      "name": "hooks-state",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226076,
      "blocks": 40,
      "atimeMs": 1557308635098.6055,
      "mtimeMs": 1557308468592.7502,
      "ctimeMs": 1557308468592.7502,
      "birthtimeMs": 1557308468592.696,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.593Z",
      "ctime": "2019-05-08T09:41:08.593Z",
      "birthtime": "2019-05-08T09:41:08.593Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/how-to-contribute.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/how-to-contribute.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/how-to-contribute.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "11e9b1553a4487a4400fa2f77aba4410",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/how-to-contribute.md",
      "relativePath": "docs/how-to-contribute.md",
      "extension": "md",
      "size": 10681,
      "prettySize": "10.7 kB",
      "modifiedTime": "2019-05-08T09:41:08.593Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.593Z",
      "birthTime": "2019-05-08T09:41:08.593Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "how-to-contribute.md",
      "ext": ".md",
      "name": "how-to-contribute",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226077,
      "blocks": 24,
      "atimeMs": 1557308635098.6082,
      "mtimeMs": 1557308468593.0056,
      "ctimeMs": 1557308468593.0056,
      "birthtimeMs": 1557308468592.9246,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.593Z",
      "ctime": "2019-05-08T09:41:08.593Z",
      "birthtime": "2019-05-08T09:41:08.593Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/implementation-notes.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/implementation-notes.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/implementation-notes.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "2a2ae62777846484c2ada25dc08e80dc",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/implementation-notes.md",
      "relativePath": "docs/implementation-notes.md",
      "extension": "md",
      "size": 36187,
      "prettySize": "36.2 kB",
      "modifiedTime": "2019-05-08T09:41:08.593Z",
      "accessTime": "2019-05-08T09:41:12.646Z",
      "changeTime": "2019-05-08T09:41:08.593Z",
      "birthTime": "2019-05-08T09:41:08.593Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "implementation-notes.md",
      "ext": ".md",
      "name": "implementation-notes",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226078,
      "blocks": 72,
      "atimeMs": 1557308472646.1477,
      "mtimeMs": 1557308468593.3198,
      "ctimeMs": 1557308468593.3198,
      "birthtimeMs": 1557308468593.2505,
      "atime": "2019-05-08T09:41:12.646Z",
      "mtime": "2019-05-08T09:41:08.593Z",
      "ctime": "2019-05-08T09:41:08.593Z",
      "birthtime": "2019-05-08T09:41:08.593Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/installation.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/installation.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/installation.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "52f300b41869542f9a90e2f73969494e",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/installation.md",
      "relativePath": "docs/installation.md",
      "extension": "md",
      "size": 564,
      "prettySize": "564 B",
      "modifiedTime": "2019-05-08T09:41:08.594Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.594Z",
      "birthTime": "2019-05-08T09:41:08.593Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "installation.md",
      "ext": ".md",
      "name": "installation",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226079,
      "blocks": 8,
      "atimeMs": 1557308635098.614,
      "mtimeMs": 1557308468593.5286,
      "ctimeMs": 1557308468593.5286,
      "birthtimeMs": 1557308468593.4773,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.594Z",
      "ctime": "2019-05-08T09:41:08.594Z",
      "birthtime": "2019-05-08T09:41:08.593Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/integrating-with-other-libraries.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/integrating-with-other-libraries.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/integrating-with-other-libraries.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "37146731620fabc82f318bb08c1e1e2b",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/integrating-with-other-libraries.md",
      "relativePath": "docs/integrating-with-other-libraries.md",
      "extension": "md",
      "size": 17664,
      "prettySize": "17.7 kB",
      "modifiedTime": "2019-05-08T09:41:08.594Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.594Z",
      "birthTime": "2019-05-08T09:41:08.594Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "integrating-with-other-libraries.md",
      "ext": ".md",
      "name": "integrating-with-other-libraries",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226080,
      "blocks": 40,
      "atimeMs": 1557308635098.617,
      "mtimeMs": 1557308468593.8032,
      "ctimeMs": 1557308468593.8032,
      "birthtimeMs": 1557308468593.753,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.594Z",
      "ctime": "2019-05-08T09:41:08.594Z",
      "birthtime": "2019-05-08T09:41:08.594Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/introducing-jsx.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/introducing-jsx.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/introducing-jsx.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "f01ba3040dc355faafc4ab3b479d2001",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/introducing-jsx.md",
      "relativePath": "docs/introducing-jsx.md",
      "extension": "md",
      "size": 5046,
      "prettySize": "5.05 kB",
      "modifiedTime": "2019-05-08T09:41:08.594Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.594Z",
      "birthTime": "2019-05-08T09:41:08.594Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "introducing-jsx.md",
      "ext": ".md",
      "name": "introducing-jsx",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226081,
      "blocks": 16,
      "atimeMs": 1557308635098.62,
      "mtimeMs": 1557308468594.0305,
      "ctimeMs": 1557308468594.0305,
      "birthtimeMs": 1557308468593.9666,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.594Z",
      "ctime": "2019-05-08T09:41:08.594Z",
      "birthtime": "2019-05-08T09:41:08.594Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/jsx-in-depth.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/jsx-in-depth.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/jsx-in-depth.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "097aabfc6cc021aa5cb85d560f97f445",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/jsx-in-depth.md",
      "relativePath": "docs/jsx-in-depth.md",
      "extension": "md",
      "size": 13523,
      "prettySize": "13.5 kB",
      "modifiedTime": "2019-05-08T09:41:08.594Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.594Z",
      "birthTime": "2019-05-08T09:41:08.594Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "jsx-in-depth.md",
      "ext": ".md",
      "name": "jsx-in-depth",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226082,
      "blocks": 32,
      "atimeMs": 1557308635098.623,
      "mtimeMs": 1557308468594.3513,
      "ctimeMs": 1557308468594.3513,
      "birthtimeMs": 1557308468594.276,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.594Z",
      "ctime": "2019-05-08T09:41:08.594Z",
      "birthtime": "2019-05-08T09:41:08.594Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/legacy-context.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/legacy-context.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/legacy-context.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "6ac4d62e0e3c9fd153e66bfc7a90b2c1",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/legacy-context.md",
      "relativePath": "docs/legacy-context.md",
      "extension": "md",
      "size": 7094,
      "prettySize": "7.09 kB",
      "modifiedTime": "2019-05-08T09:41:08.595Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.595Z",
      "birthTime": "2019-05-08T09:41:08.595Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "legacy-context.md",
      "ext": ".md",
      "name": "legacy-context",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226083,
      "blocks": 16,
      "atimeMs": 1557308635098.626,
      "mtimeMs": 1557308468594.5806,
      "ctimeMs": 1557308468594.5806,
      "birthtimeMs": 1557308468594.5215,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.595Z",
      "ctime": "2019-05-08T09:41:08.595Z",
      "birthtime": "2019-05-08T09:41:08.595Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/lifting-state-up.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/lifting-state-up.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/lifting-state-up.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "81011499a099e0d9d54555e88bbfe631",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/lifting-state-up.md",
      "relativePath": "docs/lifting-state-up.md",
      "extension": "md",
      "size": 14662,
      "prettySize": "14.7 kB",
      "modifiedTime": "2019-05-08T09:41:08.595Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.595Z",
      "birthTime": "2019-05-08T09:41:08.595Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "lifting-state-up.md",
      "ext": ".md",
      "name": "lifting-state-up",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226084,
      "blocks": 32,
      "atimeMs": 1557308635098.629,
      "mtimeMs": 1557308468594.8855,
      "ctimeMs": 1557308468594.8855,
      "birthtimeMs": 1557308468594.8318,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.595Z",
      "ctime": "2019-05-08T09:41:08.595Z",
      "birthtime": "2019-05-08T09:41:08.595Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/lists-and-keys.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/lists-and-keys.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/lists-and-keys.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "9da76892c7dc51a9d4245bb17813a967",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/lists-and-keys.md",
      "relativePath": "docs/lists-and-keys.md",
      "extension": "md",
      "size": 8495,
      "prettySize": "8.49 kB",
      "modifiedTime": "2019-05-08T09:41:08.595Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.595Z",
      "birthTime": "2019-05-08T09:41:08.595Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "lists-and-keys.md",
      "ext": ".md",
      "name": "lists-and-keys",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226085,
      "blocks": 24,
      "atimeMs": 1557308635098.6316,
      "mtimeMs": 1557308468595.1194,
      "ctimeMs": 1557308468595.1194,
      "birthtimeMs": 1557308468595.0396,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.595Z",
      "ctime": "2019-05-08T09:41:08.595Z",
      "birthtime": "2019-05-08T09:41:08.595Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/nav.yml absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/nav.yml absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "bc48f73ca9a7cd4620e5bf84810c77d2",
        "mediaType": "text/yaml",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/nav.yml",
      "relativePath": "docs/nav.yml",
      "extension": "yml",
      "size": 3871,
      "prettySize": "3.87 kB",
      "modifiedTime": "2019-05-08T09:41:08.595Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.595Z",
      "birthTime": "2019-05-08T09:41:08.595Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "nav.yml",
      "ext": ".yml",
      "name": "nav",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226086,
      "blocks": 8,
      "atimeMs": 1557308635098.6348,
      "mtimeMs": 1557308468595.3547,
      "ctimeMs": 1557308468595.3547,
      "birthtimeMs": 1557308468595.3071,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.595Z",
      "ctime": "2019-05-08T09:41:08.595Z",
      "birthtime": "2019-05-08T09:41:08.595Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/optimizing-performance.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/optimizing-performance.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/optimizing-performance.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "a9ea9fc3b32e4b7465c6e637899fd1d3",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/optimizing-performance.md",
      "relativePath": "docs/optimizing-performance.md",
      "extension": "md",
      "size": 19375,
      "prettySize": "19.4 kB",
      "modifiedTime": "2019-05-08T09:41:08.596Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.596Z",
      "birthTime": "2019-05-08T09:41:08.596Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "optimizing-performance.md",
      "ext": ".md",
      "name": "optimizing-performance",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226087,
      "blocks": 40,
      "atimeMs": 1557308635098.6375,
      "mtimeMs": 1557308468595.7751,
      "ctimeMs": 1557308468595.7751,
      "birthtimeMs": 1557308468595.7083,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.596Z",
      "ctime": "2019-05-08T09:41:08.596Z",
      "birthtime": "2019-05-08T09:41:08.596Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/portals.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/portals.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/portals.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "da6ff5ca2e2330d2d3506b343c3d37e7",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/portals.md",
      "relativePath": "docs/portals.md",
      "extension": "md",
      "size": 4134,
      "prettySize": "4.13 kB",
      "modifiedTime": "2019-05-08T09:41:08.596Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.596Z",
      "birthTime": "2019-05-08T09:41:08.596Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "portals.md",
      "ext": ".md",
      "name": "portals",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226088,
      "blocks": 16,
      "atimeMs": 1557308635098.6404,
      "mtimeMs": 1557308468596.0178,
      "ctimeMs": 1557308468596.0178,
      "birthtimeMs": 1557308468595.954,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.596Z",
      "ctime": "2019-05-08T09:41:08.596Z",
      "birthtime": "2019-05-08T09:41:08.596Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/react-without-es6.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/react-without-es6.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/react-without-es6.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "f8a34c5023dd3731384c07fe2a9009c1",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/react-without-es6.md",
      "relativePath": "docs/react-without-es6.md",
      "extension": "md",
      "size": 6853,
      "prettySize": "6.85 kB",
      "modifiedTime": "2019-05-08T09:41:08.596Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.596Z",
      "birthTime": "2019-05-08T09:41:08.596Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "react-without-es6.md",
      "ext": ".md",
      "name": "react-without-es6",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226089,
      "blocks": 16,
      "atimeMs": 1557308635098.6436,
      "mtimeMs": 1557308468596.2588,
      "ctimeMs": 1557308468596.2588,
      "birthtimeMs": 1557308468596.2056,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.596Z",
      "ctime": "2019-05-08T09:41:08.596Z",
      "birthtime": "2019-05-08T09:41:08.596Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/react-without-jsx.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/react-without-jsx.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/react-without-jsx.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "f52a302de19ab754a4eb14440620f827",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/react-without-jsx.md",
      "relativePath": "docs/react-without-jsx.md",
      "extension": "md",
      "size": 2112,
      "prettySize": "2.11 kB",
      "modifiedTime": "2019-05-08T09:41:08.596Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.596Z",
      "birthTime": "2019-05-08T09:41:08.596Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "react-without-jsx.md",
      "ext": ".md",
      "name": "react-without-jsx",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226090,
      "blocks": 8,
      "atimeMs": 1557308635098.6467,
      "mtimeMs": 1557308468596.4915,
      "ctimeMs": 1557308468596.4915,
      "birthtimeMs": 1557308468596.44,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.596Z",
      "ctime": "2019-05-08T09:41:08.596Z",
      "birthtime": "2019-05-08T09:41:08.596Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/reconciliation.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/reconciliation.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/reconciliation.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "607200e5c7b7fcf939f1073c3507f442",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/reconciliation.md",
      "relativePath": "docs/reconciliation.md",
      "extension": "md",
      "size": 7491,
      "prettySize": "7.49 kB",
      "modifiedTime": "2019-05-08T09:41:08.597Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.597Z",
      "birthTime": "2019-05-08T09:41:08.597Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "reconciliation.md",
      "ext": ".md",
      "name": "reconciliation",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226091,
      "blocks": 16,
      "atimeMs": 1557308635098.6494,
      "mtimeMs": 1557308468596.762,
      "ctimeMs": 1557308468596.762,
      "birthtimeMs": 1557308468596.6663,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.597Z",
      "ctime": "2019-05-08T09:41:08.597Z",
      "birthtime": "2019-05-08T09:41:08.597Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/reference-dom-elements.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/reference-dom-elements.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/reference-dom-elements.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "6c7e8cf9cefd549394573d684c7a357f",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/reference-dom-elements.md",
      "relativePath": "docs/reference-dom-elements.md",
      "extension": "md",
      "size": 10000,
      "prettySize": "10 kB",
      "modifiedTime": "2019-05-08T09:41:08.597Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.597Z",
      "birthTime": "2019-05-08T09:41:08.597Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "reference-dom-elements.md",
      "ext": ".md",
      "name": "reference-dom-elements",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226092,
      "blocks": 24,
      "atimeMs": 1557308635098.6523,
      "mtimeMs": 1557308468597.0483,
      "ctimeMs": 1557308468597.0483,
      "birthtimeMs": 1557308468596.9795,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.597Z",
      "ctime": "2019-05-08T09:41:08.597Z",
      "birthtime": "2019-05-08T09:41:08.597Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/reference-events.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/reference-events.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/reference-events.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "1c1b8e2012e230c5efec1af311e783d9",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/reference-events.md",
      "relativePath": "docs/reference-events.md",
      "extension": "md",
      "size": 7395,
      "prettySize": "7.39 kB",
      "modifiedTime": "2019-05-08T09:41:08.597Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.597Z",
      "birthTime": "2019-05-08T09:41:08.597Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "reference-events.md",
      "ext": ".md",
      "name": "reference-events",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226093,
      "blocks": 16,
      "atimeMs": 1557308635098.6553,
      "mtimeMs": 1557308468597.2817,
      "ctimeMs": 1557308468597.2817,
      "birthtimeMs": 1557308468597.2283,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.597Z",
      "ctime": "2019-05-08T09:41:08.597Z",
      "birthtime": "2019-05-08T09:41:08.597Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/reference-glossary.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/reference-glossary.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/reference-glossary.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "973731048cd3559f97e1d219e1ecde22",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/reference-glossary.md",
      "relativePath": "docs/reference-glossary.md",
      "extension": "md",
      "size": 9057,
      "prettySize": "9.06 kB",
      "modifiedTime": "2019-05-08T09:41:08.598Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.598Z",
      "birthTime": "2019-05-08T09:41:08.597Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "reference-glossary.md",
      "ext": ".md",
      "name": "reference-glossary",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226094,
      "blocks": 24,
      "atimeMs": 1557308635098.6582,
      "mtimeMs": 1557308468597.5078,
      "ctimeMs": 1557308468597.5078,
      "birthtimeMs": 1557308468597.4539,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.598Z",
      "ctime": "2019-05-08T09:41:08.598Z",
      "birthtime": "2019-05-08T09:41:08.597Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/reference-javascript-environment-requirements.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/reference-javascript-environment-requirements.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/reference-javascript-environment-requirements.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "58ddf9f80b74742949085a606c009354",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/reference-javascript-environment-requirements.md",
      "relativePath": "docs/reference-javascript-environment-requirements.md",
      "extension": "md",
      "size": 1161,
      "prettySize": "1.16 kB",
      "modifiedTime": "2019-05-08T09:41:08.598Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.598Z",
      "birthTime": "2019-05-08T09:41:08.598Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "reference-javascript-environment-requirements.md",
      "ext": ".md",
      "name": "reference-javascript-environment-requirements",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226095,
      "blocks": 8,
      "atimeMs": 1557308635098.6614,
      "mtimeMs": 1557308468597.7112,
      "ctimeMs": 1557308468597.7112,
      "birthtimeMs": 1557308468597.6355,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.598Z",
      "ctime": "2019-05-08T09:41:08.598Z",
      "birthtime": "2019-05-08T09:41:08.598Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/reference-pure-render-mixin.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/reference-pure-render-mixin.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/reference-pure-render-mixin.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "e4f4f006494ada9879067f816e006d94",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/reference-pure-render-mixin.md",
      "relativePath": "docs/reference-pure-render-mixin.md",
      "extension": "md",
      "size": 1942,
      "prettySize": "1.94 kB",
      "modifiedTime": "2019-05-08T09:41:08.598Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.598Z",
      "birthTime": "2019-05-08T09:41:08.598Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "reference-pure-render-mixin.md",
      "ext": ".md",
      "name": "reference-pure-render-mixin",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226096,
      "blocks": 8,
      "atimeMs": 1557308635098.6643,
      "mtimeMs": 1557308468597.8743,
      "ctimeMs": 1557308468597.8743,
      "birthtimeMs": 1557308468597.8167,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.598Z",
      "ctime": "2019-05-08T09:41:08.598Z",
      "birthtime": "2019-05-08T09:41:08.598Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/reference-react-component.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/reference-react-component.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/reference-react-component.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "84798e714bfaa135daddf436c52169dc",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/reference-react-component.md",
      "relativePath": "docs/reference-react-component.md",
      "extension": "md",
      "size": 27494,
      "prettySize": "27.5 kB",
      "modifiedTime": "2019-05-08T09:41:08.598Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.598Z",
      "birthTime": "2019-05-08T09:41:08.598Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "reference-react-component.md",
      "ext": ".md",
      "name": "reference-react-component",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226097,
      "blocks": 56,
      "atimeMs": 1557308635098.6672,
      "mtimeMs": 1557308468598.258,
      "ctimeMs": 1557308468598.258,
      "birthtimeMs": 1557308468598.1292,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.598Z",
      "ctime": "2019-05-08T09:41:08.598Z",
      "birthtime": "2019-05-08T09:41:08.598Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/reference-react-dom-server.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/reference-react-dom-server.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/reference-react-dom-server.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "2267206678f45bd336b5a7abeb555d79",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/reference-react-dom-server.md",
      "relativePath": "docs/reference-react-dom-server.md",
      "extension": "md",
      "size": 1622,
      "prettySize": "1.62 kB",
      "modifiedTime": "2019-05-08T09:41:08.599Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.599Z",
      "birthTime": "2019-05-08T09:41:08.598Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "reference-react-dom-server.md",
      "ext": ".md",
      "name": "reference-react-dom-server",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226098,
      "blocks": 8,
      "atimeMs": 1557308635098.6702,
      "mtimeMs": 1557308468598.5425,
      "ctimeMs": 1557308468598.5425,
      "birthtimeMs": 1557308468598.46,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.599Z",
      "ctime": "2019-05-08T09:41:08.599Z",
      "birthtime": "2019-05-08T09:41:08.598Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/reference-react-dom.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/reference-react-dom.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/reference-react-dom.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "845fb63a16b32c62a771d0b769ae38e3",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/reference-react-dom.md",
      "relativePath": "docs/reference-react-dom.md",
      "extension": "md",
      "size": 6863,
      "prettySize": "6.86 kB",
      "modifiedTime": "2019-05-08T09:41:08.599Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.599Z",
      "birthTime": "2019-05-08T09:41:08.599Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "reference-react-dom.md",
      "ext": ".md",
      "name": "reference-react-dom",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226099,
      "blocks": 16,
      "atimeMs": 1557308635098.673,
      "mtimeMs": 1557308468598.7651,
      "ctimeMs": 1557308468598.7651,
      "birthtimeMs": 1557308468598.7124,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.599Z",
      "ctime": "2019-05-08T09:41:08.599Z",
      "birthtime": "2019-05-08T09:41:08.599Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/reference-react.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/reference-react.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/reference-react.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "78c52700dbb7f4c4bf8022ee66eba056",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/reference-react.md",
      "relativePath": "docs/reference-react.md",
      "extension": "md",
      "size": 14566,
      "prettySize": "14.6 kB",
      "modifiedTime": "2019-05-08T09:41:08.599Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.599Z",
      "birthTime": "2019-05-08T09:41:08.599Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "reference-react.md",
      "ext": ".md",
      "name": "reference-react",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226100,
      "blocks": 32,
      "atimeMs": 1557308635098.676,
      "mtimeMs": 1557308468599.0059,
      "ctimeMs": 1557308468599.0059,
      "birthtimeMs": 1557308468598.9539,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.599Z",
      "ctime": "2019-05-08T09:41:08.599Z",
      "birthtime": "2019-05-08T09:41:08.599Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/reference-test-renderer.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/reference-test-renderer.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/reference-test-renderer.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "43e3cea811416c5a4452a2a855f85008",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/reference-test-renderer.md",
      "relativePath": "docs/reference-test-renderer.md",
      "extension": "md",
      "size": 8097,
      "prettySize": "8.1 kB",
      "modifiedTime": "2019-05-08T09:41:08.600Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.600Z",
      "birthTime": "2019-05-08T09:41:08.600Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "reference-test-renderer.md",
      "ext": ".md",
      "name": "reference-test-renderer",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226101,
      "blocks": 16,
      "atimeMs": 1557308635098.679,
      "mtimeMs": 1557308468599.5974,
      "ctimeMs": 1557308468599.5974,
      "birthtimeMs": 1557308468599.5178,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.600Z",
      "ctime": "2019-05-08T09:41:08.600Z",
      "birthtime": "2019-05-08T09:41:08.600Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/refs-and-the-dom.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/refs-and-the-dom.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/refs-and-the-dom.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "066d603dd9b0957cd397cc25c829c192",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/refs-and-the-dom.md",
      "relativePath": "docs/refs-and-the-dom.md",
      "extension": "md",
      "size": 10516,
      "prettySize": "10.5 kB",
      "modifiedTime": "2019-05-08T09:41:08.600Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.600Z",
      "birthTime": "2019-05-08T09:41:08.600Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "refs-and-the-dom.md",
      "ext": ".md",
      "name": "refs-and-the-dom",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226102,
      "blocks": 24,
      "atimeMs": 1557308635098.682,
      "mtimeMs": 1557308468599.8438,
      "ctimeMs": 1557308468599.8438,
      "birthtimeMs": 1557308468599.7888,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.600Z",
      "ctime": "2019-05-08T09:41:08.600Z",
      "birthtime": "2019-05-08T09:41:08.600Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/render-props.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/render-props.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/render-props.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "03c9f3e4b0495658f6472840759f10c8",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/render-props.md",
      "relativePath": "docs/render-props.md",
      "extension": "md",
      "size": 10539,
      "prettySize": "10.5 kB",
      "modifiedTime": "2019-05-08T09:41:08.600Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.600Z",
      "birthTime": "2019-05-08T09:41:08.600Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "render-props.md",
      "ext": ".md",
      "name": "render-props",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226103,
      "blocks": 24,
      "atimeMs": 1557308635098.6846,
      "mtimeMs": 1557308468600.0789,
      "ctimeMs": 1557308468600.0789,
      "birthtimeMs": 1557308468600.0198,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.600Z",
      "ctime": "2019-05-08T09:41:08.600Z",
      "birthtime": "2019-05-08T09:41:08.600Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/rendering-elements.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/rendering-elements.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/rendering-elements.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "81ef80f93a0a31b9119d7945f339b1da",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/rendering-elements.md",
      "relativePath": "docs/rendering-elements.md",
      "extension": "md",
      "size": 3493,
      "prettySize": "3.49 kB",
      "modifiedTime": "2019-05-08T09:41:08.600Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.600Z",
      "birthTime": "2019-05-08T09:41:08.600Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "rendering-elements.md",
      "ext": ".md",
      "name": "rendering-elements",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226104,
      "blocks": 8,
      "atimeMs": 1557308635098.6877,
      "mtimeMs": 1557308468600.2708,
      "ctimeMs": 1557308468600.2708,
      "birthtimeMs": 1557308468600.2202,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.600Z",
      "ctime": "2019-05-08T09:41:08.600Z",
      "birthtime": "2019-05-08T09:41:08.600Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/state-and-lifecycle.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/state-and-lifecycle.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/state-and-lifecycle.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "e2309645082d25a95111c600d198fa1d",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/state-and-lifecycle.md",
      "relativePath": "docs/state-and-lifecycle.md",
      "extension": "md",
      "size": 12595,
      "prettySize": "12.6 kB",
      "modifiedTime": "2019-05-08T09:41:08.600Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.600Z",
      "birthTime": "2019-05-08T09:41:08.600Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "state-and-lifecycle.md",
      "ext": ".md",
      "name": "state-and-lifecycle",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226105,
      "blocks": 32,
      "atimeMs": 1557308635098.6907,
      "mtimeMs": 1557308468600.4885,
      "ctimeMs": 1557308468600.4885,
      "birthtimeMs": 1557308468600.436,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.600Z",
      "ctime": "2019-05-08T09:41:08.600Z",
      "birthtime": "2019-05-08T09:41:08.600Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/static-type-checking.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/static-type-checking.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/static-type-checking.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "fd041a67aac9771de8e6657a59cdeacd",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/static-type-checking.md",
      "relativePath": "docs/static-type-checking.md",
      "extension": "md",
      "size": 12078,
      "prettySize": "12.1 kB",
      "modifiedTime": "2019-05-08T09:41:08.601Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.601Z",
      "birthTime": "2019-05-08T09:41:08.601Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "static-type-checking.md",
      "ext": ".md",
      "name": "static-type-checking",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226106,
      "blocks": 24,
      "atimeMs": 1557308635098.6936,
      "mtimeMs": 1557308468600.7632,
      "ctimeMs": 1557308468600.7632,
      "birthtimeMs": 1557308468600.7097,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.601Z",
      "ctime": "2019-05-08T09:41:08.601Z",
      "birthtime": "2019-05-08T09:41:08.601Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/strict-mode.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/strict-mode.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/strict-mode.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "e414ff127a22a175e11e37cacf31ff57",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/strict-mode.md",
      "relativePath": "docs/strict-mode.md",
      "extension": "md",
      "size": 5498,
      "prettySize": "5.5 kB",
      "modifiedTime": "2019-05-08T09:41:08.601Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.601Z",
      "birthTime": "2019-05-08T09:41:08.601Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "strict-mode.md",
      "ext": ".md",
      "name": "strict-mode",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226107,
      "blocks": 16,
      "atimeMs": 1557308635098.6963,
      "mtimeMs": 1557308468600.9768,
      "ctimeMs": 1557308468600.9768,
      "birthtimeMs": 1557308468600.927,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.601Z",
      "ctime": "2019-05-08T09:41:08.601Z",
      "birthtime": "2019-05-08T09:41:08.601Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/thinking-in-react.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/thinking-in-react.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/thinking-in-react.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "48f211ee14566339c0bc17d4c4c9c575",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/thinking-in-react.md",
      "relativePath": "docs/thinking-in-react.md",
      "extension": "md",
      "size": 12443,
      "prettySize": "12.4 kB",
      "modifiedTime": "2019-05-08T09:41:08.601Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.601Z",
      "birthTime": "2019-05-08T09:41:08.601Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "thinking-in-react.md",
      "ext": ".md",
      "name": "thinking-in-react",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226108,
      "blocks": 32,
      "atimeMs": 1557308635098.699,
      "mtimeMs": 1557308468601.365,
      "ctimeMs": 1557308468601.365,
      "birthtimeMs": 1557308468601.2993,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.601Z",
      "ctime": "2019-05-08T09:41:08.601Z",
      "birthtime": "2019-05-08T09:41:08.601Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/typechecking-with-proptypes.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/typechecking-with-proptypes.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/typechecking-with-proptypes.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "3c0298f0e034f6c5513fccbc17abb5cf",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/typechecking-with-proptypes.md",
      "relativePath": "docs/typechecking-with-proptypes.md",
      "extension": "md",
      "size": 5691,
      "prettySize": "5.69 kB",
      "modifiedTime": "2019-05-08T09:41:08.602Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.602Z",
      "birthTime": "2019-05-08T09:41:08.602Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "typechecking-with-proptypes.md",
      "ext": ".md",
      "name": "typechecking-with-proptypes",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226109,
      "blocks": 16,
      "atimeMs": 1557308635098.7021,
      "mtimeMs": 1557308468601.635,
      "ctimeMs": 1557308468601.635,
      "birthtimeMs": 1557308468601.5833,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.602Z",
      "ctime": "2019-05-08T09:41:08.602Z",
      "birthtime": "2019-05-08T09:41:08.602Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/uncontrolled-components.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/uncontrolled-components.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/uncontrolled-components.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "364e74b35d4a1712e02c8bc13cf87949",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/uncontrolled-components.md",
      "relativePath": "docs/uncontrolled-components.md",
      "extension": "md",
      "size": 3833,
      "prettySize": "3.83 kB",
      "modifiedTime": "2019-05-08T09:41:08.602Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.602Z",
      "birthTime": "2019-05-08T09:41:08.602Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "uncontrolled-components.md",
      "ext": ".md",
      "name": "uncontrolled-components",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226110,
      "blocks": 8,
      "atimeMs": 1557308635098.705,
      "mtimeMs": 1557308468601.815,
      "ctimeMs": 1557308468601.815,
      "birthtimeMs": 1557308468601.7676,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.602Z",
      "ctime": "2019-05-08T09:41:08.602Z",
      "birthtime": "2019-05-08T09:41:08.602Z"
    },
    "/Users/yubolun/Desktop/react/content/docs/web-components.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/docs/web-components.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/docs/web-components.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "a95a2f51159d76631926e51f6e38909e",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/docs/web-components.md",
      "relativePath": "docs/web-components.md",
      "extension": "md",
      "size": 2106,
      "prettySize": "2.11 kB",
      "modifiedTime": "2019-05-08T09:41:08.602Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.602Z",
      "birthTime": "2019-05-08T09:41:08.602Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/docs",
      "base": "web-components.md",
      "ext": ".md",
      "name": "web-components",
      "relativeDirectory": "docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226111,
      "blocks": 8,
      "atimeMs": 1557308635098.708,
      "mtimeMs": 1557308468601.9868,
      "ctimeMs": 1557308468601.9868,
      "birthtimeMs": 1557308468601.93,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.602Z",
      "ctime": "2019-05-08T09:41:08.602Z",
      "birthtime": "2019-05-08T09:41:08.602Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-06-02-jsfiddle-integration.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-06-02-jsfiddle-integration.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2013-06-02-jsfiddle-integration.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "1a73bff892aa87d0c18e95eb7510fd4b",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-06-02-jsfiddle-integration.md",
      "relativePath": "blog/2013-06-02-jsfiddle-integration.md",
      "extension": "md",
      "size": 724,
      "prettySize": "724 B",
      "modifiedTime": "2019-05-08T09:41:08.541Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.541Z",
      "birthTime": "2019-05-08T09:41:08.541Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2013-06-02-jsfiddle-integration.md",
      "ext": ".md",
      "name": "2013-06-02-jsfiddle-integration",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225863,
      "blocks": 8,
      "atimeMs": 1557308635097.8333,
      "mtimeMs": 1557308468541.3723,
      "ctimeMs": 1557308468541.3723,
      "birthtimeMs": 1557308468541.3394,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.541Z",
      "ctime": "2019-05-08T09:41:08.541Z",
      "birthtime": "2019-05-08T09:41:08.541Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-06-05-why-react.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-06-05-why-react.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2013-06-05-why-react.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "a756a91448080005fd9b8b2eb144b665",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-06-05-why-react.md",
      "relativePath": "blog/2013-06-05-why-react.md",
      "extension": "md",
      "size": 3960,
      "prettySize": "3.96 kB",
      "modifiedTime": "2019-05-08T09:41:08.542Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.542Z",
      "birthTime": "2019-05-08T09:41:08.541Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2013-06-05-why-react.md",
      "ext": ".md",
      "name": "2013-06-05-why-react",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225864,
      "blocks": 8,
      "atimeMs": 1557308635097.8362,
      "mtimeMs": 1557308468541.5054,
      "ctimeMs": 1557308468541.5054,
      "birthtimeMs": 1557308468541.473,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.542Z",
      "ctime": "2019-05-08T09:41:08.542Z",
      "birthtime": "2019-05-08T09:41:08.541Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-06-12-community-roundup.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-06-12-community-roundup.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2013-06-12-community-roundup.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "1d110d63334e58a283d535b32a35abc5",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-06-12-community-roundup.md",
      "relativePath": "blog/2013-06-12-community-roundup.md",
      "extension": "md",
      "size": 3731,
      "prettySize": "3.73 kB",
      "modifiedTime": "2019-05-08T09:41:08.542Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.542Z",
      "birthTime": "2019-05-08T09:41:08.542Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2013-06-12-community-roundup.md",
      "ext": ".md",
      "name": "2013-06-12-community-roundup",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225865,
      "blocks": 8,
      "atimeMs": 1557308635097.839,
      "mtimeMs": 1557308468541.6306,
      "ctimeMs": 1557308468541.6306,
      "birthtimeMs": 1557308468541.5928,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.542Z",
      "ctime": "2019-05-08T09:41:08.542Z",
      "birthtime": "2019-05-08T09:41:08.542Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-06-19-community-roundup-2.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-06-19-community-roundup-2.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2013-06-19-community-roundup-2.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "3b3ab73469584c83a30acbf3dde466c0",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-06-19-community-roundup-2.md",
      "relativePath": "blog/2013-06-19-community-roundup-2.md",
      "extension": "md",
      "size": 5391,
      "prettySize": "5.39 kB",
      "modifiedTime": "2019-05-08T09:41:08.542Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.542Z",
      "birthTime": "2019-05-08T09:41:08.542Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2013-06-19-community-roundup-2.md",
      "ext": ".md",
      "name": "2013-06-19-community-roundup-2",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225866,
      "blocks": 16,
      "atimeMs": 1557308635097.8418,
      "mtimeMs": 1557308468541.7642,
      "ctimeMs": 1557308468541.7642,
      "birthtimeMs": 1557308468541.732,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.542Z",
      "ctime": "2019-05-08T09:41:08.542Z",
      "birthtime": "2019-05-08T09:41:08.542Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-06-21-react-v0-3-3.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-06-21-react-v0-3-3.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2013-06-21-react-v0-3-3.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "17dfb04acc0d6362437ffb83a92ba4ea",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-06-21-react-v0-3-3.md",
      "relativePath": "blog/2013-06-21-react-v0-3-3.md",
      "extension": "md",
      "size": 986,
      "prettySize": "986 B",
      "modifiedTime": "2019-05-08T09:41:08.542Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.542Z",
      "birthTime": "2019-05-08T09:41:08.542Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2013-06-21-react-v0-3-3.md",
      "ext": ".md",
      "name": "2013-06-21-react-v0-3-3",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225867,
      "blocks": 8,
      "atimeMs": 1557308635097.8447,
      "mtimeMs": 1557308468541.965,
      "ctimeMs": 1557308468541.965,
      "birthtimeMs": 1557308468541.9224,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.542Z",
      "ctime": "2019-05-08T09:41:08.542Z",
      "birthtime": "2019-05-08T09:41:08.542Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-06-27-community-roundup-3.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-06-27-community-roundup-3.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2013-06-27-community-roundup-3.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "541490733022f607718dbcae6b75deb6",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-06-27-community-roundup-3.md",
      "relativePath": "blog/2013-06-27-community-roundup-3.md",
      "extension": "md",
      "size": 5727,
      "prettySize": "5.73 kB",
      "modifiedTime": "2019-05-08T09:41:08.542Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.542Z",
      "birthTime": "2019-05-08T09:41:08.542Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2013-06-27-community-roundup-3.md",
      "ext": ".md",
      "name": "2013-06-27-community-roundup-3",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225868,
      "blocks": 16,
      "atimeMs": 1557308635097.8474,
      "mtimeMs": 1557308468542.127,
      "ctimeMs": 1557308468542.127,
      "birthtimeMs": 1557308468542.0854,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.542Z",
      "ctime": "2019-05-08T09:41:08.542Z",
      "birthtime": "2019-05-08T09:41:08.542Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-07-02-react-v0-4-autobind-by-default.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-07-02-react-v0-4-autobind-by-default.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2013-07-02-react-v0-4-autobind-by-default.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "08ee7c9161124956649f4d1c9767306f",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-07-02-react-v0-4-autobind-by-default.md",
      "relativePath": "blog/2013-07-02-react-v0-4-autobind-by-default.md",
      "extension": "md",
      "size": 2362,
      "prettySize": "2.36 kB",
      "modifiedTime": "2019-05-08T09:41:08.542Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.542Z",
      "birthTime": "2019-05-08T09:41:08.542Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2013-07-02-react-v0-4-autobind-by-default.md",
      "ext": ".md",
      "name": "2013-07-02-react-v0-4-autobind-by-default",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225869,
      "blocks": 8,
      "atimeMs": 1557308635097.8503,
      "mtimeMs": 1557308468542.3787,
      "ctimeMs": 1557308468542.3787,
      "birthtimeMs": 1557308468542.343,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.542Z",
      "ctime": "2019-05-08T09:41:08.542Z",
      "birthtime": "2019-05-08T09:41:08.542Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-07-11-react-v0-4-prop-validation-and-default-values.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-07-11-react-v0-4-prop-validation-and-default-values.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2013-07-11-react-v0-4-prop-validation-and-default-values.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "b519adc47d4f8f5aefefba2ac03acba7",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-07-11-react-v0-4-prop-validation-and-default-values.md",
      "relativePath": "blog/2013-07-11-react-v0-4-prop-validation-and-default-values.md",
      "extension": "md",
      "size": 2133,
      "prettySize": "2.13 kB",
      "modifiedTime": "2019-05-08T09:41:08.543Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.543Z",
      "birthTime": "2019-05-08T09:41:08.543Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2013-07-11-react-v0-4-prop-validation-and-default-values.md",
      "ext": ".md",
      "name": "2013-07-11-react-v0-4-prop-validation-and-default-values",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225871,
      "blocks": 8,
      "atimeMs": 1557308635097.857,
      "mtimeMs": 1557308468542.6455,
      "ctimeMs": 1557308468542.6455,
      "birthtimeMs": 1557308468542.6145,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.543Z",
      "ctime": "2019-05-08T09:41:08.543Z",
      "birthtime": "2019-05-08T09:41:08.543Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-07-03-community-roundup-4.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-07-03-community-roundup-4.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2013-07-03-community-roundup-4.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "5ac8e1a30fdb7d546d75f08c38acd630",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-07-03-community-roundup-4.md",
      "relativePath": "blog/2013-07-03-community-roundup-4.md",
      "extension": "md",
      "size": 4325,
      "prettySize": "4.33 kB",
      "modifiedTime": "2019-05-08T09:41:08.543Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.543Z",
      "birthTime": "2019-05-08T09:41:08.542Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2013-07-03-community-roundup-4.md",
      "ext": ".md",
      "name": "2013-07-03-community-roundup-4",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225870,
      "blocks": 16,
      "atimeMs": 1557308635097.8533,
      "mtimeMs": 1557308468542.531,
      "ctimeMs": 1557308468542.531,
      "birthtimeMs": 1557308468542.491,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.543Z",
      "ctime": "2019-05-08T09:41:08.543Z",
      "birthtime": "2019-05-08T09:41:08.542Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-07-17-react-v0-4-0.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-07-17-react-v0-4-0.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2013-07-17-react-v0-4-0.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "05bcf0fb11d201d6ca9804d6d1af7d89",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-07-17-react-v0-4-0.md",
      "relativePath": "blog/2013-07-17-react-v0-4-0.md",
      "extension": "md",
      "size": 3447,
      "prettySize": "3.45 kB",
      "modifiedTime": "2019-05-08T09:41:08.543Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.543Z",
      "birthTime": "2019-05-08T09:41:08.543Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2013-07-17-react-v0-4-0.md",
      "ext": ".md",
      "name": "2013-07-17-react-v0-4-0",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225872,
      "blocks": 8,
      "atimeMs": 1557308635097.8599,
      "mtimeMs": 1557308468542.7666,
      "ctimeMs": 1557308468542.7666,
      "birthtimeMs": 1557308468542.737,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.543Z",
      "ctime": "2019-05-08T09:41:08.543Z",
      "birthtime": "2019-05-08T09:41:08.543Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-07-23-community-roundup-5.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-07-23-community-roundup-5.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2013-07-23-community-roundup-5.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "1495f623672c37b51145397c2d12e21f",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-07-23-community-roundup-5.md",
      "relativePath": "blog/2013-07-23-community-roundup-5.md",
      "extension": "md",
      "size": 6559,
      "prettySize": "6.56 kB",
      "modifiedTime": "2019-05-08T09:41:08.543Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.543Z",
      "birthTime": "2019-05-08T09:41:08.543Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2013-07-23-community-roundup-5.md",
      "ext": ".md",
      "name": "2013-07-23-community-roundup-5",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225873,
      "blocks": 16,
      "atimeMs": 1557308635097.8804,
      "mtimeMs": 1557308468542.9001,
      "ctimeMs": 1557308468542.9001,
      "birthtimeMs": 1557308468542.8616,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.543Z",
      "ctime": "2019-05-08T09:41:08.543Z",
      "birthtime": "2019-05-08T09:41:08.543Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-07-26-react-v0-4-1.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-07-26-react-v0-4-1.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2013-07-26-react-v0-4-1.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "fcc593a1f7e2554c5f19f3df6ccd1568",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-07-26-react-v0-4-1.md",
      "relativePath": "blog/2013-07-26-react-v0-4-1.md",
      "extension": "md",
      "size": 822,
      "prettySize": "822 B",
      "modifiedTime": "2019-05-08T09:41:08.543Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.543Z",
      "birthTime": "2019-05-08T09:41:08.543Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2013-07-26-react-v0-4-1.md",
      "ext": ".md",
      "name": "2013-07-26-react-v0-4-1",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225874,
      "blocks": 8,
      "atimeMs": 1557308635097.8833,
      "mtimeMs": 1557308468543.017,
      "ctimeMs": 1557308468543.017,
      "birthtimeMs": 1557308468542.9807,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.543Z",
      "ctime": "2019-05-08T09:41:08.543Z",
      "birthtime": "2019-05-08T09:41:08.543Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-07-30-use-react-and-jsx-in-ruby-on-rails.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-07-30-use-react-and-jsx-in-ruby-on-rails.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2013-07-30-use-react-and-jsx-in-ruby-on-rails.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "f3bdefd823491a72540595f5a5b1d27b",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-07-30-use-react-and-jsx-in-ruby-on-rails.md",
      "relativePath": "blog/2013-07-30-use-react-and-jsx-in-ruby-on-rails.md",
      "extension": "md",
      "size": 1923,
      "prettySize": "1.92 kB",
      "modifiedTime": "2019-05-08T09:41:08.543Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.543Z",
      "birthTime": "2019-05-08T09:41:08.543Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2013-07-30-use-react-and-jsx-in-ruby-on-rails.md",
      "ext": ".md",
      "name": "2013-07-30-use-react-and-jsx-in-ruby-on-rails",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225875,
      "blocks": 8,
      "atimeMs": 1557308635097.8862,
      "mtimeMs": 1557308468543.1704,
      "ctimeMs": 1557308468543.1704,
      "birthtimeMs": 1557308468543.0962,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.543Z",
      "ctime": "2019-05-08T09:41:08.543Z",
      "birthtime": "2019-05-08T09:41:08.543Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-08-05-community-roundup-6.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-08-05-community-roundup-6.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2013-08-05-community-roundup-6.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "66722395aab81c1af8c35bbcc350a998",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-08-05-community-roundup-6.md",
      "relativePath": "blog/2013-08-05-community-roundup-6.md",
      "extension": "md",
      "size": 3785,
      "prettySize": "3.79 kB",
      "modifiedTime": "2019-05-08T09:41:08.543Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.543Z",
      "birthTime": "2019-05-08T09:41:08.543Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2013-08-05-community-roundup-6.md",
      "ext": ".md",
      "name": "2013-08-05-community-roundup-6",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225876,
      "blocks": 8,
      "atimeMs": 1557308635097.8894,
      "mtimeMs": 1557308468543.4282,
      "ctimeMs": 1557308468543.4282,
      "birthtimeMs": 1557308468543.3877,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.543Z",
      "ctime": "2019-05-08T09:41:08.543Z",
      "birthtime": "2019-05-08T09:41:08.543Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-08-19-use-react-and-jsx-in-python-applications.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-08-19-use-react-and-jsx-in-python-applications.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2013-08-19-use-react-and-jsx-in-python-applications.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "b824a5c6fb518a2e68a5d09c9a3d90df",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-08-19-use-react-and-jsx-in-python-applications.md",
      "relativePath": "blog/2013-08-19-use-react-and-jsx-in-python-applications.md",
      "extension": "md",
      "size": 2036,
      "prettySize": "2.04 kB",
      "modifiedTime": "2019-05-08T09:41:08.544Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.544Z",
      "birthTime": "2019-05-08T09:41:08.544Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2013-08-19-use-react-and-jsx-in-python-applications.md",
      "ext": ".md",
      "name": "2013-08-19-use-react-and-jsx-in-python-applications",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225877,
      "blocks": 8,
      "atimeMs": 1557308635097.8923,
      "mtimeMs": 1557308468543.6106,
      "ctimeMs": 1557308468543.6106,
      "birthtimeMs": 1557308468543.5586,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.544Z",
      "ctime": "2019-05-08T09:41:08.544Z",
      "birthtime": "2019-05-08T09:41:08.544Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-08-26-community-roundup-7.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-08-26-community-roundup-7.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2013-08-26-community-roundup-7.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "bcdbbf926bcd44c4b4f6a1e4b7cf191d",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-08-26-community-roundup-7.md",
      "relativePath": "blog/2013-08-26-community-roundup-7.md",
      "extension": "md",
      "size": 4097,
      "prettySize": "4.1 kB",
      "modifiedTime": "2019-05-08T09:41:08.544Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.544Z",
      "birthTime": "2019-05-08T09:41:08.544Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2013-08-26-community-roundup-7.md",
      "ext": ".md",
      "name": "2013-08-26-community-roundup-7",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225878,
      "blocks": 16,
      "atimeMs": 1557308635097.8953,
      "mtimeMs": 1557308468543.7744,
      "ctimeMs": 1557308468543.7744,
      "birthtimeMs": 1557308468543.7205,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.544Z",
      "ctime": "2019-05-08T09:41:08.544Z",
      "birthtime": "2019-05-08T09:41:08.544Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-09-24-community-roundup-8.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-09-24-community-roundup-8.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2013-09-24-community-roundup-8.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "68415174b575ad4c02b1491fc8ab1b21",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-09-24-community-roundup-8.md",
      "relativePath": "blog/2013-09-24-community-roundup-8.md",
      "extension": "md",
      "size": 7292,
      "prettySize": "7.29 kB",
      "modifiedTime": "2019-05-08T09:41:08.544Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.544Z",
      "birthTime": "2019-05-08T09:41:08.544Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2013-09-24-community-roundup-8.md",
      "ext": ".md",
      "name": "2013-09-24-community-roundup-8",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225879,
      "blocks": 16,
      "atimeMs": 1557308635097.8987,
      "mtimeMs": 1557308468543.9275,
      "ctimeMs": 1557308468543.9275,
      "birthtimeMs": 1557308468543.8943,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.544Z",
      "ctime": "2019-05-08T09:41:08.544Z",
      "birthtime": "2019-05-08T09:41:08.544Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-10-16-react-v0.5.0.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-10-16-react-v0.5.0.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2013-10-16-react-v0.5.0.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "8bc01e4e74f9bb7643114fd260154bff",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-10-16-react-v0.5.0.md",
      "relativePath": "blog/2013-10-16-react-v0.5.0.md",
      "extension": "md",
      "size": 4194,
      "prettySize": "4.19 kB",
      "modifiedTime": "2019-05-08T09:41:08.544Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.544Z",
      "birthTime": "2019-05-08T09:41:08.544Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2013-10-16-react-v0.5.0.md",
      "ext": ".md",
      "name": "2013-10-16-react-v0.5.0",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225880,
      "blocks": 16,
      "atimeMs": 1557308635097.9016,
      "mtimeMs": 1557308468544.0786,
      "ctimeMs": 1557308468544.0786,
      "birthtimeMs": 1557308468544.0288,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.544Z",
      "ctime": "2019-05-08T09:41:08.544Z",
      "birthtime": "2019-05-08T09:41:08.544Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-10-29-react-v0-5-1.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-10-29-react-v0-5-1.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2013-10-29-react-v0-5-1.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "4adf46c72677d43bc327c61b4889f7f1",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-10-29-react-v0-5-1.md",
      "relativePath": "blog/2013-10-29-react-v0-5-1.md",
      "extension": "md",
      "size": 804,
      "prettySize": "804 B",
      "modifiedTime": "2019-05-08T09:41:08.544Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.544Z",
      "birthTime": "2019-05-08T09:41:08.544Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2013-10-29-react-v0-5-1.md",
      "ext": ".md",
      "name": "2013-10-29-react-v0-5-1",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225881,
      "blocks": 8,
      "atimeMs": 1557308635097.905,
      "mtimeMs": 1557308468544.201,
      "ctimeMs": 1557308468544.201,
      "birthtimeMs": 1557308468544.161,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.544Z",
      "ctime": "2019-05-08T09:41:08.544Z",
      "birthtime": "2019-05-08T09:41:08.544Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-10-3-community-roundup-9.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-10-3-community-roundup-9.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2013-10-3-community-roundup-9.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "953dc16e2017472c2e926e57fd58b36e",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-10-3-community-roundup-9.md",
      "relativePath": "blog/2013-10-3-community-roundup-9.md",
      "extension": "md",
      "size": 4495,
      "prettySize": "4.5 kB",
      "modifiedTime": "2019-05-08T09:41:08.544Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.544Z",
      "birthTime": "2019-05-08T09:41:08.544Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2013-10-3-community-roundup-9.md",
      "ext": ".md",
      "name": "2013-10-3-community-roundup-9",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225882,
      "blocks": 16,
      "atimeMs": 1557308635097.9082,
      "mtimeMs": 1557308468544.3452,
      "ctimeMs": 1557308468544.3452,
      "birthtimeMs": 1557308468544.3013,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.544Z",
      "ctime": "2019-05-08T09:41:08.544Z",
      "birthtime": "2019-05-08T09:41:08.544Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-11-06-community-roundup-10.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-11-06-community-roundup-10.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2013-11-06-community-roundup-10.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "0a3149f5cb978348685262d5cf832f15",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-11-06-community-roundup-10.md",
      "relativePath": "blog/2013-11-06-community-roundup-10.md",
      "extension": "md",
      "size": 8421,
      "prettySize": "8.42 kB",
      "modifiedTime": "2019-05-08T09:41:08.545Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.545Z",
      "birthTime": "2019-05-08T09:41:08.545Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2013-11-06-community-roundup-10.md",
      "ext": ".md",
      "name": "2013-11-06-community-roundup-10",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225883,
      "blocks": 24,
      "atimeMs": 1557308635097.9111,
      "mtimeMs": 1557308468544.6816,
      "ctimeMs": 1557308468544.6816,
      "birthtimeMs": 1557308468544.631,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.545Z",
      "ctime": "2019-05-08T09:41:08.545Z",
      "birthtime": "2019-05-08T09:41:08.545Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-11-18-community-roundup-11.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-11-18-community-roundup-11.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2013-11-18-community-roundup-11.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "cf5d71cbb4d02253735d45673fb2f36e",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-11-18-community-roundup-11.md",
      "relativePath": "blog/2013-11-18-community-roundup-11.md",
      "extension": "md",
      "size": 6339,
      "prettySize": "6.34 kB",
      "modifiedTime": "2019-05-08T09:41:08.545Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.545Z",
      "birthTime": "2019-05-08T09:41:08.545Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2013-11-18-community-roundup-11.md",
      "ext": ".md",
      "name": "2013-11-18-community-roundup-11",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225884,
      "blocks": 16,
      "atimeMs": 1557308635097.9146,
      "mtimeMs": 1557308468544.9053,
      "ctimeMs": 1557308468544.9053,
      "birthtimeMs": 1557308468544.8286,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.545Z",
      "ctime": "2019-05-08T09:41:08.545Z",
      "birthtime": "2019-05-08T09:41:08.545Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-12-18-react-v0.5.2-v0.4.2.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-12-18-react-v0.5.2-v0.4.2.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2013-12-18-react-v0.5.2-v0.4.2.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "83669819e6012053858c2a82745d11e1",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-12-18-react-v0.5.2-v0.4.2.md",
      "relativePath": "blog/2013-12-18-react-v0.5.2-v0.4.2.md",
      "extension": "md",
      "size": 1783,
      "prettySize": "1.78 kB",
      "modifiedTime": "2019-05-08T09:41:08.545Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.545Z",
      "birthTime": "2019-05-08T09:41:08.545Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2013-12-18-react-v0.5.2-v0.4.2.md",
      "ext": ".md",
      "name": "2013-12-18-react-v0.5.2-v0.4.2",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225885,
      "blocks": 8,
      "atimeMs": 1557308635097.9177,
      "mtimeMs": 1557308468545.1255,
      "ctimeMs": 1557308468545.1255,
      "birthtimeMs": 1557308468545.0295,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.545Z",
      "ctime": "2019-05-08T09:41:08.545Z",
      "birthtime": "2019-05-08T09:41:08.545Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-12-19-react-v0.8.0.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-12-19-react-v0.8.0.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2013-12-19-react-v0.8.0.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "ee1e1b0234246f06aeda83c71dd365b4",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-12-19-react-v0.8.0.md",
      "relativePath": "blog/2013-12-19-react-v0.8.0.md",
      "extension": "md",
      "size": 2435,
      "prettySize": "2.44 kB",
      "modifiedTime": "2019-05-08T09:41:08.545Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.545Z",
      "birthTime": "2019-05-08T09:41:08.545Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2013-12-19-react-v0.8.0.md",
      "ext": ".md",
      "name": "2013-12-19-react-v0.8.0",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225886,
      "blocks": 8,
      "atimeMs": 1557308635097.921,
      "mtimeMs": 1557308468545.3015,
      "ctimeMs": 1557308468545.3015,
      "birthtimeMs": 1557308468545.2512,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.545Z",
      "ctime": "2019-05-08T09:41:08.545Z",
      "birthtime": "2019-05-08T09:41:08.545Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-12-23-community-roundup-12.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-12-23-community-roundup-12.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2013-12-23-community-roundup-12.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "059d3558ecdcaced30bd015577c00133",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-12-23-community-roundup-12.md",
      "relativePath": "blog/2013-12-23-community-roundup-12.md",
      "extension": "md",
      "size": 6181,
      "prettySize": "6.18 kB",
      "modifiedTime": "2019-05-08T09:41:08.546Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.546Z",
      "birthTime": "2019-05-08T09:41:08.545Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2013-12-23-community-roundup-12.md",
      "ext": ".md",
      "name": "2013-12-23-community-roundup-12",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225887,
      "blocks": 16,
      "atimeMs": 1557308635097.9238,
      "mtimeMs": 1557308468545.5002,
      "ctimeMs": 1557308468545.5002,
      "birthtimeMs": 1557308468545.443,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.546Z",
      "ctime": "2019-05-08T09:41:08.546Z",
      "birthtime": "2019-05-08T09:41:08.545Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-12-30-community-roundup-13.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-12-30-community-roundup-13.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2013-12-30-community-roundup-13.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "f774ba1700317657d043cea0e15b06a2",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-12-30-community-roundup-13.md",
      "relativePath": "blog/2013-12-30-community-roundup-13.md",
      "extension": "md",
      "size": 5142,
      "prettySize": "5.14 kB",
      "modifiedTime": "2019-05-08T09:41:08.546Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.546Z",
      "birthTime": "2019-05-08T09:41:08.546Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2013-12-30-community-roundup-13.md",
      "ext": ".md",
      "name": "2013-12-30-community-roundup-13",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225888,
      "blocks": 16,
      "atimeMs": 1557308635097.9272,
      "mtimeMs": 1557308468545.6963,
      "ctimeMs": 1557308468545.6963,
      "birthtimeMs": 1557308468545.6357,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.546Z",
      "ctime": "2019-05-08T09:41:08.546Z",
      "birthtime": "2019-05-08T09:41:08.546Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-01-02-react-chrome-developer-tools.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-01-02-react-chrome-developer-tools.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-01-02-react-chrome-developer-tools.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "299f13b86c820c03d5e27ceec34529eb",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-01-02-react-chrome-developer-tools.md",
      "relativePath": "blog/2014-01-02-react-chrome-developer-tools.md",
      "extension": "md",
      "size": 1919,
      "prettySize": "1.92 kB",
      "modifiedTime": "2019-05-08T09:41:08.546Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.546Z",
      "birthTime": "2019-05-08T09:41:08.546Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-01-02-react-chrome-developer-tools.md",
      "ext": ".md",
      "name": "2014-01-02-react-chrome-developer-tools",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225889,
      "blocks": 8,
      "atimeMs": 1557308635097.9304,
      "mtimeMs": 1557308468545.89,
      "ctimeMs": 1557308468545.89,
      "birthtimeMs": 1557308468545.8242,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.546Z",
      "ctime": "2019-05-08T09:41:08.546Z",
      "birthtime": "2019-05-08T09:41:08.546Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-01-06-community-roundup-14.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-01-06-community-roundup-14.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-01-06-community-roundup-14.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "a1c1502989f8c361b3a5ffcfd9f8a28f",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-01-06-community-roundup-14.md",
      "relativePath": "blog/2014-01-06-community-roundup-14.md",
      "extension": "md",
      "size": 4411,
      "prettySize": "4.41 kB",
      "modifiedTime": "2019-05-08T09:41:08.546Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.546Z",
      "birthTime": "2019-05-08T09:41:08.546Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-01-06-community-roundup-14.md",
      "ext": ".md",
      "name": "2014-01-06-community-roundup-14",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225890,
      "blocks": 16,
      "atimeMs": 1557308635097.9333,
      "mtimeMs": 1557308468546.1897,
      "ctimeMs": 1557308468546.1897,
      "birthtimeMs": 1557308468546.1306,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.546Z",
      "ctime": "2019-05-08T09:41:08.546Z",
      "birthtime": "2019-05-08T09:41:08.546Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-02-05-community-roundup-15.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-02-05-community-roundup-15.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-02-05-community-roundup-15.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "8966e017afb344b69d91ebb56529878a",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-02-05-community-roundup-15.md",
      "relativePath": "blog/2014-02-05-community-roundup-15.md",
      "extension": "md",
      "size": 7319,
      "prettySize": "7.32 kB",
      "modifiedTime": "2019-05-08T09:41:08.546Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.546Z",
      "birthTime": "2019-05-08T09:41:08.546Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-02-05-community-roundup-15.md",
      "ext": ".md",
      "name": "2014-02-05-community-roundup-15",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225891,
      "blocks": 16,
      "atimeMs": 1557308635097.9365,
      "mtimeMs": 1557308468546.3853,
      "ctimeMs": 1557308468546.3853,
      "birthtimeMs": 1557308468546.3362,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.546Z",
      "ctime": "2019-05-08T09:41:08.546Z",
      "birthtime": "2019-05-08T09:41:08.546Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-02-15-community-roundup-16.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-02-15-community-roundup-16.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-02-15-community-roundup-16.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "3fdd02a3bc81eb3e2f5cb9aafd9d5fc4",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-02-15-community-roundup-16.md",
      "relativePath": "blog/2014-02-15-community-roundup-16.md",
      "extension": "md",
      "size": 7000,
      "prettySize": "7 kB",
      "modifiedTime": "2019-05-08T09:41:08.547Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.547Z",
      "birthTime": "2019-05-08T09:41:08.547Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-02-15-community-roundup-16.md",
      "ext": ".md",
      "name": "2014-02-15-community-roundup-16",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225892,
      "blocks": 16,
      "atimeMs": 1557308635097.94,
      "mtimeMs": 1557308468546.6018,
      "ctimeMs": 1557308468546.6018,
      "birthtimeMs": 1557308468546.539,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.547Z",
      "ctime": "2019-05-08T09:41:08.547Z",
      "birthtime": "2019-05-08T09:41:08.547Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-02-16-react-v0.9-rc1.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-02-16-react-v0.9-rc1.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-02-16-react-v0.9-rc1.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "06bb0dcb2f47fc6ac0de7e392e9da8d7",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-02-16-react-v0.9-rc1.md",
      "relativePath": "blog/2014-02-16-react-v0.9-rc1.md",
      "extension": "md",
      "size": 7728,
      "prettySize": "7.73 kB",
      "modifiedTime": "2019-05-08T09:41:08.547Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.547Z",
      "birthTime": "2019-05-08T09:41:08.547Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-02-16-react-v0.9-rc1.md",
      "ext": ".md",
      "name": "2014-02-16-react-v0.9-rc1",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225893,
      "blocks": 16,
      "atimeMs": 1557308635097.9429,
      "mtimeMs": 1557308468546.8164,
      "ctimeMs": 1557308468546.8164,
      "birthtimeMs": 1557308468546.751,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.547Z",
      "ctime": "2019-05-08T09:41:08.547Z",
      "birthtime": "2019-05-08T09:41:08.547Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-02-20-react-v0.9.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-02-20-react-v0.9.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-02-20-react-v0.9.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "a4f2ba168e582bcb2a560e8e670ffe25",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-02-20-react-v0.9.md",
      "relativePath": "blog/2014-02-20-react-v0.9.md",
      "extension": "md",
      "size": 8836,
      "prettySize": "8.84 kB",
      "modifiedTime": "2019-05-08T09:41:08.547Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.547Z",
      "birthTime": "2019-05-08T09:41:08.547Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-02-20-react-v0.9.md",
      "ext": ".md",
      "name": "2014-02-20-react-v0.9",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225894,
      "blocks": 24,
      "atimeMs": 1557308635097.9458,
      "mtimeMs": 1557308468547.0273,
      "ctimeMs": 1557308468547.0273,
      "birthtimeMs": 1557308468546.9792,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.547Z",
      "ctime": "2019-05-08T09:41:08.547Z",
      "birthtime": "2019-05-08T09:41:08.547Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-02-24-community-roundup-17.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-02-24-community-roundup-17.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-02-24-community-roundup-17.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "e1a8d9fec7ba260085d39f418868ee14",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-02-24-community-roundup-17.md",
      "relativePath": "blog/2014-02-24-community-roundup-17.md",
      "extension": "md",
      "size": 5819,
      "prettySize": "5.82 kB",
      "modifiedTime": "2019-05-08T09:41:08.547Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.547Z",
      "birthTime": "2019-05-08T09:41:08.547Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-02-24-community-roundup-17.md",
      "ext": ".md",
      "name": "2014-02-24-community-roundup-17",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225895,
      "blocks": 16,
      "atimeMs": 1557308635097.9487,
      "mtimeMs": 1557308468547.2192,
      "ctimeMs": 1557308468547.2192,
      "birthtimeMs": 1557308468547.1694,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.547Z",
      "ctime": "2019-05-08T09:41:08.547Z",
      "birthtime": "2019-05-08T09:41:08.547Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-03-14-community-roundup-18.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-03-14-community-roundup-18.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-03-14-community-roundup-18.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "1949456054a002540913d0dc15699f8c",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-03-14-community-roundup-18.md",
      "relativePath": "blog/2014-03-14-community-roundup-18.md",
      "extension": "md",
      "size": 7898,
      "prettySize": "7.9 kB",
      "modifiedTime": "2019-05-08T09:41:08.547Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.547Z",
      "birthTime": "2019-05-08T09:41:08.547Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-03-14-community-roundup-18.md",
      "ext": ".md",
      "name": "2014-03-14-community-roundup-18",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225896,
      "blocks": 16,
      "atimeMs": 1557308635097.952,
      "mtimeMs": 1557308468547.4255,
      "ctimeMs": 1557308468547.4255,
      "birthtimeMs": 1557308468547.369,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.547Z",
      "ctime": "2019-05-08T09:41:08.547Z",
      "birthtime": "2019-05-08T09:41:08.547Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-03-19-react-v0.10-rc1.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-03-19-react-v0.10-rc1.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-03-19-react-v0.10-rc1.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "ffff192ff20d9e7e0f76ea6bf414318d",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-03-19-react-v0.10-rc1.md",
      "relativePath": "blog/2014-03-19-react-v0.10-rc1.md",
      "extension": "md",
      "size": 4213,
      "prettySize": "4.21 kB",
      "modifiedTime": "2019-05-08T09:41:08.548Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.548Z",
      "birthTime": "2019-05-08T09:41:08.548Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-03-19-react-v0.10-rc1.md",
      "ext": ".md",
      "name": "2014-03-19-react-v0.10-rc1",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225897,
      "blocks": 16,
      "atimeMs": 1557308635097.9548,
      "mtimeMs": 1557308468547.714,
      "ctimeMs": 1557308468547.714,
      "birthtimeMs": 1557308468547.665,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.548Z",
      "ctime": "2019-05-08T09:41:08.548Z",
      "birthtime": "2019-05-08T09:41:08.548Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-03-21-react-v0.10.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-03-21-react-v0.10.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-03-21-react-v0.10.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "b8a02dd4be9afc646f22403abaa0741a",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-03-21-react-v0.10.md",
      "relativePath": "blog/2014-03-21-react-v0.10.md",
      "extension": "md",
      "size": 4279,
      "prettySize": "4.28 kB",
      "modifiedTime": "2019-05-08T09:41:08.548Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.548Z",
      "birthTime": "2019-05-08T09:41:08.548Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-03-21-react-v0.10.md",
      "ext": ".md",
      "name": "2014-03-21-react-v0.10",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225898,
      "blocks": 16,
      "atimeMs": 1557308635097.9575,
      "mtimeMs": 1557308468547.8865,
      "ctimeMs": 1557308468547.8865,
      "birthtimeMs": 1557308468547.8398,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.548Z",
      "ctime": "2019-05-08T09:41:08.548Z",
      "birthtime": "2019-05-08T09:41:08.548Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-03-28-the-road-to-1.0.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-03-28-the-road-to-1.0.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-03-28-the-road-to-1.0.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "4ee6cabdba6d369f3f438daa40558c3e",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-03-28-the-road-to-1.0.md",
      "relativePath": "blog/2014-03-28-the-road-to-1.0.md",
      "extension": "md",
      "size": 4560,
      "prettySize": "4.56 kB",
      "modifiedTime": "2019-05-08T09:41:08.548Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.548Z",
      "birthTime": "2019-05-08T09:41:08.548Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-03-28-the-road-to-1.0.md",
      "ext": ".md",
      "name": "2014-03-28-the-road-to-1.0",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225899,
      "blocks": 16,
      "atimeMs": 1557308635097.9602,
      "mtimeMs": 1557308468548.0598,
      "ctimeMs": 1557308468548.0598,
      "birthtimeMs": 1557308468548.0105,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.548Z",
      "ctime": "2019-05-08T09:41:08.548Z",
      "birthtime": "2019-05-08T09:41:08.548Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-04-04-reactnet.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-04-04-reactnet.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-04-04-reactnet.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "991a5b98898dde5006c8b258ee41924d",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-04-04-reactnet.md",
      "relativePath": "blog/2014-04-04-reactnet.md",
      "extension": "md",
      "size": 1596,
      "prettySize": "1.6 kB",
      "modifiedTime": "2019-05-08T09:41:08.548Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.548Z",
      "birthTime": "2019-05-08T09:41:08.548Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-04-04-reactnet.md",
      "ext": ".md",
      "name": "2014-04-04-reactnet",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225900,
      "blocks": 8,
      "atimeMs": 1557308635097.963,
      "mtimeMs": 1557308468548.2256,
      "ctimeMs": 1557308468548.2256,
      "birthtimeMs": 1557308468548.177,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.548Z",
      "ctime": "2019-05-08T09:41:08.548Z",
      "birthtime": "2019-05-08T09:41:08.548Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-05-06-flux.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-05-06-flux.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-05-06-flux.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "5877cc613b88af785ac993a0ce055213",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-05-06-flux.md",
      "relativePath": "blog/2014-05-06-flux.md",
      "extension": "md",
      "size": 2022,
      "prettySize": "2.02 kB",
      "modifiedTime": "2019-05-08T09:41:08.548Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.548Z",
      "birthTime": "2019-05-08T09:41:08.548Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-05-06-flux.md",
      "ext": ".md",
      "name": "2014-05-06-flux",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225901,
      "blocks": 8,
      "atimeMs": 1557308635097.9656,
      "mtimeMs": 1557308468548.3914,
      "ctimeMs": 1557308468548.3914,
      "birthtimeMs": 1557308468548.334,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.548Z",
      "ctime": "2019-05-08T09:41:08.548Z",
      "birthtime": "2019-05-08T09:41:08.548Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-05-29-one-year-of-open-source-react.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-05-29-one-year-of-open-source-react.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-05-29-one-year-of-open-source-react.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "f8c43001f422f296fd0be27c6dc5a302",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-05-29-one-year-of-open-source-react.md",
      "relativePath": "blog/2014-05-29-one-year-of-open-source-react.md",
      "extension": "md",
      "size": 2269,
      "prettySize": "2.27 kB",
      "modifiedTime": "2019-05-08T09:41:08.549Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.549Z",
      "birthTime": "2019-05-08T09:41:08.549Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-05-29-one-year-of-open-source-react.md",
      "ext": ".md",
      "name": "2014-05-29-one-year-of-open-source-react",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225902,
      "blocks": 8,
      "atimeMs": 1557308635097.9685,
      "mtimeMs": 1557308468548.5806,
      "ctimeMs": 1557308468548.5806,
      "birthtimeMs": 1557308468548.5059,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.549Z",
      "ctime": "2019-05-08T09:41:08.549Z",
      "birthtime": "2019-05-08T09:41:08.549Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-06-27-community-roundup-19.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-06-27-community-roundup-19.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-06-27-community-roundup-19.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "ad2872a13404e96149e3d7ee2283bb24",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-06-27-community-roundup-19.md",
      "relativePath": "blog/2014-06-27-community-roundup-19.md",
      "extension": "md",
      "size": 5554,
      "prettySize": "5.55 kB",
      "modifiedTime": "2019-05-08T09:41:08.549Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.549Z",
      "birthTime": "2019-05-08T09:41:08.549Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-06-27-community-roundup-19.md",
      "ext": ".md",
      "name": "2014-06-27-community-roundup-19",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225903,
      "blocks": 16,
      "atimeMs": 1557308635097.972,
      "mtimeMs": 1557308468548.78,
      "ctimeMs": 1557308468548.78,
      "birthtimeMs": 1557308468548.7285,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.549Z",
      "ctime": "2019-05-08T09:41:08.549Z",
      "birthtime": "2019-05-08T09:41:08.549Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-07-13-react-v0.11-rc1.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-07-13-react-v0.11-rc1.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-07-13-react-v0.11-rc1.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "5f493f281e5d3cd12cda64be7c279f6f",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-07-13-react-v0.11-rc1.md",
      "relativePath": "blog/2014-07-13-react-v0.11-rc1.md",
      "extension": "md",
      "size": 6249,
      "prettySize": "6.25 kB",
      "modifiedTime": "2019-05-08T09:41:08.549Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.549Z",
      "birthTime": "2019-05-08T09:41:08.549Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-07-13-react-v0.11-rc1.md",
      "ext": ".md",
      "name": "2014-07-13-react-v0.11-rc1",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225904,
      "blocks": 16,
      "atimeMs": 1557308635097.975,
      "mtimeMs": 1557308468549.095,
      "ctimeMs": 1557308468549.095,
      "birthtimeMs": 1557308468549.0461,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.549Z",
      "ctime": "2019-05-08T09:41:08.549Z",
      "birthtime": "2019-05-08T09:41:08.549Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-07-17-react-v0.11.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-07-17-react-v0.11.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-07-17-react-v0.11.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "be2f108e482842124c7032db9992eea8",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-07-17-react-v0.11.md",
      "relativePath": "blog/2014-07-17-react-v0.11.md",
      "extension": "md",
      "size": 9318,
      "prettySize": "9.32 kB",
      "modifiedTime": "2019-05-08T09:41:08.549Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.549Z",
      "birthTime": "2019-05-08T09:41:08.549Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-07-17-react-v0.11.md",
      "ext": ".md",
      "name": "2014-07-17-react-v0.11",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225905,
      "blocks": 24,
      "atimeMs": 1557308635097.978,
      "mtimeMs": 1557308468549.3083,
      "ctimeMs": 1557308468549.3083,
      "birthtimeMs": 1557308468549.2568,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.549Z",
      "ctime": "2019-05-08T09:41:08.549Z",
      "birthtime": "2019-05-08T09:41:08.549Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-07-25-react-v0.11.1.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-07-25-react-v0.11.1.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-07-25-react-v0.11.1.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "4fb160b4d8234a81d4fa92efe3a1bd25",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-07-25-react-v0.11.1.md",
      "relativePath": "blog/2014-07-25-react-v0.11.1.md",
      "extension": "md",
      "size": 2636,
      "prettySize": "2.64 kB",
      "modifiedTime": "2019-05-08T09:41:08.549Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.549Z",
      "birthTime": "2019-05-08T09:41:08.549Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-07-25-react-v0.11.1.md",
      "ext": ".md",
      "name": "2014-07-25-react-v0.11.1",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225906,
      "blocks": 8,
      "atimeMs": 1557308635097.981,
      "mtimeMs": 1557308468549.4905,
      "ctimeMs": 1557308468549.4905,
      "birthtimeMs": 1557308468549.4417,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.549Z",
      "ctime": "2019-05-08T09:41:08.549Z",
      "birthtime": "2019-05-08T09:41:08.549Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-07-28-community-roundup-20.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-07-28-community-roundup-20.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-07-28-community-roundup-20.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "7212146a81a1f4ade16adb41df1fc426",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-07-28-community-roundup-20.md",
      "relativePath": "blog/2014-07-28-community-roundup-20.md",
      "extension": "md",
      "size": 6019,
      "prettySize": "6.02 kB",
      "modifiedTime": "2019-05-08T09:41:08.550Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.550Z",
      "birthTime": "2019-05-08T09:41:08.550Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-07-28-community-roundup-20.md",
      "ext": ".md",
      "name": "2014-07-28-community-roundup-20",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225907,
      "blocks": 16,
      "atimeMs": 1557308635097.9841,
      "mtimeMs": 1557308468549.7075,
      "ctimeMs": 1557308468549.7075,
      "birthtimeMs": 1557308468549.6357,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.550Z",
      "ctime": "2019-05-08T09:41:08.550Z",
      "birthtime": "2019-05-08T09:41:08.550Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-07-30-flux-actions-and-the-dispatcher.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-07-30-flux-actions-and-the-dispatcher.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-07-30-flux-actions-and-the-dispatcher.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "327968e5389f05fa38a18f0e1869132b",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-07-30-flux-actions-and-the-dispatcher.md",
      "relativePath": "blog/2014-07-30-flux-actions-and-the-dispatcher.md",
      "extension": "md",
      "size": 5888,
      "prettySize": "5.89 kB",
      "modifiedTime": "2019-05-08T09:41:08.550Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.550Z",
      "birthTime": "2019-05-08T09:41:08.550Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-07-30-flux-actions-and-the-dispatcher.md",
      "ext": ".md",
      "name": "2014-07-30-flux-actions-and-the-dispatcher",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225908,
      "blocks": 16,
      "atimeMs": 1557308635097.987,
      "mtimeMs": 1557308468549.922,
      "ctimeMs": 1557308468549.922,
      "birthtimeMs": 1557308468549.8618,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.550Z",
      "ctime": "2019-05-08T09:41:08.550Z",
      "birthtime": "2019-05-08T09:41:08.550Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-08-03-community-roundup-21.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-08-03-community-roundup-21.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-08-03-community-roundup-21.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "357080967c8f425d1f2298942af20cd8",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-08-03-community-roundup-21.md",
      "relativePath": "blog/2014-08-03-community-roundup-21.md",
      "extension": "md",
      "size": 5757,
      "prettySize": "5.76 kB",
      "modifiedTime": "2019-05-08T09:41:08.550Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.550Z",
      "birthTime": "2019-05-08T09:41:08.550Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-08-03-community-roundup-21.md",
      "ext": ".md",
      "name": "2014-08-03-community-roundup-21",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225909,
      "blocks": 16,
      "atimeMs": 1557308635097.9905,
      "mtimeMs": 1557308468550.1235,
      "ctimeMs": 1557308468550.1235,
      "birthtimeMs": 1557308468550.0647,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.550Z",
      "ctime": "2019-05-08T09:41:08.550Z",
      "birthtime": "2019-05-08T09:41:08.550Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-09-03-introducing-the-jsx-specification.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-09-03-introducing-the-jsx-specification.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-09-03-introducing-the-jsx-specification.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "5d9343fdfc41d827e1081db073029ece",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-09-03-introducing-the-jsx-specification.md",
      "relativePath": "blog/2014-09-03-introducing-the-jsx-specification.md",
      "extension": "md",
      "size": 1114,
      "prettySize": "1.11 kB",
      "modifiedTime": "2019-05-08T09:41:08.550Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.550Z",
      "birthTime": "2019-05-08T09:41:08.550Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-09-03-introducing-the-jsx-specification.md",
      "ext": ".md",
      "name": "2014-09-03-introducing-the-jsx-specification",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225910,
      "blocks": 8,
      "atimeMs": 1557308635097.994,
      "mtimeMs": 1557308468550.4873,
      "ctimeMs": 1557308468550.4873,
      "birthtimeMs": 1557308468550.4329,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.550Z",
      "ctime": "2019-05-08T09:41:08.550Z",
      "birthtime": "2019-05-08T09:41:08.550Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-09-12-community-round-up-22.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-09-12-community-round-up-22.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-09-12-community-round-up-22.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "d843b3e28043eaf0e2db2b372083d9a3",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-09-12-community-round-up-22.md",
      "relativePath": "blog/2014-09-12-community-round-up-22.md",
      "extension": "md",
      "size": 6563,
      "prettySize": "6.56 kB",
      "modifiedTime": "2019-05-08T09:41:08.551Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.551Z",
      "birthTime": "2019-05-08T09:41:08.551Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-09-12-community-round-up-22.md",
      "ext": ".md",
      "name": "2014-09-12-community-round-up-22",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225911,
      "blocks": 16,
      "atimeMs": 1557308635098.0322,
      "mtimeMs": 1557308468550.8306,
      "ctimeMs": 1557308468550.8306,
      "birthtimeMs": 1557308468550.7776,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.551Z",
      "ctime": "2019-05-08T09:41:08.551Z",
      "birthtime": "2019-05-08T09:41:08.551Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-09-16-react-v0.11.2.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-09-16-react-v0.11.2.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-09-16-react-v0.11.2.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "4acf3c7e5730f0f39232c5e2eaaa5a22",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-09-16-react-v0.11.2.md",
      "relativePath": "blog/2014-09-16-react-v0.11.2.md",
      "extension": "md",
      "size": 2617,
      "prettySize": "2.62 kB",
      "modifiedTime": "2019-05-08T09:41:08.551Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.551Z",
      "birthTime": "2019-05-08T09:41:08.551Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-09-16-react-v0.11.2.md",
      "ext": ".md",
      "name": "2014-09-16-react-v0.11.2",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225912,
      "blocks": 8,
      "atimeMs": 1557308635098.047,
      "mtimeMs": 1557308468551.008,
      "ctimeMs": 1557308468551.008,
      "birthtimeMs": 1557308468550.9526,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.551Z",
      "ctime": "2019-05-08T09:41:08.551Z",
      "birthtime": "2019-05-08T09:41:08.551Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-09-24-testing-flux-applications.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-09-24-testing-flux-applications.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-09-24-testing-flux-applications.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "4b75ff83d791f68c1f4b8ea046f239d8",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-09-24-testing-flux-applications.md",
      "relativePath": "blog/2014-09-24-testing-flux-applications.md",
      "extension": "md",
      "size": 12118,
      "prettySize": "12.1 kB",
      "modifiedTime": "2019-05-08T09:41:08.551Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.551Z",
      "birthTime": "2019-05-08T09:41:08.551Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-09-24-testing-flux-applications.md",
      "ext": ".md",
      "name": "2014-09-24-testing-flux-applications",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225913,
      "blocks": 24,
      "atimeMs": 1557308635098.0525,
      "mtimeMs": 1557308468551.287,
      "ctimeMs": 1557308468551.287,
      "birthtimeMs": 1557308468551.2324,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.551Z",
      "ctime": "2019-05-08T09:41:08.551Z",
      "birthtime": "2019-05-08T09:41:08.551Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-10-14-introducing-react-elements.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-10-14-introducing-react-elements.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-10-14-introducing-react-elements.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "f2c75f8b335c24d84070a847b3eae201",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-10-14-introducing-react-elements.md",
      "relativePath": "blog/2014-10-14-introducing-react-elements.md",
      "extension": "md",
      "size": 8584,
      "prettySize": "8.58 kB",
      "modifiedTime": "2019-05-08T09:41:08.552Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.552Z",
      "birthTime": "2019-05-08T09:41:08.551Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-10-14-introducing-react-elements.md",
      "ext": ".md",
      "name": "2014-10-14-introducing-react-elements",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225914,
      "blocks": 24,
      "atimeMs": 1557308635098.058,
      "mtimeMs": 1557308468551.5505,
      "ctimeMs": 1557308468551.5505,
      "birthtimeMs": 1557308468551.497,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.552Z",
      "ctime": "2019-05-08T09:41:08.552Z",
      "birthtime": "2019-05-08T09:41:08.551Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-10-16-react-v0.12-rc1.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-10-16-react-v0.12-rc1.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-10-16-react-v0.12-rc1.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "bf741e0ef2af2e872c01bb3409e063aa",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-10-16-react-v0.12-rc1.md",
      "relativePath": "blog/2014-10-16-react-v0.12-rc1.md",
      "extension": "md",
      "size": 7494,
      "prettySize": "7.49 kB",
      "modifiedTime": "2019-05-08T09:41:08.552Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.552Z",
      "birthTime": "2019-05-08T09:41:08.552Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-10-16-react-v0.12-rc1.md",
      "ext": ".md",
      "name": "2014-10-16-react-v0.12-rc1",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225915,
      "blocks": 16,
      "atimeMs": 1557308635098.0742,
      "mtimeMs": 1557308468551.861,
      "ctimeMs": 1557308468551.861,
      "birthtimeMs": 1557308468551.796,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.552Z",
      "ctime": "2019-05-08T09:41:08.552Z",
      "birthtime": "2019-05-08T09:41:08.552Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-10-17-community-roundup-23.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-10-17-community-roundup-23.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-10-17-community-roundup-23.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "fa2a844bea2c1428adba9476278b4785",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-10-17-community-roundup-23.md",
      "relativePath": "blog/2014-10-17-community-roundup-23.md",
      "extension": "md",
      "size": 9219,
      "prettySize": "9.22 kB",
      "modifiedTime": "2019-05-08T09:41:08.552Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.552Z",
      "birthTime": "2019-05-08T09:41:08.552Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-10-17-community-roundup-23.md",
      "ext": ".md",
      "name": "2014-10-17-community-roundup-23",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225916,
      "blocks": 24,
      "atimeMs": 1557308635098.0789,
      "mtimeMs": 1557308468552.1418,
      "ctimeMs": 1557308468552.1418,
      "birthtimeMs": 1557308468552.066,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.552Z",
      "ctime": "2019-05-08T09:41:08.552Z",
      "birthtime": "2019-05-08T09:41:08.552Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-10-27-react-js-conf.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-10-27-react-js-conf.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-10-27-react-js-conf.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "a1ddadfec86c6a4afe150948a403eb95",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-10-27-react-js-conf.md",
      "relativePath": "blog/2014-10-27-react-js-conf.md",
      "extension": "md",
      "size": 1146,
      "prettySize": "1.15 kB",
      "modifiedTime": "2019-05-08T09:41:08.552Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.552Z",
      "birthTime": "2019-05-08T09:41:08.552Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-10-27-react-js-conf.md",
      "ext": ".md",
      "name": "2014-10-27-react-js-conf",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225917,
      "blocks": 8,
      "atimeMs": 1557308635098.0833,
      "mtimeMs": 1557308468552.371,
      "ctimeMs": 1557308468552.371,
      "birthtimeMs": 1557308468552.3179,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.552Z",
      "ctime": "2019-05-08T09:41:08.552Z",
      "birthtime": "2019-05-08T09:41:08.552Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-10-28-react-v0.12.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-10-28-react-v0.12.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-10-28-react-v0.12.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "5e88c459b85d19daac66c46c93184882",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-10-28-react-v0.12.md",
      "relativePath": "blog/2014-10-28-react-v0.12.md",
      "extension": "md",
      "size": 7401,
      "prettySize": "7.4 kB",
      "modifiedTime": "2019-05-08T09:41:08.553Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.553Z",
      "birthTime": "2019-05-08T09:41:08.553Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-10-28-react-v0.12.md",
      "ext": ".md",
      "name": "2014-10-28-react-v0.12",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225918,
      "blocks": 16,
      "atimeMs": 1557308635098.0872,
      "mtimeMs": 1557308468552.6714,
      "ctimeMs": 1557308468552.6714,
      "birthtimeMs": 1557308468552.5823,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.553Z",
      "ctime": "2019-05-08T09:41:08.553Z",
      "birthtime": "2019-05-08T09:41:08.553Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-11-24-react-js-conf-updates.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-11-24-react-js-conf-updates.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-11-24-react-js-conf-updates.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "defeee7ff14c33dccb715812cd36a6d5",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-11-24-react-js-conf-updates.md",
      "relativePath": "blog/2014-11-24-react-js-conf-updates.md",
      "extension": "md",
      "size": 2021,
      "prettySize": "2.02 kB",
      "modifiedTime": "2019-05-08T09:41:08.553Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.553Z",
      "birthTime": "2019-05-08T09:41:08.553Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-11-24-react-js-conf-updates.md",
      "ext": ".md",
      "name": "2014-11-24-react-js-conf-updates",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225919,
      "blocks": 8,
      "atimeMs": 1557308635098.0913,
      "mtimeMs": 1557308468553.0808,
      "ctimeMs": 1557308468553.0808,
      "birthtimeMs": 1557308468552.9692,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.553Z",
      "ctime": "2019-05-08T09:41:08.553Z",
      "birthtime": "2019-05-08T09:41:08.553Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-11-25-community-roundup-24.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-11-25-community-roundup-24.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-11-25-community-roundup-24.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "1189287bbeb43986f0af1131021f7883",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-11-25-community-roundup-24.md",
      "relativePath": "blog/2014-11-25-community-roundup-24.md",
      "extension": "md",
      "size": 9633,
      "prettySize": "9.63 kB",
      "modifiedTime": "2019-05-08T09:41:08.553Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.553Z",
      "birthTime": "2019-05-08T09:41:08.553Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-11-25-community-roundup-24.md",
      "ext": ".md",
      "name": "2014-11-25-community-roundup-24",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225920,
      "blocks": 24,
      "atimeMs": 1557308635098.0952,
      "mtimeMs": 1557308468553.3916,
      "ctimeMs": 1557308468553.3916,
      "birthtimeMs": 1557308468553.3257,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.553Z",
      "ctime": "2019-05-08T09:41:08.553Z",
      "birthtime": "2019-05-08T09:41:08.553Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-12-19-react-js-conf-diversity-scholarship.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-12-19-react-js-conf-diversity-scholarship.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-12-19-react-js-conf-diversity-scholarship.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "2201d05b7c773aac29444658bbcfd2aa",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-12-19-react-js-conf-diversity-scholarship.md",
      "relativePath": "blog/2014-12-19-react-js-conf-diversity-scholarship.md",
      "extension": "md",
      "size": 3097,
      "prettySize": "3.1 kB",
      "modifiedTime": "2019-05-08T09:41:08.554Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.554Z",
      "birthTime": "2019-05-08T09:41:08.554Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-12-19-react-js-conf-diversity-scholarship.md",
      "ext": ".md",
      "name": "2014-12-19-react-js-conf-diversity-scholarship",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225922,
      "blocks": 8,
      "atimeMs": 1557308635098.105,
      "mtimeMs": 1557308468553.993,
      "ctimeMs": 1557308468553.993,
      "birthtimeMs": 1557308468553.9146,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.554Z",
      "ctime": "2019-05-08T09:41:08.554Z",
      "birthtime": "2019-05-08T09:41:08.554Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-12-18-react-v0.12.2.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-12-18-react-v0.12.2.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2014-12-18-react-v0.12.2.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "897296f1baa5414058c40bfc9a9a3279",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-12-18-react-v0.12.2.md",
      "relativePath": "blog/2014-12-18-react-v0.12.2.md",
      "extension": "md",
      "size": 1863,
      "prettySize": "1.86 kB",
      "modifiedTime": "2019-05-08T09:41:08.554Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.554Z",
      "birthTime": "2019-05-08T09:41:08.554Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2014-12-18-react-v0.12.2.md",
      "ext": ".md",
      "name": "2014-12-18-react-v0.12.2",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225921,
      "blocks": 8,
      "atimeMs": 1557308635098.1003,
      "mtimeMs": 1557308468553.6567,
      "ctimeMs": 1557308468553.6567,
      "birthtimeMs": 1557308468553.5654,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.554Z",
      "ctime": "2019-05-08T09:41:08.554Z",
      "birthtime": "2019-05-08T09:41:08.554Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-01-27-react-v0.13.0-beta-1.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-01-27-react-v0.13.0-beta-1.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-01-27-react-v0.13.0-beta-1.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "b4494e0aadb07015ec3be272bd0e5cce",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-01-27-react-v0.13.0-beta-1.md",
      "relativePath": "blog/2015-01-27-react-v0.13.0-beta-1.md",
      "extension": "md",
      "size": 5833,
      "prettySize": "5.83 kB",
      "modifiedTime": "2019-05-08T09:41:08.554Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.554Z",
      "birthTime": "2019-05-08T09:41:08.554Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-01-27-react-v0.13.0-beta-1.md",
      "ext": ".md",
      "name": "2015-01-27-react-v0.13.0-beta-1",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225923,
      "blocks": 16,
      "atimeMs": 1557308635098.1094,
      "mtimeMs": 1557308468554.2754,
      "ctimeMs": 1557308468554.2754,
      "birthtimeMs": 1557308468554.1997,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.554Z",
      "ctime": "2019-05-08T09:41:08.554Z",
      "birthtime": "2019-05-08T09:41:08.554Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-02-18-react-conf-roundup-2015.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-02-18-react-conf-roundup-2015.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-02-18-react-conf-roundup-2015.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "707436b677a35206d607076e80de14b9",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-02-18-react-conf-roundup-2015.md",
      "relativePath": "blog/2015-02-18-react-conf-roundup-2015.md",
      "extension": "md",
      "size": 16880,
      "prettySize": "16.9 kB",
      "modifiedTime": "2019-05-08T09:41:08.555Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.555Z",
      "birthTime": "2019-05-08T09:41:08.555Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-02-18-react-conf-roundup-2015.md",
      "ext": ".md",
      "name": "2015-02-18-react-conf-roundup-2015",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225924,
      "blocks": 40,
      "atimeMs": 1557308635098.1135,
      "mtimeMs": 1557308468554.5989,
      "ctimeMs": 1557308468554.5989,
      "birthtimeMs": 1557308468554.5232,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.555Z",
      "ctime": "2019-05-08T09:41:08.555Z",
      "birthtime": "2019-05-08T09:41:08.555Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-02-20-introducing-relay-and-graphql.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-02-20-introducing-relay-and-graphql.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-02-20-introducing-relay-and-graphql.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "1868a603de19bf8d763157a2640ba1c8",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-02-20-introducing-relay-and-graphql.md",
      "relativePath": "blog/2015-02-20-introducing-relay-and-graphql.md",
      "extension": "md",
      "size": 8047,
      "prettySize": "8.05 kB",
      "modifiedTime": "2019-05-08T09:41:08.555Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.555Z",
      "birthTime": "2019-05-08T09:41:08.555Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-02-20-introducing-relay-and-graphql.md",
      "ext": ".md",
      "name": "2015-02-20-introducing-relay-and-graphql",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225925,
      "blocks": 16,
      "atimeMs": 1557308635098.118,
      "mtimeMs": 1557308468555.0889,
      "ctimeMs": 1557308468555.0889,
      "birthtimeMs": 1557308468555.0015,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.555Z",
      "ctime": "2019-05-08T09:41:08.555Z",
      "birthtime": "2019-05-08T09:41:08.555Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-02-24-react-v0.13-rc1.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-02-24-react-v0.13-rc1.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-02-24-react-v0.13-rc1.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "547ac72cb7b8c55906792b5cba09b743",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-02-24-react-v0.13-rc1.md",
      "relativePath": "blog/2015-02-24-react-v0.13-rc1.md",
      "extension": "md",
      "size": 4956,
      "prettySize": "4.96 kB",
      "modifiedTime": "2019-05-08T09:41:08.555Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.555Z",
      "birthTime": "2019-05-08T09:41:08.555Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-02-24-react-v0.13-rc1.md",
      "ext": ".md",
      "name": "2015-02-24-react-v0.13-rc1",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225926,
      "blocks": 16,
      "atimeMs": 1557308635098.122,
      "mtimeMs": 1557308468555.31,
      "ctimeMs": 1557308468555.31,
      "birthtimeMs": 1557308468555.2527,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.555Z",
      "ctime": "2019-05-08T09:41:08.555Z",
      "birthtime": "2019-05-08T09:41:08.555Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-03-03-react-v0.13-rc2.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-03-03-react-v0.13-rc2.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-03-03-react-v0.13-rc2.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "f5cba9db28df8d8271202c48334d665e",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-03-03-react-v0.13-rc2.md",
      "relativePath": "blog/2015-03-03-react-v0.13-rc2.md",
      "extension": "md",
      "size": 3571,
      "prettySize": "3.57 kB",
      "modifiedTime": "2019-05-08T09:41:08.556Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.556Z",
      "birthTime": "2019-05-08T09:41:08.556Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-03-03-react-v0.13-rc2.md",
      "ext": ".md",
      "name": "2015-03-03-react-v0.13-rc2",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225928,
      "blocks": 8,
      "atimeMs": 1557308635098.1284,
      "mtimeMs": 1557308468555.8105,
      "ctimeMs": 1557308468555.8105,
      "birthtimeMs": 1557308468555.7441,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.556Z",
      "ctime": "2019-05-08T09:41:08.556Z",
      "birthtime": "2019-05-08T09:41:08.556Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-02-24-streamlining-react-elements.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-02-24-streamlining-react-elements.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-02-24-streamlining-react-elements.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "50ac8b6287f4b6cb646aa3f549bcb158",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-02-24-streamlining-react-elements.md",
      "relativePath": "blog/2015-02-24-streamlining-react-elements.md",
      "extension": "md",
      "size": 11523,
      "prettySize": "11.5 kB",
      "modifiedTime": "2019-05-08T09:41:08.556Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.556Z",
      "birthTime": "2019-05-08T09:41:08.555Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-02-24-streamlining-react-elements.md",
      "ext": ".md",
      "name": "2015-02-24-streamlining-react-elements",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225927,
      "blocks": 24,
      "atimeMs": 1557308635098.1252,
      "mtimeMs": 1557308468555.604,
      "ctimeMs": 1557308468555.604,
      "birthtimeMs": 1557308468555.4976,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.556Z",
      "ctime": "2019-05-08T09:41:08.556Z",
      "birthtime": "2019-05-08T09:41:08.555Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-03-04-community-roundup-25.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-03-04-community-roundup-25.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-03-04-community-roundup-25.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "f080f3db53c6740b2622519bf06b6f57",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-03-04-community-roundup-25.md",
      "relativePath": "blog/2015-03-04-community-roundup-25.md",
      "extension": "md",
      "size": 6345,
      "prettySize": "6.34 kB",
      "modifiedTime": "2019-05-08T09:41:08.556Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.556Z",
      "birthTime": "2019-05-08T09:41:08.556Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-03-04-community-roundup-25.md",
      "ext": ".md",
      "name": "2015-03-04-community-roundup-25",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225929,
      "blocks": 16,
      "atimeMs": 1557308635098.1313,
      "mtimeMs": 1557308468556.122,
      "ctimeMs": 1557308468556.122,
      "birthtimeMs": 1557308468556.0159,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.556Z",
      "ctime": "2019-05-08T09:41:08.556Z",
      "birthtime": "2019-05-08T09:41:08.556Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-03-10-react-v0.13.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-03-10-react-v0.13.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-03-10-react-v0.13.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "8594e1c8e0e1f455071ad88d34f962dd",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-03-10-react-v0.13.md",
      "relativePath": "blog/2015-03-10-react-v0.13.md",
      "extension": "md",
      "size": 6636,
      "prettySize": "6.64 kB",
      "modifiedTime": "2019-05-08T09:41:08.556Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.556Z",
      "birthTime": "2019-05-08T09:41:08.556Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-03-10-react-v0.13.md",
      "ext": ".md",
      "name": "2015-03-10-react-v0.13",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225930,
      "blocks": 16,
      "atimeMs": 1557308635098.134,
      "mtimeMs": 1557308468556.3745,
      "ctimeMs": 1557308468556.3745,
      "birthtimeMs": 1557308468556.2715,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.556Z",
      "ctime": "2019-05-08T09:41:08.556Z",
      "birthtime": "2019-05-08T09:41:08.556Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-03-16-react-v0.13.1.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-03-16-react-v0.13.1.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-03-16-react-v0.13.1.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "8019c4975f36b87ee9e39792760db747",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-03-16-react-v0.13.1.md",
      "relativePath": "blog/2015-03-16-react-v0.13.1.md",
      "extension": "md",
      "size": 1579,
      "prettySize": "1.58 kB",
      "modifiedTime": "2019-05-08T09:41:08.557Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.557Z",
      "birthTime": "2019-05-08T09:41:08.556Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-03-16-react-v0.13.1.md",
      "ext": ".md",
      "name": "2015-03-16-react-v0.13.1",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225931,
      "blocks": 8,
      "atimeMs": 1557308635098.137,
      "mtimeMs": 1557308468556.551,
      "ctimeMs": 1557308468556.551,
      "birthtimeMs": 1557308468556.4993,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.557Z",
      "ctime": "2019-05-08T09:41:08.557Z",
      "birthtime": "2019-05-08T09:41:08.556Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-03-19-building-the-facebook-news-feed-with-relay.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-03-19-building-the-facebook-news-feed-with-relay.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-03-19-building-the-facebook-news-feed-with-relay.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "26d3708e421fb865f94b36bb523b5ade",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-03-19-building-the-facebook-news-feed-with-relay.md",
      "relativePath": "blog/2015-03-19-building-the-facebook-news-feed-with-relay.md",
      "extension": "md",
      "size": 8988,
      "prettySize": "8.99 kB",
      "modifiedTime": "2019-05-08T09:41:08.557Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.557Z",
      "birthTime": "2019-05-08T09:41:08.557Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-03-19-building-the-facebook-news-feed-with-relay.md",
      "ext": ".md",
      "name": "2015-03-19-building-the-facebook-news-feed-with-relay",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225932,
      "blocks": 24,
      "atimeMs": 1557308635098.14,
      "mtimeMs": 1557308468556.757,
      "ctimeMs": 1557308468556.757,
      "birthtimeMs": 1557308468556.7039,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.557Z",
      "ctime": "2019-05-08T09:41:08.557Z",
      "birthtime": "2019-05-08T09:41:08.557Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-03-26-introducing-react-native.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-03-26-introducing-react-native.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-03-26-introducing-react-native.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "9975280d72df4aa79ce65a96c214fb34",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-03-26-introducing-react-native.md",
      "relativePath": "blog/2015-03-26-introducing-react-native.md",
      "extension": "md",
      "size": 1563,
      "prettySize": "1.56 kB",
      "modifiedTime": "2019-05-08T09:41:08.557Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.557Z",
      "birthTime": "2019-05-08T09:41:08.557Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-03-26-introducing-react-native.md",
      "ext": ".md",
      "name": "2015-03-26-introducing-react-native",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225933,
      "blocks": 8,
      "atimeMs": 1557308635098.143,
      "mtimeMs": 1557308468557.3157,
      "ctimeMs": 1557308468557.3157,
      "birthtimeMs": 1557308468556.8733,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.557Z",
      "ctime": "2019-05-08T09:41:08.557Z",
      "birthtime": "2019-05-08T09:41:08.557Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-03-30-community-roundup-26.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-03-30-community-roundup-26.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-03-30-community-roundup-26.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "6feada114bd8f71238bf502f8afce08d",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-03-30-community-roundup-26.md",
      "relativePath": "blog/2015-03-30-community-roundup-26.md",
      "extension": "md",
      "size": 5684,
      "prettySize": "5.68 kB",
      "modifiedTime": "2019-05-08T09:41:08.558Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.558Z",
      "birthTime": "2019-05-08T09:41:08.558Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-03-30-community-roundup-26.md",
      "ext": ".md",
      "name": "2015-03-30-community-roundup-26",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225934,
      "blocks": 16,
      "atimeMs": 1557308635098.146,
      "mtimeMs": 1557308468557.7476,
      "ctimeMs": 1557308468557.7476,
      "birthtimeMs": 1557308468557.6807,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.558Z",
      "ctime": "2019-05-08T09:41:08.558Z",
      "birthtime": "2019-05-08T09:41:08.558Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-04-17-react-native-v0.4.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-04-17-react-native-v0.4.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-04-17-react-native-v0.4.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "902030d0922ddb5b4fc24594ad4de2b3",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-04-17-react-native-v0.4.md",
      "relativePath": "blog/2015-04-17-react-native-v0.4.md",
      "extension": "md",
      "size": 3183,
      "prettySize": "3.18 kB",
      "modifiedTime": "2019-05-08T09:41:08.558Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.558Z",
      "birthTime": "2019-05-08T09:41:08.558Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-04-17-react-native-v0.4.md",
      "ext": ".md",
      "name": "2015-04-17-react-native-v0.4",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225935,
      "blocks": 8,
      "atimeMs": 1557308635098.149,
      "mtimeMs": 1557308468557.936,
      "ctimeMs": 1557308468557.936,
      "birthtimeMs": 1557308468557.88,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.558Z",
      "ctime": "2019-05-08T09:41:08.558Z",
      "birthtime": "2019-05-08T09:41:08.558Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-04-18-react-v0.13.2.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-04-18-react-v0.13.2.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-04-18-react-v0.13.2.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "e4a40a6bf7c3348380031b46b1e6d736",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-04-18-react-v0.13.2.md",
      "relativePath": "blog/2015-04-18-react-v0.13.2.md",
      "extension": "md",
      "size": 1742,
      "prettySize": "1.74 kB",
      "modifiedTime": "2019-05-08T09:41:08.558Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.558Z",
      "birthTime": "2019-05-08T09:41:08.558Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-04-18-react-v0.13.2.md",
      "ext": ".md",
      "name": "2015-04-18-react-v0.13.2",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225936,
      "blocks": 8,
      "atimeMs": 1557308635098.152,
      "mtimeMs": 1557308468558.1248,
      "ctimeMs": 1557308468558.1248,
      "birthtimeMs": 1557308468558.0476,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.558Z",
      "ctime": "2019-05-08T09:41:08.558Z",
      "birthtime": "2019-05-08T09:41:08.558Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-05-01-graphql-introduction.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-05-01-graphql-introduction.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-05-01-graphql-introduction.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "d663303fe9c55696143f57af77234f22",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-05-01-graphql-introduction.md",
      "relativePath": "blog/2015-05-01-graphql-introduction.md",
      "extension": "md",
      "size": 13273,
      "prettySize": "13.3 kB",
      "modifiedTime": "2019-05-08T09:41:08.558Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.558Z",
      "birthTime": "2019-05-08T09:41:08.558Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-05-01-graphql-introduction.md",
      "ext": ".md",
      "name": "2015-05-01-graphql-introduction",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225937,
      "blocks": 32,
      "atimeMs": 1557308635098.1553,
      "mtimeMs": 1557308468558.3489,
      "ctimeMs": 1557308468558.3489,
      "birthtimeMs": 1557308468558.2974,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.558Z",
      "ctime": "2019-05-08T09:41:08.558Z",
      "birthtime": "2019-05-08T09:41:08.558Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-05-08-react-v0.13.3.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-05-08-react-v0.13.3.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-05-08-react-v0.13.3.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "2384f443d5e62bd64646a45422b9bfa1",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-05-08-react-v0.13.3.md",
      "relativePath": "blog/2015-05-08-react-v0.13.3.md",
      "extension": "md",
      "size": 1465,
      "prettySize": "1.47 kB",
      "modifiedTime": "2019-05-08T09:41:08.559Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.559Z",
      "birthTime": "2019-05-08T09:41:08.558Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-05-08-react-v0.13.3.md",
      "ext": ".md",
      "name": "2015-05-08-react-v0.13.3",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225938,
      "blocks": 8,
      "atimeMs": 1557308635098.1582,
      "mtimeMs": 1557308468558.543,
      "ctimeMs": 1557308468558.543,
      "birthtimeMs": 1557308468558.4714,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.559Z",
      "ctime": "2019-05-08T09:41:08.559Z",
      "birthtime": "2019-05-08T09:41:08.558Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-05-22-react-native-release-process.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-05-22-react-native-release-process.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-05-22-react-native-release-process.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "fe2100e06eeb3efc62b1fba5f29da96a",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-05-22-react-native-release-process.md",
      "relativePath": "blog/2015-05-22-react-native-release-process.md",
      "extension": "md",
      "size": 1979,
      "prettySize": "1.98 kB",
      "modifiedTime": "2019-05-08T09:41:08.559Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.559Z",
      "birthTime": "2019-05-08T09:41:08.559Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-05-22-react-native-release-process.md",
      "ext": ".md",
      "name": "2015-05-22-react-native-release-process",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225939,
      "blocks": 8,
      "atimeMs": 1557308635098.1614,
      "mtimeMs": 1557308468558.7104,
      "ctimeMs": 1557308468558.7104,
      "birthtimeMs": 1557308468558.659,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.559Z",
      "ctime": "2019-05-08T09:41:08.559Z",
      "birthtime": "2019-05-08T09:41:08.559Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-06-12-deprecating-jstransform-and-react-tools.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-06-12-deprecating-jstransform-and-react-tools.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-06-12-deprecating-jstransform-and-react-tools.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "a5e6f19247e00b4a39624e975bec27a9",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-06-12-deprecating-jstransform-and-react-tools.md",
      "relativePath": "blog/2015-06-12-deprecating-jstransform-and-react-tools.md",
      "extension": "md",
      "size": 2911,
      "prettySize": "2.91 kB",
      "modifiedTime": "2019-05-08T09:41:08.559Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.559Z",
      "birthTime": "2019-05-08T09:41:08.559Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-06-12-deprecating-jstransform-and-react-tools.md",
      "ext": ".md",
      "name": "2015-06-12-deprecating-jstransform-and-react-tools",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225940,
      "blocks": 8,
      "atimeMs": 1557308635098.1643,
      "mtimeMs": 1557308468558.8853,
      "ctimeMs": 1557308468558.8853,
      "birthtimeMs": 1557308468558.8264,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.559Z",
      "ctime": "2019-05-08T09:41:08.559Z",
      "birthtime": "2019-05-08T09:41:08.559Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-07-03-react-v0.14-beta-1.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-07-03-react-v0.14-beta-1.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-07-03-react-v0.14-beta-1.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "084b8d533b791efa6cc6d7c5d904c54f",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-07-03-react-v0.14-beta-1.md",
      "relativePath": "blog/2015-07-03-react-v0.14-beta-1.md",
      "extension": "md",
      "size": 6665,
      "prettySize": "6.67 kB",
      "modifiedTime": "2019-05-08T09:41:08.559Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.559Z",
      "birthTime": "2019-05-08T09:41:08.559Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-07-03-react-v0.14-beta-1.md",
      "ext": ".md",
      "name": "2015-07-03-react-v0.14-beta-1",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225941,
      "blocks": 16,
      "atimeMs": 1557308635098.1675,
      "mtimeMs": 1557308468559.0706,
      "ctimeMs": 1557308468559.0706,
      "birthtimeMs": 1557308468559.0217,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.559Z",
      "ctime": "2019-05-08T09:41:08.559Z",
      "birthtime": "2019-05-08T09:41:08.559Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-08-03-new-react-devtools-beta.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-08-03-new-react-devtools-beta.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-08-03-new-react-devtools-beta.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "fd610413988d936dcadba82137a21a07",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-08-03-new-react-devtools-beta.md",
      "relativePath": "blog/2015-08-03-new-react-devtools-beta.md",
      "extension": "md",
      "size": 2886,
      "prettySize": "2.89 kB",
      "modifiedTime": "2019-05-08T09:41:08.559Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.559Z",
      "birthTime": "2019-05-08T09:41:08.559Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-08-03-new-react-devtools-beta.md",
      "ext": ".md",
      "name": "2015-08-03-new-react-devtools-beta",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225942,
      "blocks": 8,
      "atimeMs": 1557308635098.1707,
      "mtimeMs": 1557308468559.2454,
      "ctimeMs": 1557308468559.2454,
      "birthtimeMs": 1557308468559.1855,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.559Z",
      "ctime": "2019-05-08T09:41:08.559Z",
      "birthtime": "2019-05-08T09:41:08.559Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-08-11-relay-technical-preview.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-08-11-relay-technical-preview.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-08-11-relay-technical-preview.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "8c4241f94088bf578f1da34f6cb1563a",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-08-11-relay-technical-preview.md",
      "relativePath": "blog/2015-08-11-relay-technical-preview.md",
      "extension": "md",
      "size": 3439,
      "prettySize": "3.44 kB",
      "modifiedTime": "2019-05-08T09:41:08.559Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.559Z",
      "birthTime": "2019-05-08T09:41:08.559Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-08-11-relay-technical-preview.md",
      "ext": ".md",
      "name": "2015-08-11-relay-technical-preview",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225943,
      "blocks": 8,
      "atimeMs": 1557308635098.174,
      "mtimeMs": 1557308468559.4202,
      "ctimeMs": 1557308468559.4202,
      "birthtimeMs": 1557308468559.3674,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.559Z",
      "ctime": "2019-05-08T09:41:08.559Z",
      "birthtime": "2019-05-08T09:41:08.559Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-08-13-reacteurope-roundup.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-08-13-reacteurope-roundup.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-08-13-reacteurope-roundup.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "887a76c112ba18994ef54de5c7f0bbdd",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-08-13-reacteurope-roundup.md",
      "relativePath": "blog/2015-08-13-reacteurope-roundup.md",
      "extension": "md",
      "size": 7997,
      "prettySize": "8 kB",
      "modifiedTime": "2019-05-08T09:41:08.560Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.560Z",
      "birthTime": "2019-05-08T09:41:08.560Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-08-13-reacteurope-roundup.md",
      "ext": ".md",
      "name": "2015-08-13-reacteurope-roundup",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225944,
      "blocks": 16,
      "atimeMs": 1557308635098.1772,
      "mtimeMs": 1557308468559.607,
      "ctimeMs": 1557308468559.607,
      "birthtimeMs": 1557308468559.5579,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.560Z",
      "ctime": "2019-05-08T09:41:08.560Z",
      "birthtime": "2019-05-08T09:41:08.560Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-09-02-new-react-developer-tools.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-09-02-new-react-developer-tools.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-09-02-new-react-developer-tools.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "b19a0add095f2aa4783cd7d4366292f1",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-09-02-new-react-developer-tools.md",
      "relativePath": "blog/2015-09-02-new-react-developer-tools.md",
      "extension": "md",
      "size": 1762,
      "prettySize": "1.76 kB",
      "modifiedTime": "2019-05-08T09:41:08.560Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.560Z",
      "birthTime": "2019-05-08T09:41:08.560Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-09-02-new-react-developer-tools.md",
      "ext": ".md",
      "name": "2015-09-02-new-react-developer-tools",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225945,
      "blocks": 8,
      "atimeMs": 1557308635098.181,
      "mtimeMs": 1557308468559.8992,
      "ctimeMs": 1557308468559.8992,
      "birthtimeMs": 1557308468559.838,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.560Z",
      "ctime": "2019-05-08T09:41:08.560Z",
      "birthtime": "2019-05-08T09:41:08.560Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-09-10-react-v0.14-rc1.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-09-10-react-v0.14-rc1.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-09-10-react-v0.14-rc1.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "9467756a08b2c46adc8595a42e41eb3e",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-09-10-react-v0.14-rc1.md",
      "relativePath": "blog/2015-09-10-react-v0.14-rc1.md",
      "extension": "md",
      "size": 15512,
      "prettySize": "15.5 kB",
      "modifiedTime": "2019-05-08T09:41:08.560Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.560Z",
      "birthTime": "2019-05-08T09:41:08.560Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-09-10-react-v0.14-rc1.md",
      "ext": ".md",
      "name": "2015-09-10-react-v0.14-rc1",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225946,
      "blocks": 32,
      "atimeMs": 1557308635098.1838,
      "mtimeMs": 1557308468560.1516,
      "ctimeMs": 1557308468560.1516,
      "birthtimeMs": 1557308468560.09,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.560Z",
      "ctime": "2019-05-08T09:41:08.560Z",
      "birthtime": "2019-05-08T09:41:08.560Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-09-14-community-roundup-27.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-09-14-community-roundup-27.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-09-14-community-roundup-27.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "ba743dd59739e242cfce9e5baa43c7e3",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-09-14-community-roundup-27.md",
      "relativePath": "blog/2015-09-14-community-roundup-27.md",
      "extension": "md",
      "size": 8296,
      "prettySize": "8.3 kB",
      "modifiedTime": "2019-05-08T09:41:08.560Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.560Z",
      "birthTime": "2019-05-08T09:41:08.560Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-09-14-community-roundup-27.md",
      "ext": ".md",
      "name": "2015-09-14-community-roundup-27",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225947,
      "blocks": 24,
      "atimeMs": 1557308635098.187,
      "mtimeMs": 1557308468560.3867,
      "ctimeMs": 1557308468560.3867,
      "birthtimeMs": 1557308468560.331,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.560Z",
      "ctime": "2019-05-08T09:41:08.560Z",
      "birthtime": "2019-05-08T09:41:08.560Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-10-01-react-render-and-top-level-api.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-10-01-react-render-and-top-level-api.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-10-01-react-render-and-top-level-api.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "983506b8b075f42c9db5cb3be0076f60",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-10-01-react-render-and-top-level-api.md",
      "relativePath": "blog/2015-10-01-react-render-and-top-level-api.md",
      "extension": "md",
      "size": 5329,
      "prettySize": "5.33 kB",
      "modifiedTime": "2019-05-08T09:41:08.561Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.561Z",
      "birthTime": "2019-05-08T09:41:08.561Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-10-01-react-render-and-top-level-api.md",
      "ext": ".md",
      "name": "2015-10-01-react-render-and-top-level-api",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225948,
      "blocks": 16,
      "atimeMs": 1557308635098.19,
      "mtimeMs": 1557308468560.5894,
      "ctimeMs": 1557308468560.5894,
      "birthtimeMs": 1557308468560.525,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.561Z",
      "ctime": "2019-05-08T09:41:08.561Z",
      "birthtime": "2019-05-08T09:41:08.561Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-10-07-react-v0.14.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-10-07-react-v0.14.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-10-07-react-v0.14.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "66f41080f91dee70998529c17922da28",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-10-07-react-v0.14.md",
      "relativePath": "blog/2015-10-07-react-v0.14.md",
      "extension": "md",
      "size": 17175,
      "prettySize": "17.2 kB",
      "modifiedTime": "2019-05-08T09:41:08.561Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.561Z",
      "birthTime": "2019-05-08T09:41:08.561Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-10-07-react-v0.14.md",
      "ext": ".md",
      "name": "2015-10-07-react-v0.14",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225949,
      "blocks": 40,
      "atimeMs": 1557308635098.1926,
      "mtimeMs": 1557308468560.832,
      "ctimeMs": 1557308468560.832,
      "birthtimeMs": 1557308468560.7793,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.561Z",
      "ctime": "2019-05-08T09:41:08.561Z",
      "birthtime": "2019-05-08T09:41:08.561Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-10-19-reactiflux-is-moving-to-discord.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-10-19-reactiflux-is-moving-to-discord.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-10-19-reactiflux-is-moving-to-discord.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "bef55e13c87a8f48c9495dcdaceb1468",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-10-19-reactiflux-is-moving-to-discord.md",
      "relativePath": "blog/2015-10-19-reactiflux-is-moving-to-discord.md",
      "extension": "md",
      "size": 5982,
      "prettySize": "5.98 kB",
      "modifiedTime": "2019-05-08T09:41:08.561Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.561Z",
      "birthTime": "2019-05-08T09:41:08.561Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-10-19-reactiflux-is-moving-to-discord.md",
      "ext": ".md",
      "name": "2015-10-19-reactiflux-is-moving-to-discord",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225950,
      "blocks": 16,
      "atimeMs": 1557308635098.1953,
      "mtimeMs": 1557308468561.0425,
      "ctimeMs": 1557308468561.0425,
      "birthtimeMs": 1557308468560.9807,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.561Z",
      "ctime": "2019-05-08T09:41:08.561Z",
      "birthtime": "2019-05-08T09:41:08.561Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-10-28-react-v0.14.1.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-10-28-react-v0.14.1.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-10-28-react-v0.14.1.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "8b62950c6a31f7d91a51a08da3f6643c",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-10-28-react-v0.14.1.md",
      "relativePath": "blog/2015-10-28-react-v0.14.1.md",
      "extension": "md",
      "size": 1626,
      "prettySize": "1.63 kB",
      "modifiedTime": "2019-05-08T09:41:08.561Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.561Z",
      "birthTime": "2019-05-08T09:41:08.561Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-10-28-react-v0.14.1.md",
      "ext": ".md",
      "name": "2015-10-28-react-v0.14.1",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225951,
      "blocks": 8,
      "atimeMs": 1557308635098.198,
      "mtimeMs": 1557308468561.2175,
      "ctimeMs": 1557308468561.2175,
      "birthtimeMs": 1557308468561.1567,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.561Z",
      "ctime": "2019-05-08T09:41:08.561Z",
      "birthtime": "2019-05-08T09:41:08.561Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-11-02-react-v0.14.2.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-11-02-react-v0.14.2.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-11-02-react-v0.14.2.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "fa5e2c120eb8ccf1fdedff5415cc118a",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-11-02-react-v0.14.2.md",
      "relativePath": "blog/2015-11-02-react-v0.14.2.md",
      "extension": "md",
      "size": 1947,
      "prettySize": "1.95 kB",
      "modifiedTime": "2019-05-08T09:41:08.561Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.561Z",
      "birthTime": "2019-05-08T09:41:08.561Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-11-02-react-v0.14.2.md",
      "ext": ".md",
      "name": "2015-11-02-react-v0.14.2",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225952,
      "blocks": 8,
      "atimeMs": 1557308635098.2007,
      "mtimeMs": 1557308468561.492,
      "ctimeMs": 1557308468561.492,
      "birthtimeMs": 1557308468561.4436,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.561Z",
      "ctime": "2019-05-08T09:41:08.561Z",
      "birthtime": "2019-05-08T09:41:08.561Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-11-18-react-v0.14.3.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-11-18-react-v0.14.3.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-11-18-react-v0.14.3.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "4e46ff507512f202137de3477040906c",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-11-18-react-v0.14.3.md",
      "relativePath": "blog/2015-11-18-react-v0.14.3.md",
      "extension": "md",
      "size": 2240,
      "prettySize": "2.24 kB",
      "modifiedTime": "2019-05-08T09:41:08.562Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.562Z",
      "birthTime": "2019-05-08T09:41:08.562Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-11-18-react-v0.14.3.md",
      "ext": ".md",
      "name": "2015-11-18-react-v0.14.3",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225953,
      "blocks": 8,
      "atimeMs": 1557308635098.2031,
      "mtimeMs": 1557308468561.67,
      "ctimeMs": 1557308468561.67,
      "birthtimeMs": 1557308468561.6038,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.562Z",
      "ctime": "2019-05-08T09:41:08.562Z",
      "birthtime": "2019-05-08T09:41:08.562Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-12-04-react-js-conf-2016-diversity-scholarship.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-12-04-react-js-conf-2016-diversity-scholarship.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-12-04-react-js-conf-2016-diversity-scholarship.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "c60b55dbfd11fcf752f7fc0ae2bce479",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-12-04-react-js-conf-2016-diversity-scholarship.md",
      "relativePath": "blog/2015-12-04-react-js-conf-2016-diversity-scholarship.md",
      "extension": "md",
      "size": 4022,
      "prettySize": "4.02 kB",
      "modifiedTime": "2019-05-08T09:41:08.562Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.562Z",
      "birthTime": "2019-05-08T09:41:08.562Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-12-04-react-js-conf-2016-diversity-scholarship.md",
      "ext": ".md",
      "name": "2015-12-04-react-js-conf-2016-diversity-scholarship",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225954,
      "blocks": 8,
      "atimeMs": 1557308635098.206,
      "mtimeMs": 1557308468561.821,
      "ctimeMs": 1557308468561.821,
      "birthtimeMs": 1557308468561.7632,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.562Z",
      "ctime": "2019-05-08T09:41:08.562Z",
      "birthtime": "2019-05-08T09:41:08.562Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-12-16-ismounted-antipattern.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-12-16-ismounted-antipattern.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-12-16-ismounted-antipattern.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "3297ff8a82b0cdd5e76cd64341251fb4",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-12-16-ismounted-antipattern.md",
      "relativePath": "blog/2015-12-16-ismounted-antipattern.md",
      "extension": "md",
      "size": 3493,
      "prettySize": "3.49 kB",
      "modifiedTime": "2019-05-08T09:41:08.562Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.562Z",
      "birthTime": "2019-05-08T09:41:08.562Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-12-16-ismounted-antipattern.md",
      "ext": ".md",
      "name": "2015-12-16-ismounted-antipattern",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225955,
      "blocks": 8,
      "atimeMs": 1557308635098.2087,
      "mtimeMs": 1557308468561.9968,
      "ctimeMs": 1557308468561.9968,
      "birthtimeMs": 1557308468561.9414,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.562Z",
      "ctime": "2019-05-08T09:41:08.562Z",
      "birthtime": "2019-05-08T09:41:08.562Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-12-18-react-components-elements-and-instances.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-12-18-react-components-elements-and-instances.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-12-18-react-components-elements-and-instances.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "f35b620914cc729aa730e3bfaf4e6a09",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-12-18-react-components-elements-and-instances.md",
      "relativePath": "blog/2015-12-18-react-components-elements-and-instances.md",
      "extension": "md",
      "size": 14405,
      "prettySize": "14.4 kB",
      "modifiedTime": "2019-05-08T09:41:08.562Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.562Z",
      "birthTime": "2019-05-08T09:41:08.562Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-12-18-react-components-elements-and-instances.md",
      "ext": ".md",
      "name": "2015-12-18-react-components-elements-and-instances",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225956,
      "blocks": 32,
      "atimeMs": 1557308635098.2117,
      "mtimeMs": 1557308468562.2263,
      "ctimeMs": 1557308468562.2263,
      "birthtimeMs": 1557308468562.166,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.562Z",
      "ctime": "2019-05-08T09:41:08.562Z",
      "birthtime": "2019-05-08T09:41:08.562Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-12-29-react-v0.14.4.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-12-29-react-v0.14.4.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2015-12-29-react-v0.14.4.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "400040dd71e80aa19653b1fba565c5a6",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-12-29-react-v0.14.4.md",
      "relativePath": "blog/2015-12-29-react-v0.14.4.md",
      "extension": "md",
      "size": 1527,
      "prettySize": "1.53 kB",
      "modifiedTime": "2019-05-08T09:41:08.562Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.562Z",
      "birthTime": "2019-05-08T09:41:08.562Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2015-12-29-react-v0.14.4.md",
      "ext": ".md",
      "name": "2015-12-29-react-v0.14.4",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225957,
      "blocks": 8,
      "atimeMs": 1557308635098.2144,
      "mtimeMs": 1557308468562.389,
      "ctimeMs": 1557308468562.389,
      "birthtimeMs": 1557308468562.3406,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.562Z",
      "ctime": "2019-05-08T09:41:08.562Z",
      "birthtime": "2019-05-08T09:41:08.562Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2016-01-08-A-implies-B-does-not-imply-B-implies-A.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2016-01-08-A-implies-B-does-not-imply-B-implies-A.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2016-01-08-A-implies-B-does-not-imply-B-implies-A.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "c6f1234439a3b2ec5fae683a3d49de2a",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2016-01-08-A-implies-B-does-not-imply-B-implies-A.md",
      "relativePath": "blog/2016-01-08-A-implies-B-does-not-imply-B-implies-A.md",
      "extension": "md",
      "size": 4188,
      "prettySize": "4.19 kB",
      "modifiedTime": "2019-05-08T09:41:08.563Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.563Z",
      "birthTime": "2019-05-08T09:41:08.563Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2016-01-08-A-implies-B-does-not-imply-B-implies-A.md",
      "ext": ".md",
      "name": "2016-01-08-A-implies-B-does-not-imply-B-implies-A",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225958,
      "blocks": 16,
      "atimeMs": 1557308635098.2175,
      "mtimeMs": 1557308468562.5632,
      "ctimeMs": 1557308468562.5632,
      "birthtimeMs": 1557308468562.5088,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.563Z",
      "ctime": "2019-05-08T09:41:08.563Z",
      "birthtime": "2019-05-08T09:41:08.563Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2016-01-12-discontinuing-ie8-support.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2016-01-12-discontinuing-ie8-support.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2016-01-12-discontinuing-ie8-support.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "135377c61e58e2bc704d831e78a718b1",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2016-01-12-discontinuing-ie8-support.md",
      "relativePath": "blog/2016-01-12-discontinuing-ie8-support.md",
      "extension": "md",
      "size": 1038,
      "prettySize": "1.04 kB",
      "modifiedTime": "2019-05-08T09:41:08.563Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.563Z",
      "birthTime": "2019-05-08T09:41:08.563Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2016-01-12-discontinuing-ie8-support.md",
      "ext": ".md",
      "name": "2016-01-12-discontinuing-ie8-support",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225959,
      "blocks": 8,
      "atimeMs": 1557308635098.2205,
      "mtimeMs": 1557308468562.838,
      "ctimeMs": 1557308468562.838,
      "birthtimeMs": 1557308468562.7822,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.563Z",
      "ctime": "2019-05-08T09:41:08.563Z",
      "birthtime": "2019-05-08T09:41:08.563Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2016-02-19-new-versioning-scheme.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2016-02-19-new-versioning-scheme.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2016-02-19-new-versioning-scheme.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "26a0ef9e94e83903e8f4f1c51eb9bf8a",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2016-02-19-new-versioning-scheme.md",
      "relativePath": "blog/2016-02-19-new-versioning-scheme.md",
      "extension": "md",
      "size": 4250,
      "prettySize": "4.25 kB",
      "modifiedTime": "2019-05-08T09:41:08.563Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.563Z",
      "birthTime": "2019-05-08T09:41:08.563Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2016-02-19-new-versioning-scheme.md",
      "ext": ".md",
      "name": "2016-02-19-new-versioning-scheme",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225960,
      "blocks": 16,
      "atimeMs": 1557308635098.2236,
      "mtimeMs": 1557308468563.023,
      "ctimeMs": 1557308468563.023,
      "birthtimeMs": 1557308468562.961,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.563Z",
      "ctime": "2019-05-08T09:41:08.563Z",
      "birthtime": "2019-05-08T09:41:08.563Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2016-03-07-react-v15-rc1.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2016-03-07-react-v15-rc1.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2016-03-07-react-v15-rc1.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "2f239ee53f7662e941e04eb5d42ed14e",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2016-03-07-react-v15-rc1.md",
      "relativePath": "blog/2016-03-07-react-v15-rc1.md",
      "extension": "md",
      "size": 10040,
      "prettySize": "10 kB",
      "modifiedTime": "2019-05-08T09:41:08.563Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.563Z",
      "birthTime": "2019-05-08T09:41:08.563Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2016-03-07-react-v15-rc1.md",
      "ext": ".md",
      "name": "2016-03-07-react-v15-rc1",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225961,
      "blocks": 24,
      "atimeMs": 1557308635098.2263,
      "mtimeMs": 1557308468563.234,
      "ctimeMs": 1557308468563.234,
      "birthtimeMs": 1557308468563.1816,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.563Z",
      "ctime": "2019-05-08T09:41:08.563Z",
      "birthtime": "2019-05-08T09:41:08.563Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2016-03-16-react-v15-rc2.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2016-03-16-react-v15-rc2.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2016-03-16-react-v15-rc2.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "26d4d7b77c80e7c9b4c3648c7106b932",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2016-03-16-react-v15-rc2.md",
      "relativePath": "blog/2016-03-16-react-v15-rc2.md",
      "extension": "md",
      "size": 3184,
      "prettySize": "3.18 kB",
      "modifiedTime": "2019-05-08T09:41:08.563Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.563Z",
      "birthTime": "2019-05-08T09:41:08.563Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2016-03-16-react-v15-rc2.md",
      "ext": ".md",
      "name": "2016-03-16-react-v15-rc2",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225962,
      "blocks": 8,
      "atimeMs": 1557308635098.229,
      "mtimeMs": 1557308468563.4104,
      "ctimeMs": 1557308468563.4104,
      "birthtimeMs": 1557308468563.354,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.563Z",
      "ctime": "2019-05-08T09:41:08.563Z",
      "birthtime": "2019-05-08T09:41:08.563Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2016-03-29-react-v0.14.8.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2016-03-29-react-v0.14.8.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2016-03-29-react-v0.14.8.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "acaf5a01f612a05b48f52b2c9e5b5f31",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2016-03-29-react-v0.14.8.md",
      "relativePath": "blog/2016-03-29-react-v0.14.8.md",
      "extension": "md",
      "size": 1533,
      "prettySize": "1.53 kB",
      "modifiedTime": "2019-05-08T09:41:08.564Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.564Z",
      "birthTime": "2019-05-08T09:41:08.564Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2016-03-29-react-v0.14.8.md",
      "ext": ".md",
      "name": "2016-03-29-react-v0.14.8",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225963,
      "blocks": 8,
      "atimeMs": 1557308635098.2317,
      "mtimeMs": 1557308468563.5767,
      "ctimeMs": 1557308468563.5767,
      "birthtimeMs": 1557308468563.5264,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.564Z",
      "ctime": "2019-05-08T09:41:08.564Z",
      "birthtime": "2019-05-08T09:41:08.564Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2016-04-08-react-v15.0.1.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2016-04-08-react-v15.0.1.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2016-04-08-react-v15.0.1.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "b2b710d18e9103d1f4b8e42a8850ff51",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2016-04-08-react-v15.0.1.md",
      "relativePath": "blog/2016-04-08-react-v15.0.1.md",
      "extension": "md",
      "size": 2999,
      "prettySize": "3 kB",
      "modifiedTime": "2019-05-08T09:41:08.564Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.564Z",
      "birthTime": "2019-05-08T09:41:08.564Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2016-04-08-react-v15.0.1.md",
      "ext": ".md",
      "name": "2016-04-08-react-v15.0.1",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225965,
      "blocks": 8,
      "atimeMs": 1557308635098.2375,
      "mtimeMs": 1557308468564.0415,
      "ctimeMs": 1557308468564.0415,
      "birthtimeMs": 1557308468563.994,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.564Z",
      "ctime": "2019-05-08T09:41:08.564Z",
      "birthtime": "2019-05-08T09:41:08.564Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2016-04-07-react-v15.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2016-04-07-react-v15.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2016-04-07-react-v15.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "77e8db72df4ab5cae4115b548d88d5f1",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2016-04-07-react-v15.md",
      "relativePath": "blog/2016-04-07-react-v15.md",
      "extension": "md",
      "size": 25151,
      "prettySize": "25.2 kB",
      "modifiedTime": "2019-05-08T09:41:08.564Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.564Z",
      "birthTime": "2019-05-08T09:41:08.564Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2016-04-07-react-v15.md",
      "ext": ".md",
      "name": "2016-04-07-react-v15",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225964,
      "blocks": 56,
      "atimeMs": 1557308635098.2346,
      "mtimeMs": 1557308468563.85,
      "ctimeMs": 1557308468563.85,
      "birthtimeMs": 1557308468563.7932,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.564Z",
      "ctime": "2019-05-08T09:41:08.564Z",
      "birthtime": "2019-05-08T09:41:08.564Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2016-07-11-introducing-reacts-error-code-system.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2016-07-11-introducing-reacts-error-code-system.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2016-07-11-introducing-reacts-error-code-system.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "e1785e60e8288840a2bc4a00ac02ffbb",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2016-07-11-introducing-reacts-error-code-system.md",
      "relativePath": "blog/2016-07-11-introducing-reacts-error-code-system.md",
      "extension": "md",
      "size": 2425,
      "prettySize": "2.42 kB",
      "modifiedTime": "2019-05-08T09:41:08.564Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.564Z",
      "birthTime": "2019-05-08T09:41:08.564Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2016-07-11-introducing-reacts-error-code-system.md",
      "ext": ".md",
      "name": "2016-07-11-introducing-reacts-error-code-system",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225966,
      "blocks": 8,
      "atimeMs": 1557308635098.2405,
      "mtimeMs": 1557308468564.271,
      "ctimeMs": 1557308468564.271,
      "birthtimeMs": 1557308468564.2024,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.564Z",
      "ctime": "2019-05-08T09:41:08.564Z",
      "birthtime": "2019-05-08T09:41:08.564Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2016-07-13-mixins-considered-harmful.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2016-07-13-mixins-considered-harmful.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2016-07-13-mixins-considered-harmful.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "0e67523a8c262705f0c0f0ce805f09dd",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2016-07-13-mixins-considered-harmful.md",
      "relativePath": "blog/2016-07-13-mixins-considered-harmful.md",
      "extension": "md",
      "size": 27481,
      "prettySize": "27.5 kB",
      "modifiedTime": "2019-05-08T09:41:08.565Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.565Z",
      "birthTime": "2019-05-08T09:41:08.564Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2016-07-13-mixins-considered-harmful.md",
      "ext": ".md",
      "name": "2016-07-13-mixins-considered-harmful",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225967,
      "blocks": 56,
      "atimeMs": 1557308635098.2437,
      "mtimeMs": 1557308468564.5798,
      "ctimeMs": 1557308468564.5798,
      "birthtimeMs": 1557308468564.4976,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.565Z",
      "ctime": "2019-05-08T09:41:08.565Z",
      "birthtime": "2019-05-08T09:41:08.564Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2016-07-22-create-apps-with-no-configuration.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2016-07-22-create-apps-with-no-configuration.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2016-07-22-create-apps-with-no-configuration.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "1cb180776cb5d4a97c311e0d7edf259f",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2016-07-22-create-apps-with-no-configuration.md",
      "relativePath": "blog/2016-07-22-create-apps-with-no-configuration.md",
      "extension": "md",
      "size": 9752,
      "prettySize": "9.75 kB",
      "modifiedTime": "2019-05-08T09:41:08.565Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.565Z",
      "birthTime": "2019-05-08T09:41:08.565Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2016-07-22-create-apps-with-no-configuration.md",
      "ext": ".md",
      "name": "2016-07-22-create-apps-with-no-configuration",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225968,
      "blocks": 24,
      "atimeMs": 1557308635098.2468,
      "mtimeMs": 1557308468564.8584,
      "ctimeMs": 1557308468564.8584,
      "birthtimeMs": 1557308468564.8052,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.565Z",
      "ctime": "2019-05-08T09:41:08.565Z",
      "birthtime": "2019-05-08T09:41:08.565Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2016-08-05-relay-state-of-the-state.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2016-08-05-relay-state-of-the-state.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2016-08-05-relay-state-of-the-state.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "ad907de104f637adb843279e0ffdb26d",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2016-08-05-relay-state-of-the-state.md",
      "relativePath": "blog/2016-08-05-relay-state-of-the-state.md",
      "extension": "md",
      "size": 10026,
      "prettySize": "10 kB",
      "modifiedTime": "2019-05-08T09:41:08.566Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.566Z",
      "birthTime": "2019-05-08T09:41:08.565Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2016-08-05-relay-state-of-the-state.md",
      "ext": ".md",
      "name": "2016-08-05-relay-state-of-the-state",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225969,
      "blocks": 24,
      "atimeMs": 1557308635098.2502,
      "mtimeMs": 1557308468566.1465,
      "ctimeMs": 1557308468566.1465,
      "birthtimeMs": 1557308468565.0312,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.566Z",
      "ctime": "2019-05-08T09:41:08.566Z",
      "birthtime": "2019-05-08T09:41:08.565Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2016-09-28-our-first-50000-stars.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2016-09-28-our-first-50000-stars.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2016-09-28-our-first-50000-stars.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "dcbf25e01a2b0ce8eed8f037b877735a",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2016-09-28-our-first-50000-stars.md",
      "relativePath": "blog/2016-09-28-our-first-50000-stars.md",
      "extension": "md",
      "size": 13231,
      "prettySize": "13.2 kB",
      "modifiedTime": "2019-05-08T09:41:08.566Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.566Z",
      "birthTime": "2019-05-08T09:41:08.566Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2016-09-28-our-first-50000-stars.md",
      "ext": ".md",
      "name": "2016-09-28-our-first-50000-stars",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225970,
      "blocks": 32,
      "atimeMs": 1557308635098.2532,
      "mtimeMs": 1557308468566.448,
      "ctimeMs": 1557308468566.448,
      "birthtimeMs": 1557308468566.369,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.566Z",
      "ctime": "2019-05-08T09:41:08.566Z",
      "birthtime": "2019-05-08T09:41:08.566Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2016-11-16-react-v15.4.0.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2016-11-16-react-v15.4.0.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2016-11-16-react-v15.4.0.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "9a68f227252b078030b174ae824f307b",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2016-11-16-react-v15.4.0.md",
      "relativePath": "blog/2016-11-16-react-v15.4.0.md",
      "extension": "md",
      "size": 10437,
      "prettySize": "10.4 kB",
      "modifiedTime": "2019-05-08T09:41:08.567Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.567Z",
      "birthTime": "2019-05-08T09:41:08.567Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2016-11-16-react-v15.4.0.md",
      "ext": ".md",
      "name": "2016-11-16-react-v15.4.0",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225971,
      "blocks": 24,
      "atimeMs": 1557308635098.256,
      "mtimeMs": 1557308468566.6814,
      "ctimeMs": 1557308468566.6814,
      "birthtimeMs": 1557308468566.6184,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.567Z",
      "ctime": "2019-05-08T09:41:08.567Z",
      "birthtime": "2019-05-08T09:41:08.567Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2017-04-07-react-v15.5.0.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2017-04-07-react-v15.5.0.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2017-04-07-react-v15.5.0.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "d1b8e918e0f5971235ed95d601dd2f36",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2017-04-07-react-v15.5.0.md",
      "relativePath": "blog/2017-04-07-react-v15.5.0.md",
      "extension": "md",
      "size": 11971,
      "prettySize": "12 kB",
      "modifiedTime": "2019-05-08T09:41:08.567Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.567Z",
      "birthTime": "2019-05-08T09:41:08.567Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2017-04-07-react-v15.5.0.md",
      "ext": ".md",
      "name": "2017-04-07-react-v15.5.0",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225972,
      "blocks": 24,
      "atimeMs": 1557308635098.2588,
      "mtimeMs": 1557308468566.9111,
      "ctimeMs": 1557308468566.9111,
      "birthtimeMs": 1557308468566.8616,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.567Z",
      "ctime": "2019-05-08T09:41:08.567Z",
      "birthtime": "2019-05-08T09:41:08.567Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2017-05-18-whats-new-in-create-react-app.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2017-05-18-whats-new-in-create-react-app.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2017-05-18-whats-new-in-create-react-app.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "7c4615c39f45b0a57ed339022fb8fd32",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2017-05-18-whats-new-in-create-react-app.md",
      "relativePath": "blog/2017-05-18-whats-new-in-create-react-app.md",
      "extension": "md",
      "size": 10169,
      "prettySize": "10.2 kB",
      "modifiedTime": "2019-05-08T09:41:08.567Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.567Z",
      "birthTime": "2019-05-08T09:41:08.567Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2017-05-18-whats-new-in-create-react-app.md",
      "ext": ".md",
      "name": "2017-05-18-whats-new-in-create-react-app",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225973,
      "blocks": 24,
      "atimeMs": 1557308635098.262,
      "mtimeMs": 1557308468567.256,
      "ctimeMs": 1557308468567.256,
      "birthtimeMs": 1557308468567.194,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.567Z",
      "ctime": "2019-05-08T09:41:08.567Z",
      "birthtime": "2019-05-08T09:41:08.567Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2017-06-13-react-v15.6.0.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2017-06-13-react-v15.6.0.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2017-06-13-react-v15.6.0.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "8053166e347330e73cb27dca993c54fc",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2017-06-13-react-v15.6.0.md",
      "relativePath": "blog/2017-06-13-react-v15.6.0.md",
      "extension": "md",
      "size": 6108,
      "prettySize": "6.11 kB",
      "modifiedTime": "2019-05-08T09:41:08.567Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.567Z",
      "birthTime": "2019-05-08T09:41:08.567Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2017-06-13-react-v15.6.0.md",
      "ext": ".md",
      "name": "2017-06-13-react-v15.6.0",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225974,
      "blocks": 16,
      "atimeMs": 1557308635098.2646,
      "mtimeMs": 1557308468567.4797,
      "ctimeMs": 1557308468567.4797,
      "birthtimeMs": 1557308468567.4194,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.567Z",
      "ctime": "2019-05-08T09:41:08.567Z",
      "birthtime": "2019-05-08T09:41:08.567Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2017-07-26-error-handle-in-react-16.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2017-07-26-error-handle-in-react-16.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2017-07-26-error-handle-in-react-16.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "b213ce29246376065c6fa1453c66b510",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2017-07-26-error-handle-in-react-16.md",
      "relativePath": "blog/2017-07-26-error-handle-in-react-16.md",
      "extension": "md",
      "size": 6086,
      "prettySize": "6.09 kB",
      "modifiedTime": "2019-05-08T09:41:08.568Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.568Z",
      "birthTime": "2019-05-08T09:41:08.568Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2017-07-26-error-handle-in-react-16.md",
      "ext": ".md",
      "name": "2017-07-26-error-handle-in-react-16",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225975,
      "blocks": 16,
      "atimeMs": 1557308635098.2676,
      "mtimeMs": 1557308468567.697,
      "ctimeMs": 1557308468567.697,
      "birthtimeMs": 1557308468567.6394,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.568Z",
      "ctime": "2019-05-08T09:41:08.568Z",
      "birthtime": "2019-05-08T09:41:08.568Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2017-07-26-error-handling-in-react-16.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2017-07-26-error-handling-in-react-16.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2017-07-26-error-handling-in-react-16.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "82037cf755afe90ecf0ee913d9c5faf0",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2017-07-26-error-handling-in-react-16.md",
      "relativePath": "blog/2017-07-26-error-handling-in-react-16.md",
      "extension": "md",
      "size": 6652,
      "prettySize": "6.65 kB",
      "modifiedTime": "2019-05-08T09:41:08.568Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.568Z",
      "birthTime": "2019-05-08T09:41:08.568Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2017-07-26-error-handling-in-react-16.md",
      "ext": ".md",
      "name": "2017-07-26-error-handling-in-react-16",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225976,
      "blocks": 16,
      "atimeMs": 1557308635098.2703,
      "mtimeMs": 1557308468567.961,
      "ctimeMs": 1557308468567.961,
      "birthtimeMs": 1557308468567.8372,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.568Z",
      "ctime": "2019-05-08T09:41:08.568Z",
      "birthtime": "2019-05-08T09:41:08.568Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2017-09-08-dom-attributes-in-react-16.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2017-09-08-dom-attributes-in-react-16.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2017-09-08-dom-attributes-in-react-16.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "d07562ff02f172be7f0bafcf69119f89",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2017-09-08-dom-attributes-in-react-16.md",
      "relativePath": "blog/2017-09-08-dom-attributes-in-react-16.md",
      "extension": "md",
      "size": 7536,
      "prettySize": "7.54 kB",
      "modifiedTime": "2019-05-08T09:41:08.568Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.568Z",
      "birthTime": "2019-05-08T09:41:08.568Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2017-09-08-dom-attributes-in-react-16.md",
      "ext": ".md",
      "name": "2017-09-08-dom-attributes-in-react-16",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225977,
      "blocks": 16,
      "atimeMs": 1557308635098.2732,
      "mtimeMs": 1557308468568.2156,
      "ctimeMs": 1557308468568.2156,
      "birthtimeMs": 1557308468568.1538,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.568Z",
      "ctime": "2019-05-08T09:41:08.568Z",
      "birthtime": "2019-05-08T09:41:08.568Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2017-09-25-react-v15.6.2.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2017-09-25-react-v15.6.2.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2017-09-25-react-v15.6.2.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "183ec58665301eaefe77007781859096",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2017-09-25-react-v15.6.2.md",
      "relativePath": "blog/2017-09-25-react-v15.6.2.md",
      "extension": "md",
      "size": 4471,
      "prettySize": "4.47 kB",
      "modifiedTime": "2019-05-08T09:41:08.568Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.568Z",
      "birthTime": "2019-05-08T09:41:08.568Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2017-09-25-react-v15.6.2.md",
      "ext": ".md",
      "name": "2017-09-25-react-v15.6.2",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225978,
      "blocks": 16,
      "atimeMs": 1557308635098.2761,
      "mtimeMs": 1557308468568.3657,
      "ctimeMs": 1557308468568.3657,
      "birthtimeMs": 1557308468568.3176,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.568Z",
      "ctime": "2019-05-08T09:41:08.568Z",
      "birthtime": "2019-05-08T09:41:08.568Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2017-09-26-react-v16.0.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2017-09-26-react-v16.0.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2017-09-26-react-v16.0.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "44536a9fc3b5cfbdd7c7f4c2a0e9eec5",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2017-09-26-react-v16.0.md",
      "relativePath": "blog/2017-09-26-react-v16.0.md",
      "extension": "md",
      "size": 14617,
      "prettySize": "14.6 kB",
      "modifiedTime": "2019-05-08T09:41:08.569Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.569Z",
      "birthTime": "2019-05-08T09:41:08.569Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2017-09-26-react-v16.0.md",
      "ext": ".md",
      "name": "2017-09-26-react-v16.0",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225979,
      "blocks": 32,
      "atimeMs": 1557308635098.2788,
      "mtimeMs": 1557308468568.589,
      "ctimeMs": 1557308468568.589,
      "birthtimeMs": 1557308468568.5417,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.569Z",
      "ctime": "2019-05-08T09:41:08.569Z",
      "birthtime": "2019-05-08T09:41:08.569Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2017-11-28-react-v16.2.0-fragment-support.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2017-11-28-react-v16.2.0-fragment-support.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2017-11-28-react-v16.2.0-fragment-support.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "8bbc13d73de37599c26587c6a9cf7b9c",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2017-11-28-react-v16.2.0-fragment-support.md",
      "relativePath": "blog/2017-11-28-react-v16.2.0-fragment-support.md",
      "extension": "md",
      "size": 11626,
      "prettySize": "11.6 kB",
      "modifiedTime": "2019-05-08T09:41:08.569Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.569Z",
      "birthTime": "2019-05-08T09:41:08.569Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2017-11-28-react-v16.2.0-fragment-support.md",
      "ext": ".md",
      "name": "2017-11-28-react-v16.2.0-fragment-support",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225980,
      "blocks": 24,
      "atimeMs": 1557308635098.2817,
      "mtimeMs": 1557308468568.9285,
      "ctimeMs": 1557308468568.9285,
      "birthtimeMs": 1557308468568.8604,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.569Z",
      "ctime": "2019-05-08T09:41:08.569Z",
      "birthtime": "2019-05-08T09:41:08.569Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2017-12-07-introducing-the-react-rfc-process.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2017-12-07-introducing-the-react-rfc-process.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2017-12-07-introducing-the-react-rfc-process.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "f720064523175aa7d66c6121e95ba8d7",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2017-12-07-introducing-the-react-rfc-process.md",
      "relativePath": "blog/2017-12-07-introducing-the-react-rfc-process.md",
      "extension": "md",
      "size": 2511,
      "prettySize": "2.51 kB",
      "modifiedTime": "2019-05-08T09:41:08.569Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.569Z",
      "birthTime": "2019-05-08T09:41:08.569Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2017-12-07-introducing-the-react-rfc-process.md",
      "ext": ".md",
      "name": "2017-12-07-introducing-the-react-rfc-process",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225981,
      "blocks": 8,
      "atimeMs": 1557308635098.2847,
      "mtimeMs": 1557308468569.099,
      "ctimeMs": 1557308468569.099,
      "birthtimeMs": 1557308468569.051,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.569Z",
      "ctime": "2019-05-08T09:41:08.569Z",
      "birthtime": "2019-05-08T09:41:08.569Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2017-12-15-improving-the-repository-infrastructure.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2017-12-15-improving-the-repository-infrastructure.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2017-12-15-improving-the-repository-infrastructure.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "735358b11789454241178169ba8817ea",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2017-12-15-improving-the-repository-infrastructure.md",
      "relativePath": "blog/2017-12-15-improving-the-repository-infrastructure.md",
      "extension": "md",
      "size": 44211,
      "prettySize": "44.2 kB",
      "modifiedTime": "2019-05-08T09:41:08.569Z",
      "accessTime": "2019-05-08T09:41:12.639Z",
      "changeTime": "2019-05-08T09:41:08.569Z",
      "birthTime": "2019-05-08T09:41:08.569Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2017-12-15-improving-the-repository-infrastructure.md",
      "ext": ".md",
      "name": "2017-12-15-improving-the-repository-infrastructure",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225982,
      "blocks": 88,
      "atimeMs": 1557308472639.4795,
      "mtimeMs": 1557308468569.4978,
      "ctimeMs": 1557308468569.4978,
      "birthtimeMs": 1557308468569.42,
      "atime": "2019-05-08T09:41:12.639Z",
      "mtime": "2019-05-08T09:41:08.569Z",
      "ctime": "2019-05-08T09:41:08.569Z",
      "birthtime": "2019-05-08T09:41:08.569Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2018-03-01-sneak-peek-beyond-react-16.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2018-03-01-sneak-peek-beyond-react-16.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2018-03-01-sneak-peek-beyond-react-16.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "af6d80d0ec5dfbbb674dcd07c9b69213",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2018-03-01-sneak-peek-beyond-react-16.md",
      "relativePath": "blog/2018-03-01-sneak-peek-beyond-react-16.md",
      "extension": "md",
      "size": 2452,
      "prettySize": "2.45 kB",
      "modifiedTime": "2019-05-08T09:41:08.570Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.570Z",
      "birthTime": "2019-05-08T09:41:08.570Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2018-03-01-sneak-peek-beyond-react-16.md",
      "ext": ".md",
      "name": "2018-03-01-sneak-peek-beyond-react-16",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225983,
      "blocks": 8,
      "atimeMs": 1557308635098.291,
      "mtimeMs": 1557308468569.6943,
      "ctimeMs": 1557308468569.6943,
      "birthtimeMs": 1557308468569.6418,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.570Z",
      "ctime": "2019-05-08T09:41:08.570Z",
      "birthtime": "2019-05-08T09:41:08.570Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2018-03-27-update-on-async-rendering.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2018-03-27-update-on-async-rendering.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2018-03-27-update-on-async-rendering.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "10cb231f6e16a3b0613df705b3b1fee0",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2018-03-27-update-on-async-rendering.md",
      "relativePath": "blog/2018-03-27-update-on-async-rendering.md",
      "extension": "md",
      "size": 17424,
      "prettySize": "17.4 kB",
      "modifiedTime": "2019-05-08T09:41:08.570Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.570Z",
      "birthTime": "2019-05-08T09:41:08.570Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2018-03-27-update-on-async-rendering.md",
      "ext": ".md",
      "name": "2018-03-27-update-on-async-rendering",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225984,
      "blocks": 40,
      "atimeMs": 1557308635098.294,
      "mtimeMs": 1557308468569.9153,
      "ctimeMs": 1557308468569.9153,
      "birthtimeMs": 1557308468569.857,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.570Z",
      "ctime": "2019-05-08T09:41:08.570Z",
      "birthtime": "2019-05-08T09:41:08.570Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2018-03-29-react-v-16-3.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2018-03-29-react-v-16-3.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2018-03-29-react-v-16-3.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "10539283757a484ba9b64ed28a875185",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2018-03-29-react-v-16-3.md",
      "relativePath": "blog/2018-03-29-react-v-16-3.md",
      "extension": "md",
      "size": 6644,
      "prettySize": "6.64 kB",
      "modifiedTime": "2019-05-08T09:41:08.570Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.570Z",
      "birthTime": "2019-05-08T09:41:08.570Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2018-03-29-react-v-16-3.md",
      "ext": ".md",
      "name": "2018-03-29-react-v-16-3",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225985,
      "blocks": 16,
      "atimeMs": 1557308635098.2964,
      "mtimeMs": 1557308468570.1055,
      "ctimeMs": 1557308468570.1055,
      "birthtimeMs": 1557308468570.0598,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.570Z",
      "ctime": "2019-05-08T09:41:08.570Z",
      "birthtime": "2019-05-08T09:41:08.570Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2018-05-23-react-v-16-4.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2018-05-23-react-v-16-4.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2018-05-23-react-v-16-4.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "70ecdbd8065502fc926a33a29003faa6",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2018-05-23-react-v-16-4.md",
      "relativePath": "blog/2018-05-23-react-v-16-4.md",
      "extension": "md",
      "size": 8936,
      "prettySize": "8.94 kB",
      "modifiedTime": "2019-05-08T09:41:08.570Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.570Z",
      "birthTime": "2019-05-08T09:41:08.570Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2018-05-23-react-v-16-4.md",
      "ext": ".md",
      "name": "2018-05-23-react-v-16-4",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225986,
      "blocks": 24,
      "atimeMs": 1557308635098.2996,
      "mtimeMs": 1557308468570.3547,
      "ctimeMs": 1557308468570.3547,
      "birthtimeMs": 1557308468570.3071,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.570Z",
      "ctime": "2019-05-08T09:41:08.570Z",
      "birthtime": "2019-05-08T09:41:08.570Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2018-06-07-you-probably-dont-need-derived-state.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2018-06-07-you-probably-dont-need-derived-state.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2018-06-07-you-probably-dont-need-derived-state.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "61bf84cf2067d2302b1c4527a544077c",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2018-06-07-you-probably-dont-need-derived-state.md",
      "relativePath": "blog/2018-06-07-you-probably-dont-need-derived-state.md",
      "extension": "md",
      "size": 19454,
      "prettySize": "19.5 kB",
      "modifiedTime": "2019-05-08T09:41:08.571Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.571Z",
      "birthTime": "2019-05-08T09:41:08.571Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2018-06-07-you-probably-dont-need-derived-state.md",
      "ext": ".md",
      "name": "2018-06-07-you-probably-dont-need-derived-state",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225987,
      "blocks": 40,
      "atimeMs": 1557308635098.3027,
      "mtimeMs": 1557308468570.7456,
      "ctimeMs": 1557308468570.7456,
      "birthtimeMs": 1557308468570.6777,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.571Z",
      "ctime": "2019-05-08T09:41:08.571Z",
      "birthtime": "2019-05-08T09:41:08.571Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2018-08-01-react-v-16-4-2.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2018-08-01-react-v-16-4-2.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2018-08-01-react-v-16-4-2.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "b2db97a9125293c7d437d00dec90d7f4",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2018-08-01-react-v-16-4-2.md",
      "relativePath": "blog/2018-08-01-react-v-16-4-2.md",
      "extension": "md",
      "size": 5221,
      "prettySize": "5.22 kB",
      "modifiedTime": "2019-05-08T09:41:08.571Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.571Z",
      "birthTime": "2019-05-08T09:41:08.571Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2018-08-01-react-v-16-4-2.md",
      "ext": ".md",
      "name": "2018-08-01-react-v-16-4-2",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225988,
      "blocks": 16,
      "atimeMs": 1557308635098.3057,
      "mtimeMs": 1557308468570.9255,
      "ctimeMs": 1557308468570.9255,
      "birthtimeMs": 1557308468570.88,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.571Z",
      "ctime": "2019-05-08T09:41:08.571Z",
      "birthtime": "2019-05-08T09:41:08.571Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2018-09-10-introducing-the-react-profiler.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2018-09-10-introducing-the-react-profiler.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2018-09-10-introducing-the-react-profiler.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "78ea0f12ea44b6f1cdf070d48b4838e5",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2018-09-10-introducing-the-react-profiler.md",
      "relativePath": "blog/2018-09-10-introducing-the-react-profiler.md",
      "extension": "md",
      "size": 10697,
      "prettySize": "10.7 kB",
      "modifiedTime": "2019-05-08T09:41:08.571Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.571Z",
      "birthTime": "2019-05-08T09:41:08.571Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2018-09-10-introducing-the-react-profiler.md",
      "ext": ".md",
      "name": "2018-09-10-introducing-the-react-profiler",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225989,
      "blocks": 24,
      "atimeMs": 1557308635098.3086,
      "mtimeMs": 1557308468571.1772,
      "ctimeMs": 1557308468571.1772,
      "birthtimeMs": 1557308468571.0833,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.571Z",
      "ctime": "2019-05-08T09:41:08.571Z",
      "birthtime": "2019-05-08T09:41:08.571Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2018-10-01-create-react-app-v2.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2018-10-01-create-react-app-v2.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2018-10-01-create-react-app-v2.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "4b005232a8aa97292646328a7a03862a",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2018-10-01-create-react-app-v2.md",
      "relativePath": "blog/2018-10-01-create-react-app-v2.md",
      "extension": "md",
      "size": 9425,
      "prettySize": "9.43 kB",
      "modifiedTime": "2019-05-08T09:41:08.571Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.571Z",
      "birthTime": "2019-05-08T09:41:08.571Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2018-10-01-create-react-app-v2.md",
      "ext": ".md",
      "name": "2018-10-01-create-react-app-v2",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225990,
      "blocks": 24,
      "atimeMs": 1557308635098.3118,
      "mtimeMs": 1557308468571.392,
      "ctimeMs": 1557308468571.392,
      "birthtimeMs": 1557308468571.3352,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.571Z",
      "ctime": "2019-05-08T09:41:08.571Z",
      "birthtime": "2019-05-08T09:41:08.571Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2018-10-23-react-v-16-6.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2018-10-23-react-v-16-6.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2018-10-23-react-v-16-6.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "8f1ff54dde08ebaa50aa62f4fc393bb8",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2018-10-23-react-v-16-6.md",
      "relativePath": "blog/2018-10-23-react-v-16-6.md",
      "extension": "md",
      "size": 9119,
      "prettySize": "9.12 kB",
      "modifiedTime": "2019-05-08T09:41:08.572Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.572Z",
      "birthTime": "2019-05-08T09:41:08.572Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2018-10-23-react-v-16-6.md",
      "ext": ".md",
      "name": "2018-10-23-react-v-16-6",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225991,
      "blocks": 24,
      "atimeMs": 1557308635098.3147,
      "mtimeMs": 1557308468571.612,
      "ctimeMs": 1557308468571.612,
      "birthtimeMs": 1557308468571.567,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.572Z",
      "ctime": "2019-05-08T09:41:08.572Z",
      "birthtime": "2019-05-08T09:41:08.572Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2018-11-13-react-conf-recap.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2018-11-13-react-conf-recap.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2018-11-13-react-conf-recap.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "e6afea08a75037bdb9a39fce1c085848",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2018-11-13-react-conf-recap.md",
      "relativePath": "blog/2018-11-13-react-conf-recap.md",
      "extension": "md",
      "size": 2471,
      "prettySize": "2.47 kB",
      "modifiedTime": "2019-05-08T09:41:08.572Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.572Z",
      "birthTime": "2019-05-08T09:41:08.572Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2018-11-13-react-conf-recap.md",
      "ext": ".md",
      "name": "2018-11-13-react-conf-recap",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225992,
      "blocks": 8,
      "atimeMs": 1557308635098.3176,
      "mtimeMs": 1557308468571.8193,
      "ctimeMs": 1557308468571.8193,
      "birthtimeMs": 1557308468571.7595,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.572Z",
      "ctime": "2019-05-08T09:41:08.572Z",
      "birthtime": "2019-05-08T09:41:08.572Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2018-11-27-react-16-roadmap.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2018-11-27-react-16-roadmap.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2018-11-27-react-16-roadmap.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "7dc25c83addf35a643cb16e40a2d629c",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2018-11-27-react-16-roadmap.md",
      "relativePath": "blog/2018-11-27-react-16-roadmap.md",
      "extension": "md",
      "size": 18667,
      "prettySize": "18.7 kB",
      "modifiedTime": "2019-05-08T09:41:08.572Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.572Z",
      "birthTime": "2019-05-08T09:41:08.572Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2018-11-27-react-16-roadmap.md",
      "ext": ".md",
      "name": "2018-11-27-react-16-roadmap",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225993,
      "blocks": 40,
      "atimeMs": 1557308635098.3203,
      "mtimeMs": 1557308468572.122,
      "ctimeMs": 1557308468572.122,
      "birthtimeMs": 1557308468572.008,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.572Z",
      "ctime": "2019-05-08T09:41:08.572Z",
      "birthtime": "2019-05-08T09:41:08.572Z"
    },
    "/Users/yubolun/Desktop/react/content/blog/2018-12-19-react-v-16-7.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2018-12-19-react-v-16-7.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/blog/2018-12-19-react-v-16-7.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "eeb929cf31c5b07586d023ff9b18c1cb",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/blog/2018-12-19-react-v-16-7.md",
      "relativePath": "blog/2018-12-19-react-v-16-7.md",
      "extension": "md",
      "size": 4758,
      "prettySize": "4.76 kB",
      "modifiedTime": "2019-05-08T09:41:08.572Z",
      "accessTime": "2019-05-08T09:43:55.098Z",
      "changeTime": "2019-05-08T09:41:08.572Z",
      "birthTime": "2019-05-08T09:41:08.572Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/blog",
      "base": "2018-12-19-react-v-16-7.md",
      "ext": ".md",
      "name": "2018-12-19-react-v-16-7",
      "relativeDirectory": "blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319225994,
      "blocks": 16,
      "atimeMs": 1557308635098.323,
      "mtimeMs": 1557308468572.4392,
      "ctimeMs": 1557308468572.4392,
      "birthtimeMs": 1557308468572.389,
      "atime": "2019-05-08T09:43:55.098Z",
      "mtime": "2019-05-08T09:41:08.572Z",
      "ctime": "2019-05-08T09:41:08.572Z",
      "birthtime": "2019-05-08T09:41:08.572Z"
    },
    "/Users/yubolun/Desktop/react/content/home/examples/a-component-using-external-plugins.js absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/home/examples/a-component-using-external-plugins.js absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "df1d152d93e75a15910296479c5e9a83",
        "mediaType": "application/javascript",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/home/examples/a-component-using-external-plugins.js",
      "relativePath": "home/examples/a-component-using-external-plugins.js",
      "extension": "js",
      "size": 791,
      "prettySize": "791 B",
      "modifiedTime": "2019-05-08T09:41:08.602Z",
      "accessTime": "2019-05-08T09:44:07.497Z",
      "changeTime": "2019-05-08T09:41:08.602Z",
      "birthTime": "2019-05-08T09:41:08.602Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/home/examples",
      "base": "a-component-using-external-plugins.js",
      "ext": ".js",
      "name": "a-component-using-external-plugins",
      "relativeDirectory": "home/examples",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226114,
      "blocks": 8,
      "atimeMs": 1557308647497.2917,
      "mtimeMs": 1557308468602.323,
      "ctimeMs": 1557308468602.323,
      "birthtimeMs": 1557308468602.2695,
      "atime": "2019-05-08T09:44:07.497Z",
      "mtime": "2019-05-08T09:41:08.602Z",
      "ctime": "2019-05-08T09:41:08.602Z",
      "birthtime": "2019-05-08T09:41:08.602Z"
    },
    "/Users/yubolun/Desktop/react/content/home/examples/a-component-using-external-plugins.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/home/examples/a-component-using-external-plugins.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/home/examples/a-component-using-external-plugins.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "d6dd93c5cce7148f6c5d4d5f8d15e925",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/home/examples/a-component-using-external-plugins.md",
      "relativePath": "home/examples/a-component-using-external-plugins.md",
      "extension": "md",
      "size": 309,
      "prettySize": "309 B",
      "modifiedTime": "2019-05-08T09:41:08.602Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.602Z",
      "birthTime": "2019-05-08T09:41:08.602Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/home/examples",
      "base": "a-component-using-external-plugins.md",
      "ext": ".md",
      "name": "a-component-using-external-plugins",
      "relativeDirectory": "home/examples",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226115,
      "blocks": 8,
      "atimeMs": 1557308635098.7202,
      "mtimeMs": 1557308468602.4875,
      "ctimeMs": 1557308468602.4875,
      "birthtimeMs": 1557308468602.4421,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.602Z",
      "ctime": "2019-05-08T09:41:08.602Z",
      "birthtime": "2019-05-08T09:41:08.602Z"
    },
    "/Users/yubolun/Desktop/react/content/home/examples/a-simple-component.js absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/home/examples/a-simple-component.js absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "2ce26f1ce4d1160170ad34cf169ac8b4",
        "mediaType": "application/javascript",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/home/examples/a-simple-component.js",
      "relativePath": "home/examples/a-simple-component.js",
      "extension": "js",
      "size": 207,
      "prettySize": "207 B",
      "modifiedTime": "2019-05-08T09:41:08.603Z",
      "accessTime": "2019-05-08T09:44:07.497Z",
      "changeTime": "2019-05-08T09:41:08.603Z",
      "birthTime": "2019-05-08T09:41:08.603Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/home/examples",
      "base": "a-simple-component.js",
      "ext": ".js",
      "name": "a-simple-component",
      "relativeDirectory": "home/examples",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226116,
      "blocks": 8,
      "atimeMs": 1557308647497.3147,
      "mtimeMs": 1557308468602.6855,
      "ctimeMs": 1557308468602.6855,
      "birthtimeMs": 1557308468602.6382,
      "atime": "2019-05-08T09:44:07.497Z",
      "mtime": "2019-05-08T09:41:08.603Z",
      "ctime": "2019-05-08T09:41:08.603Z",
      "birthtime": "2019-05-08T09:41:08.603Z"
    },
    "/Users/yubolun/Desktop/react/content/home/examples/a-simple-component.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/home/examples/a-simple-component.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/home/examples/a-simple-component.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "91b54bdc5f77bafb36e61290df61ffd5",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/home/examples/a-simple-component.md",
      "relativePath": "home/examples/a-simple-component.md",
      "extension": "md",
      "size": 645,
      "prettySize": "645 B",
      "modifiedTime": "2019-05-08T09:41:08.609Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.609Z",
      "birthTime": "2019-05-08T09:41:08.603Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/home/examples",
      "base": "a-simple-component.md",
      "ext": ".md",
      "name": "a-simple-component",
      "relativeDirectory": "home/examples",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226117,
      "blocks": 8,
      "atimeMs": 1557308635098.7263,
      "mtimeMs": 1557308468608.6226,
      "ctimeMs": 1557308468608.6226,
      "birthtimeMs": 1557308468602.913,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.609Z",
      "ctime": "2019-05-08T09:41:08.609Z",
      "birthtime": "2019-05-08T09:41:08.603Z"
    },
    "/Users/yubolun/Desktop/react/content/home/examples/a-stateful-component.js absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/home/examples/a-stateful-component.js absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "dae7ac63cafde2a2f674367ce11dc0b7",
        "mediaType": "application/javascript",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/home/examples/a-stateful-component.js",
      "relativePath": "home/examples/a-stateful-component.js",
      "extension": "js",
      "size": 507,
      "prettySize": "507 B",
      "modifiedTime": "2019-05-08T09:41:08.609Z",
      "accessTime": "2019-05-08T09:44:07.497Z",
      "changeTime": "2019-05-08T09:41:08.609Z",
      "birthTime": "2019-05-08T09:41:08.609Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/home/examples",
      "base": "a-stateful-component.js",
      "ext": ".js",
      "name": "a-stateful-component",
      "relativeDirectory": "home/examples",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226118,
      "blocks": 8,
      "atimeMs": 1557308647497.3403,
      "mtimeMs": 1557308468608.9111,
      "ctimeMs": 1557308468608.9111,
      "birthtimeMs": 1557308468608.8528,
      "atime": "2019-05-08T09:44:07.497Z",
      "mtime": "2019-05-08T09:41:08.609Z",
      "ctime": "2019-05-08T09:41:08.609Z",
      "birthtime": "2019-05-08T09:41:08.609Z"
    },
    "/Users/yubolun/Desktop/react/content/home/examples/a-stateful-component.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/home/examples/a-stateful-component.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/home/examples/a-stateful-component.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "044f6302ebb8788fce956c623aaa6b13",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/home/examples/a-stateful-component.md",
      "relativePath": "home/examples/a-stateful-component.md",
      "extension": "md",
      "size": 307,
      "prettySize": "307 B",
      "modifiedTime": "2019-05-08T09:41:08.609Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.609Z",
      "birthTime": "2019-05-08T09:41:08.609Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/home/examples",
      "base": "a-stateful-component.md",
      "ext": ".md",
      "name": "a-stateful-component",
      "relativeDirectory": "home/examples",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226119,
      "blocks": 8,
      "atimeMs": 1557308635098.7327,
      "mtimeMs": 1557308468609.0947,
      "ctimeMs": 1557308468609.0947,
      "birthtimeMs": 1557308468609.0337,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.609Z",
      "ctime": "2019-05-08T09:41:08.609Z",
      "birthtime": "2019-05-08T09:41:08.609Z"
    },
    "/Users/yubolun/Desktop/react/content/home/examples/an-application.js absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/home/examples/an-application.js absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "72eef8afc4cd9faaac426f9d9fd74822",
        "mediaType": "application/javascript",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/home/examples/an-application.js",
      "relativePath": "home/examples/an-application.js",
      "extension": "js",
      "size": 1220,
      "prettySize": "1.22 kB",
      "modifiedTime": "2019-05-08T09:41:08.609Z",
      "accessTime": "2019-05-08T09:44:07.497Z",
      "changeTime": "2019-05-08T09:41:08.609Z",
      "birthTime": "2019-05-08T09:41:08.609Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/home/examples",
      "base": "an-application.js",
      "ext": ".js",
      "name": "an-application",
      "relativeDirectory": "home/examples",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226120,
      "blocks": 8,
      "atimeMs": 1557308647497.3635,
      "mtimeMs": 1557308468609.2542,
      "ctimeMs": 1557308468609.2542,
      "birthtimeMs": 1557308468609.2053,
      "atime": "2019-05-08T09:44:07.497Z",
      "mtime": "2019-05-08T09:41:08.609Z",
      "ctime": "2019-05-08T09:41:08.609Z",
      "birthtime": "2019-05-08T09:41:08.609Z"
    },
    "/Users/yubolun/Desktop/react/content/home/examples/an-application.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/home/examples/an-application.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/home/examples/an-application.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "114f95db9df54bb69fc748edcfa79443",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/home/examples/an-application.md",
      "relativePath": "home/examples/an-application.md",
      "extension": "md",
      "size": 339,
      "prettySize": "339 B",
      "modifiedTime": "2019-05-08T09:41:08.609Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.609Z",
      "birthTime": "2019-05-08T09:41:08.609Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/home/examples",
      "base": "an-application.md",
      "ext": ".md",
      "name": "an-application",
      "relativeDirectory": "home/examples",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226121,
      "blocks": 8,
      "atimeMs": 1557308635098.7385,
      "mtimeMs": 1557308468609.4111,
      "ctimeMs": 1557308468609.4111,
      "birthtimeMs": 1557308468609.3652,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.609Z",
      "ctime": "2019-05-08T09:41:08.609Z",
      "birthtime": "2019-05-08T09:41:08.609Z"
    },
    "/Users/yubolun/Desktop/react/content/home/marketing/component-based.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/home/marketing/component-based.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/home/marketing/component-based.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "292143698acfec27101adf6da310276f",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/home/marketing/component-based.md",
      "relativePath": "home/marketing/component-based.md",
      "extension": "md",
      "size": 254,
      "prettySize": "254 B",
      "modifiedTime": "2019-05-08T09:41:08.610Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.610Z",
      "birthTime": "2019-05-08T09:41:08.610Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/home/marketing",
      "base": "component-based.md",
      "ext": ".md",
      "name": "component-based",
      "relativeDirectory": "home/marketing",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226123,
      "blocks": 8,
      "atimeMs": 1557308635098.7441,
      "mtimeMs": 1557308468609.6394,
      "ctimeMs": 1557308468609.6394,
      "birthtimeMs": 1557308468609.5918,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.610Z",
      "ctime": "2019-05-08T09:41:08.610Z",
      "birthtime": "2019-05-08T09:41:08.610Z"
    },
    "/Users/yubolun/Desktop/react/content/home/marketing/declarative.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/home/marketing/declarative.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/home/marketing/declarative.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "6698e655c7a6b43a982f1620426941d4",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/home/marketing/declarative.md",
      "relativePath": "home/marketing/declarative.md",
      "extension": "md",
      "size": 289,
      "prettySize": "289 B",
      "modifiedTime": "2019-05-08T09:41:08.610Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.610Z",
      "birthTime": "2019-05-08T09:41:08.610Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/home/marketing",
      "base": "declarative.md",
      "ext": ".md",
      "name": "declarative",
      "relativeDirectory": "home/marketing",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226124,
      "blocks": 8,
      "atimeMs": 1557308635098.747,
      "mtimeMs": 1557308468609.795,
      "ctimeMs": 1557308468609.795,
      "birthtimeMs": 1557308468609.7485,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.610Z",
      "ctime": "2019-05-08T09:41:08.610Z",
      "birthtime": "2019-05-08T09:41:08.610Z"
    },
    "/Users/yubolun/Desktop/react/content/home/marketing/learn-once-write-anywhere.md absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/home/marketing/learn-once-write-anywhere.md absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/home/marketing/learn-once-write-anywhere.md absPath of file >>> MarkdownRemark"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "f90c49cf4fe8641380ae188e4054dae2",
        "mediaType": "text/markdown",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/home/marketing/learn-once-write-anywhere.md",
      "relativePath": "home/marketing/learn-once-write-anywhere.md",
      "extension": "md",
      "size": 259,
      "prettySize": "259 B",
      "modifiedTime": "2019-05-08T09:41:08.610Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.610Z",
      "birthTime": "2019-05-08T09:41:08.610Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/home/marketing",
      "base": "learn-once-write-anywhere.md",
      "ext": ".md",
      "name": "learn-once-write-anywhere",
      "relativeDirectory": "home/marketing",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226125,
      "blocks": 8,
      "atimeMs": 1557308635098.7502,
      "mtimeMs": 1557308468609.9631,
      "ctimeMs": 1557308468609.9631,
      "birthtimeMs": 1557308468609.906,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.610Z",
      "ctime": "2019-05-08T09:41:08.610Z",
      "birthtime": "2019-05-08T09:41:08.610Z"
    },
    "/Users/yubolun/Desktop/react/content/images/docs/codewinds-004.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/codewinds-004.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/docs/codewinds-004.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "f54dc1f82300ff7cbdaa921674d3ad79",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/docs/codewinds-004.png",
      "relativePath": "images/docs/codewinds-004.png",
      "extension": "png",
      "size": 2320,
      "prettySize": "2.32 kB",
      "modifiedTime": "2019-05-08T09:41:08.733Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.733Z",
      "birthTime": "2019-05-08T09:41:08.733Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/docs",
      "base": "codewinds-004.png",
      "ext": ".png",
      "name": "codewinds-004",
      "relativeDirectory": "images/docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226220,
      "blocks": 8,
      "atimeMs": 1557308635099.1353,
      "mtimeMs": 1557308468733.2122,
      "ctimeMs": 1557308468733.2122,
      "birthtimeMs": 1557308468733.1628,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.733Z",
      "ctime": "2019-05-08T09:41:08.733Z",
      "birthtime": "2019-05-08T09:41:08.733Z"
    },
    "/Users/yubolun/Desktop/react/content/images/docs/cdn-cors-header.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/cdn-cors-header.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/docs/cdn-cors-header.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "89baed0a6540f29e954065ce04661048",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/docs/cdn-cors-header.png",
      "relativePath": "images/docs/cdn-cors-header.png",
      "extension": "png",
      "size": 43492,
      "prettySize": "43.5 kB",
      "modifiedTime": "2019-05-08T09:41:08.733Z",
      "accessTime": "2019-05-08T09:41:12.756Z",
      "changeTime": "2019-05-08T09:41:08.733Z",
      "birthTime": "2019-05-08T09:41:08.733Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/docs",
      "base": "cdn-cors-header.png",
      "ext": ".png",
      "name": "cdn-cors-header",
      "relativeDirectory": "images/docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226219,
      "blocks": 88,
      "atimeMs": 1557308472755.9753,
      "mtimeMs": 1557308468733.0366,
      "ctimeMs": 1557308468733.0366,
      "birthtimeMs": 1557308468732.978,
      "atime": "2019-05-08T09:41:12.756Z",
      "mtime": "2019-05-08T09:41:08.733Z",
      "ctime": "2019-05-08T09:41:08.733Z",
      "birthtime": "2019-05-08T09:41:08.733Z"
    },
    "/Users/yubolun/Desktop/react/content/images/docs/devtools-prod.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/devtools-prod.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/docs/devtools-prod.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "d0f767f80866431ccdec18f200ca58f1",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/docs/devtools-prod.png",
      "relativePath": "images/docs/devtools-prod.png",
      "extension": "png",
      "size": 27765,
      "prettySize": "27.8 kB",
      "modifiedTime": "2019-05-08T09:41:08.734Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.734Z",
      "birthTime": "2019-05-08T09:41:08.734Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/docs",
      "base": "devtools-prod.png",
      "ext": ".png",
      "name": "devtools-prod",
      "relativeDirectory": "images/docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226222,
      "blocks": 56,
      "atimeMs": 1557308635099.156,
      "mtimeMs": 1557308468733.6592,
      "ctimeMs": 1557308468733.6592,
      "birthtimeMs": 1557308468733.6062,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.734Z",
      "ctime": "2019-05-08T09:41:08.734Z",
      "birthtime": "2019-05-08T09:41:08.734Z"
    },
    "/Users/yubolun/Desktop/react/content/images/docs/devtools-dev.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/devtools-dev.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/docs/devtools-dev.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "e434ce2f7e64f63e597edf03f4465694",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/docs/devtools-dev.png",
      "relativePath": "images/docs/devtools-dev.png",
      "extension": "png",
      "size": 52790,
      "prettySize": "52.8 kB",
      "modifiedTime": "2019-05-08T09:41:08.733Z",
      "accessTime": "2019-05-08T09:41:12.756Z",
      "changeTime": "2019-05-08T09:41:08.733Z",
      "birthTime": "2019-05-08T09:41:08.733Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/docs",
      "base": "devtools-dev.png",
      "ext": ".png",
      "name": "devtools-dev",
      "relativeDirectory": "images/docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226221,
      "blocks": 104,
      "atimeMs": 1557308472756.2307,
      "mtimeMs": 1557308468733.4478,
      "ctimeMs": 1557308468733.4478,
      "birthtimeMs": 1557308468733.3848,
      "atime": "2019-05-08T09:41:12.756Z",
      "mtime": "2019-05-08T09:41:08.733Z",
      "ctime": "2019-05-08T09:41:08.733Z",
      "birthtime": "2019-05-08T09:41:08.733Z"
    },
    "/Users/yubolun/Desktop/react/content/images/docs/error-boundaries-stack-trace.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/error-boundaries-stack-trace.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/docs/error-boundaries-stack-trace.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "f1276837b03821b43358d44c14072945",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/docs/error-boundaries-stack-trace.png",
      "relativePath": "images/docs/error-boundaries-stack-trace.png",
      "extension": "png",
      "size": 35719,
      "prettySize": "35.7 kB",
      "modifiedTime": "2019-05-08T09:41:08.734Z",
      "accessTime": "2019-05-08T09:41:12.757Z",
      "changeTime": "2019-05-08T09:41:08.734Z",
      "birthTime": "2019-05-08T09:41:08.734Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/docs",
      "base": "error-boundaries-stack-trace.png",
      "ext": ".png",
      "name": "error-boundaries-stack-trace",
      "relativeDirectory": "images/docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226224,
      "blocks": 72,
      "atimeMs": 1557308472756.836,
      "mtimeMs": 1557308468734.3616,
      "ctimeMs": 1557308468734.3616,
      "birthtimeMs": 1557308468734.3005,
      "atime": "2019-05-08T09:41:12.757Z",
      "mtime": "2019-05-08T09:41:08.734Z",
      "ctime": "2019-05-08T09:41:08.734Z",
      "birthtime": "2019-05-08T09:41:08.734Z"
    },
    "/Users/yubolun/Desktop/react/content/images/docs/implementation-notes-tree.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/implementation-notes-tree.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/docs/implementation-notes-tree.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "d96fec10d250eace9756f09543bf5d58",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/docs/implementation-notes-tree.png",
      "relativePath": "images/docs/implementation-notes-tree.png",
      "extension": "png",
      "size": 52232,
      "prettySize": "52.2 kB",
      "modifiedTime": "2019-05-08T09:41:08.736Z",
      "accessTime": "2019-05-08T09:41:12.758Z",
      "changeTime": "2019-05-08T09:41:08.736Z",
      "birthTime": "2019-05-08T09:41:08.735Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/docs",
      "base": "implementation-notes-tree.png",
      "ext": ".png",
      "name": "implementation-notes-tree",
      "relativeDirectory": "images/docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226226,
      "blocks": 104,
      "atimeMs": 1557308472757.583,
      "mtimeMs": 1557308468735.515,
      "ctimeMs": 1557308468735.515,
      "birthtimeMs": 1557308468735.452,
      "atime": "2019-05-08T09:41:12.758Z",
      "mtime": "2019-05-08T09:41:08.736Z",
      "ctime": "2019-05-08T09:41:08.736Z",
      "birthtime": "2019-05-08T09:41:08.735Z"
    },
    "/Users/yubolun/Desktop/react/content/images/docs/javascript-jabber.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/javascript-jabber.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/docs/javascript-jabber.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "f4fc507df82b6d5bed9e3e598f52c01e",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/docs/javascript-jabber.png",
      "relativePath": "images/docs/javascript-jabber.png",
      "extension": "png",
      "size": 1627,
      "prettySize": "1.63 kB",
      "modifiedTime": "2019-05-08T09:41:08.736Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.736Z",
      "birthTime": "2019-05-08T09:41:08.736Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/docs",
      "base": "javascript-jabber.png",
      "ext": ".png",
      "name": "javascript-jabber",
      "relativeDirectory": "images/docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226227,
      "blocks": 8,
      "atimeMs": 1557308635099.172,
      "mtimeMs": 1557308468735.7126,
      "ctimeMs": 1557308468735.7126,
      "birthtimeMs": 1557308468735.6501,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.736Z",
      "ctime": "2019-05-08T09:41:08.736Z",
      "birthtime": "2019-05-08T09:41:08.736Z"
    },
    "/Users/yubolun/Desktop/react/content/images/docs/outerclick-with-keyboard.gif absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/outerclick-with-keyboard.gif absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "eca0ca825c8c5e2aa609cee72ef47e27",
        "mediaType": "image/gif",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/docs/outerclick-with-keyboard.gif",
      "relativePath": "images/docs/outerclick-with-keyboard.gif",
      "extension": "gif",
      "size": 26694,
      "prettySize": "26.7 kB",
      "modifiedTime": "2019-05-08T09:41:08.736Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.736Z",
      "birthTime": "2019-05-08T09:41:08.736Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/docs",
      "base": "outerclick-with-keyboard.gif",
      "ext": ".gif",
      "name": "outerclick-with-keyboard",
      "relativeDirectory": "images/docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226229,
      "blocks": 56,
      "atimeMs": 1557308635099.1785,
      "mtimeMs": 1557308468736.397,
      "ctimeMs": 1557308468736.397,
      "birthtimeMs": 1557308468736.322,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.736Z",
      "ctime": "2019-05-08T09:41:08.736Z",
      "birthtime": "2019-05-08T09:41:08.736Z"
    },
    "/Users/yubolun/Desktop/react/content/images/docs/keyboard-focus.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/keyboard-focus.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/docs/keyboard-focus.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "dec0e6bcc1f882baf76ebc860d4f04e5",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/docs/keyboard-focus.png",
      "relativePath": "images/docs/keyboard-focus.png",
      "extension": "png",
      "size": 1703,
      "prettySize": "1.7 kB",
      "modifiedTime": "2019-05-08T09:41:08.736Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.736Z",
      "birthTime": "2019-05-08T09:41:08.736Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/docs",
      "base": "keyboard-focus.png",
      "ext": ".png",
      "name": "keyboard-focus",
      "relativeDirectory": "images/docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226228,
      "blocks": 8,
      "atimeMs": 1557308635099.175,
      "mtimeMs": 1557308468735.871,
      "ctimeMs": 1557308468735.871,
      "birthtimeMs": 1557308468735.8196,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.736Z",
      "ctime": "2019-05-08T09:41:08.736Z",
      "birthtime": "2019-05-08T09:41:08.736Z"
    },
    "/Users/yubolun/Desktop/react/content/images/docs/perf-dom.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/perf-dom.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/docs/perf-dom.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "57140a9924782c02dc7aac20042cf00d",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/docs/perf-dom.png",
      "relativePath": "images/docs/perf-dom.png",
      "extension": "png",
      "size": 7471,
      "prettySize": "7.47 kB",
      "modifiedTime": "2019-05-08T09:41:08.737Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.737Z",
      "birthTime": "2019-05-08T09:41:08.737Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/docs",
      "base": "perf-dom.png",
      "ext": ".png",
      "name": "perf-dom",
      "relativeDirectory": "images/docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226231,
      "blocks": 16,
      "atimeMs": 1557308635099.1846,
      "mtimeMs": 1557308468737.2378,
      "ctimeMs": 1557308468737.2378,
      "birthtimeMs": 1557308468737.177,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.737Z",
      "ctime": "2019-05-08T09:41:08.737Z",
      "birthtime": "2019-05-08T09:41:08.737Z"
    },
    "/Users/yubolun/Desktop/react/content/images/docs/error-boundaries-stack-trace-line-numbers.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/error-boundaries-stack-trace-line-numbers.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/docs/error-boundaries-stack-trace-line-numbers.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "45611d4fdbd152829b28ae2348d6dcba",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/docs/error-boundaries-stack-trace-line-numbers.png",
      "relativePath": "images/docs/error-boundaries-stack-trace-line-numbers.png",
      "extension": "png",
      "size": 36708,
      "prettySize": "36.7 kB",
      "modifiedTime": "2019-05-08T09:41:08.734Z",
      "accessTime": "2019-05-08T09:41:12.757Z",
      "changeTime": "2019-05-08T09:41:08.734Z",
      "birthTime": "2019-05-08T09:41:08.734Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/docs",
      "base": "error-boundaries-stack-trace-line-numbers.png",
      "ext": ".png",
      "name": "error-boundaries-stack-trace-line-numbers",
      "relativeDirectory": "images/docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226223,
      "blocks": 72,
      "atimeMs": 1557308472756.6436,
      "mtimeMs": 1557308468734.0125,
      "ctimeMs": 1557308468734.0125,
      "birthtimeMs": 1557308468733.9465,
      "atime": "2019-05-08T09:41:12.757Z",
      "mtime": "2019-05-08T09:41:08.734Z",
      "ctime": "2019-05-08T09:41:08.734Z",
      "birthtime": "2019-05-08T09:41:08.734Z"
    },
    "/Users/yubolun/Desktop/react/content/images/docs/perf-inclusive.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/perf-inclusive.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/docs/perf-inclusive.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "de71a97b6c44f7bd3a589a3f1d620525",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/docs/perf-inclusive.png",
      "relativePath": "images/docs/perf-inclusive.png",
      "extension": "png",
      "size": 12464,
      "prettySize": "12.5 kB",
      "modifiedTime": "2019-05-08T09:41:08.738Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.738Z",
      "birthTime": "2019-05-08T09:41:08.738Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/docs",
      "base": "perf-inclusive.png",
      "ext": ".png",
      "name": "perf-inclusive",
      "relativeDirectory": "images/docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226233,
      "blocks": 32,
      "atimeMs": 1557308635099.1907,
      "mtimeMs": 1557308468737.6775,
      "ctimeMs": 1557308468737.6775,
      "birthtimeMs": 1557308468737.621,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.738Z",
      "ctime": "2019-05-08T09:41:08.738Z",
      "birthtime": "2019-05-08T09:41:08.738Z"
    },
    "/Users/yubolun/Desktop/react/content/images/docs/perf-wasted.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/perf-wasted.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/docs/perf-wasted.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "a241eb09d0fd90eb56f48666ce9be586",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/docs/perf-wasted.png",
      "relativePath": "images/docs/perf-wasted.png",
      "extension": "png",
      "size": 16397,
      "prettySize": "16.4 kB",
      "modifiedTime": "2019-05-08T09:41:08.738Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.738Z",
      "birthTime": "2019-05-08T09:41:08.738Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/docs",
      "base": "perf-wasted.png",
      "ext": ".png",
      "name": "perf-wasted",
      "relativeDirectory": "images/docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226234,
      "blocks": 40,
      "atimeMs": 1557308635099.1946,
      "mtimeMs": 1557308468737.8542,
      "ctimeMs": 1557308468737.8542,
      "birthtimeMs": 1557308468737.8044,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.738Z",
      "ctime": "2019-05-08T09:41:08.738Z",
      "birthtime": "2019-05-08T09:41:08.738Z"
    },
    "/Users/yubolun/Desktop/react/content/images/docs/perf-exclusive.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/perf-exclusive.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/docs/perf-exclusive.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "741b84218e9be133eca2e0ab98c36e85",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/docs/perf-exclusive.png",
      "relativePath": "images/docs/perf-exclusive.png",
      "extension": "png",
      "size": 9508,
      "prettySize": "9.51 kB",
      "modifiedTime": "2019-05-08T09:41:08.737Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.737Z",
      "birthTime": "2019-05-08T09:41:08.737Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/docs",
      "base": "perf-exclusive.png",
      "ext": ".png",
      "name": "perf-exclusive",
      "relativeDirectory": "images/docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226232,
      "blocks": 24,
      "atimeMs": 1557308635099.1875,
      "mtimeMs": 1557308468737.4944,
      "ctimeMs": 1557308468737.4944,
      "birthtimeMs": 1557308468737.356,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.737Z",
      "ctime": "2019-05-08T09:41:08.737Z",
      "birthtime": "2019-05-08T09:41:08.737Z"
    },
    "/Users/yubolun/Desktop/react/content/images/docs/should-component-update.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/should-component-update.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/docs/should-component-update.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "5ee1bdf4779af06072a17b7a0654f6db",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/docs/should-component-update.png",
      "relativePath": "images/docs/should-component-update.png",
      "extension": "png",
      "size": 24472,
      "prettySize": "24.5 kB",
      "modifiedTime": "2019-05-08T09:41:08.741Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.741Z",
      "birthTime": "2019-05-08T09:41:08.741Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/docs",
      "base": "should-component-update.png",
      "ext": ".png",
      "name": "should-component-update",
      "relativeDirectory": "images/docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226236,
      "blocks": 48,
      "atimeMs": 1557308635099.2034,
      "mtimeMs": 1557308468741.2344,
      "ctimeMs": 1557308468741.2344,
      "birthtimeMs": 1557308468741.157,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.741Z",
      "ctime": "2019-05-08T09:41:08.741Z",
      "birthtime": "2019-05-08T09:41:08.741Z"
    },
    "/Users/yubolun/Desktop/react/content/images/docs/thinking-in-react-tagtree.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/thinking-in-react-tagtree.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/docs/thinking-in-react-tagtree.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "ac19d27c424380e8bec63af22bf89661",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/docs/thinking-in-react-tagtree.png",
      "relativePath": "images/docs/thinking-in-react-tagtree.png",
      "extension": "png",
      "size": 14561,
      "prettySize": "14.6 kB",
      "modifiedTime": "2019-05-08T09:41:08.742Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.742Z",
      "birthTime": "2019-05-08T09:41:08.742Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/docs",
      "base": "thinking-in-react-tagtree.png",
      "ext": ".png",
      "name": "thinking-in-react-tagtree",
      "relativeDirectory": "images/docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226237,
      "blocks": 32,
      "atimeMs": 1557308635099.2078,
      "mtimeMs": 1557308468741.6028,
      "ctimeMs": 1557308468741.6028,
      "birthtimeMs": 1557308468741.5493,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.742Z",
      "ctime": "2019-05-08T09:41:08.742Z",
      "birthtime": "2019-05-08T09:41:08.742Z"
    },
    "/Users/yubolun/Desktop/react/content/images/tutorial/devtools.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/tutorial/devtools.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/tutorial/devtools.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "878d91461c78d8f238e116477dfe0b46",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/tutorial/devtools.png",
      "relativePath": "images/tutorial/devtools.png",
      "extension": "png",
      "size": 23994,
      "prettySize": "24 kB",
      "modifiedTime": "2019-05-08T09:41:08.744Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.744Z",
      "birthTime": "2019-05-08T09:41:08.744Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/tutorial",
      "base": "devtools.png",
      "ext": ".png",
      "name": "devtools",
      "relativeDirectory": "images/tutorial",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226250,
      "blocks": 48,
      "atimeMs": 1557308635099.3574,
      "mtimeMs": 1557308468744.1963,
      "ctimeMs": 1557308468744.1963,
      "birthtimeMs": 1557308468744.1418,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.744Z",
      "ctime": "2019-05-08T09:41:08.744Z",
      "birthtime": "2019-05-08T09:41:08.744Z"
    },
    "/Users/yubolun/Desktop/react/content/images/tutorial/tictac-empty.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/tutorial/tictac-empty.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/tutorial/tictac-empty.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "1566a4f8490d6b4b1ed36cd2c11fe4b6",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/tutorial/tictac-empty.png",
      "relativePath": "images/tutorial/tictac-empty.png",
      "extension": "png",
      "size": 11152,
      "prettySize": "11.2 kB",
      "modifiedTime": "2019-05-08T09:41:08.744Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.744Z",
      "birthTime": "2019-05-08T09:41:08.744Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/tutorial",
      "base": "tictac-empty.png",
      "ext": ".png",
      "name": "tictac-empty",
      "relativeDirectory": "images/tutorial",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226251,
      "blocks": 24,
      "atimeMs": 1557308635099.36,
      "mtimeMs": 1557308468744.4336,
      "ctimeMs": 1557308468744.4336,
      "birthtimeMs": 1557308468744.368,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.744Z",
      "ctime": "2019-05-08T09:41:08.744Z",
      "birthtime": "2019-05-08T09:41:08.744Z"
    },
    "/Users/yubolun/Desktop/react/content/images/tutorial/tictac-numbers.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/tutorial/tictac-numbers.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/tutorial/tictac-numbers.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "685df774da6da48f451356f33f4be8b2",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/tutorial/tictac-numbers.png",
      "relativePath": "images/tutorial/tictac-numbers.png",
      "extension": "png",
      "size": 16791,
      "prettySize": "16.8 kB",
      "modifiedTime": "2019-05-08T09:41:08.745Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.745Z",
      "birthTime": "2019-05-08T09:41:08.745Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/tutorial",
      "base": "tictac-numbers.png",
      "ext": ".png",
      "name": "tictac-numbers",
      "relativeDirectory": "images/tutorial",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226252,
      "blocks": 40,
      "atimeMs": 1557308635099.3633,
      "mtimeMs": 1557308468744.6873,
      "ctimeMs": 1557308468744.6873,
      "birthtimeMs": 1557308468744.636,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.745Z",
      "ctime": "2019-05-08T09:41:08.745Z",
      "birthtime": "2019-05-08T09:41:08.745Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/animal-sounds.jpg absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/animal-sounds.jpg absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/animal-sounds.jpg absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "4618a7a003d000a3dd7f6e6733a36f7f",
        "mediaType": "image/jpeg",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/animal-sounds.jpg",
      "relativePath": "images/blog/animal-sounds.jpg",
      "extension": "jpg",
      "size": 49240,
      "prettySize": "49.2 kB",
      "modifiedTime": "2019-05-08T09:41:08.611Z",
      "accessTime": "2019-05-08T09:41:12.650Z",
      "changeTime": "2019-05-08T09:41:08.611Z",
      "birthTime": "2019-05-08T09:41:08.611Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "animal-sounds.jpg",
      "ext": ".jpg",
      "name": "animal-sounds",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226128,
      "blocks": 104,
      "atimeMs": 1557308472649.588,
      "mtimeMs": 1557308468610.5806,
      "ctimeMs": 1557308468610.5806,
      "birthtimeMs": 1557308468610.5134,
      "atime": "2019-05-08T09:41:12.650Z",
      "mtime": "2019-05-08T09:41:08.611Z",
      "ctime": "2019-05-08T09:41:08.611Z",
      "birthtime": "2019-05-08T09:41:08.611Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/chatapp.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/chatapp.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/chatapp.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "75b8185edbfde871ee68f5bdcfb8a9e5",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/chatapp.png",
      "relativePath": "images/blog/chatapp.png",
      "extension": "png",
      "size": 22124,
      "prettySize": "22.1 kB",
      "modifiedTime": "2019-05-08T09:41:08.611Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.611Z",
      "birthTime": "2019-05-08T09:41:08.611Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "chatapp.png",
      "ext": ".png",
      "name": "chatapp",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226129,
      "blocks": 48,
      "atimeMs": 1557308635098.7617,
      "mtimeMs": 1557308468610.918,
      "ctimeMs": 1557308468610.918,
      "birthtimeMs": 1557308468610.8545,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.611Z",
      "ctime": "2019-05-08T09:41:08.611Z",
      "birthtime": "2019-05-08T09:41:08.611Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/cra-pwa.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/cra-pwa.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/cra-pwa.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "cff5fa9b92de804e655ea669a53d4d9c",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/cra-pwa.png",
      "relativePath": "images/blog/cra-pwa.png",
      "extension": "png",
      "size": 46504,
      "prettySize": "46.5 kB",
      "modifiedTime": "2019-05-08T09:41:08.622Z",
      "accessTime": "2019-05-08T09:41:12.662Z",
      "changeTime": "2019-05-08T09:41:08.622Z",
      "birthTime": "2019-05-08T09:41:08.622Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "cra-pwa.png",
      "ext": ".png",
      "name": "cra-pwa",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226133,
      "blocks": 96,
      "atimeMs": 1557308472662.4414,
      "mtimeMs": 1557308468621.936,
      "ctimeMs": 1557308468621.936,
      "birthtimeMs": 1557308468621.8594,
      "atime": "2019-05-08T09:41:12.662Z",
      "mtime": "2019-05-08T09:41:08.622Z",
      "ctime": "2019-05-08T09:41:08.622Z",
      "birthtime": "2019-05-08T09:41:08.622Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/devtools-side-pane.gif absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/devtools-side-pane.gif absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "f3552d987634913612d6f06248fd303d",
        "mediaType": "image/gif",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/devtools-side-pane.gif",
      "relativePath": "images/blog/devtools-side-pane.gif",
      "extension": "gif",
      "size": 43651,
      "prettySize": "43.7 kB",
      "modifiedTime": "2019-05-08T09:41:08.658Z",
      "accessTime": "2019-05-08T09:41:12.692Z",
      "changeTime": "2019-05-08T09:41:08.658Z",
      "birthTime": "2019-05-08T09:41:08.658Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "devtools-side-pane.gif",
      "ext": ".gif",
      "name": "devtools-side-pane",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226144,
      "blocks": 88,
      "atimeMs": 1557308472692.0056,
      "mtimeMs": 1557308468658.4646,
      "ctimeMs": 1557308468658.4646,
      "birthtimeMs": 1557308468658.3872,
      "atime": "2019-05-08T09:41:12.692Z",
      "mtime": "2019-05-08T09:41:08.658Z",
      "ctime": "2019-05-08T09:41:08.658Z",
      "birthtime": "2019-05-08T09:41:08.658Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/dog-tutorial.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/dog-tutorial.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/dog-tutorial.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "06130eab5bfa60ef72b5a8249ed07565",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/dog-tutorial.png",
      "relativePath": "images/blog/dog-tutorial.png",
      "extension": "png",
      "size": 41424,
      "prettySize": "41.4 kB",
      "modifiedTime": "2019-05-08T09:41:08.660Z",
      "accessTime": "2019-05-08T09:41:12.693Z",
      "changeTime": "2019-05-08T09:41:08.660Z",
      "birthTime": "2019-05-08T09:41:08.659Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "dog-tutorial.png",
      "ext": ".png",
      "name": "dog-tutorial",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226146,
      "blocks": 88,
      "atimeMs": 1557308472692.6157,
      "mtimeMs": 1557308468659.5508,
      "ctimeMs": 1557308468659.5508,
      "birthtimeMs": 1557308468659.4646,
      "atime": "2019-05-08T09:41:12.693Z",
      "mtime": "2019-05-08T09:41:08.660Z",
      "ctime": "2019-05-08T09:41:08.660Z",
      "birthtime": "2019-05-08T09:41:08.659Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/first-look.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/first-look.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/first-look.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "2fa9ac454433e7979c34d9924bdb5e63",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/first-look.png",
      "relativePath": "images/blog/first-look.png",
      "extension": "png",
      "size": 28235,
      "prettySize": "28.2 kB",
      "modifiedTime": "2019-05-08T09:41:08.660Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.660Z",
      "birthTime": "2019-05-08T09:41:08.660Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "first-look.png",
      "ext": ".png",
      "name": "first-look",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226147,
      "blocks": 56,
      "atimeMs": 1557308635098.8188,
      "mtimeMs": 1557308468659.875,
      "ctimeMs": 1557308468659.875,
      "birthtimeMs": 1557308468659.8164,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.660Z",
      "ctime": "2019-05-08T09:41:08.660Z",
      "birthtime": "2019-05-08T09:41:08.660Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/flux-chart.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/flux-chart.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/flux-chart.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "2d495afb05a28c237d0dfc5c9133f4be",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/flux-chart.png",
      "relativePath": "images/blog/flux-chart.png",
      "extension": "png",
      "size": 42565,
      "prettySize": "42.6 kB",
      "modifiedTime": "2019-05-08T09:41:08.660Z",
      "accessTime": "2019-05-08T09:41:12.693Z",
      "changeTime": "2019-05-08T09:41:08.660Z",
      "birthTime": "2019-05-08T09:41:08.660Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "flux-chart.png",
      "ext": ".png",
      "name": "flux-chart",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226148,
      "blocks": 88,
      "atimeMs": 1557308472692.978,
      "mtimeMs": 1557308468660.284,
      "ctimeMs": 1557308468660.284,
      "birthtimeMs": 1557308468660.2136,
      "atime": "2019-05-08T09:41:12.693Z",
      "mtime": "2019-05-08T09:41:08.660Z",
      "ctime": "2019-05-08T09:41:08.660Z",
      "birthtime": "2019-05-08T09:41:08.660Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/guess_filter.jpg absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/guess_filter.jpg absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/guess_filter.jpg absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "f43785b4e739e9b321be15192b6a9e42",
        "mediaType": "image/jpeg",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/guess_filter.jpg",
      "relativePath": "images/blog/guess_filter.jpg",
      "extension": "jpg",
      "size": 38580,
      "prettySize": "38.6 kB",
      "modifiedTime": "2019-05-08T09:41:08.665Z",
      "accessTime": "2019-05-08T09:41:12.698Z",
      "changeTime": "2019-05-08T09:41:08.665Z",
      "birthTime": "2019-05-08T09:41:08.665Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "guess_filter.jpg",
      "ext": ".jpg",
      "name": "guess_filter",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226152,
      "blocks": 80,
      "atimeMs": 1557308472698.447,
      "mtimeMs": 1557308468665.298,
      "ctimeMs": 1557308468665.298,
      "birthtimeMs": 1557308468665.2253,
      "atime": "2019-05-08T09:41:12.698Z",
      "mtime": "2019-05-08T09:41:08.665Z",
      "ctime": "2019-05-08T09:41:08.665Z",
      "birthtime": "2019-05-08T09:41:08.665Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/jsx-compiler.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/jsx-compiler.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/jsx-compiler.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "37ce6d8aee23d1828ba57953662522fe",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/jsx-compiler.png",
      "relativePath": "images/blog/jsx-compiler.png",
      "extension": "png",
      "size": 14013,
      "prettySize": "14 kB",
      "modifiedTime": "2019-05-08T09:41:08.666Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.666Z",
      "birthTime": "2019-05-08T09:41:08.666Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "jsx-compiler.png",
      "ext": ".png",
      "name": "jsx-compiler",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226154,
      "blocks": 32,
      "atimeMs": 1557308635098.841,
      "mtimeMs": 1557308468666.0027,
      "ctimeMs": 1557308468666.0027,
      "birthtimeMs": 1557308468665.923,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.666Z",
      "ctime": "2019-05-08T09:41:08.666Z",
      "birthtime": "2019-05-08T09:41:08.666Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/kendoui.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/kendoui.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/kendoui.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "f224061339f4e67b1a4db564e45f0361",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/kendoui.png",
      "relativePath": "images/blog/kendoui.png",
      "extension": "png",
      "size": 22568,
      "prettySize": "22.6 kB",
      "modifiedTime": "2019-05-08T09:41:08.666Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.666Z",
      "birthTime": "2019-05-08T09:41:08.666Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "kendoui.png",
      "ext": ".png",
      "name": "kendoui",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226155,
      "blocks": 48,
      "atimeMs": 1557308635098.844,
      "mtimeMs": 1557308468666.2253,
      "ctimeMs": 1557308468666.2253,
      "birthtimeMs": 1557308468666.1484,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.666Z",
      "ctime": "2019-05-08T09:41:08.666Z",
      "birthtime": "2019-05-08T09:41:08.666Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/khan-academy-editor.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/khan-academy-editor.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/khan-academy-editor.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "6766b99a660aad664aadd0fb63983ebe",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/khan-academy-editor.png",
      "relativePath": "images/blog/khan-academy-editor.png",
      "extension": "png",
      "size": 11108,
      "prettySize": "11.1 kB",
      "modifiedTime": "2019-05-08T09:41:08.666Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.666Z",
      "birthTime": "2019-05-08T09:41:08.666Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "khan-academy-editor.png",
      "ext": ".png",
      "name": "khan-academy-editor",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226156,
      "blocks": 24,
      "atimeMs": 1557308635098.8474,
      "mtimeMs": 1557308468666.42,
      "ctimeMs": 1557308468666.42,
      "birthtimeMs": 1557308468666.3586,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.666Z",
      "ctime": "2019-05-08T09:41:08.666Z",
      "birthtime": "2019-05-08T09:41:08.666Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/lights-out.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/lights-out.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/lights-out.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "e52d4d2e3aabc23b2e91f37049044467",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/lights-out.png",
      "relativePath": "images/blog/lights-out.png",
      "extension": "png",
      "size": 3331,
      "prettySize": "3.33 kB",
      "modifiedTime": "2019-05-08T09:41:08.667Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.667Z",
      "birthTime": "2019-05-08T09:41:08.667Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "lights-out.png",
      "ext": ".png",
      "name": "lights-out",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226158,
      "blocks": 8,
      "atimeMs": 1557308635098.8538,
      "mtimeMs": 1557308468666.8618,
      "ctimeMs": 1557308468666.8618,
      "birthtimeMs": 1557308468666.814,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.667Z",
      "ctime": "2019-05-08T09:41:08.667Z",
      "birthtime": "2019-05-08T09:41:08.667Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/makona-editor.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/makona-editor.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/makona-editor.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "3b358d6c45562d5595b516172bd942b0",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/makona-editor.png",
      "relativePath": "images/blog/makona-editor.png",
      "extension": "png",
      "size": 24106,
      "prettySize": "24.1 kB",
      "modifiedTime": "2019-05-08T09:41:08.667Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.667Z",
      "birthTime": "2019-05-08T09:41:08.667Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "makona-editor.png",
      "ext": ".png",
      "name": "makona-editor",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226159,
      "blocks": 48,
      "atimeMs": 1557308635098.8567,
      "mtimeMs": 1557308468667.1394,
      "ctimeMs": 1557308468667.1394,
      "birthtimeMs": 1557308468667.0706,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.667Z",
      "ctime": "2019-05-08T09:41:08.667Z",
      "birthtime": "2019-05-08T09:41:08.667Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/markdown_refactor.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/markdown_refactor.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/markdown_refactor.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "783ad0cd251ae63e77cdac409f51ec1a",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/markdown_refactor.png",
      "relativePath": "images/blog/markdown_refactor.png",
      "extension": "png",
      "size": 5448,
      "prettySize": "5.45 kB",
      "modifiedTime": "2019-05-08T09:41:08.667Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.667Z",
      "birthTime": "2019-05-08T09:41:08.667Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "markdown_refactor.png",
      "ext": ".png",
      "name": "markdown_refactor",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226160,
      "blocks": 16,
      "atimeMs": 1557308635098.8596,
      "mtimeMs": 1557308468667.3557,
      "ctimeMs": 1557308468667.3557,
      "birthtimeMs": 1557308468667.2942,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.667Z",
      "ctime": "2019-05-08T09:41:08.667Z",
      "birthtime": "2019-05-08T09:41:08.667Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/parse-react.jpg absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/parse-react.jpg absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/parse-react.jpg absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "0cf345b88603272a491839c586ccf385",
        "mediaType": "image/jpeg",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/parse-react.jpg",
      "relativePath": "images/blog/parse-react.jpg",
      "extension": "jpg",
      "size": 49029,
      "prettySize": "49 kB",
      "modifiedTime": "2019-05-08T09:41:08.676Z",
      "accessTime": "2019-05-08T09:41:12.710Z",
      "changeTime": "2019-05-08T09:41:08.676Z",
      "birthTime": "2019-05-08T09:41:08.676Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "parse-react.jpg",
      "ext": ".jpg",
      "name": "parse-react",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226165,
      "blocks": 96,
      "atimeMs": 1557308472709.58,
      "mtimeMs": 1557308468676.4922,
      "ctimeMs": 1557308468676.4922,
      "birthtimeMs": 1557308468676.4275,
      "atime": "2019-05-08T09:41:12.710Z",
      "mtime": "2019-05-08T09:41:08.676Z",
      "ctime": "2019-05-08T09:41:08.676Z",
      "birthtime": "2019-05-08T09:41:08.676Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/ngreact.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/ngreact.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/ngreact.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "e60b0ac55b3643b99cc93e280a66f0b6",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/ngreact.png",
      "relativePath": "images/blog/ngreact.png",
      "extension": "png",
      "size": 55662,
      "prettySize": "55.7 kB",
      "modifiedTime": "2019-05-08T09:41:08.676Z",
      "accessTime": "2019-05-08T09:41:12.709Z",
      "changeTime": "2019-05-08T09:41:08.676Z",
      "birthTime": "2019-05-08T09:41:08.676Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "ngreact.png",
      "ext": ".png",
      "name": "ngreact",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226163,
      "blocks": 112,
      "atimeMs": 1557308472708.651,
      "mtimeMs": 1557308468675.6628,
      "ctimeMs": 1557308468675.6628,
      "birthtimeMs": 1557308468675.594,
      "atime": "2019-05-08T09:41:12.709Z",
      "mtime": "2019-05-08T09:41:08.676Z",
      "ctime": "2019-05-08T09:41:08.676Z",
      "birthtime": "2019-05-08T09:41:08.676Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/propeller-logo.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/propeller-logo.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/propeller-logo.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "0dc638d3c8982f1168970d0e17ab2fc7",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/propeller-logo.png",
      "relativePath": "images/blog/propeller-logo.png",
      "extension": "png",
      "size": 1297,
      "prettySize": "1.3 kB",
      "modifiedTime": "2019-05-08T09:41:08.677Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.677Z",
      "birthTime": "2019-05-08T09:41:08.677Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "propeller-logo.png",
      "ext": ".png",
      "name": "propeller-logo",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226167,
      "blocks": 8,
      "atimeMs": 1557308635098.8806,
      "mtimeMs": 1557308468677.2322,
      "ctimeMs": 1557308468677.2322,
      "birthtimeMs": 1557308468677.1445,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.677Z",
      "ctime": "2019-05-08T09:41:08.677Z",
      "birthtime": "2019-05-08T09:41:08.677Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/property-finder.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/property-finder.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/property-finder.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "6e28878b4ef469a53735b49665fd7b93",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/property-finder.png",
      "relativePath": "images/blog/property-finder.png",
      "extension": "png",
      "size": 62409,
      "prettySize": "62.4 kB",
      "modifiedTime": "2019-05-08T09:41:08.678Z",
      "accessTime": "2019-05-08T09:41:12.710Z",
      "changeTime": "2019-05-08T09:41:08.678Z",
      "birthTime": "2019-05-08T09:41:08.677Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "property-finder.png",
      "ext": ".png",
      "name": "property-finder",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226168,
      "blocks": 128,
      "atimeMs": 1557308472710.2947,
      "mtimeMs": 1557308468677.5166,
      "ctimeMs": 1557308468677.5166,
      "birthtimeMs": 1557308468677.397,
      "atime": "2019-05-08T09:41:12.710Z",
      "mtime": "2019-05-08T09:41:08.678Z",
      "ctime": "2019-05-08T09:41:08.678Z",
      "birthtime": "2019-05-08T09:41:08.677Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/quiztime.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/quiztime.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/quiztime.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "87c3ca8abe022b961986036616c132ba",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/quiztime.png",
      "relativePath": "images/blog/quiztime.png",
      "extension": "png",
      "size": 19150,
      "prettySize": "19.1 kB",
      "modifiedTime": "2019-05-08T09:41:08.678Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.678Z",
      "birthTime": "2019-05-08T09:41:08.678Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "quiztime.png",
      "ext": ".png",
      "name": "quiztime",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226169,
      "blocks": 40,
      "atimeMs": 1557308635098.8865,
      "mtimeMs": 1557308468677.9292,
      "ctimeMs": 1557308468677.9292,
      "birthtimeMs": 1557308468677.8586,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.678Z",
      "ctime": "2019-05-08T09:41:08.678Z",
      "birthtime": "2019-05-08T09:41:08.678Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/react-browserify-gulp.jpg absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/react-browserify-gulp.jpg absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/react-browserify-gulp.jpg absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "7873a26312d1d592042c1dcd5e756bd4",
        "mediaType": "image/jpeg",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/react-browserify-gulp.jpg",
      "relativePath": "images/blog/react-browserify-gulp.jpg",
      "extension": "jpg",
      "size": 23697,
      "prettySize": "23.7 kB",
      "modifiedTime": "2019-05-08T09:41:08.683Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.683Z",
      "birthTime": "2019-05-08T09:41:08.683Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "react-browserify-gulp.jpg",
      "ext": ".jpg",
      "name": "react-browserify-gulp",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226173,
      "blocks": 48,
      "atimeMs": 1557308635098.8987,
      "mtimeMs": 1557308468682.7217,
      "ctimeMs": 1557308468682.7217,
      "birthtimeMs": 1557308468682.5957,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.683Z",
      "ctime": "2019-05-08T09:41:08.683Z",
      "birthtime": "2019-05-08T09:41:08.683Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/react-diff-tree.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/react-diff-tree.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/react-diff-tree.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "8442f993f1c4cf9edd4e4315fc6d32a5",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/react-diff-tree.png",
      "relativePath": "images/blog/react-diff-tree.png",
      "extension": "png",
      "size": 27479,
      "prettySize": "27.5 kB",
      "modifiedTime": "2019-05-08T09:41:08.684Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.684Z",
      "birthTime": "2019-05-08T09:41:08.684Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "react-diff-tree.png",
      "ext": ".png",
      "name": "react-diff-tree",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226175,
      "blocks": 56,
      "atimeMs": 1557308635098.905,
      "mtimeMs": 1557308468683.7412,
      "ctimeMs": 1557308468683.7412,
      "birthtimeMs": 1557308468683.6826,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.684Z",
      "ctime": "2019-05-08T09:41:08.684Z",
      "birthtime": "2019-05-08T09:41:08.684Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/react-draggable.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/react-draggable.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/react-draggable.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "14c204c6a463067ab43d3a17dbe41925",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/react-draggable.png",
      "relativePath": "images/blog/react-draggable.png",
      "extension": "png",
      "size": 10457,
      "prettySize": "10.5 kB",
      "modifiedTime": "2019-05-08T09:41:08.684Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.684Z",
      "birthTime": "2019-05-08T09:41:08.684Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "react-draggable.png",
      "ext": ".png",
      "name": "react-draggable",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226176,
      "blocks": 24,
      "atimeMs": 1557308635098.9082,
      "mtimeMs": 1557308468684.0173,
      "ctimeMs": 1557308468684.0173,
      "birthtimeMs": 1557308468683.9446,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.684Z",
      "ctime": "2019-05-08T09:41:08.684Z",
      "birthtime": "2019-05-08T09:41:08.684Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/react-hackathon.jpg absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/react-hackathon.jpg absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/react-hackathon.jpg absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "16bbe4b6c8d5939f92e6a7c9afca22c2",
        "mediaType": "image/jpeg",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/react-hackathon.jpg",
      "relativePath": "images/blog/react-hackathon.jpg",
      "extension": "jpg",
      "size": 49943,
      "prettySize": "49.9 kB",
      "modifiedTime": "2019-05-08T09:41:08.685Z",
      "accessTime": "2019-05-08T09:41:12.716Z",
      "changeTime": "2019-05-08T09:41:08.685Z",
      "birthTime": "2019-05-08T09:41:08.684Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "react-hackathon.jpg",
      "ext": ".jpg",
      "name": "react-hackathon",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226177,
      "blocks": 104,
      "atimeMs": 1557308472715.5662,
      "mtimeMs": 1557308468684.5076,
      "ctimeMs": 1557308468684.5076,
      "birthtimeMs": 1557308468684.355,
      "atime": "2019-05-08T09:41:12.716Z",
      "mtime": "2019-05-08T09:41:08.685Z",
      "ctime": "2019-05-08T09:41:08.685Z",
      "birthtime": "2019-05-08T09:41:08.684Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/react-page.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/react-page.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/react-page.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "01b89cb5c9975b566dfbc3dc1c74299f",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/react-page.png",
      "relativePath": "images/blog/react-page.png",
      "extension": "png",
      "size": 20418,
      "prettySize": "20.4 kB",
      "modifiedTime": "2019-05-08T09:41:08.685Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.685Z",
      "birthTime": "2019-05-08T09:41:08.685Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "react-page.png",
      "ext": ".png",
      "name": "react-page",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226178,
      "blocks": 40,
      "atimeMs": 1557308635098.9146,
      "mtimeMs": 1557308468684.7856,
      "ctimeMs": 1557308468684.7856,
      "birthtimeMs": 1557308468684.7244,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.685Z",
      "ctime": "2019-05-08T09:41:08.685Z",
      "birthtime": "2019-05-08T09:41:08.685Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/react-php.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/react-php.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/react-php.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "b5fff9e81996175f90c9de3e1a89018f",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/react-php.png",
      "relativePath": "images/blog/react-php.png",
      "extension": "png",
      "size": 36513,
      "prettySize": "36.5 kB",
      "modifiedTime": "2019-05-08T09:41:08.686Z",
      "accessTime": "2019-05-08T09:41:12.716Z",
      "changeTime": "2019-05-08T09:41:08.686Z",
      "birthTime": "2019-05-08T09:41:08.685Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "react-php.png",
      "ext": ".png",
      "name": "react-php",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226180,
      "blocks": 72,
      "atimeMs": 1557308472716.2612,
      "mtimeMs": 1557308468685.5222,
      "ctimeMs": 1557308468685.5222,
      "birthtimeMs": 1557308468685.4475,
      "atime": "2019-05-08T09:41:12.716Z",
      "mtime": "2019-05-08T09:41:08.686Z",
      "ctime": "2019-05-08T09:41:08.686Z",
      "birthtime": "2019-05-08T09:41:08.685Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/reactive-bookmarklet.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/reactive-bookmarklet.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/reactive-bookmarklet.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "6551549bffc01c354de58e2e2c52dcef",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/reactive-bookmarklet.png",
      "relativePath": "images/blog/reactive-bookmarklet.png",
      "extension": "png",
      "size": 41809,
      "prettySize": "41.8 kB",
      "modifiedTime": "2019-05-08T09:41:08.686Z",
      "accessTime": "2019-05-08T09:41:12.717Z",
      "changeTime": "2019-05-08T09:41:08.686Z",
      "birthTime": "2019-05-08T09:41:08.686Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "reactive-bookmarklet.png",
      "ext": ".png",
      "name": "reactive-bookmarklet",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226182,
      "blocks": 88,
      "atimeMs": 1557308472716.7415,
      "mtimeMs": 1557308468686.127,
      "ctimeMs": 1557308468686.127,
      "birthtimeMs": 1557308468686.0708,
      "atime": "2019-05-08T09:41:12.717Z",
      "mtime": "2019-05-08T09:41:08.686Z",
      "ctime": "2019-05-08T09:41:08.686Z",
      "birthtime": "2019-05-08T09:41:08.686Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/reflux-flux.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/reflux-flux.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/reflux-flux.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "d3e5d0171e6314fdff557935cd5529ae",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/reflux-flux.png",
      "relativePath": "images/blog/reflux-flux.png",
      "extension": "png",
      "size": 2034,
      "prettySize": "2.03 kB",
      "modifiedTime": "2019-05-08T09:41:08.686Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.686Z",
      "birthTime": "2019-05-08T09:41:08.686Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "reflux-flux.png",
      "ext": ".png",
      "name": "reflux-flux",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226183,
      "blocks": 8,
      "atimeMs": 1557308635098.9355,
      "mtimeMs": 1557308468686.3206,
      "ctimeMs": 1557308468686.3206,
      "birthtimeMs": 1557308468686.2705,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.686Z",
      "ctime": "2019-05-08T09:41:08.686Z",
      "birthtime": "2019-05-08T09:41:08.686Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/react-svg-fbp.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/react-svg-fbp.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/react-svg-fbp.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "c6e36bd8c08ad65a23cdb74716dd8055",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/react-svg-fbp.png",
      "relativePath": "images/blog/react-svg-fbp.png",
      "extension": "png",
      "size": 58575,
      "prettySize": "58.6 kB",
      "modifiedTime": "2019-05-08T09:41:08.686Z",
      "accessTime": "2019-05-08T09:41:12.716Z",
      "changeTime": "2019-05-08T09:41:08.686Z",
      "birthTime": "2019-05-08T09:41:08.686Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "react-svg-fbp.png",
      "ext": ".png",
      "name": "react-svg-fbp",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226181,
      "blocks": 120,
      "atimeMs": 1557308472716.4478,
      "mtimeMs": 1557308468685.8896,
      "ctimeMs": 1557308468685.8896,
      "birthtimeMs": 1557308468685.811,
      "atime": "2019-05-08T09:41:12.716Z",
      "mtime": "2019-05-08T09:41:08.686Z",
      "ctime": "2019-05-08T09:41:08.686Z",
      "birthtime": "2019-05-08T09:41:08.686Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/release-script-build-overview.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/release-script-build-overview.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/release-script-build-overview.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "adca79c3a0e003b317fe62e68ce9d4a0",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/release-script-build-overview.png",
      "relativePath": "images/blog/release-script-build-overview.png",
      "extension": "png",
      "size": 38710,
      "prettySize": "38.7 kB",
      "modifiedTime": "2019-05-08T09:41:08.691Z",
      "accessTime": "2019-05-08T09:41:12.719Z",
      "changeTime": "2019-05-08T09:41:08.691Z",
      "birthTime": "2019-05-08T09:41:08.691Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "release-script-build-overview.png",
      "ext": ".png",
      "name": "release-script-build-overview",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226191,
      "blocks": 80,
      "atimeMs": 1557308472718.9143,
      "mtimeMs": 1557308468690.6714,
      "ctimeMs": 1557308468690.6714,
      "birthtimeMs": 1557308468690.5967,
      "atime": "2019-05-08T09:41:12.719Z",
      "mtime": "2019-05-08T09:41:08.691Z",
      "ctime": "2019-05-08T09:41:08.691Z",
      "birthtime": "2019-05-08T09:41:08.691Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/resistance-calculator.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/resistance-calculator.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/resistance-calculator.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "d8672fc477cbb202b53c2b23b7827bd0",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/resistance-calculator.png",
      "relativePath": "images/blog/resistance-calculator.png",
      "extension": "png",
      "size": 45239,
      "prettySize": "45.2 kB",
      "modifiedTime": "2019-05-08T09:41:08.692Z",
      "accessTime": "2019-05-08T09:41:12.719Z",
      "changeTime": "2019-05-08T09:41:08.692Z",
      "birthTime": "2019-05-08T09:41:08.692Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "resistance-calculator.png",
      "ext": ".png",
      "name": "resistance-calculator",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226193,
      "blocks": 96,
      "atimeMs": 1557308472719.4487,
      "mtimeMs": 1557308468691.756,
      "ctimeMs": 1557308468691.756,
      "birthtimeMs": 1557308468691.6934,
      "atime": "2019-05-08T09:41:12.719Z",
      "mtime": "2019-05-08T09:41:08.692Z",
      "ctime": "2019-05-08T09:41:08.692Z",
      "birthtime": "2019-05-08T09:41:08.692Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/snake.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/snake.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/snake.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "f7ff77c7e9a43b2553ab601a0df23d61",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/snake.png",
      "relativePath": "images/blog/snake.png",
      "extension": "png",
      "size": 6958,
      "prettySize": "6.96 kB",
      "modifiedTime": "2019-05-08T09:41:08.692Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.692Z",
      "birthTime": "2019-05-08T09:41:08.692Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "snake.png",
      "ext": ".png",
      "name": "snake",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226195,
      "blocks": 16,
      "atimeMs": 1557308635098.9802,
      "mtimeMs": 1557308468692.3281,
      "ctimeMs": 1557308468692.3281,
      "birthtimeMs": 1557308468692.2717,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.692Z",
      "ctime": "2019-05-08T09:41:08.692Z",
      "birthtime": "2019-05-08T09:41:08.692Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/sweet-jsx.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/sweet-jsx.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/sweet-jsx.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "fd70471ea0b23dc270959134e3baf136",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/sweet-jsx.png",
      "relativePath": "images/blog/sweet-jsx.png",
      "extension": "png",
      "size": 18857,
      "prettySize": "18.9 kB",
      "modifiedTime": "2019-05-08T09:41:08.726Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.726Z",
      "birthTime": "2019-05-08T09:41:08.726Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "sweet-jsx.png",
      "ext": ".png",
      "name": "sweet-jsx",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226198,
      "blocks": 40,
      "atimeMs": 1557308635098.9998,
      "mtimeMs": 1557308468725.977,
      "ctimeMs": 1557308468725.977,
      "birthtimeMs": 1557308468725.919,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.726Z",
      "ctime": "2019-05-08T09:41:08.726Z",
      "birthtime": "2019-05-08T09:41:08.726Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/strict-mode-unsafe-lifecycles-warning.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/strict-mode-unsafe-lifecycles-warning.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/strict-mode-unsafe-lifecycles-warning.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "e4fdbff774b356881123e69ad88eda88",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/strict-mode-unsafe-lifecycles-warning.png",
      "relativePath": "images/blog/strict-mode-unsafe-lifecycles-warning.png",
      "extension": "png",
      "size": 53348,
      "prettySize": "53.3 kB",
      "modifiedTime": "2019-05-08T09:41:08.726Z",
      "accessTime": "2019-05-08T09:41:12.751Z",
      "changeTime": "2019-05-08T09:41:08.726Z",
      "birthTime": "2019-05-08T09:41:08.726Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "strict-mode-unsafe-lifecycles-warning.png",
      "ext": ".png",
      "name": "strict-mode-unsafe-lifecycles-warning",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226197,
      "blocks": 112,
      "atimeMs": 1557308472751.0615,
      "mtimeMs": 1557308468725.67,
      "ctimeMs": 1557308468725.67,
      "birthtimeMs": 1557308468725.5854,
      "atime": "2019-05-08T09:41:12.751Z",
      "mtime": "2019-05-08T09:41:08.726Z",
      "ctime": "2019-05-08T09:41:08.726Z",
      "birthtime": "2019-05-08T09:41:08.726Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/tcomb-react-native.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/tcomb-react-native.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/tcomb-react-native.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "afd9ed207a25a624627fa13ae18139a0",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/tcomb-react-native.png",
      "relativePath": "images/blog/tcomb-react-native.png",
      "extension": "png",
      "size": 24838,
      "prettySize": "24.8 kB",
      "modifiedTime": "2019-05-08T09:41:08.726Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.726Z",
      "birthTime": "2019-05-08T09:41:08.726Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "tcomb-react-native.png",
      "ext": ".png",
      "name": "tcomb-react-native",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226199,
      "blocks": 56,
      "atimeMs": 1557308635099.004,
      "mtimeMs": 1557308468726.307,
      "ctimeMs": 1557308468726.307,
      "birthtimeMs": 1557308468726.236,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.726Z",
      "ctime": "2019-05-08T09:41:08.726Z",
      "birthtime": "2019-05-08T09:41:08.726Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/thinking-in-react-components.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/thinking-in-react-components.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/thinking-in-react-components.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "eb8bda25806a89ebdc838813bdfa3601",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/thinking-in-react-components.png",
      "relativePath": "images/blog/thinking-in-react-components.png",
      "extension": "png",
      "size": 19048,
      "prettySize": "19 kB",
      "modifiedTime": "2019-05-08T09:41:08.727Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.727Z",
      "birthTime": "2019-05-08T09:41:08.727Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "thinking-in-react-components.png",
      "ext": ".png",
      "name": "thinking-in-react-components",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226200,
      "blocks": 40,
      "atimeMs": 1557308635099.024,
      "mtimeMs": 1557308468726.6108,
      "ctimeMs": 1557308468726.6108,
      "birthtimeMs": 1557308468726.5337,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.727Z",
      "ctime": "2019-05-08T09:41:08.727Z",
      "birthtime": "2019-05-08T09:41:08.727Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/thinking-in-react-mock.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/thinking-in-react-mock.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/thinking-in-react-mock.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "1071fbcc9eed01fddc115b41e193ec11",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/thinking-in-react-mock.png",
      "relativePath": "images/blog/thinking-in-react-mock.png",
      "extension": "png",
      "size": 17459,
      "prettySize": "17.5 kB",
      "modifiedTime": "2019-05-08T09:41:08.727Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.727Z",
      "birthTime": "2019-05-08T09:41:08.727Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "thinking-in-react-mock.png",
      "ext": ".png",
      "name": "thinking-in-react-mock",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226201,
      "blocks": 40,
      "atimeMs": 1557308635099.028,
      "mtimeMs": 1557308468726.895,
      "ctimeMs": 1557308468726.895,
      "birthtimeMs": 1557308468726.8342,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.727Z",
      "ctime": "2019-05-08T09:41:08.727Z",
      "birthtime": "2019-05-08T09:41:08.727Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/todomvc.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/todomvc.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/todomvc.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "d2c3b90797c16ad85c4a782bb7af4466",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/todomvc.png",
      "relativePath": "images/blog/todomvc.png",
      "extension": "png",
      "size": 22314,
      "prettySize": "22.3 kB",
      "modifiedTime": "2019-05-08T09:41:08.727Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.727Z",
      "birthTime": "2019-05-08T09:41:08.727Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "todomvc.png",
      "ext": ".png",
      "name": "todomvc",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226202,
      "blocks": 48,
      "atimeMs": 1557308635099.032,
      "mtimeMs": 1557308468727.2034,
      "ctimeMs": 1557308468727.2034,
      "birthtimeMs": 1557308468727.1501,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.727Z",
      "ctime": "2019-05-08T09:41:08.727Z",
      "birthtime": "2019-05-08T09:41:08.727Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/turboreact.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/turboreact.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/turboreact.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "5edcabbaa9ea84c0267c62e69efcb513",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/turboreact.png",
      "relativePath": "images/blog/turboreact.png",
      "extension": "png",
      "size": 3507,
      "prettySize": "3.51 kB",
      "modifiedTime": "2019-05-08T09:41:08.727Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.727Z",
      "birthTime": "2019-05-08T09:41:08.727Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "turboreact.png",
      "ext": ".png",
      "name": "turboreact",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226203,
      "blocks": 8,
      "atimeMs": 1557308635099.0554,
      "mtimeMs": 1557308468727.4028,
      "ctimeMs": 1557308468727.4028,
      "birthtimeMs": 1557308468727.3545,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.727Z",
      "ctime": "2019-05-08T09:41:08.727Z",
      "birthtime": "2019-05-08T09:41:08.727Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/tutsplus.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/tutsplus.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/tutsplus.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "665d6cdd9250ec273690046a14392189",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/tutsplus.png",
      "relativePath": "images/blog/tutsplus.png",
      "extension": "png",
      "size": 29520,
      "prettySize": "29.5 kB",
      "modifiedTime": "2019-05-08T09:41:08.728Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.728Z",
      "birthTime": "2019-05-08T09:41:08.728Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "tutsplus.png",
      "ext": ".png",
      "name": "tutsplus",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226204,
      "blocks": 64,
      "atimeMs": 1557308635099.0596,
      "mtimeMs": 1557308468727.709,
      "ctimeMs": 1557308468727.709,
      "birthtimeMs": 1557308468727.6387,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.728Z",
      "ctime": "2019-05-08T09:41:08.728Z",
      "birthtime": "2019-05-08T09:41:08.728Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/unite.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/unite.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/unite.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "15b2439e1b8523156ef985b3855a83ba",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/unite.png",
      "relativePath": "images/blog/unite.png",
      "extension": "png",
      "size": 13667,
      "prettySize": "13.7 kB",
      "modifiedTime": "2019-05-08T09:41:08.728Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.728Z",
      "birthTime": "2019-05-08T09:41:08.728Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "unite.png",
      "ext": ".png",
      "name": "unite",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226205,
      "blocks": 32,
      "atimeMs": 1557308635099.0627,
      "mtimeMs": 1557308468727.9617,
      "ctimeMs": 1557308468727.9617,
      "birthtimeMs": 1557308468727.9082,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.728Z",
      "ctime": "2019-05-08T09:41:08.728Z",
      "birthtime": "2019-05-08T09:41:08.728Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/versioning-1.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/versioning-1.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/versioning-1.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "899ef384f039caa51a9f58b621828d7e",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/versioning-1.png",
      "relativePath": "images/blog/versioning-1.png",
      "extension": "png",
      "size": 22781,
      "prettySize": "22.8 kB",
      "modifiedTime": "2019-05-08T09:41:08.728Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.728Z",
      "birthTime": "2019-05-08T09:41:08.728Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "versioning-1.png",
      "ext": ".png",
      "name": "versioning-1",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226206,
      "blocks": 48,
      "atimeMs": 1557308635099.0654,
      "mtimeMs": 1557308468728.253,
      "ctimeMs": 1557308468728.253,
      "birthtimeMs": 1557308468728.1975,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.728Z",
      "ctime": "2019-05-08T09:41:08.728Z",
      "birthtime": "2019-05-08T09:41:08.728Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/versioning-2.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/versioning-2.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/versioning-2.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "90b0bb4245cfdf42bff9db6f496b75bd",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/versioning-2.png",
      "relativePath": "images/blog/versioning-2.png",
      "extension": "png",
      "size": 23649,
      "prettySize": "23.6 kB",
      "modifiedTime": "2019-05-08T09:41:08.729Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.729Z",
      "birthTime": "2019-05-08T09:41:08.729Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "versioning-2.png",
      "ext": ".png",
      "name": "versioning-2",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226207,
      "blocks": 48,
      "atimeMs": 1557308635099.0686,
      "mtimeMs": 1557308468728.6511,
      "ctimeMs": 1557308468728.6511,
      "birthtimeMs": 1557308468728.596,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.729Z",
      "ctime": "2019-05-08T09:41:08.729Z",
      "birthtime": "2019-05-08T09:41:08.729Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/versioning-3.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/versioning-3.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/versioning-3.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "7575ed187d0a8ec68ec68169720d0f27",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/versioning-3.png",
      "relativePath": "images/blog/versioning-3.png",
      "extension": "png",
      "size": 45207,
      "prettySize": "45.2 kB",
      "modifiedTime": "2019-05-08T09:41:08.729Z",
      "accessTime": "2019-05-08T09:41:12.753Z",
      "changeTime": "2019-05-08T09:41:08.729Z",
      "birthTime": "2019-05-08T09:41:08.729Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "versioning-3.png",
      "ext": ".png",
      "name": "versioning-3",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226208,
      "blocks": 96,
      "atimeMs": 1557308472752.883,
      "mtimeMs": 1557308468729.1042,
      "ctimeMs": 1557308468729.1042,
      "birthtimeMs": 1557308468729.0422,
      "atime": "2019-05-08T09:41:12.753Z",
      "mtime": "2019-05-08T09:41:08.729Z",
      "ctime": "2019-05-08T09:41:08.729Z",
      "birthtime": "2019-05-08T09:41:08.729Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/versioning-4.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/versioning-4.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/versioning-4.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "d8dd49a51f663d1b96c8b3ac27749f78",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/versioning-4.png",
      "relativePath": "images/blog/versioning-4.png",
      "extension": "png",
      "size": 49055,
      "prettySize": "49.1 kB",
      "modifiedTime": "2019-05-08T09:41:08.730Z",
      "accessTime": "2019-05-08T09:41:12.753Z",
      "changeTime": "2019-05-08T09:41:08.730Z",
      "birthTime": "2019-05-08T09:41:08.729Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "versioning-4.png",
      "ext": ".png",
      "name": "versioning-4",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226209,
      "blocks": 96,
      "atimeMs": 1557308472753.1274,
      "mtimeMs": 1557308468729.5515,
      "ctimeMs": 1557308468729.5515,
      "birthtimeMs": 1557308468729.4692,
      "atime": "2019-05-08T09:41:12.753Z",
      "mtime": "2019-05-08T09:41:08.730Z",
      "ctime": "2019-05-08T09:41:08.730Z",
      "birthtime": "2019-05-08T09:41:08.729Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/versioning-5.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/versioning-5.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/versioning-5.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "b7e3bc7d2d111e92cfeb45ec0b361faa",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/versioning-5.png",
      "relativePath": "images/blog/versioning-5.png",
      "extension": "png",
      "size": 32277,
      "prettySize": "32.3 kB",
      "modifiedTime": "2019-05-08T09:41:08.730Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.730Z",
      "birthTime": "2019-05-08T09:41:08.730Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "versioning-5.png",
      "ext": ".png",
      "name": "versioning-5",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226210,
      "blocks": 64,
      "atimeMs": 1557308635099.0776,
      "mtimeMs": 1557308468729.904,
      "ctimeMs": 1557308468729.904,
      "birthtimeMs": 1557308468729.8381,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.730Z",
      "ctime": "2019-05-08T09:41:08.730Z",
      "birthtime": "2019-05-08T09:41:08.730Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/versioning-6.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/versioning-6.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/versioning-6.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "ec08ea1a53fcb540a5930a3f1f231bf8",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/versioning-6.png",
      "relativePath": "images/blog/versioning-6.png",
      "extension": "png",
      "size": 45913,
      "prettySize": "45.9 kB",
      "modifiedTime": "2019-05-08T09:41:08.730Z",
      "accessTime": "2019-05-08T09:41:12.754Z",
      "changeTime": "2019-05-08T09:41:08.730Z",
      "birthTime": "2019-05-08T09:41:08.730Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "versioning-6.png",
      "ext": ".png",
      "name": "versioning-6",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226211,
      "blocks": 96,
      "atimeMs": 1557308472753.5488,
      "mtimeMs": 1557308468730.3408,
      "ctimeMs": 1557308468730.3408,
      "birthtimeMs": 1557308468730.2644,
      "atime": "2019-05-08T09:41:12.754Z",
      "mtime": "2019-05-08T09:41:08.730Z",
      "ctime": "2019-05-08T09:41:08.730Z",
      "birthtime": "2019-05-08T09:41:08.730Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/weather.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/weather.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/weather.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "8f130f2a80f0e7d4b07d59554f957ec6",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/weather.png",
      "relativePath": "images/blog/weather.png",
      "extension": "png",
      "size": 6961,
      "prettySize": "6.96 kB",
      "modifiedTime": "2019-05-08T09:41:08.731Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.731Z",
      "birthTime": "2019-05-08T09:41:08.731Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "weather.png",
      "ext": ".png",
      "name": "weather",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226213,
      "blocks": 16,
      "atimeMs": 1557308635099.0864,
      "mtimeMs": 1557308468731.0288,
      "ctimeMs": 1557308468731.0288,
      "birthtimeMs": 1557308468730.934,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.731Z",
      "ctime": "2019-05-08T09:41:08.731Z",
      "birthtime": "2019-05-08T09:41:08.731Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/versioning-poll.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/versioning-poll.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/versioning-poll.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "b770014ccb13dbca11ddd0bbb5353319",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/versioning-poll.png",
      "relativePath": "images/blog/versioning-poll.png",
      "extension": "png",
      "size": 49380,
      "prettySize": "49.4 kB",
      "modifiedTime": "2019-05-08T09:41:08.731Z",
      "accessTime": "2019-05-08T09:41:12.754Z",
      "changeTime": "2019-05-08T09:41:08.731Z",
      "birthTime": "2019-05-08T09:41:08.731Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "versioning-poll.png",
      "ext": ".png",
      "name": "versioning-poll",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226212,
      "blocks": 104,
      "atimeMs": 1557308472753.7861,
      "mtimeMs": 1557308468730.79,
      "ctimeMs": 1557308468730.79,
      "birthtimeMs": 1557308468730.713,
      "atime": "2019-05-08T09:41:12.754Z",
      "mtime": "2019-05-08T09:41:08.731Z",
      "ctime": "2019-05-08T09:41:08.731Z",
      "birthtime": "2019-05-08T09:41:08.731Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/xreact.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/xreact.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/xreact.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "f9207adea125403fe928594ccb67a539",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/xreact.png",
      "relativePath": "images/blog/xreact.png",
      "extension": "png",
      "size": 3250,
      "prettySize": "3.25 kB",
      "modifiedTime": "2019-05-08T09:41:08.732Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.732Z",
      "birthTime": "2019-05-08T09:41:08.732Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "xreact.png",
      "ext": ".png",
      "name": "xreact",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226216,
      "blocks": 8,
      "atimeMs": 1557308635099.096,
      "mtimeMs": 1557308468732.104,
      "ctimeMs": 1557308468732.104,
      "birthtimeMs": 1557308468732.044,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.732Z",
      "ctime": "2019-05-08T09:41:08.732Z",
      "birthtime": "2019-05-08T09:41:08.732Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/relay-components/relay-containers-data-flow.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/relay-components/relay-containers-data-flow.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/relay-components/relay-containers-data-flow.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "46e660a80043eb9e7a4ea27b3562d4a7",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/relay-components/relay-containers-data-flow.png",
      "relativePath": "images/blog/relay-components/relay-containers-data-flow.png",
      "extension": "png",
      "size": 27930,
      "prettySize": "27.9 kB",
      "modifiedTime": "2019-05-08T09:41:08.687Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.687Z",
      "birthTime": "2019-05-08T09:41:08.687Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog/relay-components",
      "base": "relay-containers-data-flow.png",
      "ext": ".png",
      "name": "relay-containers-data-flow",
      "relativeDirectory": "images/blog/relay-components",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226186,
      "blocks": 56,
      "atimeMs": 1557308635098.9443,
      "mtimeMs": 1557308468687.232,
      "ctimeMs": 1557308468687.232,
      "birthtimeMs": 1557308468687.124,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.687Z",
      "ctime": "2019-05-08T09:41:08.687Z",
      "birthtime": "2019-05-08T09:41:08.687Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/relay-components/relay-containers.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/relay-components/relay-containers.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/relay-components/relay-containers.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "4e4a71a85b278968b8719601692bc18c",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/relay-components/relay-containers.png",
      "relativePath": "images/blog/relay-components/relay-containers.png",
      "extension": "png",
      "size": 14215,
      "prettySize": "14.2 kB",
      "modifiedTime": "2019-05-08T09:41:08.688Z",
      "accessTime": "2019-05-08T09:43:55.099Z",
      "changeTime": "2019-05-08T09:41:08.688Z",
      "birthTime": "2019-05-08T09:41:08.688Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog/relay-components",
      "base": "relay-containers.png",
      "ext": ".png",
      "name": "relay-containers",
      "relativeDirectory": "images/blog/relay-components",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226187,
      "blocks": 32,
      "atimeMs": 1557308635098.9473,
      "mtimeMs": 1557308468687.7258,
      "ctimeMs": 1557308468687.7258,
      "birthtimeMs": 1557308468687.5913,
      "atime": "2019-05-08T09:43:55.099Z",
      "mtime": "2019-05-08T09:41:08.688Z",
      "ctime": "2019-05-08T09:41:08.688Z",
      "birthtime": "2019-05-08T09:41:08.688Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/relay-components/relay-architecture.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/relay-components/relay-architecture.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/relay-components/relay-architecture.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "1c7e934642028c84d5af545a945394ef",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/relay-components/relay-architecture.png",
      "relativePath": "images/blog/relay-components/relay-architecture.png",
      "extension": "png",
      "size": 56466,
      "prettySize": "56.5 kB",
      "modifiedTime": "2019-05-08T09:41:08.687Z",
      "accessTime": "2019-05-08T09:41:12.717Z",
      "changeTime": "2019-05-08T09:41:08.687Z",
      "birthTime": "2019-05-08T09:41:08.687Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog/relay-components",
      "base": "relay-architecture.png",
      "ext": ".png",
      "name": "relay-architecture",
      "relativeDirectory": "images/blog/relay-components",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226185,
      "blocks": 112,
      "atimeMs": 1557308472717.0059,
      "mtimeMs": 1557308468686.8574,
      "ctimeMs": 1557308468686.8574,
      "birthtimeMs": 1557308468686.7893,
      "atime": "2019-05-08T09:41:12.717Z",
      "mtime": "2019-05-08T09:41:08.687Z",
      "ctime": "2019-05-08T09:41:08.687Z",
      "birthtime": "2019-05-08T09:41:08.687Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/relay-components/sample-newsfeed.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/relay-components/sample-newsfeed.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/relay-components/sample-newsfeed.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "75bc0f3653210df5df2c21a706cab9eb",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/relay-components/sample-newsfeed.png",
      "relativePath": "images/blog/relay-components/sample-newsfeed.png",
      "extension": "png",
      "size": 58270,
      "prettySize": "58.3 kB",
      "modifiedTime": "2019-05-08T09:41:08.688Z",
      "accessTime": "2019-05-08T09:41:12.718Z",
      "changeTime": "2019-05-08T09:41:08.688Z",
      "birthTime": "2019-05-08T09:41:08.688Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog/relay-components",
      "base": "sample-newsfeed.png",
      "ext": ".png",
      "name": "sample-newsfeed",
      "relativeDirectory": "images/blog/relay-components",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226188,
      "blocks": 120,
      "atimeMs": 1557308472717.5146,
      "mtimeMs": 1557308468688.3381,
      "ctimeMs": 1557308468688.3381,
      "birthtimeMs": 1557308468688.2659,
      "atime": "2019-05-08T09:41:12.718Z",
      "mtime": "2019-05-08T09:41:08.688Z",
      "ctime": "2019-05-08T09:41:08.688Z",
      "birthtime": "2019-05-08T09:41:08.688Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/compiled-successfully.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/compiled-successfully.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/compiled-successfully.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "be1531bce6379ad2d464c28ee4f8b857",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/compiled-successfully.png",
      "relativePath": "images/blog/create-apps-with-no-configuration/compiled-successfully.png",
      "extension": "png",
      "size": 51216,
      "prettySize": "51.2 kB",
      "modifiedTime": "2019-05-08T09:41:08.640Z",
      "accessTime": "2019-05-08T09:41:12.677Z",
      "changeTime": "2019-05-08T09:41:08.640Z",
      "birthTime": "2019-05-08T09:41:08.640Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration",
      "base": "compiled-successfully.png",
      "ext": ".png",
      "name": "compiled-successfully",
      "relativeDirectory": "images/blog/create-apps-with-no-configuration",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226137,
      "blocks": 104,
      "atimeMs": 1557308472677.0867,
      "mtimeMs": 1557308468640.3188,
      "ctimeMs": 1557308468640.3188,
      "birthtimeMs": 1557308468640.1292,
      "atime": "2019-05-08T09:41:12.677Z",
      "mtime": "2019-05-08T09:41:08.640Z",
      "ctime": "2019-05-08T09:41:08.640Z",
      "birthtime": "2019-05-08T09:41:08.640Z"
    },
    "/Users/yubolun/Desktop/react/content/images/docs/blur-popover-close.gif absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/blur-popover-close.gif absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "28ce2067489843caf05fe7ce22494542",
        "mediaType": "image/gif",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/docs/blur-popover-close.gif",
      "relativePath": "images/docs/blur-popover-close.gif",
      "extension": "gif",
      "size": 105817,
      "prettySize": "106 kB",
      "modifiedTime": "2019-05-08T09:41:08.733Z",
      "accessTime": "2019-05-08T09:41:12.755Z",
      "changeTime": "2019-05-08T09:41:08.733Z",
      "birthTime": "2019-05-08T09:41:08.733Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/docs",
      "base": "blur-popover-close.gif",
      "ext": ".gif",
      "name": "blur-popover-close",
      "relativeDirectory": "images/docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226218,
      "blocks": 208,
      "atimeMs": 1557308472755.4944,
      "mtimeMs": 1557308468732.7244,
      "ctimeMs": 1557308468732.7244,
      "birthtimeMs": 1557308468732.6414,
      "atime": "2019-05-08T09:41:12.755Z",
      "mtime": "2019-05-08T09:41:08.733Z",
      "ctime": "2019-05-08T09:41:08.733Z",
      "birthtime": "2019-05-08T09:41:08.733Z"
    },
    "/Users/yubolun/Desktop/react/content/images/docs/granular-dom-updates.gif absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/granular-dom-updates.gif absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "c158617ed7cc0eac8f58330e49e48224",
        "mediaType": "image/gif",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/docs/granular-dom-updates.gif",
      "relativePath": "images/docs/granular-dom-updates.gif",
      "extension": "gif",
      "size": 127160,
      "prettySize": "127 kB",
      "modifiedTime": "2019-05-08T09:41:08.735Z",
      "accessTime": "2019-05-08T09:41:12.757Z",
      "changeTime": "2019-05-08T09:41:08.735Z",
      "birthTime": "2019-05-08T09:41:08.735Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/docs",
      "base": "granular-dom-updates.gif",
      "ext": ".gif",
      "name": "granular-dom-updates",
      "relativeDirectory": "images/docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226225,
      "blocks": 256,
      "atimeMs": 1557308472757.0273,
      "mtimeMs": 1557308468735.0461,
      "ctimeMs": 1557308468735.0461,
      "birthtimeMs": 1557308468734.9639,
      "atime": "2019-05-08T09:41:12.757Z",
      "mtime": "2019-05-08T09:41:08.735Z",
      "ctime": "2019-05-08T09:41:08.735Z",
      "birthtime": "2019-05-08T09:41:08.735Z"
    },
    "/Users/yubolun/Desktop/react/content/images/docs/outerclick-with-mouse.gif absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/outerclick-with-mouse.gif absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "5523b05b22210c5a2fa0bd1f01339cb3",
        "mediaType": "image/gif",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/docs/outerclick-with-mouse.gif",
      "relativePath": "images/docs/outerclick-with-mouse.gif",
      "extension": "gif",
      "size": 79807,
      "prettySize": "79.8 kB",
      "modifiedTime": "2019-05-08T09:41:08.737Z",
      "accessTime": "2019-05-08T09:41:12.758Z",
      "changeTime": "2019-05-08T09:41:08.737Z",
      "birthTime": "2019-05-08T09:41:08.737Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/docs",
      "base": "outerclick-with-mouse.gif",
      "ext": ".gif",
      "name": "outerclick-with-mouse",
      "relativeDirectory": "images/docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226230,
      "blocks": 160,
      "atimeMs": 1557308472758.0225,
      "mtimeMs": 1557308468736.9502,
      "ctimeMs": 1557308468736.9502,
      "birthtimeMs": 1557308468736.8525,
      "atime": "2019-05-08T09:41:12.758Z",
      "mtime": "2019-05-08T09:41:08.737Z",
      "ctime": "2019-05-08T09:41:08.737Z",
      "birthtime": "2019-05-08T09:41:08.737Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/devtools-tree-view.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/devtools-tree-view.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/devtools-tree-view.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "e6fb2a1f2ea4b574edf85c8fc8c6f571",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/devtools-tree-view.png",
      "relativePath": "images/blog/devtools-tree-view.png",
      "extension": "png",
      "size": 72863,
      "prettySize": "72.9 kB",
      "modifiedTime": "2019-05-08T09:41:08.659Z",
      "accessTime": "2019-05-08T09:41:12.692Z",
      "changeTime": "2019-05-08T09:41:08.659Z",
      "birthTime": "2019-05-08T09:41:08.659Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "devtools-tree-view.png",
      "ext": ".png",
      "name": "devtools-tree-view",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226145,
      "blocks": 144,
      "atimeMs": 1557308472692.2622,
      "mtimeMs": 1557308468659.1262,
      "ctimeMs": 1557308468659.1262,
      "birthtimeMs": 1557308468659.034,
      "atime": "2019-05-08T09:41:12.692Z",
      "mtime": "2019-05-08T09:41:08.659Z",
      "ctime": "2019-05-08T09:41:08.659Z",
      "birthtime": "2019-05-08T09:41:08.659Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/hacker-news-react-native.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/hacker-news-react-native.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/hacker-news-react-native.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "d95824e8653ed44f2baa8420276fc116",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/hacker-news-react-native.png",
      "relativePath": "images/blog/hacker-news-react-native.png",
      "extension": "png",
      "size": 105307,
      "prettySize": "105 kB",
      "modifiedTime": "2019-05-08T09:41:08.666Z",
      "accessTime": "2019-05-08T09:41:12.699Z",
      "changeTime": "2019-05-08T09:41:08.666Z",
      "birthTime": "2019-05-08T09:41:08.666Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "hacker-news-react-native.png",
      "ext": ".png",
      "name": "hacker-news-react-native",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226153,
      "blocks": 208,
      "atimeMs": 1557308472698.65,
      "mtimeMs": 1557308468665.7385,
      "ctimeMs": 1557308468665.7385,
      "birthtimeMs": 1557308468665.6467,
      "atime": "2019-05-08T09:41:12.699Z",
      "mtime": "2019-05-08T09:41:08.666Z",
      "ctime": "2019-05-08T09:41:08.666Z",
      "birthtime": "2019-05-08T09:41:08.666Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/landoflisp.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/landoflisp.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/landoflisp.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "5439e8d50448bcd20ad4c93c5b8eb9a3",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/landoflisp.png",
      "relativePath": "images/blog/landoflisp.png",
      "extension": "png",
      "size": 111272,
      "prettySize": "111 kB",
      "modifiedTime": "2019-05-08T09:41:08.667Z",
      "accessTime": "2019-05-08T09:41:12.699Z",
      "changeTime": "2019-05-08T09:41:08.667Z",
      "birthTime": "2019-05-08T09:41:08.667Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "landoflisp.png",
      "ext": ".png",
      "name": "landoflisp",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226157,
      "blocks": 224,
      "atimeMs": 1557308472699.3923,
      "mtimeMs": 1557308468666.6865,
      "ctimeMs": 1557308468666.6865,
      "birthtimeMs": 1557308468666.6162,
      "atime": "2019-05-08T09:41:12.699Z",
      "mtime": "2019-05-08T09:41:08.667Z",
      "ctime": "2019-05-08T09:41:08.667Z",
      "birthtime": "2019-05-08T09:41:08.667Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/om-backbone.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/om-backbone.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/om-backbone.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "334ad2139d1fc85a09b69771780e90b4",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/om-backbone.png",
      "relativePath": "images/blog/om-backbone.png",
      "extension": "png",
      "size": 129507,
      "prettySize": "130 kB",
      "modifiedTime": "2019-05-08T09:41:08.676Z",
      "accessTime": "2019-05-08T09:41:12.709Z",
      "changeTime": "2019-05-08T09:41:08.676Z",
      "birthTime": "2019-05-08T09:41:08.676Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "om-backbone.png",
      "ext": ".png",
      "name": "om-backbone",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226164,
      "blocks": 256,
      "atimeMs": 1557308472708.9922,
      "mtimeMs": 1557308468676.036,
      "ctimeMs": 1557308468676.036,
      "birthtimeMs": 1557308468675.916,
      "atime": "2019-05-08T09:41:12.709Z",
      "mtime": "2019-05-08T09:41:08.676Z",
      "ctime": "2019-05-08T09:41:08.676Z",
      "birthtime": "2019-05-08T09:41:08.676Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/polarr.jpg absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/polarr.jpg absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/polarr.jpg absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "83d861c089a5f23cfb42f12966976acf",
        "mediaType": "image/jpeg",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/polarr.jpg",
      "relativePath": "images/blog/polarr.jpg",
      "extension": "jpg",
      "size": 67576,
      "prettySize": "67.6 kB",
      "modifiedTime": "2019-05-08T09:41:08.677Z",
      "accessTime": "2019-05-08T09:41:12.710Z",
      "changeTime": "2019-05-08T09:41:08.677Z",
      "birthTime": "2019-05-08T09:41:08.677Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "polarr.jpg",
      "ext": ".jpg",
      "name": "polarr",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226166,
      "blocks": 136,
      "atimeMs": 1557308472709.8325,
      "mtimeMs": 1557308468676.993,
      "ctimeMs": 1557308468676.993,
      "birthtimeMs": 1557308468676.9194,
      "atime": "2019-05-08T09:41:12.710Z",
      "mtime": "2019-05-08T09:41:08.677Z",
      "ctime": "2019-05-08T09:41:08.677Z",
      "birthtime": "2019-05-08T09:41:08.677Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/react-50k-mock-full.jpg absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/react-50k-mock-full.jpg absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/react-50k-mock-full.jpg absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "e73d427ee119099a43177231e3486625",
        "mediaType": "image/jpeg",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/react-50k-mock-full.jpg",
      "relativePath": "images/blog/react-50k-mock-full.jpg",
      "extension": "jpg",
      "size": 129881,
      "prettySize": "130 kB",
      "modifiedTime": "2019-05-08T09:41:08.679Z",
      "accessTime": "2019-05-08T09:41:12.711Z",
      "changeTime": "2019-05-08T09:41:08.679Z",
      "birthTime": "2019-05-08T09:41:08.679Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "react-50k-mock-full.jpg",
      "ext": ".jpg",
      "name": "react-50k-mock-full",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226170,
      "blocks": 256,
      "atimeMs": 1557308472710.6953,
      "mtimeMs": 1557308468678.8687,
      "ctimeMs": 1557308468678.8687,
      "birthtimeMs": 1557308468678.7664,
      "atime": "2019-05-08T09:41:12.711Z",
      "mtime": "2019-05-08T09:41:08.679Z",
      "ctime": "2019-05-08T09:41:08.679Z",
      "birthtime": "2019-05-08T09:41:08.679Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/react-50k-mock.jpg absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/react-50k-mock.jpg absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/react-50k-mock.jpg absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "4c980ebecab37b61a1f7db2f95d91b96",
        "mediaType": "image/jpeg",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/react-50k-mock.jpg",
      "relativePath": "images/blog/react-50k-mock.jpg",
      "extension": "jpg",
      "size": 85038,
      "prettySize": "85 kB",
      "modifiedTime": "2019-05-08T09:41:08.680Z",
      "accessTime": "2019-05-08T09:41:12.711Z",
      "changeTime": "2019-05-08T09:41:08.680Z",
      "birthTime": "2019-05-08T09:41:08.680Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "react-50k-mock.jpg",
      "ext": ".jpg",
      "name": "react-50k-mock",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226171,
      "blocks": 168,
      "atimeMs": 1557308472711.307,
      "mtimeMs": 1557308468679.7708,
      "ctimeMs": 1557308468679.7708,
      "birthtimeMs": 1557308468679.506,
      "atime": "2019-05-08T09:41:12.711Z",
      "mtime": "2019-05-08T09:41:08.680Z",
      "ctime": "2019-05-08T09:41:08.680Z",
      "birthtime": "2019-05-08T09:41:08.680Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/react-dev-tools.jpg absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/react-dev-tools.jpg absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/react-dev-tools.jpg absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "5f54a3494dc3c629a78953d2ccea6ae3",
        "mediaType": "image/jpeg",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/react-dev-tools.jpg",
      "relativePath": "images/blog/react-dev-tools.jpg",
      "extension": "jpg",
      "size": 71395,
      "prettySize": "71.4 kB",
      "modifiedTime": "2019-05-08T09:41:08.683Z",
      "accessTime": "2019-05-08T09:41:12.715Z",
      "changeTime": "2019-05-08T09:41:08.683Z",
      "birthTime": "2019-05-08T09:41:08.683Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "react-dev-tools.jpg",
      "ext": ".jpg",
      "name": "react-dev-tools",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226174,
      "blocks": 144,
      "atimeMs": 1557308472715.0142,
      "mtimeMs": 1557308468683.4565,
      "ctimeMs": 1557308468683.4565,
      "birthtimeMs": 1557308468683.3816,
      "atime": "2019-05-08T09:41:12.715Z",
      "mtime": "2019-05-08T09:41:08.683Z",
      "ctime": "2019-05-08T09:41:08.683Z",
      "birthtime": "2019-05-08T09:41:08.683Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/react-perf-chrome-timeline.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/react-perf-chrome-timeline.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/react-perf-chrome-timeline.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "64d522b74fb585f1abada9801f85fa9d",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/react-perf-chrome-timeline.png",
      "relativePath": "images/blog/react-perf-chrome-timeline.png",
      "extension": "png",
      "size": 70018,
      "prettySize": "70 kB",
      "modifiedTime": "2019-05-08T09:41:08.685Z",
      "accessTime": "2019-05-08T09:41:12.716Z",
      "changeTime": "2019-05-08T09:41:08.685Z",
      "birthTime": "2019-05-08T09:41:08.685Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "react-perf-chrome-timeline.png",
      "ext": ".png",
      "name": "react-perf-chrome-timeline",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226179,
      "blocks": 144,
      "atimeMs": 1557308472715.9229,
      "mtimeMs": 1557308468685.0244,
      "ctimeMs": 1557308468685.0244,
      "birthtimeMs": 1557308468684.9578,
      "atime": "2019-05-08T09:41:12.716Z",
      "mtime": "2019-05-08T09:41:08.685Z",
      "ctime": "2019-05-08T09:41:08.685Z",
      "birthtime": "2019-05-08T09:41:08.685Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/release-script-build-confirmation.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/release-script-build-confirmation.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/release-script-build-confirmation.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "17f44f353d82a22f6a18707956ad065f",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/release-script-build-confirmation.png",
      "relativePath": "images/blog/release-script-build-confirmation.png",
      "extension": "png",
      "size": 100492,
      "prettySize": "100 kB",
      "modifiedTime": "2019-05-08T09:41:08.690Z",
      "accessTime": "2019-05-08T09:41:12.718Z",
      "changeTime": "2019-05-08T09:41:08.690Z",
      "birthTime": "2019-05-08T09:41:08.690Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "release-script-build-confirmation.png",
      "ext": ".png",
      "name": "release-script-build-confirmation",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226190,
      "blocks": 200,
      "atimeMs": 1557308472718.4692,
      "mtimeMs": 1557308468690.2964,
      "ctimeMs": 1557308468690.2964,
      "birthtimeMs": 1557308468690.1982,
      "atime": "2019-05-08T09:41:12.718Z",
      "mtime": "2019-05-08T09:41:08.690Z",
      "ctime": "2019-05-08T09:41:08.690Z",
      "birthtime": "2019-05-08T09:41:08.690Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/release-script-publish-confirmation.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/release-script-publish-confirmation.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/release-script-publish-confirmation.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "a3846d4b3e50d29415846b58612310f2",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/release-script-publish-confirmation.png",
      "relativePath": "images/blog/release-script-publish-confirmation.png",
      "extension": "png",
      "size": 76750,
      "prettySize": "76.8 kB",
      "modifiedTime": "2019-05-08T09:41:08.691Z",
      "accessTime": "2019-05-08T09:41:12.719Z",
      "changeTime": "2019-05-08T09:41:08.691Z",
      "birthTime": "2019-05-08T09:41:08.691Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "release-script-publish-confirmation.png",
      "ext": ".png",
      "name": "release-script-publish-confirmation",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226192,
      "blocks": 152,
      "atimeMs": 1557308472719.1033,
      "mtimeMs": 1557308468691.3281,
      "ctimeMs": 1557308468691.3281,
      "birthtimeMs": 1557308468691.2478,
      "atime": "2019-05-08T09:41:12.719Z",
      "mtime": "2019-05-08T09:41:08.691Z",
      "ctime": "2019-05-08T09:41:08.691Z",
      "birthtime": "2019-05-08T09:41:08.691Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/skills-matter.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/skills-matter.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/skills-matter.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "fd557144f90c6eabb680d1247345e520",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/skills-matter.png",
      "relativePath": "images/blog/skills-matter.png",
      "extension": "png",
      "size": 123193,
      "prettySize": "123 kB",
      "modifiedTime": "2019-05-08T09:41:08.692Z",
      "accessTime": "2019-05-08T09:41:12.720Z",
      "changeTime": "2019-05-08T09:41:08.692Z",
      "birthTime": "2019-05-08T09:41:08.692Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "skills-matter.png",
      "ext": ".png",
      "name": "skills-matter",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226194,
      "blocks": 248,
      "atimeMs": 1557308472719.6763,
      "mtimeMs": 1557308468692.0837,
      "ctimeMs": 1557308468692.0837,
      "birthtimeMs": 1557308468691.9841,
      "atime": "2019-05-08T09:41:12.720Z",
      "mtime": "2019-05-08T09:41:08.692Z",
      "ctime": "2019-05-08T09:41:08.692Z",
      "birthtime": "2019-05-08T09:41:08.692Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/wolfenstein_react.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/wolfenstein_react.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/wolfenstein_react.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "a1e0d13a915d083c08c19c77b39a64de",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/wolfenstein_react.png",
      "relativePath": "images/blog/wolfenstein_react.png",
      "extension": "png",
      "size": 113588,
      "prettySize": "114 kB",
      "modifiedTime": "2019-05-08T09:41:08.731Z",
      "accessTime": "2019-05-08T09:41:12.754Z",
      "changeTime": "2019-05-08T09:41:08.731Z",
      "birthTime": "2019-05-08T09:41:08.731Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "wolfenstein_react.png",
      "ext": ".png",
      "name": "wolfenstein_react",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226214,
      "blocks": 224,
      "atimeMs": 1557308472754.0938,
      "mtimeMs": 1557308468731.308,
      "ctimeMs": 1557308468731.308,
      "birthtimeMs": 1557308468731.232,
      "atime": "2019-05-08T09:41:12.754Z",
      "mtime": "2019-05-08T09:41:08.731Z",
      "ctime": "2019-05-08T09:41:08.731Z",
      "birthtime": "2019-05-08T09:41:08.731Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/npm-run-build.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/npm-run-build.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/npm-run-build.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "a2138f74bd9969980c35c50936c6217d",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/npm-run-build.png",
      "relativePath": "images/blog/create-apps-with-no-configuration/npm-run-build.png",
      "extension": "png",
      "size": 125036,
      "prettySize": "125 kB",
      "modifiedTime": "2019-05-08T09:41:08.644Z",
      "accessTime": "2019-05-08T09:41:12.679Z",
      "changeTime": "2019-05-08T09:41:08.644Z",
      "birthTime": "2019-05-08T09:41:08.644Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration",
      "base": "npm-run-build.png",
      "ext": ".png",
      "name": "npm-run-build",
      "relativeDirectory": "images/blog/create-apps-with-no-configuration",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226141,
      "blocks": 248,
      "atimeMs": 1557308472679.2708,
      "mtimeMs": 1557308468644.4565,
      "ctimeMs": 1557308468644.4565,
      "birthtimeMs": 1557308468644.3547,
      "atime": "2019-05-08T09:41:12.679Z",
      "mtime": "2019-05-08T09:41:08.644Z",
      "ctime": "2019-05-08T09:41:08.644Z",
      "birthtime": "2019-05-08T09:41:08.644Z"
    },
    "/Users/yubolun/Desktop/react/content/images/external.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/external.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/external.png absPath of file",
      "internal": {
        "contentDigest": "46c50c6df8c6b6caefefb973a1eddd1a",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/external_2x.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/external_2x.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/external_2x.png absPath of file",
      "internal": {
        "contentDigest": "93ed76553ae53a4c567ce595928c35ae",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/logo_og.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/logo_og.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/logo_og.png absPath of file",
      "internal": {
        "contentDigest": "cba0b89d2bf2d96a1ed26edb5849f804",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/logo_small.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/logo_small.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/logo_small.png absPath of file",
      "internal": {
        "contentDigest": "1e727cbeb19128d7e228c3b923268a0d",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/logo_small_2x.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/logo_small_2x.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/logo_small_2x.png absPath of file",
      "internal": {
        "contentDigest": "865e2781259889229dd32ec649051518",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/logo_small_gray.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/logo_small_gray.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/logo_small_gray.png absPath of file",
      "internal": {
        "contentDigest": "021ef9f4e00feeec42baa91aae80b89c",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/logo_small_gray_2x.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/logo_small_gray_2x.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/logo_small_gray_2x.png absPath of file",
      "internal": {
        "contentDigest": "cd272cd4dd80fe7ce8069353fbe5f0ca",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/noise.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/noise.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/noise.png absPath of file",
      "internal": {
        "contentDigest": "915749cd3d0bd959e00f5dd5627eb794",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/oss_logo.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/oss_logo.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/oss_logo.png absPath of file",
      "internal": {
        "contentDigest": "7c4422e43a85dfb456682c253834b72c",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/search.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/search.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/search.png absPath of file",
      "internal": {
        "contentDigest": "5da9d7d556adba5278cc696b3b4fd3d7",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/docs/codewinds-004.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/codewinds-004.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/docs/codewinds-004.png absPath of file",
      "internal": {
        "contentDigest": "f54dc1f82300ff7cbdaa921674d3ad79",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/docs/cdn-cors-header.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/cdn-cors-header.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/docs/cdn-cors-header.png absPath of file",
      "internal": {
        "contentDigest": "89baed0a6540f29e954065ce04661048",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/docs/devtools-prod.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/devtools-prod.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/docs/devtools-prod.png absPath of file",
      "internal": {
        "contentDigest": "d0f767f80866431ccdec18f200ca58f1",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/docs/devtools-dev.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/devtools-dev.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/docs/devtools-dev.png absPath of file",
      "internal": {
        "contentDigest": "e434ce2f7e64f63e597edf03f4465694",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/docs/error-boundaries-stack-trace.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/error-boundaries-stack-trace.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/docs/error-boundaries-stack-trace.png absPath of file",
      "internal": {
        "contentDigest": "f1276837b03821b43358d44c14072945",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/docs/implementation-notes-tree.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/implementation-notes-tree.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/docs/implementation-notes-tree.png absPath of file",
      "internal": {
        "contentDigest": "d96fec10d250eace9756f09543bf5d58",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/docs/javascript-jabber.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/javascript-jabber.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/docs/javascript-jabber.png absPath of file",
      "internal": {
        "contentDigest": "f4fc507df82b6d5bed9e3e598f52c01e",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/docs/keyboard-focus.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/keyboard-focus.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/docs/keyboard-focus.png absPath of file",
      "internal": {
        "contentDigest": "dec0e6bcc1f882baf76ebc860d4f04e5",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/docs/perf-dom.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/perf-dom.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/docs/perf-dom.png absPath of file",
      "internal": {
        "contentDigest": "57140a9924782c02dc7aac20042cf00d",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/docs/error-boundaries-stack-trace-line-numbers.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/error-boundaries-stack-trace-line-numbers.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/docs/error-boundaries-stack-trace-line-numbers.png absPath of file",
      "internal": {
        "contentDigest": "45611d4fdbd152829b28ae2348d6dcba",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/docs/perf-inclusive.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/perf-inclusive.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/docs/perf-inclusive.png absPath of file",
      "internal": {
        "contentDigest": "de71a97b6c44f7bd3a589a3f1d620525",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/docs/perf-wasted.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/perf-wasted.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/docs/perf-wasted.png absPath of file",
      "internal": {
        "contentDigest": "a241eb09d0fd90eb56f48666ce9be586",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/docs/perf-exclusive.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/perf-exclusive.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/docs/perf-exclusive.png absPath of file",
      "internal": {
        "contentDigest": "741b84218e9be133eca2e0ab98c36e85",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/docs/should-component-update.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/should-component-update.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/docs/should-component-update.png absPath of file",
      "internal": {
        "contentDigest": "5ee1bdf4779af06072a17b7a0654f6db",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/docs/thinking-in-react-tagtree.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/thinking-in-react-tagtree.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/docs/thinking-in-react-tagtree.png absPath of file",
      "internal": {
        "contentDigest": "ac19d27c424380e8bec63af22bf89661",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/tutorial/devtools.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/tutorial/devtools.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/tutorial/devtools.png absPath of file",
      "internal": {
        "contentDigest": "878d91461c78d8f238e116477dfe0b46",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/tutorial/tictac-empty.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/tutorial/tictac-empty.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/tutorial/tictac-empty.png absPath of file",
      "internal": {
        "contentDigest": "1566a4f8490d6b4b1ed36cd2c11fe4b6",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/tutorial/tictac-numbers.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/tutorial/tictac-numbers.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/tutorial/tictac-numbers.png absPath of file",
      "internal": {
        "contentDigest": "685df774da6da48f451356f33f4be8b2",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/animal-sounds.jpg absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/animal-sounds.jpg absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/animal-sounds.jpg absPath of file",
      "internal": {
        "contentDigest": "4618a7a003d000a3dd7f6e6733a36f7f",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/chatapp.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/chatapp.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/chatapp.png absPath of file",
      "internal": {
        "contentDigest": "75b8185edbfde871ee68f5bdcfb8a9e5",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/cra-pwa.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/cra-pwa.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/cra-pwa.png absPath of file",
      "internal": {
        "contentDigest": "cff5fa9b92de804e655ea669a53d4d9c",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/dog-tutorial.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/dog-tutorial.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/dog-tutorial.png absPath of file",
      "internal": {
        "contentDigest": "06130eab5bfa60ef72b5a8249ed07565",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/first-look.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/first-look.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/first-look.png absPath of file",
      "internal": {
        "contentDigest": "2fa9ac454433e7979c34d9924bdb5e63",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/flux-chart.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/flux-chart.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/flux-chart.png absPath of file",
      "internal": {
        "contentDigest": "2d495afb05a28c237d0dfc5c9133f4be",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/guess_filter.jpg absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/guess_filter.jpg absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/guess_filter.jpg absPath of file",
      "internal": {
        "contentDigest": "f43785b4e739e9b321be15192b6a9e42",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/jsx-compiler.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/jsx-compiler.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/jsx-compiler.png absPath of file",
      "internal": {
        "contentDigest": "37ce6d8aee23d1828ba57953662522fe",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/kendoui.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/kendoui.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/kendoui.png absPath of file",
      "internal": {
        "contentDigest": "f224061339f4e67b1a4db564e45f0361",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/khan-academy-editor.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/khan-academy-editor.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/khan-academy-editor.png absPath of file",
      "internal": {
        "contentDigest": "6766b99a660aad664aadd0fb63983ebe",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/lights-out.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/lights-out.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/lights-out.png absPath of file",
      "internal": {
        "contentDigest": "e52d4d2e3aabc23b2e91f37049044467",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/makona-editor.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/makona-editor.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/makona-editor.png absPath of file",
      "internal": {
        "contentDigest": "3b358d6c45562d5595b516172bd942b0",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/markdown_refactor.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/markdown_refactor.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/markdown_refactor.png absPath of file",
      "internal": {
        "contentDigest": "783ad0cd251ae63e77cdac409f51ec1a",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/parse-react.jpg absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/parse-react.jpg absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/parse-react.jpg absPath of file",
      "internal": {
        "contentDigest": "0cf345b88603272a491839c586ccf385",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/ngreact.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/ngreact.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/ngreact.png absPath of file",
      "internal": {
        "contentDigest": "e60b0ac55b3643b99cc93e280a66f0b6",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/propeller-logo.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/propeller-logo.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/propeller-logo.png absPath of file",
      "internal": {
        "contentDigest": "0dc638d3c8982f1168970d0e17ab2fc7",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/property-finder.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/property-finder.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/property-finder.png absPath of file",
      "internal": {
        "contentDigest": "6e28878b4ef469a53735b49665fd7b93",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/quiztime.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/quiztime.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/quiztime.png absPath of file",
      "internal": {
        "contentDigest": "87c3ca8abe022b961986036616c132ba",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/react-browserify-gulp.jpg absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/react-browserify-gulp.jpg absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/react-browserify-gulp.jpg absPath of file",
      "internal": {
        "contentDigest": "7873a26312d1d592042c1dcd5e756bd4",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/react-diff-tree.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/react-diff-tree.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/react-diff-tree.png absPath of file",
      "internal": {
        "contentDigest": "8442f993f1c4cf9edd4e4315fc6d32a5",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/react-draggable.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/react-draggable.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/react-draggable.png absPath of file",
      "internal": {
        "contentDigest": "14c204c6a463067ab43d3a17dbe41925",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/react-hackathon.jpg absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/react-hackathon.jpg absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/react-hackathon.jpg absPath of file",
      "internal": {
        "contentDigest": "16bbe4b6c8d5939f92e6a7c9afca22c2",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/react-page.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/react-page.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/react-page.png absPath of file",
      "internal": {
        "contentDigest": "01b89cb5c9975b566dfbc3dc1c74299f",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/react-php.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/react-php.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/react-php.png absPath of file",
      "internal": {
        "contentDigest": "b5fff9e81996175f90c9de3e1a89018f",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/reactive-bookmarklet.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/reactive-bookmarklet.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/reactive-bookmarklet.png absPath of file",
      "internal": {
        "contentDigest": "6551549bffc01c354de58e2e2c52dcef",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/reflux-flux.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/reflux-flux.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/reflux-flux.png absPath of file",
      "internal": {
        "contentDigest": "d3e5d0171e6314fdff557935cd5529ae",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/react-svg-fbp.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/react-svg-fbp.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/react-svg-fbp.png absPath of file",
      "internal": {
        "contentDigest": "c6e36bd8c08ad65a23cdb74716dd8055",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/release-script-build-overview.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/release-script-build-overview.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/release-script-build-overview.png absPath of file",
      "internal": {
        "contentDigest": "adca79c3a0e003b317fe62e68ce9d4a0",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/resistance-calculator.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/resistance-calculator.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/resistance-calculator.png absPath of file",
      "internal": {
        "contentDigest": "d8672fc477cbb202b53c2b23b7827bd0",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/snake.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/snake.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/snake.png absPath of file",
      "internal": {
        "contentDigest": "f7ff77c7e9a43b2553ab601a0df23d61",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/sweet-jsx.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/sweet-jsx.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/sweet-jsx.png absPath of file",
      "internal": {
        "contentDigest": "fd70471ea0b23dc270959134e3baf136",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/strict-mode-unsafe-lifecycles-warning.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/strict-mode-unsafe-lifecycles-warning.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/strict-mode-unsafe-lifecycles-warning.png absPath of file",
      "internal": {
        "contentDigest": "e4fdbff774b356881123e69ad88eda88",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/tcomb-react-native.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/tcomb-react-native.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/tcomb-react-native.png absPath of file",
      "internal": {
        "contentDigest": "afd9ed207a25a624627fa13ae18139a0",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/thinking-in-react-components.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/thinking-in-react-components.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/thinking-in-react-components.png absPath of file",
      "internal": {
        "contentDigest": "eb8bda25806a89ebdc838813bdfa3601",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/thinking-in-react-mock.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/thinking-in-react-mock.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/thinking-in-react-mock.png absPath of file",
      "internal": {
        "contentDigest": "1071fbcc9eed01fddc115b41e193ec11",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/todomvc.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/todomvc.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/todomvc.png absPath of file",
      "internal": {
        "contentDigest": "d2c3b90797c16ad85c4a782bb7af4466",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/turboreact.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/turboreact.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/turboreact.png absPath of file",
      "internal": {
        "contentDigest": "5edcabbaa9ea84c0267c62e69efcb513",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/tutsplus.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/tutsplus.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/tutsplus.png absPath of file",
      "internal": {
        "contentDigest": "665d6cdd9250ec273690046a14392189",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/unite.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/unite.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/unite.png absPath of file",
      "internal": {
        "contentDigest": "15b2439e1b8523156ef985b3855a83ba",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/versioning-1.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/versioning-1.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/versioning-1.png absPath of file",
      "internal": {
        "contentDigest": "899ef384f039caa51a9f58b621828d7e",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/versioning-2.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/versioning-2.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/versioning-2.png absPath of file",
      "internal": {
        "contentDigest": "90b0bb4245cfdf42bff9db6f496b75bd",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/versioning-3.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/versioning-3.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/versioning-3.png absPath of file",
      "internal": {
        "contentDigest": "7575ed187d0a8ec68ec68169720d0f27",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/versioning-4.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/versioning-4.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/versioning-4.png absPath of file",
      "internal": {
        "contentDigest": "d8dd49a51f663d1b96c8b3ac27749f78",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/versioning-5.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/versioning-5.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/versioning-5.png absPath of file",
      "internal": {
        "contentDigest": "b7e3bc7d2d111e92cfeb45ec0b361faa",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/versioning-6.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/versioning-6.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/versioning-6.png absPath of file",
      "internal": {
        "contentDigest": "ec08ea1a53fcb540a5930a3f1f231bf8",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/weather.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/weather.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/weather.png absPath of file",
      "internal": {
        "contentDigest": "8f130f2a80f0e7d4b07d59554f957ec6",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/versioning-poll.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/versioning-poll.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/versioning-poll.png absPath of file",
      "internal": {
        "contentDigest": "b770014ccb13dbca11ddd0bbb5353319",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/xreact.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/xreact.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/xreact.png absPath of file",
      "internal": {
        "contentDigest": "f9207adea125403fe928594ccb67a539",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/relay-components/relay-containers-data-flow.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/relay-components/relay-containers-data-flow.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/relay-components/relay-containers-data-flow.png absPath of file",
      "internal": {
        "contentDigest": "46e660a80043eb9e7a4ea27b3562d4a7",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/relay-components/relay-containers.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/relay-components/relay-containers.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/relay-components/relay-containers.png absPath of file",
      "internal": {
        "contentDigest": "4e4a71a85b278968b8719601692bc18c",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/relay-components/relay-architecture.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/relay-components/relay-architecture.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/relay-components/relay-architecture.png absPath of file",
      "internal": {
        "contentDigest": "1c7e934642028c84d5af545a945394ef",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/relay-components/sample-newsfeed.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/relay-components/sample-newsfeed.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/relay-components/sample-newsfeed.png absPath of file",
      "internal": {
        "contentDigest": "75bc0f3653210df5df2c21a706cab9eb",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/compiled-successfully.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/compiled-successfully.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/compiled-successfully.png absPath of file",
      "internal": {
        "contentDigest": "be1531bce6379ad2d464c28ee4f8b857",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/cra-better-output.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/cra-better-output.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/cra-better-output.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "5d3b4caf2ae115ca4ab1f15e6e19680d",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/cra-better-output.png",
      "relativePath": "images/blog/cra-better-output.png",
      "extension": "png",
      "size": 149892,
      "prettySize": "150 kB",
      "modifiedTime": "2019-05-08T09:41:08.611Z",
      "accessTime": "2019-05-08T09:41:12.650Z",
      "changeTime": "2019-05-08T09:41:08.611Z",
      "birthTime": "2019-05-08T09:41:08.611Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "cra-better-output.png",
      "ext": ".png",
      "name": "cra-better-output",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226130,
      "blocks": 296,
      "atimeMs": 1557308472649.9534,
      "mtimeMs": 1557308468611.427,
      "ctimeMs": 1557308468611.427,
      "birthtimeMs": 1557308468611.3467,
      "atime": "2019-05-08T09:41:12.650Z",
      "mtime": "2019-05-08T09:41:08.611Z",
      "ctime": "2019-05-08T09:41:08.611Z",
      "birthtime": "2019-05-08T09:41:08.611Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/genesis_skeleton.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/genesis_skeleton.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/genesis_skeleton.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "259206cbb4fb491a332101fe243eed3c",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/genesis_skeleton.png",
      "relativePath": "images/blog/genesis_skeleton.png",
      "extension": "png",
      "size": 145981,
      "prettySize": "146 kB",
      "modifiedTime": "2019-05-08T09:41:08.661Z",
      "accessTime": "2019-05-08T09:41:12.694Z",
      "changeTime": "2019-05-08T09:41:08.661Z",
      "birthTime": "2019-05-08T09:41:08.661Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "genesis_skeleton.png",
      "ext": ".png",
      "name": "genesis_skeleton",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226150,
      "blocks": 288,
      "atimeMs": 1557308472693.8245,
      "mtimeMs": 1557308468661.496,
      "ctimeMs": 1557308468661.496,
      "birthtimeMs": 1557308468661.4028,
      "atime": "2019-05-08T09:41:12.694Z",
      "mtime": "2019-05-08T09:41:08.661Z",
      "ctime": "2019-05-08T09:41:08.661Z",
      "birthtime": "2019-05-08T09:41:08.661Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/flux-diagram.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/flux-diagram.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/flux-diagram.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "b4643456a3de61c8352415a6fc171876",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/flux-diagram.png",
      "relativePath": "images/blog/flux-diagram.png",
      "extension": "png",
      "size": 133192,
      "prettySize": "133 kB",
      "modifiedTime": "2019-05-08T09:41:08.661Z",
      "accessTime": "2019-05-08T09:41:12.693Z",
      "changeTime": "2019-05-08T09:41:08.661Z",
      "birthTime": "2019-05-08T09:41:08.661Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "flux-diagram.png",
      "ext": ".png",
      "name": "flux-diagram",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226149,
      "blocks": 264,
      "atimeMs": 1557308472693.1995,
      "mtimeMs": 1557308468661.07,
      "ctimeMs": 1557308468661.07,
      "birthtimeMs": 1557308468660.9956,
      "atime": "2019-05-08T09:41:12.693Z",
      "mtime": "2019-05-08T09:41:08.661Z",
      "ctime": "2019-05-08T09:41:08.661Z",
      "birthtime": "2019-05-08T09:41:08.661Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/relay-visual-architecture-tour.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/relay-visual-architecture-tour.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/relay-visual-architecture-tour.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "e0dc3c84310229dedcb20fbb5c7bf25a",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/relay-visual-architecture-tour.png",
      "relativePath": "images/blog/relay-visual-architecture-tour.png",
      "extension": "png",
      "size": 132058,
      "prettySize": "132 kB",
      "modifiedTime": "2019-05-08T09:41:08.690Z",
      "accessTime": "2019-05-08T09:41:12.718Z",
      "changeTime": "2019-05-08T09:41:08.690Z",
      "birthTime": "2019-05-08T09:41:08.689Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "relay-visual-architecture-tour.png",
      "ext": ".png",
      "name": "relay-visual-architecture-tour",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226189,
      "blocks": 264,
      "atimeMs": 1557308472717.815,
      "mtimeMs": 1557308468689.5066,
      "ctimeMs": 1557308468689.5066,
      "birthtimeMs": 1557308468689.3564,
      "atime": "2019-05-08T09:41:12.718Z",
      "mtime": "2019-05-08T09:41:08.690Z",
      "ctime": "2019-05-08T09:41:08.690Z",
      "birthtime": "2019-05-08T09:41:08.689Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/xoxo2013.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/xoxo2013.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/xoxo2013.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "c49a2228158e7329a62e140b3ae56b81",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/xoxo2013.png",
      "relativePath": "images/blog/xoxo2013.png",
      "extension": "png",
      "size": 172371,
      "prettySize": "172 kB",
      "modifiedTime": "2019-05-08T09:41:08.732Z",
      "accessTime": "2019-05-08T09:41:12.755Z",
      "changeTime": "2019-05-08T09:41:08.732Z",
      "birthTime": "2019-05-08T09:41:08.732Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "xoxo2013.png",
      "ext": ".png",
      "name": "xoxo2013",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226215,
      "blocks": 344,
      "atimeMs": 1557308472754.629,
      "mtimeMs": 1557308468731.87,
      "ctimeMs": 1557308468731.87,
      "birthtimeMs": 1557308468731.7527,
      "atime": "2019-05-08T09:41:12.755Z",
      "mtime": "2019-05-08T09:41:08.732Z",
      "ctime": "2019-05-08T09:41:08.732Z",
      "birthtime": "2019-05-08T09:41:08.732Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/compiled-with-warnings.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/compiled-with-warnings.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/compiled-with-warnings.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "29d85c69eb1a92345d129bd6354cfdd7",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/compiled-with-warnings.png",
      "relativePath": "images/blog/create-apps-with-no-configuration/compiled-with-warnings.png",
      "extension": "png",
      "size": 138371,
      "prettySize": "138 kB",
      "modifiedTime": "2019-05-08T09:41:08.642Z",
      "accessTime": "2019-05-08T09:41:12.677Z",
      "changeTime": "2019-05-08T09:41:08.642Z",
      "birthTime": "2019-05-08T09:41:08.642Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration",
      "base": "compiled-with-warnings.png",
      "ext": ".png",
      "name": "compiled-with-warnings",
      "relativeDirectory": "images/blog/create-apps-with-no-configuration",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226138,
      "blocks": 272,
      "atimeMs": 1557308472677.3496,
      "mtimeMs": 1557308468641.5967,
      "ctimeMs": 1557308468641.5967,
      "birthtimeMs": 1557308468641.5034,
      "atime": "2019-05-08T09:41:12.677Z",
      "mtime": "2019-05-08T09:41:08.642Z",
      "ctime": "2019-05-08T09:41:08.642Z",
      "birthtime": "2019-05-08T09:41:08.642Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/failed-to-compile.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/failed-to-compile.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/failed-to-compile.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "71717aaf13cf34cfdb4e6b7e6742fb64",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/failed-to-compile.png",
      "relativePath": "images/blog/create-apps-with-no-configuration/failed-to-compile.png",
      "extension": "png",
      "size": 139773,
      "prettySize": "140 kB",
      "modifiedTime": "2019-05-08T09:41:08.644Z",
      "accessTime": "2019-05-08T09:41:12.679Z",
      "changeTime": "2019-05-08T09:41:08.644Z",
      "birthTime": "2019-05-08T09:41:08.644Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration",
      "base": "failed-to-compile.png",
      "ext": ".png",
      "name": "failed-to-compile",
      "relativeDirectory": "images/blog/create-apps-with-no-configuration",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226140,
      "blocks": 280,
      "atimeMs": 1557308472678.6265,
      "mtimeMs": 1557308468643.6533,
      "ctimeMs": 1557308468643.6533,
      "birthtimeMs": 1557308468643.5627,
      "atime": "2019-05-08T09:41:12.679Z",
      "mtime": "2019-05-08T09:41:08.644Z",
      "ctime": "2019-05-08T09:41:08.644Z",
      "birthtime": "2019-05-08T09:41:08.644Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/devtools-tree-view.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/devtools-tree-view.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/devtools-tree-view.png absPath of file",
      "internal": {
        "contentDigest": "e6fb2a1f2ea4b574edf85c8fc8c6f571",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/hacker-news-react-native.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/hacker-news-react-native.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/hacker-news-react-native.png absPath of file",
      "internal": {
        "contentDigest": "d95824e8653ed44f2baa8420276fc116",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/landoflisp.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/landoflisp.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/landoflisp.png absPath of file",
      "internal": {
        "contentDigest": "5439e8d50448bcd20ad4c93c5b8eb9a3",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/om-backbone.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/om-backbone.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/om-backbone.png absPath of file",
      "internal": {
        "contentDigest": "334ad2139d1fc85a09b69771780e90b4",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/polarr.jpg absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/polarr.jpg absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/polarr.jpg absPath of file",
      "internal": {
        "contentDigest": "83d861c089a5f23cfb42f12966976acf",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/react-50k-mock-full.jpg absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/react-50k-mock-full.jpg absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/react-50k-mock-full.jpg absPath of file",
      "internal": {
        "contentDigest": "e73d427ee119099a43177231e3486625",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/react-50k-mock.jpg absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/react-50k-mock.jpg absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/react-50k-mock.jpg absPath of file",
      "internal": {
        "contentDigest": "4c980ebecab37b61a1f7db2f95d91b96",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/react-dev-tools.jpg absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/react-dev-tools.jpg absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/react-dev-tools.jpg absPath of file",
      "internal": {
        "contentDigest": "5f54a3494dc3c629a78953d2ccea6ae3",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/react-perf-chrome-timeline.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/react-perf-chrome-timeline.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/react-perf-chrome-timeline.png absPath of file",
      "internal": {
        "contentDigest": "64d522b74fb585f1abada9801f85fa9d",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/release-script-build-confirmation.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/release-script-build-confirmation.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/release-script-build-confirmation.png absPath of file",
      "internal": {
        "contentDigest": "17f44f353d82a22f6a18707956ad065f",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/release-script-publish-confirmation.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/release-script-publish-confirmation.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/release-script-publish-confirmation.png absPath of file",
      "internal": {
        "contentDigest": "a3846d4b3e50d29415846b58612310f2",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/skills-matter.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/skills-matter.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/skills-matter.png absPath of file",
      "internal": {
        "contentDigest": "fd557144f90c6eabb680d1247345e520",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/wolfenstein_react.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/wolfenstein_react.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/wolfenstein_react.png absPath of file",
      "internal": {
        "contentDigest": "a1e0d13a915d083c08c19c77b39a64de",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/npm-run-build.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/npm-run-build.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/npm-run-build.png absPath of file",
      "internal": {
        "contentDigest": "a2138f74bd9969980c35c50936c6217d",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/created-folder.png absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/created-folder.png absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/created-folder.png absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "b5996203fe38b91567eaa57139964146",
        "mediaType": "image/png",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/created-folder.png",
      "relativePath": "images/blog/create-apps-with-no-configuration/created-folder.png",
      "extension": "png",
      "size": 139220,
      "prettySize": "139 kB",
      "modifiedTime": "2019-05-08T09:41:08.643Z",
      "accessTime": "2019-05-08T09:41:12.678Z",
      "changeTime": "2019-05-08T09:41:08.643Z",
      "birthTime": "2019-05-08T09:41:08.643Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration",
      "base": "created-folder.png",
      "ext": ".png",
      "name": "created-folder",
      "relativeDirectory": "images/blog/create-apps-with-no-configuration",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226139,
      "blocks": 272,
      "atimeMs": 1557308472677.9875,
      "mtimeMs": 1557308468642.5933,
      "ctimeMs": 1557308468642.5933,
      "birthtimeMs": 1557308468642.5017,
      "atime": "2019-05-08T09:41:12.678Z",
      "mtime": "2019-05-08T09:41:08.643Z",
      "ctime": "2019-05-08T09:41:08.643Z",
      "birthtime": "2019-05-08T09:41:08.643Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/cra-better-output.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/cra-better-output.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/cra-better-output.png absPath of file",
      "internal": {
        "contentDigest": "5d3b4caf2ae115ca4ab1f15e6e19680d",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/genesis_skeleton.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/genesis_skeleton.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/genesis_skeleton.png absPath of file",
      "internal": {
        "contentDigest": "259206cbb4fb491a332101fe243eed3c",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/flux-diagram.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/flux-diagram.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/flux-diagram.png absPath of file",
      "internal": {
        "contentDigest": "b4643456a3de61c8352415a6fc171876",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/relay-visual-architecture-tour.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/relay-visual-architecture-tour.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/relay-visual-architecture-tour.png absPath of file",
      "internal": {
        "contentDigest": "e0dc3c84310229dedcb20fbb5c7bf25a",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/xoxo2013.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/xoxo2013.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/xoxo2013.png absPath of file",
      "internal": {
        "contentDigest": "c49a2228158e7329a62e140b3ae56b81",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/compiled-with-warnings.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/compiled-with-warnings.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/compiled-with-warnings.png absPath of file",
      "internal": {
        "contentDigest": "29d85c69eb1a92345d129bd6354cfdd7",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/failed-to-compile.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/failed-to-compile.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/failed-to-compile.png absPath of file",
      "internal": {
        "contentDigest": "71717aaf13cf34cfdb4e6b7e6742fb64",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/created-folder.png absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/created-folder.png absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/create-apps-with-no-configuration/created-folder.png absPath of file",
      "internal": {
        "contentDigest": "b5996203fe38b91567eaa57139964146",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/index.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/index.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/index.md absPath of file",
      "internal": {
        "content": "---\nlayout: hero\ntitle: 用于构建用户界面的 JavaScript 库\nid: home\n---\n\n\n<section class=\"light home-section\">\n  <div class=\"marketing-row\">\n    <div class=\"marketing-col\">\n      <h3>声明式</h3>\n      <p>React 可以非常轻松地创建用户交互界面。为你应用的每一个状态设计简洁的视图，在数据改变时 React 也可以高效地更新渲染界面。</p>\n      <p>以声明式编写UI，可以让你的代码更加可靠，且方便调试。</p>\n    </div>\n    <div class=\"marketing-col\">\n      <h3>组件化</h3>\n      <p>创建好拥有各自状态的组件，再由组件构成更加复杂的界面。</p>\n      <p>无需再用模版代码，通过使用JavaScript编写的组件你可以更好地传递数据，将应用状态和DOM拆分开来。</p>\n    </div>\n    <div class=\"marketing-col\">\n      <h3>一次学习，随处编写</h3>\n      <p>无论你现在正在使用什么技术栈，你都可以随时引入 React 开发新特性。</p>\n      <p>React 也可以用作开发原生应用的框架 <a href=\"https://facebook.github.io/react-native/\">React Native</a>.</p>\n    </div>\n  </div>\n</section>\n<hr class=\"home-divider\" />\n<section class=\"home-section\">\n  <div id=\"examples\">\n    <div class=\"example\">\n      <h3>组件</h3>\n      <p>\n        React 组件使用一个名为 `render()` 的方法， 接收数据作为输入，输出页面中对应展示的内容。 下面这个示例中类似XML的写法被称为JSX. 输入的数据通过 `this.props` 传入 `render()` 方法。\n      </p>\n      <p>\n        <strong>使用 React 的时候也可以不使用 JSX 语法</strong>\n        你可以在\n        <a href=\"http://babeljs.io/repl#?babili=false&browsers=&build=&builtIns=false&code_lz=MYGwhgzhAEASCmIQHsCy8pgOb2vAHgC7wB2AJjAErxjCEB0AwsgLYAOyJph0A3gFABIAE6ky8YQAoAlHyEj4hAK7CS0ADxkAlgDcAfAiTI-hABZaI9NsORtLJMC3gBfdQHpt-gNxDn_P_zUtIQAIgDyqPSi5BKS6oYo6Jg40A5OALwARCHwOlokmdBuegA00CzISiSEAHLI4tJeQA&debug=false&circleciRepo=&evaluate=false&lineWrap=false&presets=react&prettier=true&targets=&version=6.26.0\">Babel REPL</a>\n        查看 JSX 是如何被渲染成原生 JavaScript 代码的。\n      </p>\n      <div id=\"helloExample\"></div>\n    </div>\n    <div class=\"example\">\n      <h3>有状态组件</h3>\n      <p>\n        除了使用外部传入的数据以外 (通过 `this.props` 访问传入数据), 组件还可以拥有其内部的状态数据 (通过 `this.state` 访问状态数据)。\n        当组件的状态数据改变时， 组件会调用 `render()` 方法重新渲染。\n      </p>\n      <div id=\"timerExample\"></div>\n    </div>\n    <div class=\"example\">\n      <h3>应用</h3>\n      <p>\n        使用 `props` 和 `state`, 我们可以创建一个简易的 Todo 应用。\n        下面这个示例中，我们使用 `state` 来保存现有的待办事项列表及用户的输入。 与此同时，我们也使用了内联的方法添加了事件处理函数，它们将通过事件代理被收集和调用。\n      </p>\n      <div id=\"todoExample\"></div>\n    </div>\n    <div class=\"example\">\n      <h3>在组件中使用第三方库</h3>\n      <p>\n        React 的使用非常灵活，并且提供了可以调用其他第三方框架或库的接口。下面这个示例就使用了一个用来渲染markdown语法，名为 **remarkable** 的库。\n      </p>\n      <div id=\"markdownExample\"></div>\n    </div>\n  </div>\n</section>\n",
        "type": "MarkdownRemark",
        "contentDigest": "15301bc5029df1f55f77197c786bb1af",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "用于构建用户界面的 JavaScript 库",
        "layout": "hero",
        "id": "home",
        "_PARENT": "/Users/yubolun/Desktop/react/content/index.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/index.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/index.md",
      "fields": {
        "slug": "/index.html",
        "path": "index.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/404.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/404.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/404.md absPath of file",
      "internal": {
        "content": "---\nlayout: single\ntitle: Page Not Found\npermalink: 404.html\n---\n\n你似乎来到了没有文档存在的荒原...\n\n[点击这里返回文档主页](/)\n",
        "type": "MarkdownRemark",
        "contentDigest": "812c212cced047162a1ab4bd6b452d80",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Page Not Found",
        "layout": "single",
        "permalink": "404.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/404.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/404.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/404.md",
      "fields": {
        "slug": "404.html",
        "path": "404.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/community/articles.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/community/articles.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/community/articles.md absPath of file",
      "internal": {
        "content": "---\nid: articles\ntitle: Articles\nlayout: community\nsectionid: community\npermalink: community/articles.html\n---\n\n- [React How-to](https://github.com/petehunt/react-howto) - Pete Hunt's guide to the React ecosystem.\n- [9 things every React.js beginner should know](https://camjackson.net/post/9-things-every-reactjs-beginner-should-know) - Cam Jackson's guide for beginners.\n- [React \"Aha\" Moments](https://tylermcginnis.com/react-aha-moments/) - Tyler McGinnis' article on his collection of \"Aha\" moments with React.\n- [You're missing the point of React](https://medium.com/@dan_abramov/youre-missing-the-point-of-react-a20e34a51e1a) - Dan Abramov's article about the best parts of React.\n- [Timeline for Learning React](https://daveceddia.com/timeline-for-learning-react/) - Dave Ceddia's reccommended timeline for learning React and the React ecosystem.\n- [Simple React Development in 2017](https://hackernoon.com/simple-react-development-in-2017-113bd563691f) - Joshua Comeau's guide to showcase how easy it can be to start modern React development.\n- [React FAQ](https://reactfaq.site/) - An external site with articles that try to answer frequently asked questions about React.\n- [Visual Guide to State in React](https://daveceddia.com/visual-guide-to-state-in-react/) - Dave Ceddia's visual guide to React state.\n",
        "type": "MarkdownRemark",
        "contentDigest": "d1f094cf8537c48e53eb0217128409ff",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Articles",
        "id": "articles",
        "layout": "community",
        "sectionid": "community",
        "permalink": "community/articles.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/community/articles.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/community/articles.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/community/articles.md",
      "fields": {
        "slug": "community/articles.html",
        "path": "community/articles.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/community/complementary-tools.it-IT.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/community/complementary-tools.it-IT.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/community/complementary-tools.it-IT.md absPath of file",
      "internal": {
        "content": "---\npermalink: docs/complementary-tools-it-IT.html\nlayout: redirect\ndest_url: https://github.com/facebook/react/wiki/Complementary-Tools\n---\n",
        "type": "MarkdownRemark",
        "contentDigest": "47614806af9e2588186f63c8d9065887",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "",
        "permalink": "docs/complementary-tools-it-IT.html",
        "layout": "redirect",
        "dest_url": "https://github.com/facebook/react/wiki/Complementary-Tools",
        "_PARENT": "/Users/yubolun/Desktop/react/content/community/complementary-tools.it-IT.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/community/complementary-tools.it-IT.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/community/complementary-tools.it-IT.md",
      "fields": {
        "slug": "docs/complementary-tools-it-IT.html",
        "path": "community/complementary-tools.it-IT.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/community/complementary-tools.zh-CN.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/community/complementary-tools.zh-CN.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/community/complementary-tools.zh-CN.md absPath of file",
      "internal": {
        "content": "---\npermalink: docs/complementary-tools-zh-CN.html\nlayout: redirect\ndest_url: https://github.com/facebook/react/wiki/Complementary-Tools\n---\n",
        "type": "MarkdownRemark",
        "contentDigest": "4612c54558a0c59c3922129ec0075e6d",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "",
        "permalink": "docs/complementary-tools-zh-CN.html",
        "layout": "redirect",
        "dest_url": "https://github.com/facebook/react/wiki/Complementary-Tools",
        "_PARENT": "/Users/yubolun/Desktop/react/content/community/complementary-tools.zh-CN.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/community/complementary-tools.zh-CN.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/community/complementary-tools.zh-CN.md",
      "fields": {
        "slug": "docs/complementary-tools-zh-CN.html",
        "path": "community/complementary-tools.zh-CN.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/community/complementary-tools.ko-KR.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/community/complementary-tools.ko-KR.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/community/complementary-tools.ko-KR.md absPath of file",
      "internal": {
        "content": "---\npermalink: docs/complementary-tools-ko-KR.html\nlayout: redirect\ndest_url: https://github.com/facebook/react/wiki/Complementary-Tools\n---\n",
        "type": "MarkdownRemark",
        "contentDigest": "891c8c5b0bd825d6b307259c0b25d70e",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "",
        "permalink": "docs/complementary-tools-ko-KR.html",
        "layout": "redirect",
        "dest_url": "https://github.com/facebook/react/wiki/Complementary-Tools",
        "_PARENT": "/Users/yubolun/Desktop/react/content/community/complementary-tools.ko-KR.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/community/complementary-tools.ko-KR.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/community/complementary-tools.ko-KR.md",
      "fields": {
        "slug": "docs/complementary-tools-ko-KR.html",
        "path": "community/complementary-tools.ko-KR.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/community/conferences.it-IT.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/community/conferences.it-IT.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/community/conferences.it-IT.md absPath of file",
      "internal": {
        "content": "---\nid: conferences-it-IT\ntitle: Conferenze\npermalink: docs/conferences-it-IT.html\nprev: thinking-in-react-it-IT.html\nnext: videos-it-IT.html\n---\n\n### React.js Conf 2015\n28 e 29 Gennaio\n\n[Sito web](http://conf.reactjs.com/) - [Agenda](http://conf.reactjs.com/schedule.html) - [Video](https://www.youtube-nocookie.com/playlist?list=PLb0IAmt7-GS1cbw4qonlQztYV1TAW0sCr)\n\n<iframe width=\"650\" height=\"315\" src=\"//www.youtube-nocookie.com/embed/KVZ-P-ZI6W4?list=PLb0IAmt7-GS1cbw4qonlQztYV1TAW0sCr\" frameborder=\"0\" allowfullscreen></iframe>\n\n### ReactEurope 2015\n2 e 3 Luglio\n\n[Sito web](http://www.react-europe.org/) - [Agenda](http://www.react-europe.org/#schedule)\n",
        "type": "MarkdownRemark",
        "contentDigest": "d348ecfe423d23bb31dd3f600579e554",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Conferenze",
        "id": "conferences-it-IT",
        "permalink": "docs/conferences-it-IT.html",
        "prev": "thinking-in-react-it-IT.html",
        "next": "videos-it-IT.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/community/conferences.it-IT.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/community/conferences.it-IT.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/community/conferences.it-IT.md",
      "fields": {
        "slug": "docs/conferences-it-IT.html",
        "path": "community/conferences.it-IT.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/community/complementary-tools.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/community/complementary-tools.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/community/complementary-tools.md absPath of file",
      "internal": {
        "content": "---\npermalink: docs/complementary-tools.html\nlayout: redirect\ndest_url: https://github.com/facebook/react/wiki/Complementary-Tools\n---\n",
        "type": "MarkdownRemark",
        "contentDigest": "f8c572618ad235967f11ee0c1f697291",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "",
        "permalink": "docs/complementary-tools.html",
        "layout": "redirect",
        "dest_url": "https://github.com/facebook/react/wiki/Complementary-Tools",
        "_PARENT": "/Users/yubolun/Desktop/react/content/community/complementary-tools.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/community/complementary-tools.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/community/complementary-tools.md",
      "fields": {
        "slug": "docs/complementary-tools.html",
        "path": "community/complementary-tools.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/community/conferences.ko-KR.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/community/conferences.ko-KR.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/community/conferences.ko-KR.md absPath of file",
      "internal": {
        "content": "---\nid: conferences-ko-KR\ntitle: 컨퍼런스들\npermalink: docs/conferences-ko-KR.html\nprev: thinking-in-react-ko-KR.html\nnext: videos-ko-KR.html\n---\n\n### React.js Conf 2015\n1월 28일 & 29일\n\n[웹사이트](http://conf.reactjs.com/) - [스케줄](http://conf.reactjs.com/schedule.html) - [비디오들](https://www.youtube-nocookie.com/playlist?list=PLb0IAmt7-GS1cbw4qonlQztYV1TAW0sCr)\n\n<iframe width=\"650\" height=\"315\" src=\"//www.youtube-nocookie.com/embed/KVZ-P-ZI6W4?list=PLb0IAmt7-GS1cbw4qonlQztYV1TAW0sCr\" frameborder=\"0\" allowfullscreen></iframe>\n\n### ReactEurope 2015\n7월 2일 & 3일\n\n[웹사이트](http://www.react-europe.org/) - [스케줄](http://www.react-europe.org/#schedule)\n",
        "type": "MarkdownRemark",
        "contentDigest": "df9ca85ba5c7622e653a1df9568b970d",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "컨퍼런스들",
        "id": "conferences-ko-KR",
        "permalink": "docs/conferences-ko-KR.html",
        "prev": "thinking-in-react-ko-KR.html",
        "next": "videos-ko-KR.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/community/conferences.ko-KR.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/community/conferences.ko-KR.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/community/conferences.ko-KR.md",
      "fields": {
        "slug": "docs/conferences-ko-KR.html",
        "path": "community/conferences.ko-KR.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/community/conferences.zh-CN.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/community/conferences.zh-CN.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/community/conferences.zh-CN.md absPath of file",
      "internal": {
        "content": "---\nid: conferences-zh-CN\ntitle: 会议\npermalink: docs/conferences-zh-CN.html\nprev: thinking-in-react-zh-CN.html\nnext: videos-zh-CN.html\n---\n\n### React.js Conf 2015\n一月 28 & 29\n\n[Website](http://conf.reactjs.com/) - [Schedule](http://conf.reactjs.com/schedule.html) - [Videos](https://www.youtube-nocookie.com/playlist?list=PLb0IAmt7-GS1cbw4qonlQztYV1TAW0sCr)\n\n<iframe width=\"650\" height=\"315\" src=\"//www.youtube-nocookie.com/embed/KVZ-P-ZI6W4?list=PLb0IAmt7-GS1cbw4qonlQztYV1TAW0sCr\" frameborder=\"0\" allowfullscreen></iframe>\n\n### ReactEurope 2015\n七月 2 & 3\n\n[Website](http://www.react-europe.org/) - [Schedule](http://www.react-europe.org/#schedule)\n\n### Reactive 2015\n十一月 2-4\n\n[Website](https://reactive2015.com/) - [Schedule](https://reactive2015.com/schedule_speakers.html#schedule)\n\n### ReactEurope 2016\n六月 2 & 3\n\n[Website](http://www.react-europe.org/) - [Schedule](http://www.react-europe.org/#schedule)\n",
        "type": "MarkdownRemark",
        "contentDigest": "d342fd67afdefc385de14248c0523c4d",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "会议",
        "id": "conferences-zh-CN",
        "permalink": "docs/conferences-zh-CN.html",
        "prev": "thinking-in-react-zh-CN.html",
        "next": "videos-zh-CN.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/community/conferences.zh-CN.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/community/conferences.zh-CN.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/community/conferences.zh-CN.md",
      "fields": {
        "slug": "docs/conferences-zh-CN.html",
        "path": "community/conferences.zh-CN.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/community/courses.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/community/courses.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/community/courses.md absPath of file",
      "internal": {
        "content": "---\nid: courses\ntitle: Courses\nlayout: community\nsectionid: community\npermalink: community/courses.html\n---\n\n## Free Courses\n\n- [Codecademy: React 101](https://www.codecademy.com/learn/react-101) - Codecademy's introductory course for React.\n\n- [Egghead.io: Start Learning React](https://egghead.io/courses/start-learning-react) - This series will explore the basic fundamentals of React to get you started.\n\n- [React Crash Course 2018](https://www.youtube.com/watch?v=Ke90Tje7VS0) - A beginner-friendly crash course through the most important React topics.\n\n- [React Armory: Learn React by Itself](https://reactarmory.com/guides/learn-react-by-itself) - With React Armory, you can learn React without the buzzwords.\n\n- [The Road to Learn React](https://www.robinwieruch.de/the-road-to-learn-react/) - Build a real world application in plain React without complicated tooling.\n\n- [Egghead.io: The Beginner's Guide to ReactJS](https://egghead.io/courses/the-beginner-s-guide-to-reactjs) - Free course for React newbies and those looking to get a better understanding of React fundamentals.\n\n- [Free React Bootcamp](https://tylermcginnis.com/free-react-bootcamp/) - Recordings from three days of a free online React bootcamp.\n\n## Paid Courses\n\n- [Egghead.io](https://egghead.io/browse/frameworks/react) - Short instructional videos on React and many other topics.\n\n- [Frontend Masters](https://frontendmasters.com/courses/) - Video courses on React and other frontend frameworks.\n\n- [Fullstack React](https://www.fullstackreact.com/) - The up-to-date, in-depth, complete guide to React and friends.\n\n- [Pure React](https://daveceddia.com/pure-react/) - A step-by-step guide to mastering React.\n\n- [React for Beginners](https://reactforbeginners.com/) - Learn React in just a couple of afternoons.\n\n- [React for Designers](https://designcode.io/react) - A 6-hour React course for designers, by designers.\n\n- [React Essentials for Designers](https://learnreact.design) - React courses tailored for designers: the fundamentals, capabilities, limitations and how they relate to design.\n\n- [Essential React](https://learnreact.com/lessons/2018-essential-react-1-overview) - A crash course for doers, moving fast from \"Hello World\" to advanced component composition.\n\n- [React Training: Advanced React.js](https://courses.reacttraining.com/p/advanced-react) - Take your React skills to the next level.\n\n- [Tyler McGinnis](https://tylermcginnis.com/courses) - Tyler McGinnis provides access to his courses for a monthly fee. Courses include \"React Fundamentals\" and \"Universal React\".\n\n- [Mastering React](https://codewithmosh.com/p/mastering-react/) - Build professional interactive apps with React.\n",
        "type": "MarkdownRemark",
        "contentDigest": "a4b8c400733feead0687bf2dfbc5617f",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Courses",
        "id": "courses",
        "layout": "community",
        "sectionid": "community",
        "permalink": "community/courses.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/community/courses.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/community/courses.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/community/courses.md",
      "fields": {
        "slug": "community/courses.html",
        "path": "community/courses.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/community/examples.it-IT.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/community/examples.it-IT.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/community/examples.it-IT.md absPath of file",
      "internal": {
        "content": "---\npermalink: docs/examples-it-IT.html\nlayout: redirect\ndest_url: https://github.com/facebook/react/wiki/Examples\n---\n",
        "type": "MarkdownRemark",
        "contentDigest": "8e56611e1aa22f0a1416c5488e181661",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "",
        "permalink": "docs/examples-it-IT.html",
        "layout": "redirect",
        "dest_url": "https://github.com/facebook/react/wiki/Examples",
        "_PARENT": "/Users/yubolun/Desktop/react/content/community/examples.it-IT.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/community/examples.it-IT.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/community/examples.it-IT.md",
      "fields": {
        "slug": "docs/examples-it-IT.html",
        "path": "community/examples.it-IT.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/community/examples.ko-KR.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/community/examples.ko-KR.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/community/examples.ko-KR.md absPath of file",
      "internal": {
        "content": "---\npermalink: docs/examples-ko-KR.html\nlayout: redirect\ndest_url: https://github.com/facebook/react/wiki/Examples\n---\n",
        "type": "MarkdownRemark",
        "contentDigest": "356a923b918f9ab7460b91d59e42bd49",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "",
        "permalink": "docs/examples-ko-KR.html",
        "layout": "redirect",
        "dest_url": "https://github.com/facebook/react/wiki/Examples",
        "_PARENT": "/Users/yubolun/Desktop/react/content/community/examples.ko-KR.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/community/examples.ko-KR.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/community/examples.ko-KR.md",
      "fields": {
        "slug": "docs/examples-ko-KR.html",
        "path": "community/examples.ko-KR.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/community/examples.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/community/examples.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/community/examples.md absPath of file",
      "internal": {
        "content": "---\nid: examples\ntitle: Example Projects\nlayout: community\nsectionid: community\npermalink: community/examples.html\n---\n\nThere are many example projects created by the React community. Feel free to add your own project. If you add a project, please commit to keeping it up to date with the latest versions of React.\n\n\n* **[Calculator](https://github.com/ahfarmer/calculator)** Implementation of the iOS calculator built in React\n* **[Emoji Search](https://github.com/ahfarmer/emoji-search)** Simple React app for searching emoji\n* **[Github Battle App](https://github.com/ReactTraining/react-fundamentals/tree/hosting)** Battle two Github users and see the most popular Github projects for any language.\n* **[React Powered Hacker News Client](https://github.com/insin/react-hn)** A React & react-router-powered implementation of Hacker News using its Firebase API.\n* **[Pokedex](https://github.com/alik0211/pokedex)** The list of Pokémon with live search\n* **[Shopping Cart](https://github.com/jeffersonRibeiro/react-shopping-cart)** Simple ecommerce cart application built using React \n* **[Progressive Web Tetris](https://github.com/skidding/flatris)** Besides a beautiful, mobile-friendly implementation of Tetris, this project is a playground for integrating and experimenting with web technologies.\n* **[Product Comparison Page](https://github.com/Rhymond/product-compare-react)** Simple Product Compare page built in React\n* **[Hacker News Clone React/GraphQL](https://github.com/clintonwoo/hackernews-react-graphql)** Hacker News clone rewritten with universal JavaScript, using React and GraphQL.\n* **[Bitcoin Price Index](https://github.com/mrkjlchvz/bitcoin-price-index)** Simple bitcoin price index data from CoinDesk API.\n* **[Builder Book](https://github.com/builderbook/builderbook)** Open source web app to write and host documentation or sell books. Built with React, Material-UI, Next, Express, Mongoose, MongoDB.\n* **[GFonts Space](https://github.com/pankajladhar/GFontsSpace)** A space which allows user to play with Google fonts. Built with React, Redux and React-Router.\n",
        "type": "MarkdownRemark",
        "contentDigest": "6d9558ab25d3a9078fda6507c0608967",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Example Projects",
        "id": "examples",
        "layout": "community",
        "sectionid": "community",
        "permalink": "community/examples.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/community/examples.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/community/examples.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/community/examples.md",
      "fields": {
        "slug": "community/examples.html",
        "path": "community/examples.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/community/examples.zh-CN.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/community/examples.zh-CN.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/community/examples.zh-CN.md absPath of file",
      "internal": {
        "content": "---\npermalink: docs/examples-zh-CN.html\nlayout: redirect\ndest_url: https://github.com/facebook/react/wiki/Examples\n---\n",
        "type": "MarkdownRemark",
        "contentDigest": "51cd6c9faca52c826515c9b197b66add",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "",
        "permalink": "docs/examples-zh-CN.html",
        "layout": "redirect",
        "dest_url": "https://github.com/facebook/react/wiki/Examples",
        "_PARENT": "/Users/yubolun/Desktop/react/content/community/examples.zh-CN.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/community/examples.zh-CN.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/community/examples.zh-CN.md",
      "fields": {
        "slug": "docs/examples-zh-CN.html",
        "path": "community/examples.zh-CN.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/community/external-resources.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/community/external-resources.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/community/external-resources.md absPath of file",
      "internal": {
        "content": "---\nid: external-resources\ntitle: External Resources\nlayout: community\nsectionid: community\npermalink: community/external-resources.html\n---\n\nThere are many wonderful curated resources the React community has put together.\n\n- [Reactiflux](https://www.reactiflux.com/) - A community of 20,000+ React developers. They keep a well curated [learning section](https://www.reactiflux.com/learning/).\n\n- [React-Redux Links](https://github.com/markerikson/react-redux-links) - Mark Erikson's highly curated list of tutorials and resources for React/Redux/ES6 and more.\n\n- [Awesome React](https://github.com/enaqx/awesome-react) - A collection of awesome things regarding React ecosystem.\n\n- [Awesome React Components](https://github.com/brillout/awesome-react-components) - A curated list of React components.\n\n- [Awesome React Talks](https://github.com/tiaanduplessis/awesome-react-talks) - A curated list of React talks.\n",
        "type": "MarkdownRemark",
        "contentDigest": "120e46ea4798e0f56200c2eaa08395d1",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "External Resources",
        "id": "external-resources",
        "layout": "community",
        "sectionid": "community",
        "permalink": "community/external-resources.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/community/external-resources.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/community/external-resources.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/community/external-resources.md",
      "fields": {
        "slug": "community/external-resources.html",
        "path": "community/external-resources.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/community/meetups.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/community/meetups.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/community/meetups.md absPath of file",
      "internal": {
        "content": "---\nid: meetups\ntitle: Meetups Around the World\nlayout: community\nsectionid: community\npermalink: community/meetups.html\n---\n\nDo you have a local React.js meetup? Add it here! (Please keep the list alphabetical)\n\n## Australia\n* [Melbourne](http://www.meetup.com/React-Melbourne/)\n* [Sydney](http://www.meetup.com/React-Sydney/)\n\n## Austria\n* [Vienna](http://www.meetup.com/Vienna-ReactJS-Meetup/)\n\n## Belgium\n* [Belgium](http://www.meetup.com/ReactJS-Belgium/)\n\n## Brazil\n* [Belo Horizonte](http://www.meetup.com/reactbh/)\n* [Rio de Janeiro](https://www.meetup.com/pt-BR/React-Rio-de-Janeiro/)\n* [São Paulo](http://www.meetup.com/pt-BR/ReactJS-SP/)\n\n## Canada\n* [Montreal, QC - ReactJS](https://www.meetup.com/fr-FR/ReactMontreal/)\n* [Montreal, QC - React Native](https://www.meetup.com/fr-FR/React-Native-MTL/)\n* [Vancouver, BC](http://www.meetup.com/ReactJS-Vancouver-Meetup/)\n\n## China\n* [Beijing](http://www.meetup.com/Beijing-ReactJS-Meetup/)\n\n## Colombia\n* [Medellin](https://www.meetup.com/React-Medellin/)\n\n## Denmark\n* [Aalborg](https://www.meetup.com/Aalborg-React-React-Native-Meetup/)\n* [Aarhus](https://www.meetup.com/Aarhus-ReactJS-Meetup/)\n\n## England (UK)\n* [Manchester](http://www.meetup.com/Manchester-React-User-Group/)\n\n## France\n* [Paris](http://www.meetup.com/ReactJS-Paris/)\n\n## Germany\n* [Berlin](http://www.meetup.com/React-Berlin/)\n* [Hamburg](http://www.meetup.com/Hamburg-React-js-Meetup/)\n* [Karlsruhe](http://www.meetup.com/react_ka/)\n* [Munich](http://www.meetup.com/ReactJS-Meetup-Munich/)\n\n## Greece\n* [Thessaloniki](https://www.meetup.com/Thessaloniki-ReactJS-Meetup/)\n\n## Hungary\n* [Budapest](https://www.meetup.com/React-Budapest/)\n\n## India\n* [Bangalore](https://www.meetup.com/ReactJS-Bangalore/)\n* [Chennai](https://www.meetup.com/React-Chennai/)\n* [Gurgaon](https://www.meetup.com/React-Gurgaon/)\n\n## Ireland\n* [Dublin](http://www.meetup.com/ReactJS-Dublin/)\n\n## Israel\n* [Tel Aviv](http://www.meetup.com/ReactJS-Israel/)\n\n## Netherlands\n* [Amsterdam](http://www.meetup.com/React-Amsterdam/)\n\n## New Zealand\n* [Wellington](http://www.meetup.com/React-Wellington/)\n\n## Norway\n* [Norway](http://reactjsnorway.com/)\n* [Oslo](https://www.meetup.com/ReactJS-Oslo-Meetup/)\n\n## Peru\n* [Lima](http://www.meetup.com/ReactJS-Peru/)\n\n## Philippines\n* [Manila](http://www.meetup.com/reactjs-developers-manila/)\n\n## Poland\n* [Warsaw](http://www.meetup.com/React-js-Warsaw/)\n\n## Scotland (UK)\n* [Edinburgh](https://www.meetup.com/React-Scotland/)\n\n## Spain\n* [Barcelona](http://www.meetup.com/ReactJS-Barcelona/)\n\n## Sweden\n* [Goteborg](http://www.meetup.com/ReactJS-Goteborg/)\n\n## Ukraine\n* [Kyiv](https://www.meetup.com/Kyiv-ReactJS-Meetup)\n\n## US\n* [Atlanta, GA - ReactJS](http://www.meetup.com/React-ATL/)\n* [Austin, TX - ReactJS](http://www.meetup.com/ReactJS-Austin-Meetup/)\n* [Boston, MA - ReactJS](http://www.meetup.com/ReactJS-Boston/)\n* [Boston, MA - React Native](http://www.meetup.com/Boston-React-Native-Meetup/)\n* [Chicago, IL - ReactJS](http://www.meetup.com/React-Chicago/)\n* [Columbus, OH - ReactJS](http://www.meetup.com/ReactJS-Columbus-meetup/)\n* [Dallas, TX - ReactJS](http://www.meetup.com/ReactDallas/)\n* [Irvine, CA - ReactJS](http://www.meetup.com/ReactJS-OC/)\n* [Las Vegas, NV - ReactJS](http://www.meetup.com/ReactVegas/)\n* [Leesburg, VA - ReactJS](http://www.meetup.com/React-NOVA/)\n* [Los Angeles, CA - ReactJS](http://www.meetup.com/socal-react/)\n* [Los Angeles, CA - React Native](http://www.meetup.com/React-Native-Los-Angeles/)\n* [Nashville, TN - ReactJS](http://www.meetup.com/NashReact-Meetup/)\n* [New York, NY - ReactJS](http://www.meetup.com/NYC-Javascript-React-Group/)\n* [New York, NY - React Native](http://www.meetup.com/React-Native-NYC/)\n* [Palo Alto, CA - React Native](http://www.meetup.com/React-Native-Silicon-Valley/)\n* [Phoenix, AZ - ReactJS](http://www.meetup.com/ReactJS-Phoenix/)\n* [Portland, OR - ReactJS](http://www.meetup.com/Portland-ReactJS/)\n* [Provo, UT - ReactJS](http://www.meetup.com/ReactJS-Utah/)\n* [Sacramento, CA - ReactJS](http://www.meetup.com/Sacramento-ReactJS-Meetup/)\n* [San Francisco - ReactJS](http://www.meetup.com/ReactJS-San-Francisco/)\n* [San Francisco, CA - React Native](http://www.meetup.com/React-Native-San-Francisco/)\n* [Santa Monica, CA - ReactJS](http://www.meetup.com/Los-Angeles-ReactJS-User-Group/)\n* [Seattle, WA - React Native](http://www.meetup.com/Seattle-React-Native-Meetup/)\n* [Seattle, WA - ReactJS](http://www.meetup.com/seattle-react-js/)\n* [Tampa, FL - ReactJS](http://www.meetup.com/ReactJS-Tampa-Bay/)\n* [Tucson, AZ - ReactJS](http://www.meetup.com/Tucson-ReactJS-Meetup/)\n* [Washington, DC - ReactJS](http://www.meetup.com/React-DC/)\n",
        "type": "MarkdownRemark",
        "contentDigest": "efede68502d7361eafee097f3204db22",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Meetups Around the World",
        "id": "meetups",
        "layout": "community",
        "sectionid": "community",
        "permalink": "community/meetups.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/community/meetups.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/community/meetups.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/community/meetups.md",
      "fields": {
        "slug": "community/meetups.html",
        "path": "community/meetups.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/community/podcasts.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/community/podcasts.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/community/podcasts.md absPath of file",
      "internal": {
        "content": "---\nid: podcasts\ntitle: Podcasts\nlayout: community\nsectionid: community\npermalink: community/podcasts.html\n---\n\nPodcasts dedicated to React and individual podcast episodes with React discussions.\n\n## Podcasts\n\n- [The React Podcast](http://reactpodcast.com) - The podcast about everything React.js, hosted by [React Training](https://reacttraining.com)\n\n- [JavaScript Air](https://javascriptair.com/) - All about JavaScript (currently not producing new episodes)\n\n- [React 30](https://react30.com/) - A 30-minute podcast all about React (moved to [The React Podcast](http://reactpodcast.com)).\n\n- [React Native Radio](https://devchat.tv/react-native-radio)\n\n## Episodes\n\n- [CodeWinds Episode 4](http://codewinds.com/podcast/004.html) - Pete Hunt talks with Jeff Barczewski about React.\n\n\n- [JavaScript Jabber 73](https://devchat.tv/js-jabber/073-jsj-react-with-pete-hunt-and-jordan-walke) - Pete Hunt and Jordan Walke talk about React.\n",
        "type": "MarkdownRemark",
        "contentDigest": "617d14bce0035bbf6dec07f771117007",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Podcasts",
        "id": "podcasts",
        "layout": "community",
        "sectionid": "community",
        "permalink": "community/podcasts.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/community/podcasts.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/community/podcasts.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/community/podcasts.md",
      "fields": {
        "slug": "community/podcasts.html",
        "path": "community/podcasts.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/community/support.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/community/support.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/community/support.md absPath of file",
      "internal": {
        "content": "---\nid: support\ntitle: Where To Get Support\nlayout: community\nsectionid: community\npermalink: community/support.html\nredirect_from:\n  - \"support.html\"\n---\n\nReact has a community of millions of developers.\n\nOn this page we've listed some React-related communities that you can be a part of; see the other pages in this section for additional online and in-person learning materials.\n\n## Stack Overflow\n\nStack Overflow is a popular forum to ask code-level questions or if you're stuck with a specific error. Read through the [existing questions](http://stackoverflow.com/questions/tagged/reactjs) tagged with **reactjs** or [ask your own](http://stackoverflow.com/questions/ask?tags=reactjs)!\n\n## Popular Discussion Forums\n\nThere are many online forums which are a great place for discussion about best practices and application architecture as well as the future of React. If you have an answerable code-level question, Stack Overflow is usually a better fit.\n\nEach community consists of many thousands of React users.\n\n* [DEV's React community](https://dev.to/t/react)\n* [Hashnode's React community](https://hashnode.com/n/reactjs)\n* [React Discuss](https://discuss.reactjs.org/)\n* [Reactiflux online chat](https://discord.gg/0ZcbPKXt5bZjGY5n)\n* [Reddit's React community](https://www.reddit.com/r/reactjs/)\n* [Spectrum's React community](https://spectrum.chat/react)\n\n## News\n\nFor the latest news about React, [follow **@reactjs** on Twitter](https://twitter.com/reactjs) and the [official React blog](/blog) on this website.\n",
        "type": "MarkdownRemark",
        "contentDigest": "7dd911e462c2d27451db241e1d0873d5",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Where To Get Support",
        "id": "support",
        "layout": "community",
        "sectionid": "community",
        "permalink": "community/support.html",
        "redirect_from": [
          "support.html"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/community/support.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/community/support.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/community/support.md",
      "fields": {
        "slug": "community/support.html",
        "path": "community/support.md",
        "redirect": "[\"support.html\"]"
      }
    },
    "/Users/yubolun/Desktop/react/content/community/tools-comp-workbenches.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/community/tools-comp-workbenches.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/community/tools-comp-workbenches.md absPath of file",
      "internal": {
        "content": "---\nid: component-workbenches\ntitle: Component Workbenches\nlayout: community\npermalink: community/component-workbenches.html\n---\n\n* **[Storybook for React](https://github.com/storybooks/storybook):** UI component development environment for React.\n* **[React Styleguidist](https://github.com/styleguidist/react-styleguidist):** Style guide generator & component workbench for React.\n* **[React Showroom](https://github.com/OpusCapita/react-showroom-client):** React based components catalog which provides you with markdown documentation and live examples\n* **[patternplate](https://github.com/sinnerschrader/patternplate)**: A platform for pattern and component library development using React.\n* **[UiZoo.js](https://github.com/myheritage/UiZoo.js)**: Auto-generated component development environment by the JSDoc of React components.\n* **[Neutrino React components preset](https://github.com/eliperelman/neutrino-preset-react-components/)**: Create generic React components and previewing them without the need to embed in an application. Plays nicely with other Neutrino middleware, so you can build, test, preview, and publish multiple React components from a single repository.\n* **[React Cosmos](https://github.com/react-cosmos/react-cosmos)**: Dev tool for creating reusable React components. It scans your project for components and enables you to: render components in different states, mock dependencies (API, localStorage, etc.), see app state evolve in real time.\n* **[Bit](https://github.com/teambit/bit)**: Isolate and share components from existing projects to make them available to install in other projects while tracking changes across projects. It helps save the overhead of keeping components in separate repositories.\n",
        "type": "MarkdownRemark",
        "contentDigest": "ca54ee4701a621faf96bdd380705b95b",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Component Workbenches",
        "id": "component-workbenches",
        "layout": "community",
        "permalink": "community/component-workbenches.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/community/tools-comp-workbenches.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/community/tools-comp-workbenches.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/community/tools-comp-workbenches.md",
      "fields": {
        "slug": "community/component-workbenches.html",
        "path": "community/tools-comp-workbenches.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/community/tools-data-fetching.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/community/tools-data-fetching.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/community/tools-data-fetching.md absPath of file",
      "internal": {
        "content": "---\nid: data-fetching\ntitle: Data Fetching\nlayout: community\npermalink: community/data-fetching.html\n---\n\n* **[Apollo](http://dev.apollodata.com/react/):** Easy to set up and use GraphQL client.\n* **[Axios](https://github.com/mzabriskie/axios):** Promise based HTTP client for the browser and node.js.\n* **[Relay Modern](https://facebook.github.io/relay/docs/en/new-in-relay-modern.html)** - A JavaScript framework for building data-driven React applications.\n* **[Request](https://github.com/request/request):** Simplified HTTP request client.\n* **[Superagent](https://visionmedia.github.io/superagent/):** A lightweight \"isomorphic\" library for AJAX requests.\n",
        "type": "MarkdownRemark",
        "contentDigest": "c1c2e86b78b1986c51f58352e141f28b",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Data Fetching",
        "id": "data-fetching",
        "layout": "community",
        "permalink": "community/data-fetching.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/community/tools-data-fetching.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/community/tools-data-fetching.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/community/tools-data-fetching.md",
      "fields": {
        "slug": "community/data-fetching.html",
        "path": "community/tools-data-fetching.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/community/tools-debugging.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/community/tools-debugging.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/community/tools-debugging.md absPath of file",
      "internal": {
        "content": "---\nid: debugging-tools\ntitle: Debugging\nlayout: community\npermalink: community/debugging-tools.html\n---\n\n  * **[React Developer Tools](https://github.com/facebook/react-devtools):** an extension available for [Chrome](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi), [Firefox](https://addons.mozilla.org/firefox/addon/react-devtools/), and as a [standalone app](https://github.com/facebook/react-devtools/tree/master/packages/react-devtools) that allows you to inspect the React component hierarchy in the Chrome Developer Tools.\n",
        "type": "MarkdownRemark",
        "contentDigest": "51ebc359b04355453928a2ec282687ec",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Debugging",
        "id": "debugging-tools",
        "layout": "community",
        "permalink": "community/debugging-tools.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/community/tools-debugging.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/community/tools-debugging.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/community/tools-debugging.md",
      "fields": {
        "slug": "community/debugging-tools.html",
        "path": "community/tools-debugging.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/community/tools-jsx.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/community/tools-jsx.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/community/tools-jsx.md absPath of file",
      "internal": {
        "content": "---\nid: jsx-integrations\ntitle: JSX Integrations\nlayout: community\npermalink: community/jsx-integrations.html\n---\n\n## Editor Integrations\n* **[Sublime Text: babel-sublime](https://github.com/babel/babel-sublime):** Snippets, syntax highlighting and optimized color schemes for Sublime Text\n* **[Atom: language-babel](https://atom.io/packages/language-babel)** Support for es2016, JSX and Flow.\n* **[Visual Studio Code](https://code.visualstudio.com/updates/vFebruary#_languages-javascript)** Visual Studio Code supports JSX directly.\n* **[JetBrains WebStorm](http://www.jetbrains.com/webstorm/):** Syntax highlighting, code completion, error detection for JSX\n* **[JetBrains IDE Live Templates](https://github.com/Minwe/jetbrains-react):** React live templates for JetBrains editors (e.g. WebStorm, PHPStorm, etc.)\n* **[javascript-jsx.tmbundle](https://github.com/jjeising/javascript-jsx.tmbundle)** Syntax for TextMate\n* **[web-mode.el](http://web-mode.org):** An autonomous emacs major mode that indents and highlights JSX.  No support for Automatic Semicolon Insertion.\n* **[vim-jsx](https://github.com/mxw/vim-jsx):** Syntax highlighting and indenting for JSX\n\n## Build Tools\n\n* **[Create React App](https://github.com/facebookincubator/create-react-app):** An **officially supported** way to create React apps with no configuration.\n* **[nwb](https://github.com/insin/nwb)**: A toolkit for React, Preact & Inferno apps, React libraries and other npm modules for the web, with no configuration (until you need it)\n* **[Neutrino](https://neutrino.js.org/)**: Create and build modern JavaScript applications with zero initial configuration. Neutrino combines the power of webpack with the simplicity of presets.\n* **[ESLint](http://eslint.org):** A pluggable JavaScript linter that natively supports JSX syntax. Be sure to download [eslint-plugin-react](https://npmjs.com/package/eslint-plugin-react) for React-specific rules.\n* **[Structor](https://www.npmjs.com/package/structor):** This tool is a user interface builder for node.js Web applications with React UI. Structor replaces the now deprecated React UI Builder. Watch [Structor Video Tutorials](https://youtu.be/z96xYa51EWI?list=PLAcaUOtEwjoR_U6eE2HQEXwkefeVESix1)\n* **[react-jsx](https://github.com/bigpipe/react-jsx):** Compile and use JSX as stand-alone templates that can run server-side and client side!\n* **[cjsx-codemod](https://github.com/jsdf/cjsx-codemod):** Write JSX code within Coffeescript!\n* **[ReactScript](https://github.com/1j01/react-script):** Write React code within Coffeescript without JSX!\n* **[jsxhint](https://npmjs.org/package/jsxhint):** [JSHint](http://jshint.com/) (linting) support. (JSX compilation doesn't affect line numbers so lint can also be run directly on the compiled JS.)\n* **[reactify](https://npmjs.org/package/reactify):** [Browserify](http://browserify.org/) transform.\n* **[Babel](https://babeljs.io/):** Standalone & [Browserify](http://browserify.org/) transform (formerly known as **6to5**).\n* **[node-jsx](https://npmjs.org/package/node-jsx):** Native [Node](http://nodejs.org/) support.\n* **[react-hot-loader](http://gaearon.github.io/react-hot-loader/):** Loader for [webpack](http://webpack.github.io/) that lets you edit JSX and have changes appear immediately in the browser without reloading the page.\n* **[jsx-loader](https://npmjs.org/package/jsx-loader):** Loader for [webpack](http://webpack.github.io/).\n* **[express-jsxtransform](https://www.npmjs.org/package/express-jsxtransform):** Middleware for [Express](https://www.npmjs.org/package/express).\n* **[gradle-react-plugin](https://github.com/ehirsch/gradle-react-plugin):** Transform jsx sources during a gradle build.\n* **[grunt-react](https://npmjs.org/package/grunt-react):** [GruntJS](http://gruntjs.com/) task.\n* **[gulp-react](https://npmjs.org/package/gulp-react):** [GulpJS](http://gulpjs.com/) plugin.\n* **[brunch-react](https://www.npmjs.org/package/react-brunch):** [Brunch](http://brunch.io/) plugin.\n* **[jsx-requirejs-plugin](https://github.com/philix/jsx-requirejs-plugin):** [RequireJS](http://requirejs.org/) plugin.\n* **[react-meteor](https://github.com/benjamn/react-meteor):** [Meteor](http://www.meteor.com/) plugin.\n* **[pyReact](https://github.com/facebook/react-python):** [Python](http://www.python.org/) bridge to JSX.\n* **[react-rails](https://github.com/facebook/react-rails):** Ruby gem for using JSX with [Ruby on Rails](http://rubyonrails.org/).\n* **[react-laravel](https://github.com/talyssonoc/react-laravel):** PHP package for using ReactJS with [Laravel](http://laravel.com/).\n* **[ReactJS.NET](http://reactjs.net/):** .NET library for React and JSX.\n* **[sbt-reactjs](https://github.com/ddispaltro/sbt-reactjs)** SBT/Play/Scala JSX compiler plugin\n* **[mimosa-react](https://github.com/dbashford/mimosa-react):** [Mimosa](http://mimosa.io) plugin.\n* **[react-grails-asset-pipeline](https://github.com/peh/react-grails-asset-pipeline):** Assets for react and precompilation of jsx files in [Grails](http://grails.org/).\n* **[gore-gulp](https://github.com/goreutils/gore-gulp):** Wrapper around [webpack](https://webpack.github.io/), [eslint](http://eslint.org/), [mocha](https://mochajs.org/) for ease of use and zero configuration.\n* **[webpack](https://github.com/webpack/webpack):** Packs CommonJs/AMD modules for the browser. Allows to split your codebase into multiple bundles, which can be loaded on demand. Support loaders to preprocess files, i.e. json, jade, coffee, css, less, ... and your custom stuff.\n* **[webpack-bbq](https://github.com/wenbing/webpack-bbq):** transform your src to lib, supports server rendering and static rendering.\n* **[jsxtransformer](https://github.com/cronn-de/jsxtransformer):** Compile pipeline for jsx files in Java\n* **[babylon-jsx](https://github.com/marionebl/babylon-jsx)**: Transform JSX to ES2015 with babylon sans babel\n* **[CRA Universal CLI](https://github.com/antonybudianto/cra-universal)** - A simple CLI to create and build Express server for your create-react-app projects, featuring Server-side rendering and Code-splitting.\n",
        "type": "MarkdownRemark",
        "contentDigest": "9847ccf67b83552d7b681fb48cc7072a",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "JSX Integrations",
        "id": "jsx-integrations",
        "layout": "community",
        "permalink": "community/jsx-integrations.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/community/tools-jsx.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/community/tools-jsx.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/community/tools-jsx.md",
      "fields": {
        "slug": "community/jsx-integrations.html",
        "path": "community/tools-jsx.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/community/tools-misc.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/community/tools-misc.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/community/tools-misc.md absPath of file",
      "internal": {
        "content": "---\nid: misc\ntitle: Miscellaneous\nlayout: community\npermalink: community/misc.html\n---\n\n* **[react-localize-redux](https://github.com/ryandrewjohnson/react-localize-redux)** - Localization library for React/Redux.\n\n* **[react-inspector](https://github.com/xyc/react-inspector):** Use DevTools-like object inspectors inside your React app.\n* **[jreact](https://github.com/KnisterPeter/jreact):** Rendering react server-side within a JVM (Java 7 or Java 8)\n* **[react-jss](https://github.com/jsstyles/react-jss):** Inject and mount jss styles in React components.\n* **[django-react](https://github.com/markfinger/django-react):** Server-side rendering of React components for django apps.\n* **[react-engine](https://github.com/paypal/react-engine):** Composite render engine for isomorphic express apps to render both plain react views and react-router views.\n* **[react-render-visualizer](https://github.com/redsunsoft/react-render-visualizer):** A visual way to see what is (re)rendering and why.\n* **[javascript-monads](https://github.com/dschalk/javascript-monads):** As this project matures, the monads are becoming more than mere toys. React is used in unorthodox ways, so if you want to use React the way they do at Facebook, this is not for you. Transpiled code for the three monad classes can be downloaded by entering \"npm install reactive-monads\".\n* **[ReactCSS](http://reactcss.com/):** Inline Styles in JS with support for React.\n* **[ReactQuestionnaire](https://github.com/kouryuu/react-questionnaire):** Simple react components for building a questionnaire or survey.\n* **[renderjs.io](http://renderjs.io):** SEO for Reactjs. Service for making reactjs application crawlable and shareable.\n",
        "type": "MarkdownRemark",
        "contentDigest": "10a41fc7481e6b935a7ec0126fae71b4",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Miscellaneous",
        "id": "misc",
        "layout": "community",
        "permalink": "community/misc.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/community/tools-misc.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/community/tools-misc.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/community/tools-misc.md",
      "fields": {
        "slug": "community/misc.html",
        "path": "community/tools-misc.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/community/tools-model-mgmt.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/community/tools-model-mgmt.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/community/tools-model-mgmt.md absPath of file",
      "internal": {
        "content": "---\nid: model-management\ntitle: Model Management\nlayout: community\npermalink: community/model-management.html\n---\n\n* **[Alt](http://alt.js.org/):** Pure vanilla flux made isomorphic and without the boilerplate.\n* **[astarisx](http://zuudo.github.io/astarisx/):** Highly Composable MVVM Framework for React with built-in pushState router.\n* **[avers](https://github.com/wereHamster/avers):** A modern client-side model abstraction library.\n* **[backbone-react-component](https://github.com/magalhas/backbone-react-component):** Use multiple Backbone models and collections with React components both on the client and server sides.\n* **[Baobab](https://github.com/Yomguithereal/baobab):** Persistent data tree supporting cursors.\n* **[cortex](https://github.com/mquan/cortex/):** A JavaScript library for centrally managing data with React.\n* **[DeLorean](https://github.com/deloreanjs/delorean):** A completely agnostic JavaScript framework to apply Flux concepts into your interfaces easily.\n* **[Elsa](https://github.com/JonAbrams/elsa):** A Babel plugin that makes your arrays and objects immutable by default… and gives them super powers!\n* **[Immutable](https://github.com/facebook/immutable-js):** Immutable data structures designed to be more JavaScript-y than Mori.\n* **[js-data](http://www.js-data.io/):** A framework-agnostic frontend datastore, that will also fetch your data.\n* **[McFly](https://github.com/kenwheeler/mcfly):** A lightweight Flux library that adds factories for Stores & Actions.\n* **[NuclearJS](https://github.com/optimizely/nuclear-js):** Immutable, reactive Flux architecture. UI Agnostic.\n* **[Reflux](https://github.com/spoike/refluxjs):** An event-based implementation of the Flux architecture that integrates with React components.\n",
        "type": "MarkdownRemark",
        "contentDigest": "c1021288ec61035c389f0ae4e97046ce",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Model Management",
        "id": "model-management",
        "layout": "community",
        "permalink": "community/model-management.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/community/tools-model-mgmt.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/community/tools-model-mgmt.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/community/tools-model-mgmt.md",
      "fields": {
        "slug": "community/model-management.html",
        "path": "community/tools-model-mgmt.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/community/tools-routing.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/community/tools-routing.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/community/tools-routing.md absPath of file",
      "internal": {
        "content": "---\nid: routing\ntitle: Routing\nlayout: community\npermalink: community/routing.html\n---\n\n* **[Aviator](https://github.com/swipely/aviator)** - Aviator is a front-end router built for modular single page applications. ([Example](https://gist.github.com/hojberg/9549330)).\n* **[Backbone](http://backbonejs.org/)** - Backbone supplies structure to JavaScript-heavy applications by providing models with key-value binding and custom events, collections with a rich API of enumerable functions, views with declarative event handling, and connects it all to your existing application over a RESTful JSON interface.\n* **[component-router](https://github.com/in-flux/component-router):** Flux-based routing solution for components\n * **[Director](https://github.com/flatiron/director)** - A tiny and isomorphic URL router for JavaScript.\n * **[Finch](http://stoodder.github.io/finchjs/)** - A simple, yet powerful, javascript route handling library.\n  * **[mvc-router](https://github.com/rajeev-k/mvc-router)** Use the Model-View-Controller (MVC) pattern to build React applications.\n * **[react-mini-router](https://github.com/larrymyers/react-mini-router)** A minimal URL router mixin.\n * **[react-router](https://github.com/rackt/react-router)** - A popular declarative router for React\n * **[react-router-component](https://github.com/andreypopp/react-router-component)** Declarative routing.\n",
        "type": "MarkdownRemark",
        "contentDigest": "5f17cc129a8401c94891f222b11f54a0",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Routing",
        "id": "routing",
        "layout": "community",
        "permalink": "community/routing.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/community/tools-routing.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/community/tools-routing.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/community/tools-routing.md",
      "fields": {
        "slug": "community/routing.html",
        "path": "community/tools-routing.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/community/tools-starter-kits.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/community/tools-starter-kits.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/community/tools-starter-kits.md absPath of file",
      "internal": {
        "content": "---\nid: starter-kits\ntitle: Starter Kits\nlayout: community\npermalink: community/starter-kits.html\n---\n\n## Recommended by the React Team\n\n* **[Create React App](https://github.com/facebook/create-react-app)** - An officially supported way to start a client-side React project with no configuration\n* **[Next.js](https://learnnextjs.com/)** - Framework for server-rendered or statically-exported React apps\n* **[Gatsby](https://www.gatsbyjs.org/)** - Blazing-fast static site generator for React\n* **[nwb](https://github.com/insin/nwb)** - A toolkit for React apps, libraries and other npm modules for the web\n* **[razzle](https://github.com/jaredpalmer/razzle)** - Create server-rendered universal JavaScript applications with no configuration\n* **[Neutrino](https://neutrino.js.org/)** - Create and build modern JavaScript applications with zero initial configuration\n\n## Other Starter Kits\n\n* **[kyt](https://github.com/nytimes/kyt)** - The framework that the New York Times uses to develop and build their web properties. It's somewhat opinionated but configurable, and includes starter kits with options to build full-stack or static/client-side apps with the following tools: Express, React, static assets, latest ES, CSS/Sass Modules, Jest, code-splitting, ESLint/Prettier, StyleLint, PostCSS, and inline SVGs.\n* **[React Redux Boilerplate](https://github.com/iroy2000/react-redux-boilerplate):** React Redux Boilerplate is a workflow boilerplate providing a virtual development environment and production ready build workflow out of the box. (React, Redux, Reselect, Redux Actions, ES6, ESLint, Webpack with integrated environment config support)\n* **[React + Redux + Saga Boilerplate](https://github.com/gilbarbara/react-redux-saga-boilerplate)** -\nReady to grow boilerplate with react-router, redux, saga, webpack 2, jest w/ coverage and enzyme.\n* **[Create React App + Redux + React Router](https://github.com/notrab/create-react-app-redux)**: Based on Create React App, this boilerplate comes with Redux, Redux Thunk and React Router all configured ready to go.\n* **[react-slingshot](https://github.com/coryhouse/react-slingshot):** React + Redux starter kit with Babel, hot reloading, testing, linting and a working example app.\n* **[Este](https://github.com/este/este):** Dev stack and starter kit for functional and universal (browser, server, mobile) React applications. Everything you need to start is included.\n* **[Rekit](https://github.com/supnate/rekit)** - Toolkit and boilerplates for building scalable web applications with React, Redux and React-router.\n* **[webcube](https://github.com/dexteryy/Project-WebCube)** - A JS infrastructure for modern Universal JS web app/sites and static websites. Provides built-in support and simplification for Redux sub-app, reducer bundle, router, immutable, eslint + prettier, docker, monorepo and many other tools.\n * **[starter-react-flux](https://github.com/SokichiFujita/starter-react-flux)** A generator for React and Flux project with Flux-Utils, Jest, Immutable.js, React Addons, Webpack, ESLint, Babel and ES2015.\n * **[react-async-starter](https://github.com/didierfranc/react-async-starter):** React + Redux + Fetch + ES7 Async with Webpack, Babel and hot reloading.\n * **[Kriasoft React Starter Kit](https://github.com/kriasoft/react-starter-kit):** Gulp, Webpack, BrowserSync + [React Starter Kit for Visual Studio](http://visualstudiogallery.msdn.microsoft.com/d65d6b29-6dd7-4100-81b1-609e5afce356)\n * **[electron-react-boilerplate](https://github.com/chentsulin/electron-react-boilerplate)** A React + Flux Electron application boilerplate based on React, Flux, React Router, Webpack, React Hot Loader\n * **[react-boilerplate](https://github.com/mxstbr/react-boilerplate)** Quick setup for performance orientated, offline-first React.js applications featuring Redux, hot-reloading, PostCSS, react-router, ServiceWorker, AppCache, FontFaceObserver and Mocha.\n * **[vortigern](https://github.com/barbar/vortigern)** A universal boilerplate for building web applications w/ TypeScript, React, Redux and more.\n * **[CRA Universal CLI](https://github.com/antonybudianto/cra-universal)** CLI to initialize universal create-react-app without ejecting. Supports Server-side rendering with Code-splitting, and Node Stream rendering.\n * **[EDGE Platform](https://github.com/sebastian-software/edge)** Universal React/SSR + Apollo GraphQL + JS/CSS Code Splitting + Fine-Tuned Webpack + Localization/Internationalization. Most things are external dependencies. Boilerplate available.\n * **[bae](https://github.com/siddharthkp/bae)** Zero config toolkit. SSR (with data fetching) + routing + streaming + styling (with styled-components) + HMR out of the box.\n * **[breko-hub](https://github.com/tomatau/breko-hub)** A production ready boilerplate for universal react applications. Complete with code splitting, server render (using koa), redux, sagas, debugging, hot-reloading (live updates on the server), css-modules, scss, super fast integration tests and unit tests. There's also a big focus on clean code and smaller files.\n",
        "type": "MarkdownRemark",
        "contentDigest": "2d98f9d7e4410f41735097465fd18603",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Starter Kits",
        "id": "starter-kits",
        "layout": "community",
        "permalink": "community/starter-kits.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/community/tools-starter-kits.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/community/tools-starter-kits.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/community/tools-starter-kits.md",
      "fields": {
        "slug": "community/starter-kits.html",
        "path": "community/tools-starter-kits.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/community/tools-testing.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/community/tools-testing.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/community/tools-testing.md absPath of file",
      "internal": {
        "content": "---\nid: testing\ntitle: Testing\nlayout: community\npermalink: community/testing.html\n---\n\n* **[Enzyme](https://github.com/airbnb/enzyme/):** a JavaScript Testing utility for React that makes it easier to assert, manipulate, and traverse your React Components' output.\n* **[Expect-jsx](https://github.com/algolia/expect-jsx):** toEqualJSX for [expect.js](https://github.com/mjackson/expect)\n* **[Jest](https://facebook.github.io/jest/):** Delightful JavaScript testing used by Facebook to test all JavaScript code including React applications.\n* **[React-unit](https://github.com/pzavolinsky/react-unit):** a lightweight unit test library for ReactJS with very few (js-only) dependencies.\n* **[Skin-deep](https://github.com/glenjamin/skin-deep):** Testing helpers for use with React's shallowRender test utils.\n* **[Unexpected-react](https://github.com/bruderstein/unexpected-react/):** Plugin for the [unexpected](http://unexpected.js.org) assertion library that makes it easy to assert over your React Components and trigger events.\n",
        "type": "MarkdownRemark",
        "contentDigest": "359c5814f31100bc0aff012a0877a086",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Testing",
        "id": "testing",
        "layout": "community",
        "permalink": "community/testing.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/community/tools-testing.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/community/tools-testing.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/community/tools-testing.md",
      "fields": {
        "slug": "community/testing.html",
        "path": "community/tools-testing.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/community/videos.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/community/videos.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/community/videos.md absPath of file",
      "internal": {
        "content": "---\nid: videos\ntitle: Videos\nlayout: community\nsectionid: community\npermalink: community/videos.html\nredirect_from:\n - \"docs/videos.html\"\n---\n\nVideos dedicated to the discussion of React and the React ecosystem.\n\n### React.js Conf 2017\n\nA playlist of videos from React.js Conf 2017.\n<iframe title=\"React.js Conf 2017\" width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/playlist?list=PLb0IAmt7-GS3fZ46IGFirdqKTIxlws7e0\" frameborder=\"0\" allowfullscreen></iframe>\n\n### React.js Conf 2016\n\nA playlist of videos from React.js Conf 2016.\n<iframe title=\"React.js Conf 2016\" width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/playlist?list=PLb0IAmt7-GS0M8Q95RIc2lOM6nc77q1IY\" frameborder=\"0\" allowfullscreen></iframe>\n\n### React.js Conf 2015\n\nA playlist of videos from React.js Conf 2015.\n<iframe title=\"React.js Conf 2015\" width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/playlist?list=PLb0IAmt7-GS1cbw4qonlQztYV1TAW0sCr\" frameborder=\"0\" allowfullscreen></iframe>\n\n### Secrets of the Virtual DOM\n\nPete Hunt at Mountain West JavaScript 2014 discusses why a virtual DOM was built for React, how it compares to other systems, and its relevance to the future of browser technologies - (2014 - 0h44m).\n<iframe title=\"Mountain West JavaScript 2014 - Be Predictable, Not Correct. by Pete Hunt\" width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/h3KksH8gfcQ\" frameborder=\"0\" allowfullscreen></iframe>\n\n### Flux and Server-side Rendering\n\nPete Hunt discusses flux and server-side rendering in React - (2014 - 0h55m).\n<iframe title=\"YUI Open Roundtable with Pete Hunt\" width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/ZLfe0i2RDtY\" frameborder=\"0\" allowfullscreen></iframe>\n\n### Rethinking Web App Development at Facebook\n\nFacebook F8 2014 talk to learn how we abandoned the traditional MVC paradigm in favor of a more functional application architecture - (2014 - 0h44m).\n<iframe title=\"Hacker Way: Rethinking Web App Development at Facebook\" width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/nYkdrAPrdcw\" frameborder=\"0\" allowfullscreen></iframe>\n\n### Introduction to React\n\nStoyan Stefanov gives an introduction to React at LAWebSpeed meetup - (2014 - 0h51m).\n<iframe title=\"Joe Dev on Tech - Stoyan Stefanov - Introduction to React\" width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/SMMRJif5QW0\" frameborder=\"0\" allowfullscreen></iframe>\n\n### React and Flux: Building Applications with a Unidirectional Data Flow\n\nFacebook engineers Bill Fisher and Jing Chen talk about Flux and React at Forward JS 2014, and how using an application architecture with a unidirectional data flow cleans up a lot of their code.\n<iframe title=\"React and Flux: Building Applications with a Unidirectional Data Flow\" width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/i__969noyAM\" frameborder=\"0\" allowfullscreen></iframe>\n\n### Going Big with React\n\nAreeb Malik investigates how React performs in a high stress situation, and how it helped his team build safe code on a massive scale - (2014 - 0h31m).\n[![going big with React](https://i.vimeocdn.com/video/481670116_650.jpg)]\n\n\n### Rethinking Best Practices\n\nPete Hunt's talk at JSConf EU 2013 covers three topics: throwing out the notion of templates and building views with JavaScript, “re-rendering” your entire application when your data changes, and a lightweight implementation of the DOM and events - (2013 - 0h30m).\n<iframe title=\"Pete Hunt: React: Rethinking Best Practices - JSConf EU 2013\" width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/x7cQ3mrcKaY\" frameborder=\"0\" allowfullscreen></iframe>\n\n### High Performance Functional DOM Programming\nPete Hunt discusses high performance functional programming with React at Meteor DevShop 11 - (2013 - 0h31m).\n<iframe title=\"Pete Hunt: High performance functional programming with React and Meteor\" width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/qqVbr_LaCIo\" frameborder=\"0\" allowfullscreen></iframe>\n\n### Developing User Interfaces With React\n\nSteven Luscher discusses developing user interfaces at Super VanJS 2013 - (2013 - 0h29m).\n<iframe title=\"SuperVanJS 2013: Steven Luscher - Developing User Interfaces with Facebook's React\" width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/1OeXsL5mr4g\" frameborder=\"0\" allowfullscreen></iframe>\n\n### Introduction to React\n\nTom Occhino and Jordan Walke introduce React at Facebook Seattle - (2013 - 1h20m).\n<iframe title=\"Tom Occhino and Jordan Walke introduce React at Facebook Seattle\" width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/XxVg_s8xAms\" frameborder=\"0\" allowfullscreen></iframe>\n",
        "type": "MarkdownRemark",
        "contentDigest": "4bea998caa3e78a26c2fadf0b7f9e99c",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Videos",
        "id": "videos",
        "layout": "community",
        "sectionid": "community",
        "permalink": "community/videos.html",
        "redirect_from": [
          "docs/videos.html"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/community/videos.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/community/videos.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/community/videos.md",
      "fields": {
        "slug": "community/videos.html",
        "path": "community/videos.md",
        "redirect": "[\"docs/videos.html\"]"
      }
    },
    "/Users/yubolun/Desktop/react/content/community/videos.zh-CN.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/community/videos.zh-CN.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/community/videos.zh-CN.md absPath of file",
      "internal": {
        "content": "---\nid: videos-zh-CN\ntitle: 视频\npermalink: docs/videos-zh-CN.html\nprev: conferences-zh-CN.html\nnext: complementary-tools-zh-CN.html\n---\n\n### Rethinking best practices - JSConf.eu\n\n<iframe width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/x7cQ3mrcKaY\" frameborder=\"0\" allowfullscreen></iframe>\n\n\"在 Facebook 和 Instagram, 我们正在努力挑战React在web上能达到的极限。我的讲话会从对框架的简单介绍开始，然后深入三个有争议的话题：扔掉模板的概念并用JavaScript构建views, 当数据改变 “re-rendering” 你的整个应用，以及一个DOM和events的轻量级实现。\" -- [Pete Hunt](http://www.petehunt.net/)\n\n* * *\n\n### Thinking in react - tagtree.tv\n\n一个 [tagtree.tv](http://tagtree.tv/) 传达 [Thinking in React](/docs/thinking-in-react.html) 原则的视频  在构建一个简单app时。\n<figure><a href=\"http://tagtree.tv/thinking-in-react\"><img src=\"../images/docs/thinking-in-react-tagtree.png\"></a></figure>\n\n* * *\n\n### Secrets of the Virtual DOM - MtnWest JS\n\n<iframe width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/h3KksH8gfcQ\" frameborder=\"0\" allowfullscreen></iframe>\n\n\"在这次讲座里，我会讨论为什么我们构建了一个虚拟 DOM，它比起其他系统如何，以及它与未来浏览器技术的关系。\" -- [Pete Hunt](http://www.petehunt.net/)\n\n* * *\n\n### Going big with React\n\n\"理论上，所有的JS框架都大有可为：干净的实现,快速的代码设计,完美的执行。但是当你压力测试时Javascript会怎样？当你丢进6MB的代码时会怎样？在这次演讲中，我们会探究React在高压环境下如何表现，以及它如何帮助我们的团队在大规模时构建安全代码。 \"\n<figure><a href=\"https://skillsmatter.com/skillscasts/5429-going-big-with-react#video\"><img src=\"https://i.vimeocdn.com/video/481670116_650.jpg\"></a></figure>\n\n* * *\n\n### CodeWinds\n\n[Pete Hunt](http://www.petehunt.net/) 与 [Jeff Barczewski](http://jeff.barczewski.com/) 在 CodeWinds Episode 4 上关于 React 的谈话.\n<figure><a href=\"http://codewinds.com/4\"><img src=\"../images/docs/codewinds-004.png\"></a></figure>\n\n<table width=\"100%\"><tr><td>\n02:08 - 什么是React，为什么我们用它?<br />\n03:08 - ClojureScript 和 React 的共生关系<br />\n04:54 - React 的历史以及为什么它被创造<br />\n09:43 - 用React更新Web页面，而不绑定数据<br />\n13:11 - 用虚拟DOM来改变浏览器DOM<br />\n13:57 - 用React编程，绘制目标HTML，canvas和其他<br />\n16:45 - 和设计师一起工作，对比于Ember 和 AngularJS<br />\n21:45 - JSX编译器桥接HTML和 React javascript<br />\n23:50 - React的自动绑定JSX以及浏览器内工具<br />\n24:50 - 用React工作的提示和技巧，入门<br />\n</td><td>\n27:17 - 在服务器端用Node.js渲染HTML。后端渲染<br />\n29:20 - React在Facebook通过优胜劣汰进化<br />\n30:15 - 用web sockets，在服务器端和客户端持有状态的想法持有<br />\n32:05 - 多用户React - 用 Firebase 分布式共享可变状态<br />\n33:03 - 用状态转换，事件重放来更好的调式React<br />\n34:08 - 来自Web组件的不同之处<br />\n34:25 - 使用React的著名公司<br />\n35:16 - 一个React的后端插件可以用来创建PDF吗?<br />\n36:30 - React的未来，下一步是什么?<br />\n39:38 - 贡献和获得帮助<br />\n</td></tr></table>\n\n[Read the episode notes](http://codewinds.com/4)\n\n* * *\n\n### JavaScript Jabber\n\n[Pete Hunt](http://www.petehunt.net/) 和 [Jordan Walke](https://github.com/jordwalke) 在 JavaScript Jabber 73 上关于React的谈话.\n<figure><a href=\"http://javascriptjabber.com/073-jsj-react-with-pete-hunt-and-jordan-walke/#content\"><img src=\"../images/docs/javascript-jabber.png\"></a></figure>\n\n<table width=\"100%\"><tr><td>\n01:34 – Pete Hunt 介绍<br />\n02:45 – Jordan Walke 介绍<br />\n04:15 – React<br />\n06:38 – 60 帧每秒<br />\n09:34 – 数据绑定<br />\n12:31 – 性能<br />\n17:39 – Diffing 算法<br />\n19:36 – DOM 操纵\n</td><td>\n23:06 – 支持 node.js<br />\n24:03 – rendr<br />\n26:02 – JSX<br />\n30:31 – requestAnimationFrame<br />\n34:15 – React 和应用<br />\n38:12 – React 用户 Khan Academy<br />\n39:53 – 使其工作\n</td></tr></table>\n\n[Read the full transcript](http://javascriptjabber.com/073-jsj-react-with-pete-hunt-and-jordan-walke/)\n\n* * *\n\n### Introduction to React.js - Facebook Seattle\n\n<iframe width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/XxVg_s8xAms\" frameborder=\"0\" allowfullscreen></iframe>\n\n由 [Tom Occhino](http://tomocchino.com/) 和 [Jordan Walke](https://github.com/jordwalke)\n\n* * *\n\n### Backbone + React + Middleman Screencast\n<iframe width=\"650\" height=\"488\" src=\"https://www.youtube-nocookie.com/embed/iul1fWHVU6A\" frameborder=\"0\" allowfullscreen></iframe>\n\nBackbone 是一个在用React实现 REST API 接口的极好方法。这个屏博展示了用 [Backbone-React-Component](https://github.com/magalhas/backbone-react-component)如何整合两者. Middleman 是在本例中使用的框架但很容易被替换成其他框架。对此可支持的template可以在[这里](https://github.com/jbhatab/middleman-backbone-react-template) 找到. -- [Open Minded Innovations](http://www.openmindedinnovations.com/)\n\n* * *\n\n### Developing User Interfaces With React - Super VanJS\n\n<iframe width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/1OeXsL5mr4g\" frameborder=\"0\" allowfullscreen></iframe>\n\n来自 [Steven Luscher](https://github.com/steveluscher)\n\n* * *\n\n### Introduction to React - LAWebSpeed meetup\n\n<iframe width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/SMMRJif5QW0\" frameborder=\"0\" allowfullscreen></iframe>\n\n来自 [Stoyan Stefanov](http://www.phpied.com/)\n\n* * *\n\n### React, or how to make life simpler - FrontEnd Dev Conf '14\n\n<iframe width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/YJNUK0EA_Jo\" frameborder=\"0\" allowfullscreen></iframe>\n\n**俄语** by [Alexander Solovyov](http://solovyov.net/)\n\n* * *\n\n### \"Functional DOM programming\" - Meteor DevShop 11\n\n<iframe width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/qqVbr_LaCIo\" frameborder=\"0\" allowfullscreen></iframe>\n\n* * *\n\n### \"Rethinking Web App Development at Facebook\" - Facebook F8 Conference 2014\n\n<iframe width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/nYkdrAPrdcw\" frameborder=\"0\" allowfullscreen></iframe>\n\n* * *\n\n### React and Flux: Building Applications with a Unidirectional Data Flow - Forward JS 2014\n\n<iframe width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/i__969noyAM\" frameborder=\"0\" allowfullscreen></iframe>\n\nFacebook 工程师 [Bill Fisher](https://twitter.com/fisherwebdev) 和 [Jing Chen](https://twitter.com/jingc) 谈论 Flux 和 React, 以及如何使用单向数据流的程序架构清理他们的代码 .\n\n* * *\n\n### Server-Side Rendering of Isomorphic Apps at SoundCloud\n\n<iframe src=\"https://player.vimeo.com/video/108488724\" width=\"100%\" height=\"365\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>\n\n来自 [Andres Suarez](https://github.com/zertosh) 的演练，关于 [SoundCloud](https://developers.soundcloud.com/blog/) 如何使用 React 和 Flux 在服务器端渲染.\n\n[幻灯片和示例代码](https://github.com/zertosh/ssr-demo-kit)\n\n* * *\n\n### Introducing React Native (+Playlist) - React.js Conf 2015\n\n<iframe width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/KVZ-P-ZI6W4?list=PLb0IAmt7-GS1cbw4qonlQztYV1TAW0sCr\" frameborder=\"0\" allowfullscreen></iframe>\n\n[Tom Occhino](https://twitter.com/tomocchino) 回顾了React的过去和现在，在2015年。梳理了下一步要做什么。\n",
        "type": "MarkdownRemark",
        "contentDigest": "da9e9bacf0f6786a0cd63bd09a485eba",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "视频",
        "id": "videos-zh-CN",
        "permalink": "docs/videos-zh-CN.html",
        "prev": "conferences-zh-CN.html",
        "next": "complementary-tools-zh-CN.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/community/videos.zh-CN.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/community/videos.zh-CN.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/community/videos.zh-CN.md",
      "fields": {
        "slug": "docs/videos-zh-CN.html",
        "path": "community/videos.zh-CN.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/warnings/dont-call-proptypes.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/warnings/dont-call-proptypes.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/warnings/dont-call-proptypes.md absPath of file",
      "internal": {
        "content": "---\ntitle: Don't Call PropTypes Warning\nlayout: single\npermalink: warnings/dont-call-proptypes.html\n---\n\n> Note:\n>\n> `React.PropTypes` has moved into a different package since React v15.5. Please use [the `prop-types` library instead](https://www.npmjs.com/package/prop-types).\n>\n>We provide [a codemod script](/blog/2017/04/07/react-v15.5.0.html#migrating-from-react.proptypes) to automate the conversion.\n\nIn a future major release of React, the code that implements PropType validation functions will be stripped in production. Once this happens, any code that calls these functions manually (that isn't stripped in production) will throw an error.\n\n### Declaring PropTypes is still fine\n\nThe normal usage of PropTypes is still supported:\n\n```javascript\nButton.propTypes = {\n  highlighted: PropTypes.bool\n};\n```\n\nNothing changes here.\n\n### Don’t call PropTypes directly\n\nUsing PropTypes in any other way than annotating React components with them is no longer supported:\n\n```javascript\nvar apiShape = PropTypes.shape({\n  body: PropTypes.object,\n  statusCode: PropTypes.number.isRequired\n}).isRequired;\n\n// Not supported!\nvar error = apiShape(json, 'response');\n```\n\nIf you depend on using PropTypes like this, we encourage you to use or create a fork of PropTypes (such as [these](https://github.com/aackerman/PropTypes) [two](https://github.com/developit/proptypes) packages).\n\nIf you don't fix the warning, this code will crash in production with React 16.\n\n### If you don't call PropTypes directly but still get the warning\n\nInspect the stack trace produced by the warning. You will find the component definition responsible for the PropTypes direct call. Most likely, the issue is due to third-party PropTypes that wrap React’s PropTypes, for example:\n\n```js\nButton.propTypes = {\n  highlighted: ThirdPartyPropTypes.deprecated(\n    PropTypes.bool,\n    'Use `active` prop instead'\n  )\n}\n```\n\nIn this case, `ThirdPartyPropTypes.deprecated` is a wrapper calling `PropTypes.bool`. This pattern by itself is fine, but triggers a false positive because React thinks you are calling PropTypes directly. The next section explains how to fix this problem for a library implementing something like `ThirdPartyPropTypes`. If it's not a library you wrote, you can file an issue against it.\n\n### Fixing the false positive in third party PropTypes\n\nIf you are an author of a third party PropTypes library and you let consumers wrap existing React PropTypes, they might start seeing this warning coming from your library. This happens because React doesn't see a \"secret\" last argument that [it passes](https://github.com/facebook/react/pull/7132) to detect manual PropTypes calls.\n\nHere is how to fix it. We will use `deprecated` from [react-bootstrap/react-prop-types](https://github.com/react-bootstrap/react-prop-types/blob/0d1cd3a49a93e513325e3258b28a82ce7d38e690/src/deprecated.js) as an example. The current implementation only passes down the `props`, `propName`, and `componentName` arguments:\n\n```javascript\nexport default function deprecated(propType, explanation) {\n  return function validate(props, propName, componentName) {\n    if (props[propName] != null) {\n      const message = `\"${propName}\" property of \"${componentName}\" has been deprecated.\\n${explanation}`;\n      if (!warned[message]) {\n        warning(false, message);\n        warned[message] = true;\n      }\n    }\n\n    return propType(props, propName, componentName);\n  };\n}\n```\n\nIn order to fix the false positive, make sure you pass **all** arguments down to the wrapped PropType. This is easy to do with the ES6 `...rest` notation:\n\n```javascript\nexport default function deprecated(propType, explanation) {\n  return function validate(props, propName, componentName, ...rest) { // Note ...rest here\n    if (props[propName] != null) {\n      const message = `\"${propName}\" property of \"${componentName}\" has been deprecated.\\n${explanation}`;\n      if (!warned[message]) {\n        warning(false, message);\n        warned[message] = true;\n      }\n    }\n\n    return propType(props, propName, componentName, ...rest); // and here\n  };\n}\n```\n\nThis will silence the warning.\n",
        "type": "MarkdownRemark",
        "contentDigest": "ee924f0f22374d843f9018fda0806214",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Don't Call PropTypes Warning",
        "layout": "single",
        "permalink": "warnings/dont-call-proptypes.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/warnings/dont-call-proptypes.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/warnings/dont-call-proptypes.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/warnings/dont-call-proptypes.md",
      "fields": {
        "slug": "warnings/dont-call-proptypes.html",
        "path": "warnings/dont-call-proptypes.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/warnings/invalid-aria-prop.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/warnings/invalid-aria-prop.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/warnings/invalid-aria-prop.md absPath of file",
      "internal": {
        "content": "---\ntitle: Invalid ARIA Prop Warning\nlayout: single\npermalink: warnings/invalid-aria-prop.html\n---\n\nThe invalid-aria-prop warning will fire if you attempt to render a DOM element with an aria-* prop that does not exist in the Web Accessibility Initiative (WAI) Accessible Rich Internet Application (ARIA) [specification](https://www.w3.org/TR/wai-aria-1.1/#states_and_properties).\n\n1. If you feel that you are using a valid prop, check the spelling carefully. `aria-labelledby` and `aria-activedescendant` are often misspelled.\n\n2. React does not yet recognize the attribute you specified. This will likely be fixed in a future version of React. However, React currently strips all unknown attributes, so specifying them in your React app will not cause them to be rendered",
        "type": "MarkdownRemark",
        "contentDigest": "9348a08b6d505bb53352ec5b2aecbd3e",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Invalid ARIA Prop Warning",
        "layout": "single",
        "permalink": "warnings/invalid-aria-prop.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/warnings/invalid-aria-prop.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/warnings/invalid-aria-prop.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/warnings/invalid-aria-prop.md",
      "fields": {
        "slug": "warnings/invalid-aria-prop.html",
        "path": "warnings/invalid-aria-prop.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/warnings/legacy-factories.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/warnings/legacy-factories.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/warnings/legacy-factories.md absPath of file",
      "internal": {
        "content": "---\ntitle: React Element Factories and JSX Warning\nlayout: single\npermalink: warnings/legacy-factories.html\n---\n\nYou probably came here because your code is calling your component as a plain function call. This is now deprecated:\n\n```javascript\nvar MyComponent = require('MyComponent');\n\nfunction render() {\n  return MyComponent({ foo: 'bar' });  // WARNING\n}\n```\n\n## JSX\n\nReact components can no longer be called directly like this. Instead [you can use JSX](/docs/jsx-in-depth.html).\n\n```javascript\nvar React = require('react');\nvar MyComponent = require('MyComponent');\n\nfunction render() {\n  return <MyComponent foo=\"bar\" />;\n}\n```\n\n## Without JSX\n\nIf you don't want to, or can't use JSX, then you'll need to wrap your component in a factory before calling it:\n\n```javascript\nvar React = require('react');\nvar MyComponent = React.createFactory(require('MyComponent'));\n\nfunction render() {\n  return MyComponent({ foo: 'bar' });\n}\n```\n\nThis is an easy upgrade path if you have a lot of existing function calls.\n\n## Dynamic components without JSX\n\nIf you get a component class from a dynamic source, then it might be unnecessary to create a factory that you immediately invoke. Instead you can just create your element inline:\n\n```javascript\nvar React = require('react');\n\nfunction render(MyComponent) {\n  return React.createElement(MyComponent, { foo: 'bar' });\n}\n```\n\n## In Depth\n\n[Read more about WHY we're making this change.](https://gist.github.com/sebmarkbage/d7bce729f38730399d28)\n",
        "type": "MarkdownRemark",
        "contentDigest": "cb55a6fb7cc0df7ffe9f76c6ac37b1e0",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React Element Factories and JSX Warning",
        "layout": "single",
        "permalink": "warnings/legacy-factories.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/warnings/legacy-factories.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/warnings/legacy-factories.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/warnings/legacy-factories.md",
      "fields": {
        "slug": "warnings/legacy-factories.html",
        "path": "warnings/legacy-factories.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/warnings/refs-must-have-owner.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/warnings/refs-must-have-owner.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/warnings/refs-must-have-owner.md absPath of file",
      "internal": {
        "content": "---\ntitle: Refs Must Have Owner Warning\nlayout: single\npermalink: warnings/refs-must-have-owner.html\n---\n\nYou are probably here because you got one of the following error messages:\n\n*React 16.0.0+*\n> Warning:\n>\n> Element ref was specified as a string (myRefName) but no owner was set. You may have multiple copies of React loaded. (details: https://fb.me/react-refs-must-have-owner).\n\n*earlier versions of React*\n> Warning:\n>\n> addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component's `render` method, or you have multiple copies of React loaded.\n\nThis usually means one of two things:\n\n- You are trying to add a `ref` to an element that is being created outside of a component's render() function.\n- You have multiple (conflicting) copies of React loaded (eg. due to a misconfigured npm dependency)\n\n\n## Invalid Refs\n\nOnly a ReactOwner can have refs. This usually means that you're trying to add a ref to a component that doesn't have an owner (that is, was not created inside of another component's `render` method). Try rendering this component inside of a new top-level component which will hold the ref.\n\n## Multiple copies of React\n\nBower does a good job of deduplicating dependencies, but npm does not. If you aren't doing anything (fancy) with refs, there is a good chance that the problem is not with your refs, but rather an issue with having multiple copies of React loaded into your project. Sometimes, when you pull in a third-party module via npm, you will get a duplicate copy of the dependency library, and this can create problems.\n\nIf you are using npm... `npm ls` or `npm ls react` might help illuminate.\n",
        "type": "MarkdownRemark",
        "contentDigest": "3f01d09a4655dcc9da3abc8d8551463a",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Refs Must Have Owner Warning",
        "layout": "single",
        "permalink": "warnings/refs-must-have-owner.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/warnings/refs-must-have-owner.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/warnings/refs-must-have-owner.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/warnings/refs-must-have-owner.md",
      "fields": {
        "slug": "warnings/refs-must-have-owner.html",
        "path": "warnings/refs-must-have-owner.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/warnings/special-props.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/warnings/special-props.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/warnings/special-props.md absPath of file",
      "internal": {
        "content": "---\ntitle: Special Props Warning\nlayout: single\npermalink: warnings/special-props.html\n---\n\nMost props on a JSX element are passed on to the component, however, there are two special props (`ref` and `key`) which are used by React, and are thus not forwarded to the component.\n\nFor instance, attempting to access `this.props.key` from a component (eg. the render function) is not defined.  If you need to access the same value within the child component, you should pass it as a different prop (ex: `<ListItemWrapper key={result.id} id={result.id} />`). While this may seem redundant, it's important to separate app logic from reconciling hints.\n",
        "type": "MarkdownRemark",
        "contentDigest": "27c37b212f8ba0c13d346bacfb4f73d9",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Special Props Warning",
        "layout": "single",
        "permalink": "warnings/special-props.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/warnings/special-props.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/warnings/special-props.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/warnings/special-props.md",
      "fields": {
        "slug": "warnings/special-props.html",
        "path": "warnings/special-props.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/warnings/unknown-prop.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/warnings/unknown-prop.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/warnings/unknown-prop.md absPath of file",
      "internal": {
        "content": "---\ntitle: Unknown Prop Warning\nlayout: single\npermalink: warnings/unknown-prop.html\n---\nThe unknown-prop warning will fire if you attempt to render a DOM element with a prop that is not recognized by React as a legal DOM attribute/property. You should ensure that your DOM elements do not have spurious props floating around.\n\nThere are a couple of likely reasons this warning could be appearing:\n\n1. Are you using `{...this.props}` or `cloneElement(element, this.props)`? Your component is transferring its own props directly to a child element (eg. https://reactjs.org/docs/transferring-props.html). When transferring props to a child component, you should ensure that you are not accidentally forwarding props that were intended to be interpreted by the parent component.\n\n2. You are using a non-standard DOM attribute on a native DOM node, perhaps to represent custom data. If you are trying to attach custom data to a standard DOM element, consider using a custom data attribute as described [on MDN](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Using_data_attributes).\n\n3. React does not yet recognize the attribute you specified. This will likely be fixed in a future version of React. However, React currently strips all unknown attributes, so specifying them in your React app will not cause them to be rendered.\n\n4. You are using a React component without an upper case. React interprets it as a DOM tag because [React JSX transform uses the upper vs. lower case convention to distinguish between user-defined components and DOM tags](/docs/jsx-in-depth.html#user-defined-components-must-be-capitalized).\n\n---\n\nTo fix this, composite components should \"consume\" any prop that is intended for the composite component and not intended for the child component. Example:\n\n**Bad:** Unexpected `layout` prop is forwarded to the `div` tag.\n\n```js\nfunction MyDiv(props) {\n  if (props.layout === 'horizontal') {\n    // BAD! Because you know for sure \"layout\" is not a prop that <div> understands.\n    return <div {...props} style={getHorizontalStyle()} />\n  } else {\n    // BAD! Because you know for sure \"layout\" is not a prop that <div> understands.\n    return <div {...props} style={getVerticalStyle()} />\n  }\n}\n```\n\n**Good:** The spread operator can be used to pull variables off props, and put the remaining props into a variable.\n\n```js\nfunction MyDiv(props) {\n  const { layout, ...rest } = props\n  if (layout === 'horizontal') {\n    return <div {...rest} style={getHorizontalStyle()} />\n  } else {\n    return <div {...rest} style={getVerticalStyle()} />\n  }\n}\n```\n\n**Good:** You can also assign the props to a new object and delete the keys that you're using from the new object. Be sure not to delete the props from the original `this.props` object, since that object should be considered immutable.\n\n```js\nfunction MyDiv(props) {\n\n  const divProps = Object.assign({}, props);\n  delete divProps.layout;\n\n  if (props.layout === 'horizontal') {\n    return <div {...divProps} style={getHorizontalStyle()} />\n  } else {\n    return <div {...divProps} style={getVerticalStyle()} />\n  }\n}\n```\n",
        "type": "MarkdownRemark",
        "contentDigest": "44567e4d026c7612d7dffc1516001d6c",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Unknown Prop Warning",
        "layout": "single",
        "permalink": "warnings/unknown-prop.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/warnings/unknown-prop.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/warnings/unknown-prop.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/warnings/unknown-prop.md",
      "fields": {
        "slug": "warnings/unknown-prop.html",
        "path": "warnings/unknown-prop.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/add-react-to-a-new-app.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/add-react-to-a-new-app.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/add-react-to-a-new-app.md absPath of file",
      "internal": {
        "content": "---\nid: add-react-to-a-new-app\ntitle: Add React to a New Application\npermalink: docs/add-react-to-a-new-app.html\nprev: try-react.html\nnext: add-react-to-an-existing-app.html\n---\n\nThe easiest way to get started on a new React project is by using a starter kit.\n\n> Note:\n> \n> This page describes setting up a single-page application with everything you need for a comfortable development workflow, including linting, testing, production optimizations, and more. Full-featured tools like these require some time and disk space to install.\n>\n>If you are looking for a lightweight environment to experiment with React, check out the [Try React](/docs/try-react.html) page instead. **A [single HTML file](https://raw.githubusercontent.com/reactjs/reactjs.org/master/static/html/single-file-example.html) is enough to get you started!**\n>\n> Finally, if you're not building a single-page application, you can either [add React to your existing build pipeline](/docs/add-react-to-an-existing-app.html) or [use it from CDN](/docs/cdn-links.html) and [without a build step](/docs/react-without-jsx.html).\n\n## Create React App\n\n[Create React App](http://github.com/facebookincubator/create-react-app) is the best way to start building a new React single page application. It sets up your development environment so that you can use the latest JavaScript features, provides a nice developer experience, and optimizes your app for production. You’ll need to have Node >= 6 on your machine.\n\n```bash\nnpm install -g create-react-app\ncreate-react-app my-app\n\ncd my-app\nnpm start\n```\n\nIf you have npm 5.2.0+ installed, you may use [npx](https://www.npmjs.com/package/npx) instead.\n\n```bash\nnpx create-react-app my-app\n\ncd my-app\nnpm start\n```\n\nCreate React App doesn't handle backend logic or databases; it just creates a frontend build pipeline, so you can use it with any backend you want. It uses build tools like [Babel](http://babeljs.io/) and [webpack](https://webpack.js.org/) under the hood, but works with zero configuration.\n\nWhen you're ready to deploy to production, running `npm run build` will create an optimized build of your app in the `build` folder. You can learn more about Create React App [from its README](https://github.com/facebookincubator/create-react-app#create-react-app-) and the [User Guide](https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/template/README.md#table-of-contents).\n\n## Other Starter Kits\n\nWe have created [a curated list of third-party starter kits that we officially recommend](/community/starter-kits.html).\n\nThey slightly differ in their focus but are all production-ready, well-maintained, and don't require configuration to get started.\n\nYou can also check out a list of [other kits](/community/starter-kits.html#other-starter-kits) contributed by the community.\n\n## Advanced\n\nIf you prefer to configure a project manually, see [Installing React](/docs/add-react-to-an-existing-app.html#installing-react) in the next section.\n",
        "type": "MarkdownRemark",
        "contentDigest": "b5ea8350785c559729f79ebbde75cea8",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Add React to a New Application",
        "id": "add-react-to-a-new-app",
        "permalink": "docs/add-react-to-a-new-app.html",
        "prev": "try-react.html",
        "next": "add-react-to-an-existing-app.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/add-react-to-a-new-app.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/add-react-to-a-new-app.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/add-react-to-a-new-app.md",
      "fields": {
        "slug": "docs/add-react-to-a-new-app.html",
        "path": "docs/add-react-to-a-new-app.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/add-react-to-an-existing-app.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/add-react-to-an-existing-app.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/add-react-to-an-existing-app.md absPath of file",
      "internal": {
        "content": "---\nid: add-react-to-an-existing-app\ntitle: Add React to an Existing Application\npermalink: docs/add-react-to-an-existing-app.html\nprev: add-react-to-a-new-app.html\nnext: cdn-links.html\n---\n\nYou don't need to rewrite your app to start using React.\n\nWe recommend adding React to a small part of your application, such as an individual widget, so you can see if it works well for your use case.\n\nWhile React [can be used](/docs/react-without-es6.html) without a build pipeline, we recommend setting it up so you can be more productive. A modern build pipeline typically consists of:\n\n* A **package manager**, such as [Yarn](https://yarnpkg.com/) or [npm](https://www.npmjs.com/). It lets you take advantage of a vast ecosystem of third-party packages, and easily install or update them.\n* A **bundler**, such as [webpack](https://webpack.js.org/) or [Browserify](http://browserify.org/). It lets you write modular code and bundle it together into small packages to optimize load time.\n* A **compiler** such as [Babel](http://babeljs.io/). It lets you write modern JavaScript code that still works in older browsers.\n\n### Installing React\n\n>**Note:**\n>\n>Once installed, we strongly recommend setting up a [production build process](/docs/optimizing-performance.html#use-the-production-build) to ensure you're using the fast version of React in production.\n\nWe recommend using [Yarn](https://yarnpkg.com/) or [npm](https://www.npmjs.com/) for managing front-end dependencies. If you're new to package managers, the [Yarn documentation](https://yarnpkg.com/en/docs/getting-started) is a good place to get started.\n\nTo install React with Yarn, run:\n\n```bash\nyarn init\nyarn add react react-dom\n```\n\nTo install React with npm, run:\n\n```bash\nnpm init\nnpm install --save react react-dom\n```\n\nBoth Yarn and npm download packages from the [npm registry](http://npmjs.com/).\n\n>  Note:\n>\n>  To prevent potential incompatibilities, all react packages should use the same version. (This includes `react`, `react-dom`, `react-test-renderer`, etc.)\n\n### Enabling ES6 and JSX\n\nWe recommend using React with [Babel](http://babeljs.io/) to let you use ES6 and JSX in your JavaScript code. ES6 is a set of modern JavaScript features that make development easier, and JSX is an extension to the JavaScript language that works nicely with React.\n\nThe [Babel setup instructions](https://babeljs.io/docs/setup/) explain how to configure Babel in many different build environments. Make sure you install [`babel-preset-react`](http://babeljs.io/docs/plugins/preset-react/#basic-setup-with-the-cli-) and [`babel-preset-env`](http://babeljs.io/docs/plugins/preset-env/) and enable them in your [`.babelrc` configuration](http://babeljs.io/docs/usage/babelrc/), and you're good to go.\n\n### Hello World with ES6 and JSX\n\nWe recommend using a bundler like [webpack](https://webpack.js.org/) or [Browserify](http://browserify.org/), so you can write modular code and bundle it together into small packages to optimize load time.\n\nThe smallest React example looks like this:\n\n```js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(\n  <h1>Hello, world!</h1>,\n  document.getElementById('root')\n);\n```\n\nThis code renders into a DOM element with the id of `root`, so you need `<div id=\"root\"></div>` somewhere in your HTML file.\n\nSimilarly, you can render a React component inside a DOM element somewhere inside your existing app written with any other JavaScript UI library.\n\n[Learn more about integrating React with existing code.](/docs/integrating-with-other-libraries.html#integrating-with-other-view-libraries)\n\n### Development and Production Versions\n\nBy default, React includes many helpful warnings. These warnings are very useful in development.\n\n**However, they make the development version of React larger and slower so you should use the production version when you deploy the app.**\n\nLearn [how to tell if your website is serving the right version of React](/docs/optimizing-performance.html#use-the-production-build), and how to configure the production build process most efficiently:\n\n* [Creating a Production Build with Create React App](/docs/optimizing-performance.html#create-react-app)\n* [Creating a Production Build with Single-File Builds](/docs/optimizing-performance.html#single-file-builds)\n* [Creating a Production Build with Brunch](/docs/optimizing-performance.html#brunch)\n* [Creating a Production Build with Browserify](/docs/optimizing-performance.html#browserify)\n* [Creating a Production Build with Rollup](/docs/optimizing-performance.html#rollup)\n* [Creating a Production Build with webpack](/docs/optimizing-performance.html#webpack)\n\n### Using a CDN\n\nIf you don't want to use npm to manage client packages, the `react` and `react-dom` npm packages also provide single-file distributions in `umd` folders. See the [CDN](/docs/cdn-links.html) page for links.\n",
        "type": "MarkdownRemark",
        "contentDigest": "03ed258950c2fa41b7edbd969cf5141a",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Add React to an Existing Application",
        "id": "add-react-to-an-existing-app",
        "permalink": "docs/add-react-to-an-existing-app.html",
        "prev": "add-react-to-a-new-app.html",
        "next": "cdn-links.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/add-react-to-an-existing-app.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/add-react-to-an-existing-app.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/add-react-to-an-existing-app.md",
      "fields": {
        "slug": "docs/add-react-to-an-existing-app.html",
        "path": "docs/add-react-to-an-existing-app.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/addons-create-fragment.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/addons-create-fragment.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/addons-create-fragment.md absPath of file",
      "internal": {
        "content": "---\nid: create-fragment\ntitle: Keyed Fragments\npermalink: docs/create-fragment.html\nlayout: docs\ncategory: Add-Ons\n---\n\n**Importing**\n\n```javascript\nimport createFragment from 'react-addons-create-fragment'; // ES6\nvar createFragment = require('react-addons-create-fragment'); // ES5 with npm\n```\n\n## Overview\n\nIn most cases, you can use the `key` prop to specify keys on the elements you're returning from `render`. However, this breaks down in one situation: if you have two sets of children that you need to reorder, there's no way to put a key on each set without adding a wrapper element.\n\nThat is, if you have a component such as:\n\n```js\nfunction Swapper(props) {\n  let children;\n  if (props.swapped) {\n    children = [props.rightChildren, props.leftChildren];\n  } else {\n    children = [props.leftChildren, props.rightChildren];\n  }\n  return <div>{children}</div>;\n}\n```\n\nThe children will unmount and remount as you change the `swapped` prop because there aren't any keys marked on the two sets of children.\n\nTo solve this problem, you can use the `createFragment` add-on to give keys to the sets of children.\n\n#### `Array<ReactNode> createFragment(object children)`\n\nInstead of creating arrays, we write:\n\n```javascript\nimport createFragment from 'react-addons-create-fragment';\n\nfunction Swapper(props) {\n  let children;\n  if (props.swapped) {\n    children = createFragment({\n      right: props.rightChildren,\n      left: props.leftChildren\n    });\n  } else {\n    children = createFragment({\n      left: props.leftChildren,\n      right: props.rightChildren\n    });\n  }\n  return <div>{children}</div>;\n}\n```\n\nThe keys of the passed object (that is, `left` and `right`) are used as keys for the entire set of children, and the order of the object's keys is used to determine the order of the rendered children. With this change, the two sets of children will be properly reordered in the DOM without unmounting.\n\nThe return value of `createFragment` should be treated as an opaque object; you can use the [`React.Children`](/docs/react-api.html#react.children) helpers to loop through a fragment but should not access it directly. Note also that we're relying on the JavaScript engine preserving object enumeration order here, which is not guaranteed by the spec but is implemented by all major browsers and VMs for objects with non-numeric keys.\n",
        "type": "MarkdownRemark",
        "contentDigest": "f9c144dce4c786350c5d007c63de06f3",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Keyed Fragments",
        "id": "create-fragment",
        "permalink": "docs/create-fragment.html",
        "layout": "docs",
        "category": "Add-Ons",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/addons-create-fragment.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/addons-create-fragment.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/addons-create-fragment.md",
      "fields": {
        "slug": "docs/create-fragment.html",
        "path": "docs/addons-create-fragment.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/addons-perf.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/addons-perf.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/addons-perf.md absPath of file",
      "internal": {
        "content": "---\nid: perf\ntitle: Performance Tools\npermalink: docs/perf.html\nlayout: docs\ncategory: Add-Ons\n---\n\n> Note:\n>\n> As of React 16, `react-addons-perf` is not supported. Please use [your browser's profiling tools](/docs/optimizing-performance.html#profiling-components-with-the-chrome-performance-tab) to get insight into which components re-render.\n\n**Importing**\n\n```javascript\nimport Perf from 'react-addons-perf'; // ES6\nvar Perf = require('react-addons-perf'); // ES5 with npm\n```\n\n\n## Overview\n\nReact is usually quite fast out of the box. However, in situations where you need to squeeze every ounce of performance out of your app, it provides a [shouldComponentUpdate()](/docs/react-component.html#shouldcomponentupdate) hook where you can add optimization hints to React's diff algorithm.\n\nIn addition to giving you an overview of your app's overall performance, `Perf` is a profiling tool that tells you exactly where you need to put these hooks.\n\nSee these articles for an introduction to React performance tooling:\n\n - [\"How to Benchmark React Components\"](https://medium.com/code-life/how-to-benchmark-react-components-the-quick-and-dirty-guide-f595baf1014c)\n - [\"Performance Engineering with React\"](http://benchling.engineering/performance-engineering-with-react/)\n - [\"A Deep Dive into React Perf Debugging\"](http://benchling.engineering/deep-dive-react-perf-debugging/) \n\n### Development vs. Production Builds\n\nIf you're benchmarking or seeing performance problems in your React apps, make sure you're testing with the [minified production build](/downloads.html). The development build includes extra warnings that are helpful when building your apps, but it is slower due to the extra bookkeeping it does.\n\nHowever, the perf tools described on this page only work when using the development build of React. Therefore, the profiler only serves to indicate the _relatively_ expensive parts of your app.\n\n### Using Perf\n\nThe `Perf` object can be used with React in development mode only. You should not include this bundle when building your app for production.\n\n#### Getting Measurements\n\n - [`start()`](#start)\n - [`stop()`](#stop)\n - [`getLastMeasurements()`](#getlastmeasurements)\n\n#### Printing Results\n\nThe following methods use the measurements returned by [`Perf.getLastMeasurements()`](#getlastmeasurements) to pretty-print the result.\n\n - [`printInclusive()`](#printinclusive)\n - [`printExclusive()`](#printexclusive)\n - [`printWasted()`](#printwasted)\n - [`printOperations()`](#printoperations)\n - [`printDOM()`](#printdom)\n\n* * *\n\n## Reference\n\n### `start()`\n### `stop()`\n\n```javascript\nPerf.start()\n// ...\nPerf.stop()\n```\n\nStart/stop the measurement. The React operations in-between are recorded for analyses below. Operations that took an insignificant amount of time are ignored.\n\nAfter stopping, you will need [`Perf.getLastMeasurements()`](#getlastmeasurements) to get the measurements.\n\n* * *\n\n### `getLastMeasurements()`\n\n```javascript\nPerf.getLastMeasurements()\n```\n\nGet the opaque data structure describing measurements from the last start-stop session. You can save it and pass it to the other print methods in [`Perf`](#printing-results) to analyze past measurements.\n\n> Note\n>\n> Don't rely on the exact format of the return value because it may change in minor releases. We will update the documentation if the return value format becomes a supported part of the public API.\n\n* * *\n\n### `printInclusive()`\n\n```javascript\nPerf.printInclusive(measurements)\n```\n\nPrints the overall time taken. When no arguments are passed, `printInclusive` defaults to all the measurements from the last recording. This prints a nicely formatted table in the console, like so:\n\n![](../images/docs/perf-inclusive.png)\n\n* * *\n\n### `printExclusive()`\n\n```javascript\nPerf.printExclusive(measurements)\n```\n\n\"Exclusive\" times don't include the times taken to mount the components: processing props, calling `componentWillMount` and `componentDidMount`, etc.\n\n![](../images/docs/perf-exclusive.png)\n\n* * *\n\n### `printWasted()`\n\n```javascript\nPerf.printWasted(measurements)\n```\n\n**The most useful part of the profiler**.\n\n\"Wasted\" time is spent on components that didn't actually render anything, e.g. the render stayed the same, so the DOM wasn't touched.\n\n![](../images/docs/perf-wasted.png)\n\n* * *\n\n### `printOperations()`\n\n```javascript\nPerf.printOperations(measurements)\n```\n\nPrints the underlying DOM manipulations, e.g. \"set innerHTML\" and \"remove\".\n\n![](../images/docs/perf-dom.png)\n\n* * *\n\n### `printDOM()`\n\n```javascript\nPerf.printDOM(measurements)\n```\n\nThis method has been renamed to [`printOperations()`](#printoperations). Currently `printDOM()` still exists as an alias but it prints a deprecation warning and will eventually be removed.\n",
        "type": "MarkdownRemark",
        "contentDigest": "983712123f1d3bbacb115ab6e19b3e5a",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Performance Tools",
        "id": "perf",
        "permalink": "docs/perf.html",
        "layout": "docs",
        "category": "Add-Ons",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/addons-perf.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/addons-perf.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/addons-perf.md",
      "fields": {
        "slug": "docs/perf.html",
        "path": "docs/addons-perf.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/addons-pure-render-mixin.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/addons-pure-render-mixin.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/addons-pure-render-mixin.md absPath of file",
      "internal": {
        "content": "---\nid: pure-render-mixin\ntitle: PureRenderMixin\npermalink: docs/pure-render-mixin.html\nlayout: docs\ncategory: Add-Ons\n---\n\n> Note:\n>\n> `PureRenderMixin` is a legacy add-on. Use [`React.PureComponent`](/docs/react-api.html#reactpurecomponent) instead.\n\n**Importing**\n\n```javascript\nimport PureRenderMixin from 'react-addons-pure-render-mixin'; // ES6\nvar PureRenderMixin = require('react-addons-pure-render-mixin'); // ES5 with npm\n```\n\n## Overview\n\nIf your React component's render function renders the same result given the same props and state, you can use this mixin for a performance boost in some cases.\n\nExample:\n\n```js\nconst createReactClass = require('create-react-class');\n\ncreateReactClass({\n  mixins: [PureRenderMixin],\n\n  render: function() {\n    return <div className={this.props.className}>foo</div>;\n  }\n});\n```\n\nUnder the hood, the mixin implements [shouldComponentUpdate](/docs/component-specs.html#updating-shouldcomponentupdate), in which it compares the current props and state with the next ones and returns `false` if the equalities pass.\n\n> Note:\n>\n> This only shallowly compares the objects. If these contain complex data structures, it may produce false-negatives for deeper differences. Only mix into components which have simple props and state, or use `forceUpdate()` when you know deep data structures have changed. Or, consider using [immutable objects](https://facebook.github.io/immutable-js/) to facilitate fast comparisons of nested data.\n>\n> Furthermore, `shouldComponentUpdate` skips updates for the whole component subtree. Make sure all the children components are also \"pure\".\n",
        "type": "MarkdownRemark",
        "contentDigest": "e5c921e5ff4ef42effad33d7737c4b79",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "PureRenderMixin",
        "id": "pure-render-mixin",
        "permalink": "docs/pure-render-mixin.html",
        "layout": "docs",
        "category": "Add-Ons",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/addons-pure-render-mixin.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/addons-pure-render-mixin.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/addons-pure-render-mixin.md",
      "fields": {
        "slug": "docs/pure-render-mixin.html",
        "path": "docs/addons-pure-render-mixin.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/addons-shallow-compare.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/addons-shallow-compare.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/addons-shallow-compare.md absPath of file",
      "internal": {
        "content": "---\nid: shallow-compare\ntitle: Shallow Compare\npermalink: docs/shallow-compare.html\nlayout: docs\ncategory: Reference\n---\n\n> Note:\n>\n> `shallowCompare` is a legacy add-on. Use [`React.PureComponent`](/docs/react-api.html#reactpurecomponent) instead.\n\n**Importing**\n\n```javascript\nimport shallowCompare from 'react-addons-shallow-compare'; // ES6\nvar shallowCompare = require('react-addons-shallow-compare'); // ES5 with npm\n```\n\n## Overview\n\nBefore [`React.PureComponent`](/docs/react-api.html#reactpurecomponent) was introduced, `shallowCompare` was commonly used to achieve the same functionality as [`PureRenderMixin`](pure-render-mixin.html) while using ES6 classes with React.\n\nIf your React component's render function is \"pure\" (in other words, it renders the same result given the same props and state), you can use this helper function for a performance boost in some cases.\n\nExample:\n\n```js\nexport class SampleComponent extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return shallowCompare(this, nextProps, nextState);\n  }\n\n  render() {\n    return <div className={this.props.className}>foo</div>;\n  }\n}\n```\n\n`shallowCompare` performs a shallow equality check on the current `props` and `nextProps` objects as well as the current `state` and `nextState` objects.  \nIt does this by iterating on the keys of the objects being compared and returning true when the values of a key in each object are not strictly equal.\n\n`shallowCompare` returns `true` if the shallow comparison for props or state fails and therefore the component should update.  \n`shallowCompare` returns `false` if the shallow comparison for props and state both pass and therefore the component does not need to update.\n",
        "type": "MarkdownRemark",
        "contentDigest": "cdc308d96a2beca04525110df3259ccb",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Shallow Compare",
        "id": "shallow-compare",
        "permalink": "docs/shallow-compare.html",
        "layout": "docs",
        "category": "Reference",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/addons-shallow-compare.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/addons-shallow-compare.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/addons-shallow-compare.md",
      "fields": {
        "slug": "docs/shallow-compare.html",
        "path": "docs/addons-shallow-compare.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/addons-shallow-renderer.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/addons-shallow-renderer.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/addons-shallow-renderer.md absPath of file",
      "internal": {
        "content": "---\nid: shallow-renderer\ntitle: 浅层渲染\npermalink: docs/shallow-renderer.html\nlayout: docs\ncategory: Reference\n---\n\n**Importing**\n\n```javascript\nimport ShallowRenderer from 'react-test-renderer/shallow'; // ES6\nvar ShallowRenderer = require('react-test-renderer/shallow'); // ES5 with npm\n```\n\n## 概述\n\n当为 React 写单元测试时, 浅渲染会变得十分有用。浅渲染使您渲染组件的“第一层”，并且对组件的 render 方法的返回值进行断言，不用担心子组件的行为，组件并没有实例化或被渲染。浅渲染并不需要 DOM。\n\n例如，如果您有如下的组件：\n\n```javascript\nfunction MyComponent() {\n  return (\n    <div>\n      <span className=\"heading\">Title</span>\n      <Subcomponent foo=\"bar\" />\n    </div>\n  );\n}\n```\n\n你可以断言(assert)：\n\n```javascript\nimport ShallowRenderer from 'react-test-renderer/shallow';\n\n// in your test:\nconst renderer = new ShallowRenderer();\nrenderer.render(<MyComponent />);\nconst result = renderer.getRenderOutput();\n\nexpect(result.type).toBe('div');\nexpect(result.props.children).toEqual([\n  <span className=\"heading\">Title</span>,\n  <Subcomponent foo=\"bar\" />\n]);\n```\n\n浅测试（Shallow testing）当前还有一些局限, 即不支持 refs。\n\n> 注意：\n>\n> 我们还建议看看 Enzyme [Shallow Rendering API](http://airbnb.io/enzyme/docs/api/shallow.html)。它在相同的功能上提供了一个更棒的高级 API。\n\n## 参考\n\n### `shallowRenderer.render()`\n\n你可以把 shallowRenderer 想象成一个用来渲染你正在测试的组件的“地方”，并且你可以从那里取到该组件的输出。\n\n`shallowRenderer.render()` 和 [`ReactDOM.render()`](/docs/react-dom.html#render)很像。但是它不需要 DOM 并且只渲染一层。这就意味着你可以测试与子组件行为隔离的组件。\n\n### `shallowRenderer.getRenderOutput()`\n\n在 `shallowRenderer.render()` 被调用后, 你可以调用 `shallowRenderer.getRenderOutput()` 来获取浅渲染的输出.\n\n然后，您就可以开始开始对输出进行断言了。\n",
        "type": "MarkdownRemark",
        "contentDigest": "fcf8e56ca78fdb1f17ec8b13574bec2e",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "浅层渲染",
        "id": "shallow-renderer",
        "permalink": "docs/shallow-renderer.html",
        "layout": "docs",
        "category": "Reference",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/addons-shallow-renderer.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/addons-shallow-renderer.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/addons-shallow-renderer.md",
      "fields": {
        "slug": "docs/shallow-renderer.html",
        "path": "docs/addons-shallow-renderer.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/addons-test-utils.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/addons-test-utils.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/addons-test-utils.md absPath of file",
      "internal": {
        "content": "---\nid: test-utils\ntitle: Test Utilities\npermalink: docs/test-utils.html\nlayout: docs\ncategory: Reference\n---\n\n**Importing**\n\n```javascript\nimport ReactTestUtils from 'react-dom/test-utils'; // ES6\nvar ReactTestUtils = require('react-dom/test-utils'); // ES5 with npm\n```\n\n## Overview\n\n`ReactTestUtils` makes it easy to test React components in the testing framework of your choice. At Facebook we use [Jest](https://facebook.github.io/jest/) for painless JavaScript testing. Learn how to get started with Jest through the Jest website's [React Tutorial](http://facebook.github.io/jest/docs/en/tutorial-react.html#content).\n\n> Note:\n>\n> Airbnb has released a testing utility called Enzyme, which makes it easy to assert, manipulate, and traverse your React Components' output. If you're deciding on a unit testing utility to use together with Jest, or any other test runner, it's worth checking out: [http://airbnb.io/enzyme/](http://airbnb.io/enzyme/)\n\n - [`Simulate`](#simulate)\n - [`renderIntoDocument()`](#renderintodocument)\n - [`mockComponent()`](#mockcomponent)\n - [`isElement()`](#iselement)\n - [`isElementOfType()`](#iselementoftype)\n - [`isDOMComponent()`](#isdomcomponent)\n - [`isCompositeComponent()`](#iscompositecomponent)\n - [`isCompositeComponentWithType()`](#iscompositecomponentwithtype)\n - [`findAllInRenderedTree()`](#findallinrenderedtree)\n - [`scryRenderedDOMComponentsWithClass()`](#scryrendereddomcomponentswithclass)\n - [`findRenderedDOMComponentWithClass()`](#findrendereddomcomponentwithclass)\n - [`scryRenderedDOMComponentsWithTag()`](#scryrendereddomcomponentswithtag)\n - [`findRenderedDOMComponentWithTag()`](#findrendereddomcomponentwithtag)\n - [`scryRenderedComponentsWithType()`](#scryrenderedcomponentswithtype)\n - [`findRenderedComponentWithType()`](#findrenderedcomponentwithtype)\n\n## Reference\n\n## Shallow Rendering\n\nWhen writing unit tests for React, shallow rendering can be helpful. Shallow rendering lets you render a component \"one level deep\" and assert facts about what its render method returns, without worrying about the behavior of child components, which are not instantiated or rendered. This does not require a DOM.\n\n> Note:\n>\n> The shallow renderer has moved to `react-test-renderer/shallow`.<br>\n> [Learn more about shallow rendering on its reference page.](/docs/shallow-renderer.html)\n\n## Other Utilities\n\n### `Simulate`\n\n```javascript\nSimulate.{eventName}(\n  element,\n  [eventData]\n)\n```\n\nSimulate an event dispatch on a DOM node with optional `eventData` event data.\n\n`Simulate` has a method for [every event that React understands](/docs/events.html#supported-events).\n\n**Clicking an element**\n\n```javascript\n// <button ref=\"button\">...</button>\nconst node = this.refs.button;\nReactTestUtils.Simulate.click(node);\n```\n\n**Changing the value of an input field and then pressing ENTER.**\n\n```javascript\n// <input ref=\"input\" />\nconst node = this.refs.input;\nnode.value = 'giraffe';\nReactTestUtils.Simulate.change(node);\nReactTestUtils.Simulate.keyDown(node, {key: \"Enter\", keyCode: 13, which: 13});\n```\n\n> Note\n>\n> You will have to provide any event property that you're using in your component (e.g. keyCode, which, etc...) as React is not creating any of these for you.\n\n* * *\n\n### `renderIntoDocument()`\n\n```javascript\nrenderIntoDocument(element)\n```\n\nRender a React element into a detached DOM node in the document. **This function requires a DOM.**\n\n> Note:\n>\n> You will need to have `window`, `window.document` and `window.document.createElement` globally available **before** you import `React`. Otherwise React will think it can't access the DOM and methods like `setState` won't work.\n\n* * *\n\n### `mockComponent()`\n\n```javascript\nmockComponent(\n  componentClass,\n  [mockTagName]\n)\n```\n\nPass a mocked component module to this method to augment it with useful methods that allow it to be used as a dummy React component. Instead of rendering as usual, the component will become a simple `<div>` (or other tag if `mockTagName` is provided) containing any provided children.\n\n> Note:\n>\n> `mockComponent()` is a legacy API. We recommend using [shallow rendering](/docs/test-utils.html#shallow-rendering) or [`jest.mock()`](https://facebook.github.io/jest/docs/en/tutorial-react-native.html#mock-native-modules-using-jestmock) instead.\n\n* * *\n\n### `isElement()`\n\n```javascript\nisElement(element)\n```\n\nReturns `true` if `element` is any React element.\n\n* * *\n\n### `isElementOfType()`\n\n```javascript\nisElementOfType(\n  element,\n  componentClass\n)\n```\n\nReturns `true` if `element` is a React element whose type is of a React `componentClass`.\n\n* * *\n\n### `isDOMComponent()`\n\n```javascript\nisDOMComponent(instance)\n```\n\nReturns `true` if `instance` is a DOM component (such as a `<div>` or `<span>`).\n\n* * *\n\n### `isCompositeComponent()`\n\n```javascript\nisCompositeComponent(instance)\n```\n\nReturns `true` if `instance` is a user-defined component, such as a class or a function.\n\n* * *\n\n### `isCompositeComponentWithType()`\n\n```javascript\nisCompositeComponentWithType(\n  instance,\n  componentClass\n)\n```\n\nReturns `true` if `instance` is a component whose type is of a React `componentClass`.\n\n* * *\n\n### `findAllInRenderedTree()`\n\n```javascript\nfindAllInRenderedTree(\n  tree,\n  test\n)\n```\n\nTraverse all components in `tree` and accumulate all components where `test(component)` is `true`. This is not that useful on its own, but it's used as a primitive for other test utils.\n\n* * *\n\n### `scryRenderedDOMComponentsWithClass()`\n\n```javascript\nscryRenderedDOMComponentsWithClass(\n  tree,\n  className\n)\n```\n\nFinds all DOM elements of components in the rendered tree that are DOM components with the class name matching `className`.\n\n* * *\n\n### `findRenderedDOMComponentWithClass()`\n\n```javascript\nfindRenderedDOMComponentWithClass(\n  tree,\n  className\n)\n```\n\nLike [`scryRenderedDOMComponentsWithClass()`](#scryrendereddomcomponentswithclass) but expects there to be one result, and returns that one result, or throws exception if there is any other number of matches besides one.\n\n* * *\n\n### `scryRenderedDOMComponentsWithTag()`\n\n```javascript\nscryRenderedDOMComponentsWithTag(\n  tree,\n  tagName\n)\n```\n\nFinds all DOM elements of components in the rendered tree that are DOM components with the tag name matching `tagName`.\n\n* * *\n\n### `findRenderedDOMComponentWithTag()`\n\n```javascript\nfindRenderedDOMComponentWithTag(\n  tree,\n  tagName\n)\n```\n\nLike [`scryRenderedDOMComponentsWithTag()`](#scryrendereddomcomponentswithtag) but expects there to be one result, and returns that one result, or throws exception if there is any other number of matches besides one.\n\n* * *\n\n### `scryRenderedComponentsWithType()`\n\n```javascript\nscryRenderedComponentsWithType(\n  tree,\n  componentClass\n)\n```\n\nFinds all instances of components with type equal to `componentClass`.\n\n* * *\n\n### `findRenderedComponentWithType()`\n\n```javascript\nfindRenderedComponentWithType(\n  tree,\n  componentClass\n)\n```\n\nSame as [`scryRenderedComponentsWithType()`](#scryrenderedcomponentswithtype) but expects there to be one result and returns that one result, or throws exception if there is any other number of matches besides one.\n\n* * *\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "431162088d98d5f3e198235b7a0dfe2b",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Test Utilities",
        "id": "test-utils",
        "permalink": "docs/test-utils.html",
        "layout": "docs",
        "category": "Reference",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/addons-test-utils.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/addons-test-utils.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/addons-test-utils.md",
      "fields": {
        "slug": "docs/test-utils.html",
        "path": "docs/addons-test-utils.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/addons-two-way-binding-helpers.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/addons-two-way-binding-helpers.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/addons-two-way-binding-helpers.md absPath of file",
      "internal": {
        "content": "---\nid: two-way-binding-helpers\ntitle: Two-way Binding Helpers\npermalink: docs/two-way-binding-helpers.html\nlayout: docs\ncategory: Add-Ons\n---\n\n> Note:\n>\n> `LinkedStateMixin` is deprecated as of React v15. The recommendation is to explicitly set the value and change handler, instead of using `LinkedStateMixin`.\n\n**Importing**\n\n```javascript\nimport LinkedStateMixin from 'react-addons-linked-state-mixin'; // ES6\nvar LinkedStateMixin = require('react-addons-linked-state-mixin'); // ES5 with npm\n```\n\n## Overview\n\n`LinkedStateMixin` is an easy way to express two-way binding with React.\n\nIn React, data flows one way: from owner to child. We think that this makes your app's code easier to understand. You can think of it as \"one-way data binding.\"\n\nHowever, there are lots of applications that require you to read some data and flow it back into your program. For example, when developing forms, you'll often want to update some React `state` when you receive user input. Or perhaps you want to perform layout in JavaScript and react to changes in some DOM element size.\n\nIn React, you would implement this by listening to a \"change\" event, read from your data source (usually the DOM) and call `setState()` on one of your components. \"Closing the data flow loop\" explicitly leads to more understandable and easier-to-maintain programs. See [our forms documentation](/docs/forms.html) for more information.\n\nTwo-way binding -- implicitly enforcing that some value in the DOM is always consistent with some React `state` -- is concise and supports a wide variety of applications. We've provided `LinkedStateMixin`: syntactic sugar for setting up the common data flow loop pattern described above, or \"linking\" some data source to React `state`.\n\n> Note:\n>\n> `LinkedStateMixin` is just a thin wrapper and convention around the `onChange`/`setState()` pattern. It doesn't fundamentally change how data flows in your React application.\n\n## LinkedStateMixin: Before and After\n\nHere's a simple form example without using `LinkedStateMixin`:\n\n```javascript\nvar createReactClass = require('create-react-class');\n\nvar NoLink = createReactClass({\n  getInitialState: function() {\n    return {message: 'Hello!'};\n  },\n  handleChange: function(event) {\n    this.setState({message: event.target.value});\n  },\n  render: function() {\n    var message = this.state.message;\n    return <input type=\"text\" value={message} onChange={this.handleChange} />;\n  }\n});\n```\n\nThis works really well and it's very clear how data is flowing, however, with a lot of form fields it could get a bit verbose. Let's use `LinkedStateMixin` to save us some typing:\n\n```javascript{4,9}\nvar createReactClass = require('create-react-class');\n\nvar WithLink = createReactClass({\n  mixins: [LinkedStateMixin],\n  getInitialState: function() {\n    return {message: 'Hello!'};\n  },\n  render: function() {\n    return <input type=\"text\" valueLink={this.linkState('message')} />;\n  }\n});\n```\n\n`LinkedStateMixin` adds a method to your React component called `linkState()`. `linkState()` returns a `valueLink` object which contains the current value of the React state and a callback to change it.\n\n`valueLink` objects can be passed up and down the tree as props, so it's easy (and explicit) to set up two-way binding between a component deep in the hierarchy and state that lives higher in the hierarchy.\n\nNote that checkboxes have a special behavior regarding their `value` attribute, which is the value that will be sent on form submit if the checkbox is checked (defaults to `on`). The `value` attribute is not updated when the checkbox is checked or unchecked. For checkboxes, you should use `checkedLink` instead of `valueLink`:\n```\n<input type=\"checkbox\" checkedLink={this.linkState('booleanValue')} />\n```\n\n## Under the Hood\n\nThere are two sides to `LinkedStateMixin`: the place where you create the `valueLink` instance and the place where you use it. To prove how simple `LinkedStateMixin` is, let's rewrite each side separately to be more explicit.\n\n### valueLink Without LinkedStateMixin\n\n```javascript{7-9,11-14}\nvar createReactClass = require('create-react-class');\n\nvar WithoutMixin = createReactClass({\n  getInitialState: function() {\n    return {message: 'Hello!'};\n  },\n  handleChange: function(newValue) {\n    this.setState({message: newValue});\n  },\n  render: function() {\n    var valueLink = {\n      value: this.state.message,\n      requestChange: this.handleChange\n    };\n    return <input type=\"text\" valueLink={valueLink} />;\n  }\n});\n```\n\nAs you can see, `valueLink` objects are very simple objects that just have a `value` and `requestChange` prop. And `LinkedStateMixin` is similarly simple: it just populates those fields with a value from `this.state` and a callback that calls `this.setState()`.\n\n### LinkedStateMixin Without valueLink\n\n```javascript\nvar LinkedStateMixin = require('react-addons-linked-state-mixin');\nvar createReactClass = require('create-react-class');\n\nvar WithoutLink = createReactClass({\n  mixins: [LinkedStateMixin],\n  getInitialState: function() {\n    return {message: 'Hello!'};\n  },\n  render: function() {\n    var valueLink = this.linkState('message');\n    var handleChange = function(e) {\n      valueLink.requestChange(e.target.value);\n    };\n    return <input type=\"text\" value={valueLink.value} onChange={handleChange} />;\n  }\n});\n```\n\nThe `valueLink` prop is also quite simple. It simply handles the `onChange` event and calls `this.props.valueLink.requestChange()` and also uses `this.props.valueLink.value` instead of `this.props.value`. That's it!\n",
        "type": "MarkdownRemark",
        "contentDigest": "5def5509b30ba7b01dd1f5a910ba7f68",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Two-way Binding Helpers",
        "id": "two-way-binding-helpers",
        "permalink": "docs/two-way-binding-helpers.html",
        "layout": "docs",
        "category": "Add-Ons",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/addons-two-way-binding-helpers.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/addons-two-way-binding-helpers.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/addons-two-way-binding-helpers.md",
      "fields": {
        "slug": "docs/two-way-binding-helpers.html",
        "path": "docs/addons-two-way-binding-helpers.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/addons-update.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/addons-update.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/addons-update.md absPath of file",
      "internal": {
        "content": "---\nid: update\ntitle: Immutability Helpers\npermalink: docs/update.html\nlayout: docs\ncategory: Add-Ons\n---\n\n> Note:\n>\n> `update` is a legacy add-on. Use [`immutability-helper`](https://github.com/kolodny/immutability-helper) instead.\n\n**Importing**\n\n```javascript\nimport update from 'react-addons-update'; // ES6\nvar update = require('react-addons-update'); // ES5 with npm\n```\n\n## Overview\n\nReact lets you use whatever style of data management you want, including mutation. However, if you can use immutable data in performance-critical parts of your application it's easy to implement a fast [`shouldComponentUpdate()`](/docs/react-component.html#shouldcomponentupdate) method to significantly speed up your app.\n\nDealing with immutable data in JavaScript is more difficult than in languages designed for it, like [Clojure](http://clojure.org/). However, we've provided a simple immutability helper, `update()`, that makes dealing with this type of data much easier, *without* fundamentally changing how your data is represented. You can also take a look at Facebook's [Immutable-js](https://facebook.github.io/immutable-js/docs/) and the [Advanced Performance](/docs/advanced-performance.html) section for more detail on Immutable-js.\n\n### The Main Idea\n\nIf you mutate data like this:\n\n```js\nmyData.x.y.z = 7;\n// or...\nmyData.a.b.push(9);\n```\n\nYou have no way of determining which data has changed since the previous copy has been overwritten. Instead, you need to create a new copy of `myData` and change only the parts of it that need to be changed. Then you can compare the old copy of `myData` with the new one in `shouldComponentUpdate()` using triple-equals:\n\n```js\nconst newData = deepCopy(myData);\nnewData.x.y.z = 7;\nnewData.a.b.push(9);\n```\n\nUnfortunately, deep copies are expensive, and sometimes impossible. You can alleviate this by only copying objects that need to be changed and by reusing the objects that haven't changed. Unfortunately, in today's JavaScript this can be cumbersome:\n\n```js\nconst newData = extend(myData, {\n  x: extend(myData.x, {\n    y: extend(myData.x.y, {z: 7}),\n  }),\n  a: extend(myData.a, {b: myData.a.b.concat(9)})\n});\n```\n\nWhile this is fairly performant (since it only makes a shallow copy of `log n` objects and reuses the rest), it's a big pain to write. Look at all the repetition! This is not only annoying, but also provides a large surface area for bugs.\n\n## `update()`\n\n`update()` provides simple syntactic sugar around this pattern to make writing this code easier. This code becomes:\n\n```js\nimport update from 'react-addons-update';\n\nconst newData = update(myData, {\n  x: {y: {z: {$set: 7}}},\n  a: {b: {$push: [9]}}\n});\n```\n\nWhile the syntax takes a little getting used to (though it's inspired by [MongoDB's query language](http://docs.mongodb.org/manual/core/crud-introduction/#query)) there's no redundancy, it's statically analyzable and it's not much more typing than the mutative version.\n\nThe `$`-prefixed keys are called *commands*. The data structure they are \"mutating\" is called the *target*.\n\n## Available Commands\n\n  * `{$push: array}` `push()` all the items in `array` on the target.\n  * `{$unshift: array}` `unshift()` all the items in `array` on the target.\n  * `{$splice: array of arrays}` for each item in `arrays` call `splice()` on the target with the parameters provided by the item.\n  * `{$set: any}` replace the target entirely.\n  * `{$merge: object}` merge the keys of `object` with the target.\n  * `{$apply: function}` passes in the current value to the function and updates it with the new returned value.\n\n## Examples\n\n### Simple push\n\n```js\nconst initialArray = [1, 2, 3];\nconst newArray = update(initialArray, {$push: [4]}); // => [1, 2, 3, 4]\n```\n`initialArray` is still `[1, 2, 3]`.\n\n### Nested collections\n\n```js\nconst collection = [1, 2, {a: [12, 17, 15]}];\nconst newCollection = update(collection, {2: {a: {$splice: [[1, 1, 13, 14]]}}});\n// => [1, 2, {a: [12, 13, 14, 15]}]\n```\nThis accesses `collection`'s index `2`, key `a`, and does a splice of one item starting from index `1` (to remove `17`) while inserting `13` and `14`.\n\n### Updating a value based on its current one\n\n```js\nconst obj = {a: 5, b: 3};\nconst newObj = update(obj, {b: {$apply: function(x) {return x * 2;}}});\n// => {a: 5, b: 6}\n// This is equivalent, but gets verbose for deeply nested collections:\nconst newObj2 = update(obj, {b: {$set: obj.b * 2}});\n```\n\n### (Shallow) Merge\n\n```js\nconst obj = {a: 5, b: 3};\nconst newObj = update(obj, {$merge: {b: 6, c: 7}}); // => {a: 5, b: 6, c: 7}\n```\n",
        "type": "MarkdownRemark",
        "contentDigest": "aa24afc38c36538d0350aea611947621",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Immutability Helpers",
        "id": "update",
        "permalink": "docs/update.html",
        "layout": "docs",
        "category": "Add-Ons",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/addons-update.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/addons-update.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/addons-update.md",
      "fields": {
        "slug": "docs/update.html",
        "path": "docs/addons-update.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/addons.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/addons.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/addons.md absPath of file",
      "internal": {
        "content": "---\nid: addons\ntitle: Add-Ons\npermalink: docs/addons.html\n---\n\n> Note:\n>\n> `React.addons` entry point is deprecated as of React v15.5. The add-ons have moved to separate modules, and some of them have been deprecated.\n\nThe React add-ons are a collection of useful utility modules for building React apps. **These should be considered experimental** and tend to change more often than the core.\n\n- [`createFragment`](create-fragment.html), to create a set of externally-keyed children.\n\nThe add-ons below are in the development (unminified) version of React only:\n\n- [`Perf`](perf.html), a performance profiling tool for finding optimization opportunities.\n- [`ReactTestUtils`](test-utils.html), simple helpers for writing test cases.\n\n### Legacy Add-ons\n\nThe add-ons below are considered legacy and their use is discouraged. They will keep working in observable future, but there is no further development.\n\n- [`PureRenderMixin`](pure-render-mixin.html). Use [`React.PureComponent`](/docs/react-api.html#reactpurecomponent) instead.\n- [`shallowCompare`](shallow-compare.html), a helper function that performs a shallow comparison for props and state in a component to decide if a component should update. We recommend using [`React.PureComponent`](/docs/react-api.html#reactpurecomponent) instead.\n- [`update`](update.html). Use [`kolodny/immutability-helper`](https://github.com/kolodny/immutability-helper) instead.\n- [`ReactDOMFactories`](dom-factories.html), pre-configured DOM factories to make React easier to use without JSX.\n\n### Deprecated Add-ons\n\n- [`LinkedStateMixin`](two-way-binding-helpers.html) has been deprecated.\n- [`TransitionGroup` and `CSSTransitionGroup`](animation.html) have been deprecated in favor of [their drop-in replacements](https://github.com/reactjs/react-transition-group/tree/v1-stable).\n\n## Using React with Add-ons\n\nYou can install the add-ons individually from npm (e.g. `npm install react-addons-create-fragment`) and import them:\n\n```javascript\nimport createFragment from 'react-addons-create-fragment'; // ES6\nvar createFragment = require('react-addons-create-fragment'); // ES5 with npm\n```\n\nWhen using a CDN, you can use `react-with-addons.js` instead of `react.js`:\n\n```html\n<script src=\"https://unpkg.com/react@15/dist/react-with-addons.js\"></script>\n```\n\nThe add-ons will be available via the `React.addons` global (e.g. `React.addons.TestUtils`).\n",
        "type": "MarkdownRemark",
        "contentDigest": "087a61672028ff18666ddeb393b87d90",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Add-Ons",
        "id": "addons",
        "permalink": "docs/addons.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/addons.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/addons.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/addons.md",
      "fields": {
        "slug": "docs/addons.html",
        "path": "docs/addons.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/cdn-links.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/cdn-links.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/cdn-links.md absPath of file",
      "internal": {
        "content": "---\nid: cdn-links\ntitle: CDN Links\npermalink: docs/cdn-links.html\nprev: add-react-to-an-existing-app.html\nnext: hello-world.html\n---\n\n可以通过 CDN 获得 React 和 ReactDOM 的 UMD 版本。\n\n```html\n<script crossorigin src=\"https://unpkg.com/react@16/umd/react.development.js\"></script>\n<script crossorigin src=\"https://unpkg.com/react-dom@16/umd/react-dom.development.js\"></script>\n```\n\n上述版本仅用于开发环境，不适合用于生产环境。React 的压缩和优化之后的生产环境版本链接如下：\n\n```html\n<script crossorigin src=\"https://unpkg.com/react@16/umd/react.production.min.js\"></script>\n<script crossorigin src=\"https://unpkg.com/react-dom@16/umd/react-dom.production.min.js\"></script>\n```\n\n如果需要加载指定版本的 `react` 和 `react-dom`，可以把 `16` 替换成需要加载的版本号。\n\n### 为什么要使用 `crossorigin` 属性?\n\n如果你通过 CDN 的方式引入 React, 我们建议你设置 [`crossorigin`](https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes) 属性：\n\n```html\n<script crossorigin src=\"...\"></script>\n```\n\n我们同时建议你设置 `Access-Control-Allow-Origin: *` HTTP请求头来验证 CDN：\n\n![Access-Control-Allow-Origin: *](../images/docs/cdn-cors-header.png)\n\n这样可以在 React 的16及以上的版本中有更好的 [错误处理体验](/blog/2017/07/26/error-handling-in-react-16.html)。\n",
        "type": "MarkdownRemark",
        "contentDigest": "ecebece7d179e03118a619041ec478e6",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "CDN Links",
        "id": "cdn-links",
        "permalink": "docs/cdn-links.html",
        "prev": "add-react-to-an-existing-app.html",
        "next": "hello-world.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/cdn-links.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/cdn-links.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/cdn-links.md",
      "fields": {
        "slug": "docs/cdn-links.html",
        "path": "docs/cdn-links.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/code-splitting.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/code-splitting.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/code-splitting.md absPath of file",
      "internal": {
        "content": "---\nid: code-splitting\ntitle: Code-Splitting\npermalink: docs/code-splitting.html\n---\n\n## 打包\n\n大多数 React 应用都会通过类似 [Webpack](https://webpack.js.org/) 或 [Browserify](http://browserify.org/) 构建自己的文件 “包（bundled）”。构建是一个将文件引入并合并到一个单独文件：“包（bundle）” 的环节。该包包含在一个 web  页面上用以立刻加载整个应用。\n\n#### 例子\n\n**App:**\n\n```js\n// app.js\nimport { add } from './math.js';\n\nconsole.log(add(16, 26)); // 42\n```\n\n```js\n// math.js\nexport function add(a, b) {\n  return a + b;\n}\n```\n\n**Bundle:**\n\n```js\nfunction add(a, b) {\n  return a + b;\n}\n\nconsole.log(add(16, 26)); // 42\n```\n\n> 注意：\n>\n> 你的包最终看起来会和这个有很大的不同。\n\n若你正在使用 [Create React App](https://github.com/facebookincubator/create-react-app), [Next.js](https://github.com/zeit/next.js/)、[Gatsby](https://www.gatsbyjs.org/) 或类似工具，你将有一个能够立即对你的应用进行打包的 webpack 配置。\n\n若你未使用，你职责需要自己来进行配置。例如，查看 webpack 文档上的[安装](https://webpack.js.org/guides/installation/)和\n[入门](https://webpack.js.org/guides/getting-started/)指南。\n\n## 代码分隔\n\n打包非常棒，但随着你的应用增长，你的代码包也将随之增长。尤其是如果你包含了体积大的第三方库。你需要关注你代码包中所包含的代码以避免体积过大而使得加载时间过长。\n\n为了避免清理大体积的代码包，在一开始就解决该问题并开始对代码包进行分割则十分不错。[代码分割](https://webpack.js.org/guides/code-splitting/)是由如 webpack 和 Browserify（通过 [factor-bundle](https://github.com/browserify/factor-bundle)）等打包器支持的一项能够创建多个包并在运行时动态加载的特性。\n\n代码分割你的应用能够帮助你“懒加载”当前用户所需要的内容，能够显著地提高你的应用性能。尽管你不用减少你的应用中过多的代码体积，你仍然能够避免加载用户永远不需要的代码，并在初始化时候减少所需加载的代码量。\n\n## `import()`\n\n在你的应用中引入代码分割的最佳方式是通过动态 `import()` 语法。\n\n**之前:**\n\n```js\nimport { add } from './math';\n\nconsole.log(add(16, 26));\n```\n\n**之后:**\n\n```js\nimport(\"./math\").then(math => {\n  console.log(math.add(16, 26));\n});\n```\n\n> 注意：\n>\n> 动态 `imports()` 语法目前是 ECMAScript (JavaScript) [提案](https://github.com/tc39/proposal-dynamic-import) 而不是语言标准。期待其在不远的将来被接纳成为标准的一部分。\n\n当 Webpack 解析到该语法时，它会自动地开始进行代码分割。如果你使用 Create React App，该功能已配置好，你已可以[开始使用](https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/template/README.md#code-splitting)。[Next.js](https://github.com/zeit/next.js/#dynamic-import) 也已支持该特性而无需再配置(out of box)。\n\n如果你自己配置 Webpack，你可能要阅读下 Webpack [关于代码分割的指南](https://webpack.js.org/guides/code-splitting/)。你的 Webpack 配置应该看起来有点[类似于此](https://gist.github.com/gaearon/ca6e803f5c604d37468b0091d9959269)。\n\n当使用 [Babel](http://babeljs.io/) 时，你需要确保 Babel 能够解析动态引入语法而不是将其进行转换。对于这一要求你需要 [babel-plugin-syntax-dynamic-import](https://yarnpkg.com/en/package/babel-plugin-syntax-dynamic-import)。\n\n## 库\n\n### React Loadable\n\n[React Loadable](https://github.com/thejameskyle/react-loadable) 将动态引入(dynamic import)封装成了一个对 React 友好的 API 来在特定组件下引入代码分割的功能。\n\n**之前:**\n\n```js\nimport OtherComponent from './OtherComponent';\n\nconst MyComponent = () => (\n  <OtherComponent/>\n);\n```\n\n**之后:**\n\n```js\nimport Loadable from 'react-loadable';\n\nconst LoadableOtherComponent = Loadable({\n  loader: () => import('./OtherComponent'),\n  loading: () => <div>Loading...</div>,\n});\n\nconst MyComponent = () => (\n  <LoadableOtherComponent/>\n);\n```\n\nReact Loadable 帮助你创建[加载状态](https://github.com/thejameskyle/react-loadable#creating-a-great-loading-component)、[错误状态](https://github.com/thejameskyle/react-loadable#loading-error-states)、[超时](https://github.com/thejameskyle/react-loadable#timing-out-when-the-loader-is-taking-too-long)、[预加载](https://github.com/thejameskyle/react-loadable#preloading)等等。它甚至能通过大量的代码分割帮助进行[服务端渲染](https://github.com/thejameskyle/react-loadable#------------server-side-rendering)。\n\n## 基于路由的代码分隔\n\n决定在哪引入代码分割则需要一些技巧。你需要确保选择的位置能够均匀地分割代码包而不会影响用户体验。\n\n一个不错的位置是从路由开始。大多数网络用户习惯于花费些时间在页面交互。你也可以立刻重渲整个页面这样你的用户则无法与页面的其他元素进行交互。\n\n这有一个使用类似 [React Router](https://reacttraining.com/react-router/) 和\n[React Loadable](https://github.com/thejameskyle/react-loadable) 库的关于如何配置基于路由的代码分割的例子。\n\n```js\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Loadable from 'react-loadable';\n\nconst Loading = () => <div>Loading...</div>;\n\nconst Home = Loadable({\n  loader: () => import('./routes/Home'),\n  loading: Loading,\n});\n\nconst About = Loadable({\n  loader: () => import('./routes/About'),\n  loading: Loading,\n});\n\nconst App = () => (\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" component={Home}/>\n      <Route path=\"/about\" component={About}/>\n    </Switch>\n  </Router>\n);\n```\n",
        "type": "MarkdownRemark",
        "contentDigest": "b89be0ff5945bbfffaa3e13169cab841",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Code-Splitting",
        "id": "code-splitting",
        "permalink": "docs/code-splitting.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/code-splitting.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/code-splitting.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/code-splitting.md",
      "fields": {
        "slug": "docs/code-splitting.html",
        "path": "docs/code-splitting.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/components-and-props.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/components-and-props.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/components-and-props.md absPath of file",
      "internal": {
        "content": "---\nid: components-and-props\ntitle: 组件 & Props\npermalink: docs/components-and-props.html\nredirect_from:\n  - \"docs/reusable-components.html\"\n  - \"docs/reusable-components-zh-CN.html\"\n  - \"docs/transferring-props.html\"\n  - \"docs/transferring-props-it-IT.html\"\n  - \"docs/transferring-props-ja-JP.html\"\n  - \"docs/transferring-props-ko-KR.html\"\n  - \"docs/transferring-props-zh-CN.html\"\n  - \"tips/props-in-getInitialState-as-anti-pattern.html\"\n  - \"tips/communicate-between-components.html\"\nprev: rendering-elements.html\nnext: state-and-lifecycle.html\n---\n\n组件可以将UI切分成一些独立的、可复用的部件，这样你就只需专注于构建每一个单独的部件。\n\n组件从概念上看就像是函数，它可以接收任意的输入值（称之为“props”），并返回一个需要在页面上展示的React元素。\n\n## 函数定义/类定义组件\n\n定义一个组件最简单的方式是使用JavaScript函数：\n\n```js\nfunction Welcome(props) {\n  return <h1>Hello, {props.name}</h1>;\n}\n```\n\n该函数是一个有效的React组件，它接收一个单一的“props”对象并返回了一个React元素。我们之所以称这种类型的组件为函数定义组件，是因为从字面上来看，它就是一个JavaScript函数。\n\n你也可以使用 [ES6 class](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes) 来定义一个组件:\n\n```js\nclass Welcome extends React.Component {\n  render() {\n    return <h1>Hello, {this.props.name}</h1>;\n  }\n}\n```\n\n上面两个组件在React中是相同的。\n\n我们将在[下一节](/docs/state-and-lifecycle.html)讨论类的一些额外特性。在那之前，我们都将使用较为简洁的函数定义组件。\n\n## 组件渲染\n\n在前面，我们遇到的React元素都只是DOM标签：\n\n```js\nconst element = <div />;\n```\n\n然而，React元素也可以是用户自定义的组件：\n\n```js\nconst element = <Welcome name=\"Sara\" />;\n```\n\n当React遇到的元素是用户自定义的组件，它会将JSX属性作为单个对象传递给该组件，这个对象称之为“props”。\n\n例如,这段代码会在页面上渲染出\"Hello,Sara\":\n\n```js{1,5}\nfunction Welcome(props) {\n  return <h1>Hello, {props.name}</h1>;\n}\n\nconst element = <Welcome name=\"Sara\" />;\nReactDOM.render(\n  element,\n  document.getElementById('root')\n);\n```\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/YGYmEG?editors=0010)\n\n我们来回顾一下在这个例子中发生了什么：\n\n1. 我们对`<Welcome name=\"Sara\" />`元素调用了`ReactDOM.render()`方法。\n2. React将`{name: 'Sara'}`作为props传入并调用`Welcome`组件。\n3. `Welcome`组件将`<h1>Hello, Sara</h1>`元素作为结果返回。\n4. React DOM将DOM更新为`<h1>Hello, Sara</h1>`。\n\n>**警告:**\n>\n>组件名称必须以大写字母开头。\n>\n>例如，`<div />` 表示一个DOM标签，但 `<Welcome />` 表示一个组件，并且在使用该组件时你必须定义或引入它。\n\n## 组合组件\n\n组件可以在它的输出中引用其它组件，这就可以让我们用同一组件来抽象出任意层次的细节。在React应用中，按钮、表单、对话框、整个屏幕的内容等，这些通常都被表示为组件。\n\n例如，我们可以创建一个`App`组件，用来多次渲染`Welcome`组件：\n\n```js{8-10}\nfunction Welcome(props) {\n  return <h1>Hello, {props.name}</h1>;\n}\n\nfunction App() {\n  return (\n    <div>\n      <Welcome name=\"Sara\" />\n      <Welcome name=\"Cahal\" />\n      <Welcome name=\"Edite\" />\n    </div>\n  );\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n```\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/KgQKPr?editors=0010)\n\n通常，一个新的React应用程序的顶部是一个`App`组件。但是，如果要将React集成到现有应用程序中，则可以从下而上使用像`Button`这样的小组件作为开始，并逐渐运用到视图层的顶部。\n\n>**警告:**\n>\n>组件的返回值只能有一个根元素。这也是我们要用一个`<div>`来包裹所有`<Welcome />`元素的原因。\n\n## 提取组件\n\n你可以将组件切分为更小的组件，这没什么好担心的。\n\n例如，来看看这个`Comment`组件：\n\n```js\nfunction Comment(props) {\n  return (\n    <div className=\"Comment\">\n      <div className=\"UserInfo\">\n        <img className=\"Avatar\"\n          src={props.author.avatarUrl}\n          alt={props.author.name}\n        />\n        <div className=\"UserInfo-name\">\n          {props.author.name}\n        </div>\n      </div>\n      <div className=\"Comment-text\">\n        {props.text}\n      </div>\n      <div className=\"Comment-date\">\n        {formatDate(props.date)}\n      </div>\n    </div>\n  );\n}\n```\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/VKQwEo?editors=0010)\n\n这个组件接收`author`(对象)、`text`(字符串)、以及`date`(Date对象)作为props，用来描述一个社交媒体网站上的评论。\n\n这个组件由于嵌套，变得难以被修改，可复用的部分也难以被复用。所以让我们从这个组件中提取出一些小组件。\n\n首先，我们来提取`Avatar`组件：\n\n```js{3-6}\nfunction Avatar(props) {\n  return (\n    <img className=\"Avatar\"\n      src={props.user.avatarUrl}\n      alt={props.user.name}\n    />\n  );\n}\n```\n\n`Avatar`作为`Comment`的内部组件，不需要知道是否被渲染。因此我们将`author`改为一个更通用的名字`user`。\n\n我们建议从组件自身的角度来命名props，而不是根据使用组件的上下文命名。\n\n现在我们可以对`Comment`组件做一些小小的调整：\n\n```js{5}\nfunction Comment(props) {\n  return (\n    <div className=\"Comment\">\n      <div className=\"UserInfo\">\n        <Avatar user={props.author} />\n        <div className=\"UserInfo-name\">\n          {props.author.name}\n        </div>\n      </div>\n      <div className=\"Comment-text\">\n        {props.text}\n      </div>\n      <div className=\"Comment-date\">\n        {formatDate(props.date)}\n      </div>\n    </div>\n  );\n}\n```\n\n接下来，我们要提取一个`UserInfo`组件，用来渲染`Avatar`旁边的用户名：\n\n```js{3-8}\nfunction UserInfo(props) {\n  return (\n    <div className=\"UserInfo\">\n      <Avatar user={props.user} />\n      <div className=\"UserInfo-name\">\n        {props.user.name}\n      </div>\n    </div>\n  );\n}\n```\n\n这可以让我们进一步简化`Comment`组件：\n\n```js{4}\nfunction Comment(props) {\n  return (\n    <div className=\"Comment\">\n      <UserInfo user={props.author} />\n      <div className=\"Comment-text\">\n        {props.text}\n      </div>\n      <div className=\"Comment-date\">\n        {formatDate(props.date)}\n      </div>\n    </div>\n  );\n}\n```\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/rrJNJY?editors=0010)\n\n提取组件一开始看起来像是一项单调乏味的工作，但是在大型应用中，构建可复用的组件完全是值得的。当你的UI中有一部分重复使用了好几次（比如，`Button`、`Panel`、`Avatar`），或者其自身就足够复杂（比如，`App`、`FeedStory`、`Comment`），类似这些都是抽象成一个可复用组件的绝佳选择，这也是一个比较好的做法。\n\n## Props的只读性\n\n无论是使用[函数或是类](#函数定义/类定义组件)来声明一个组件，它决不能修改它自己的props。来看这个`sum`函数：\n\n```js\nfunction sum(a, b) {\n  return a + b;\n}\n```\n\n类似于上面的这种函数称为[“纯函数”](https://en.wikipedia.org/wiki/Pure_function)，它没有改变它自己的输入值，当传入的值相同时，总是会返回相同的结果。\n\n与之相对的是非纯函数，它会改变它自身的输入值：\n\n```js\nfunction withdraw(account, amount) {\n  account.total -= amount;\n}\n```\n\nReact是非常灵活的，但它也有一个严格的规则：\n\n**所有的React组件必须像纯函数那样使用它们的props。**\n\n当然，应用的界面是随时间动态变化的，我们将在[下一节](/docs/state-and-lifecycle.html)介绍一种称为“state”的新概念，State可以在不违反上述规则的情况下，根据用户操作、网络响应、或者其他状态变化，使组件动态的响应并改变组件的输出。\n",
        "type": "MarkdownRemark",
        "contentDigest": "7e41325c1f8ac73ef3c3696fe7bb9ac7",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "组件 & Props",
        "id": "components-and-props",
        "permalink": "docs/components-and-props.html",
        "redirect_from": [
          "docs/reusable-components.html",
          "docs/reusable-components-zh-CN.html",
          "docs/transferring-props.html",
          "docs/transferring-props-it-IT.html",
          "docs/transferring-props-ja-JP.html",
          "docs/transferring-props-ko-KR.html",
          "docs/transferring-props-zh-CN.html",
          "tips/props-in-getInitialState-as-anti-pattern.html",
          "tips/communicate-between-components.html"
        ],
        "prev": "rendering-elements.html",
        "next": "state-and-lifecycle.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/components-and-props.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/components-and-props.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/components-and-props.md",
      "fields": {
        "slug": "docs/components-and-props.html",
        "path": "docs/components-and-props.md",
        "redirect": "[\"docs/reusable-components.html\",\"docs/reusable-components-zh-CN.html\",\"docs/transferring-props.html\",\"docs/transferring-props-it-IT.html\",\"docs/transferring-props-ja-JP.html\",\"docs/transferring-props-ko-KR.html\",\"docs/transferring-props-zh-CN.html\",\"tips/props-in-getInitialState-as-anti-pattern.html\",\"tips/communicate-between-components.html\"]"
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/composition-vs-inheritance.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/composition-vs-inheritance.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/composition-vs-inheritance.md absPath of file",
      "internal": {
        "content": "---\nid: composition-vs-inheritance\ntitle: 组合 vs 继承\npermalink: docs/composition-vs-inheritance.html\nredirect_from: \"docs/multiple-components.html\"\nprev: lifting-state-up.html\nnext: thinking-in-react.html\n---\n\nReact 具有强大的组合模型，我们建议使用组合而不是继承来复用组件之间的代码。\n\n在本节中，我们将围绕几个 React 新手经常使用继承解决的问题，我们将展示如何用组合来解决它们。\n\n## 包含关系\n\n一些组件不能提前知道它们的子组件是什么。这对于 `Sidebar` 或 `Dialog` 这类通用容器尤其常见。\n\n我们建议这些组件使用 `children` 属性将子元素直接传递到输出。\n\n```js{4}\nfunction FancyBorder(props) {\n  return (\n    <div className={'FancyBorder FancyBorder-' + props.color}>\n      {props.children}\n    </div>\n  );\n}\n```\n\n这样做还允许其他组件通过嵌套 JSX 来传递子组件。\n\n```js{4-9}\nfunction WelcomeDialog() {\n  return (\n    <FancyBorder color=\"blue\">\n      <h1 className=\"Dialog-title\">\n        Welcome\n      </h1>\n      <p className=\"Dialog-message\">\n        Thank you for visiting our spacecraft!\n      </p>\n    </FancyBorder>\n  );\n}\n```\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/ozqNOV?editors=0010)\n\n`<FancyBorder>` JSX 标签内的任何内容都将通过 `children` 属性传入 `FancyBorder`。由于 `FancyBorder` 在一个 `<div>` 内渲染了 `{props.children}`，所以被传递的所有元素都会出现在最终输出中。\n\n虽然不太常见，但有时你可能需要在组件中有多个入口，这种情况下你可以使用自己约定的属性而不是 `children`：\n\n```js{5,8,18,21}\nfunction SplitPane(props) {\n  return (\n    <div className=\"SplitPane\">\n      <div className=\"SplitPane-left\">\n        {props.left}\n      </div>\n      <div className=\"SplitPane-right\">\n        {props.right}\n      </div>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <SplitPane\n      left={\n        <Contacts />\n      }\n      right={\n        <Chat />\n      } />\n  );\n}\n```\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/gwZOJp?editors=0010)\n\n类似 `<Contacts />` 和 `<Chat />` 这样的 React 元素都是对象，所以你可以像任何其他元素一样传递它们。\n\n## 特殊实例\n\n有时我们认为组件是其他组件的特殊实例。例如，我们会说 `WelcomeDialog` 是 `Dialog` 的特殊实例。\n\n在 React 中，这也是通过组合来实现的，通过配置属性用较特殊的组件来渲染较通用的组件。\n\n```js{5,8,16-18}\nfunction Dialog(props) {\n  return (\n    <FancyBorder color=\"blue\">\n      <h1 className=\"Dialog-title\">\n        {props.title}\n      </h1>\n      <p className=\"Dialog-message\">\n        {props.message}\n      </p>\n    </FancyBorder>\n  );\n}\n\nfunction WelcomeDialog() {\n  return (\n    <Dialog\n      title=\"Welcome\"\n      message=\"Thank you for visiting our spacecraft!\" />\n  );\n}\n```\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/kkEaOZ?editors=0010)\n\n组合对于定义为类的组件同样适用：\n\n```js{10,27-31}\nfunction Dialog(props) {\n  return (\n    <FancyBorder color=\"blue\">\n      <h1 className=\"Dialog-title\">\n        {props.title}\n      </h1>\n      <p className=\"Dialog-message\">\n        {props.message}\n      </p>\n      {props.children}\n    </FancyBorder>\n  );\n}\n\nclass SignUpDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSignUp = this.handleSignUp.bind(this);\n    this.state = {login: ''};\n  }\n\n  render() {\n    return (\n      <Dialog title=\"Mars Exploration Program\"\n              message=\"How should we refer to you?\">\n        <input value={this.state.login}\n               onChange={this.handleChange} />\n        <button onClick={this.handleSignUp}>\n          Sign Me Up!\n        </button>\n      </Dialog>\n    );\n  }\n\n  handleChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handleSignUp() {\n    alert(`Welcome aboard, ${this.state.login}!`);\n  }\n}\n```\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/gwZbYa?editors=0010)\n\n## 那么继承呢？\n\n在 Facebook 网站上，我们的 React 使用了数以千计的组件，然而却还未发现任何需要推荐你使用继承的情况。\n\n属性和组合为你提供了以清晰和安全的方式自定义组件的样式和行为所需的所有灵活性。请记住，组件可以接受任意元素，包括基本数据类型、React 元素或函数。\n\n如果要在组件之间复用 UI 无关的功能，我们建议将其提取到单独的 JavaScript 模块中。这样可以在不对组件进行扩展的前提下导入并使用该函数、对象或类。\n",
        "type": "MarkdownRemark",
        "contentDigest": "b9674b6d1d8c5e0773756c4c3940d963",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "组合 vs 继承",
        "id": "composition-vs-inheritance",
        "permalink": "docs/composition-vs-inheritance.html",
        "redirect_from": "docs/multiple-components.html",
        "prev": "lifting-state-up.html",
        "next": "thinking-in-react.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/composition-vs-inheritance.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/composition-vs-inheritance.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/composition-vs-inheritance.md",
      "fields": {
        "slug": "docs/composition-vs-inheritance.html",
        "path": "docs/composition-vs-inheritance.md",
        "redirect": "\"docs/multiple-components.html\""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/conditional-rendering.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/conditional-rendering.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/conditional-rendering.md absPath of file",
      "internal": {
        "content": "---\nid: conditional-rendering\ntitle: 条件渲染\npermalink: docs/conditional-rendering.html\nprev: handling-events.html\nnext: lists-and-keys.html\nredirect_from: \"tips/false-in-jsx.html\"\n---\n\n在 React 中，你可以创建不同的组件来封装各种你需要的行为。然后还可以根据应用的状态变化只渲染其中的一部分。\n\nReact 中的条件渲染和 JavaScript 中的一致，使用 JavaScript 操作符 [`if`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/if...else) 或[条件运算符](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Conditional_Operator)来创建表示当前状态的元素，然后让 React 根据它们来更新 UI。\n\n先来看两个组件:\n\n```js\nfunction UserGreeting(props) {\n  return <h1>Welcome back!</h1>;\n}\n\nfunction GuestGreeting(props) {\n  return <h1>Please sign up.</h1>;\n}\n```\n\n我们将创建一个 `Greeting` 组件，它会根据用户是否登录来显示其中之一：\n\n```javascript{3-7,11,12}\nfunction Greeting(props) {\n  const isLoggedIn = props.isLoggedIn;\n  if (isLoggedIn) {\n    return <UserGreeting />;\n  }\n  return <GuestGreeting />;\n}\n\nReactDOM.render(\n  // Try changing to isLoggedIn={true}:\n  <Greeting isLoggedIn={false} />,\n  document.getElementById('root')\n);\n```\n\n[在 CodePen 上试试。](https://codepen.io/gaearon/pen/ZpVxNq?editors=0011)\n\n此示例根据 `isLoggedIn` 的值渲染不同的问候语。\n\n### 元素变量\n\n你可以使用变量来储存元素。它可以帮助你有条件的渲染组件的一部分，而输出的其他部分不会更改。\n\n再来看两个新组件分别代表注销和登录：\n\n```js\nfunction LoginButton(props) {\n  return (\n    <button onClick={props.onClick}>\n      Login\n    </button>\n  );\n}\n\nfunction LogoutButton(props) {\n  return (\n    <button onClick={props.onClick}>\n      Logout\n    </button>\n  );\n}\n```\n\n在下面的例子中，我们将要创建一个名为 `LoginControl` 的[有状态的组件](/docs/state-and-lifecycle.html#为一个类添加局部状态)。\n\n它会根据当前的状态来渲染 `<LoginButton />` 或 `<LogoutButton />`，它也将渲染前面例子中的 `<Greeting />`。\n\n```javascript{20-25,29,30}\nclass LoginControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleLoginClick = this.handleLoginClick.bind(this);\n    this.handleLogoutClick = this.handleLogoutClick.bind(this);\n    this.state = {isLoggedIn: false};\n  }\n\n  handleLoginClick() {\n    this.setState({isLoggedIn: true});\n  }\n\n  handleLogoutClick() {\n    this.setState({isLoggedIn: false});\n  }\n\n  render() {\n    const isLoggedIn = this.state.isLoggedIn;\n\n    let button = null;\n    if (isLoggedIn) {\n      button = <LogoutButton onClick={this.handleLogoutClick} />;\n    } else {\n      button = <LoginButton onClick={this.handleLoginClick} />;\n    }\n\n    return (\n      <div>\n        <Greeting isLoggedIn={isLoggedIn} />\n        {button}\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <LoginControl />,\n  document.getElementById('root')\n);\n```\n\n[在 CodePen 上试试。](https://codepen.io/gaearon/pen/QKzAgB?editors=0010)\n\n声明变量并使用 `if` 语句是条件渲染组件的不错的方式，但有时你也想使用更简洁的语法，在 JSX 中有如下几种方法。\n\n### 与运算符 && \n\n你可以通过使用花括号包裹代码，[在 JSX 中嵌入任何表达式](/docs/introducing-jsx.html#在JSX中使用表达式) ，包括 JavaScript 的逻辑与 && 操作符，它可以方便地实现对一个元素的条件渲染。\n\n```js{6-10}\nfunction Mailbox(props) {\n  const unreadMessages = props.unreadMessages;\n  return (\n    <div>\n      <h1>Hello!</h1>\n      {unreadMessages.length > 0 &&\n        <h2>\n          You have {unreadMessages.length} unread messages.\n        </h2>\n      }\n    </div>\n  );\n}\n\nconst messages = ['React', 'Re: React', 'Re:Re: React'];\nReactDOM.render(\n  <Mailbox unreadMessages={messages} />,\n  document.getElementById('root')\n);\n```\n\n[在 CodePen 上试试。](https://codepen.io/gaearon/pen/ozJddz?editors=0010)\n\n之所以能这样做，是因为在 JavaScript 中，`true && expression` 总是返回 `expression`，而 `false && expression` 总是返回 `false`。\n\n因此，如果条件是 `true`，`&&` 右侧的元素就会被渲染，如果是 `false`，React 会忽略并跳过它。\n\n### 三目运算符\n\n条件渲染的另一种方法是使用 JavaScript 的条件运算符 [`condition ? true : false`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Conditional_Operator)。\n\n在下面的例子中，我们用它来有条件的渲染一小段文本。\n\n```javascript{5}\nrender() {\n  const isLoggedIn = this.state.isLoggedIn;\n  return (\n    <div>\n      The user is <b>{isLoggedIn ? 'currently' : 'not'}</b> logged in.\n    </div>\n  );\n}\n```\n\n同样它也可以用在较大的表达式中，虽然不太直观：\n\n```js{5,7,9}\nrender() {\n  const isLoggedIn = this.state.isLoggedIn;\n  return (\n    <div>\n      {isLoggedIn ? (\n        <LogoutButton onClick={this.handleLogoutClick} />\n      ) : (\n        <LoginButton onClick={this.handleLoginClick} />\n      )}\n    </div>\n  );\n}\n```\n\n像在 JavaScript 中一样，你可以根据团队的习惯选择更易读的方式。还要记住如果条件变得过于复杂，可能就是[提取组件](/docs/components-and-props.html#提取组件)的好时机了。\n\n### 阻止组件渲染\n\n在极少数情况下，你可能希望隐藏组件，即使它被其他组件渲染。让 `render` 方法返回 `null` 而不是它的渲染结果即可实现。\n\n在下面的例子中，`<WarningBanner />` 根据属性 `warn` 的值条件渲染。如果 `warn` 的值是 `false`，则组件不会渲染： \n\n```javascript{2-4,29}\nfunction WarningBanner(props) {\n  if (!props.warn) {\n    return null;\n  }\n\n  return (\n    <div className=\"warning\">\n      Warning!\n    </div>\n  );\n}\n\nclass Page extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {showWarning: true}\n    this.handleToggleClick = this.handleToggleClick.bind(this);\n  }\n\n  handleToggleClick() {\n    this.setState(prevState => ({\n      showWarning: !prevState.showWarning\n    }));\n  }\n\n  render() {\n    return (\n      <div>\n        <WarningBanner warn={this.state.showWarning} />\n        <button onClick={this.handleToggleClick}>\n          {this.state.showWarning ? 'Hide' : 'Show'}\n        </button>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Page />,\n  document.getElementById('root')\n);\n```\n\n[在 CodePen 上试试。](https://codepen.io/gaearon/pen/Xjoqwm?editors=0010)\n\n组件的 `render` 方法返回 `null` 并不会影响该组件生命周期方法的回调。例如，`componentWillUpdate` 和 `componentDidUpdate` 依然可以被调用。\n",
        "type": "MarkdownRemark",
        "contentDigest": "52369cc0861b16de5840297368a3cba7",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "条件渲染",
        "id": "conditional-rendering",
        "permalink": "docs/conditional-rendering.html",
        "prev": "handling-events.html",
        "next": "lists-and-keys.html",
        "redirect_from": "tips/false-in-jsx.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/conditional-rendering.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/conditional-rendering.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/conditional-rendering.md",
      "fields": {
        "slug": "docs/conditional-rendering.html",
        "path": "docs/conditional-rendering.md",
        "redirect": "\"tips/false-in-jsx.html\""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/context.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/context.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/context.md absPath of file",
      "internal": {
        "content": "---\nid: （Context）上下文\ntitle: Context\npermalink: docs/context.html\n---\n\nContext 通过组件树提供了一个传递数据的方法，从而避免了在每一个层级手动的传递 props 属性。\n\n在一个典型的 React 应用中，数据是通过 props 属性由上向下（由父及子）的进行传递的，但这对于某些类型的属性而言是极其繁琐的（例如：地区偏好，UI主题），这是应用程序中许多组件都所需要的。 Context 提供了一种在组件之间共享此类值的方式，而不必通过组件树的每个层级显式地传递 props 。\n\n- [何时使用 Context](#when-to-use-context)\n- [API](#api)\n  - [React.createContext](#reactcreatecontext)\n  - [Provider](#provider)\n  - [Consumer](#consumer)\n- [Examples](#examples)\n  - [Dynamic Context](#dynamic-context)\n  - [Consuming Multiple Contexts](#consuming-multiple-contexts)\n  - [Accessing Context in Lifecycle Methods](#accessing-context-in-lifecycle-methods)\n  - [Consuming Context with a HOC](#consuming-context-with-a-hoc)\n  - [Forwarding Refs to Context Consumers](#forwarding-refs-to-context-consumers)\n- [Caveats](#caveats)\n- [Legacy API](#legacy-api)\n\n\n## 何时使用 Context\n\nContext 设计目的是为共享那些被认为对于一个组件树而言是“全局”的数据，例如当前认证的用户、主题或首选语言。例如，在下面的代码中，我们通过一个“theme”属性手动调整一个按钮组件的样式：\n\n`embed:context/motivation-problem.js`\n\n使用 context, 我可以避免通过中间元素传递 props：\n\n`embed:context/motivation-solution.js`\n\n> 注意\n>\n> 不要仅仅为了避免在几个层级下的组件传递 props 而使用 context，它是被用于在多个层级的多个组件需要访问相同数据的情景。\n\n## API\n\n### `React.createContext`\n\n```js\nconst {Provider, Consumer} = React.createContext(defaultValue);\n```\n\n创建一对 `{ Provider, Consumer }`。当 React 渲染 context 组件 Consumer 时，它将从组件树的上层中最接近的匹配的 Provider 读取当前的 context 值。\n\n如果上层的组件树没有一个匹配的 Provider，而此时你需要渲染一个 Consumer 组件，那么你可以用到 `defaultValue` 。这有助于在不封装它们的情况下对组件进行测试。\n\n### `Provider`\n\n```js\n<Provider value={/* some value */}>\n```\n\nReact 组件允许 Consumers 订阅 context 的改变。\n\n接收一个 `value` 属性传递给 Provider 的后代 Consumers。一个 Provider 可以联系到多个 Consumers。Providers 可以被嵌套以覆盖组件树内更深层次的值。\n\n### `Consumer`\n\n```js\n<Consumer>\n  {value => /* render something based on the context value */}\n</Consumer>\n```\n\n一个可以订阅 context 变化的 React 组件。\n\n接收一个 [函数作为子节点](/docs/render-props.html#using-props-other-than-render). 函数接收当前 context 的值并返回一个 React 节点。传递给函数的 `value` 将等于组件树中上层 context 的最近的 Provider 的 `value` 属性。如果 context 没有 Provider ，那么 `value` 参数将等于被传递给 `createContext()` 的 `defaultValue` 。\n\n\n\n> 注意\n>\n> 关于此案例的更多信息, 请看 [render props](/docs/render-props.html).\n\n每当Provider的值发生改变时, 作为Provider后代的所有Consumers都会重新渲染。 从Provider到其后代的Consumers传播不受shouldComponentUpdate方法的约束，因此即使祖先组件退出更新时，后代Consumer也会被更新。\n\n通过使用与[Object.is](//developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is#Description)相同的算法比较新值和旧值来确定变化。\n\n> 注意\n>\n>（这在传递对象作为 `value` 时会引发一些问题[Caveats](#caveats).）\n\n## 例子\n\n### 动态 Context\n\n主题的动态值，一个更加复杂的例子：\n\n**theme-context.js**\n`embed:context/theme-detailed-theme-context.js`\n\n**themed-button.js**\n`embed:context/theme-detailed-themed-button.js`\n\n**app.js**\n`embed:context/theme-detailed-app.js`\n\n### 父子耦合\n\n经常需要从组件树中某个深度嵌套的组件中更新 context。在这种情况下，可以通过 context 向下传递一个函数，以允许 Consumer 更新 context ：\n\n**theme-context.js**\n`embed:context/theme-nested-context.js`\n\n**theme-toggler-button.js**\n`embed:context/theme-nested-toggler-button.js`\n\n**app.js**\n`embed:context/app-nested.js`\n\n### 作用于多个上下文\n\n为了保持 context 快速进行二次渲染， React 需要使每一个 Consumer 在组件树中成为一个单独的节点。\n\n`embed:context/multiple-contexts.js`\n\n如果两个或者多个上下文的值经常被一起使用，你可能需要考虑创建一个可以同时提供这些值的 render prop 组件\n\n### 在生命周期方法中访问 Context\n\n在生命周期方法中从上下文访问值是一种相对常见的用例。而不是将上下文添加到每个生命周期方法中，只需要将它作为一个 props 传递，然后像通常使用 props 一样去使用它。\n\n`embed:context/lifecycles.js`\n\n### 高阶组件中的 Context\n\n某些类型的上下文被许多组件（例如主题或者地点信息）共用。使用 `<Context.Consumer>` 元素显示地封装每个依赖项是冗余的。这里[higher-order component](/docs/higher-order-components.html)可以帮助我们解决这个问题。\n\n例如，一个按钮组件也许被作用于一个主题 context：\n\n`embed:context/higher-order-component-before.js`\n\n这对于少量组件来说并没有毛病，但是如果我们想在很多地方使用主题上下文呢？\n\n我们可以创建一个命名为 `withTheme` 高阶组件：\n\n`embed:context/higher-order-component.js`\n\n目前任何组件都依赖于主题 context，它们都可以很容易的使用我们创建的 `withTheme` 函数进行订阅。\n\n`embed:context/higher-order-component-usage.js`\n\n### 转发 Refs\n\n一个关于渲染属性API的问题是 refs 不会自动的传递给被封装的元素。为了解决这个问题，使用 `React.forwardRef`：\n\n**fancy-button.js**\n`embed:context/forwarding-refs-fancy-button.js`\n\n**app.js**\n`embed:context/forwarding-refs-app.js`\n\n## 告诫\n\n因为 context 使用 `reference identity` 确定何时重新渲染，在 Consumer 中，当一个 Provider 的父节点重新渲染的时候，有一些问题可能触发意外的渲染。例如下面的代码，所有的 Consumner 在 Provider 重新渲染之时，每次都将重新渲染，因为一个新的对象总是被创建对应 Provider 里的 `value`：\n\n`embed:context/reference-caveats-problem.js`\n\n\n为了防止这样, 提升 `value` 到父节点的 state里:\n\n`embed:context/reference-caveats-solution.js`\n\n## 遗留 API\n\n> 注意\n>\n> React 以前使用实验性的 context API运行，旧的API将会在16.x版本中得到支持，但使用到它的应用应该迁移到新版本。遗留的API将在未来的 React 版本中被移除。阅读[legacy context docs here](/docs/legacy-context.html)。\n",
        "type": "MarkdownRemark",
        "contentDigest": "dfbe87a95bfa9fc8c09183fba5c14562",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Context",
        "id": "（Context）上下文",
        "permalink": "docs/context.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/context.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/context.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/context.md",
      "fields": {
        "slug": "docs/context.html",
        "path": "docs/context.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/cross-origin-errors.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/cross-origin-errors.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/cross-origin-errors.md absPath of file",
      "internal": {
        "content": "---\nid: cross-origin-errors\ntitle: Cross-origin Errors\npermalink: docs/cross-origin-errors.html\n---\n\n> Note:\n>\n> The following section applies only to the development mode of React. Error handling in production mode is done with regular try/catch statements.\n\nIn [development mode](https://reactjs.org/docs/optimizing-performance.html), React uses a global `error` event handler to preserve the \"pause on exceptions\" behavior of browser DevTools. It also logs errors to the developer console.\n\nIf an error is thrown from a [different origin](https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy) the browser will mask its details and React will not be able to log the original error message. This is a security precaution taken by browsers to avoid leaking sensitive information.\n\nYou can simplify the development/debugging process by ensuring that errors are thrown with a same-origin policy. Below are some common causes of cross-origin errors and ways to address them.\n\n### CDN\n\nWhen loading React (or other libraries that might throw errors) from a CDN, add the [`crossorigin`](https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes) attribute to your `<script>` tags:\n\n```html\n<script crossorigin src=\"...\"></script>\n```\n\nAlso ensure the CDN responds with the `Access-Control-Allow-Origin: *` HTTP header:\n\n![Access-Control-Allow-Origin: *](../images/docs/cdn-cors-header.png)\n\n### Webpack\n\nSome JavaScript bundlers may wrap the application code with `eval` statements in development. (For example Webpack will do this if [`devtool`](https://webpack.js.org/configuration/devtool/) is set to any value containing the word \"eval\".) This may cause errors to be treated as cross-origin.\n\nIf you use Webpack, we recommend using the `cheap-module-source-map` setting in development to avoid this problem.",
        "type": "MarkdownRemark",
        "contentDigest": "33a67e3ed56fbd50be0f92d4aabfc2aa",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Cross-origin Errors",
        "id": "cross-origin-errors",
        "permalink": "docs/cross-origin-errors.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/cross-origin-errors.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/cross-origin-errors.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/cross-origin-errors.md",
      "fields": {
        "slug": "docs/cross-origin-errors.html",
        "path": "docs/cross-origin-errors.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/create-a-new-react-app.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/create-a-new-react-app.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/create-a-new-react-app.md absPath of file",
      "internal": {
        "content": "---\nid: create-a-new-react-app\ntitle: Create a New React App\npermalink: docs/create-a-new-react-app.html\nredirect_from:\n  - \"docs/add-react-to-a-new-app.html\"\nprev: add-react-to-a-website.html\nnext: cdn-links.html\n---\n\nUse an integrated toolchain for the best user and developer experience.\n\nThis page describes a few popular React toolchains which help with tasks like:\n\n* Scaling to many files and components.\n* Using third-party libraries from npm.\n* Detecting common mistakes early.\n* Live-editing CSS and JS in development.\n* Optimizing the output for production.\n\nThe toolchains recommended on this page **don't require configuration to get started**.\n\n## You Might Not Need a Toolchain\n\nIf you don't experience the problems described above or don't feel comfortable using JavaScript tools yet, consider [adding React as a plain `<script>` tag on an HTML page](/docs/add-react-to-a-website.html), optionally [with JSX](/docs/add-react-to-a-website.html#optional-try-react-with-jsx).\n\nThis is also **the easiest way to integrate React into an existing website.** You can always add a larger toolchain if you find it helpful!\n\n## Recommended Toolchains\n\nThe React team primarily recommends these solutions:\n\n- If you're **learning React** or **creating a new [single-page](/docs/glossary.html#single-page-application) app,** use [Create React App](#create-react-app).\n- If you're building a **server-rendered website with Node.js,** try [Next.js](#nextjs).\n- If you're building a **static content-oriented website,** try [Gatsby](#gatsby).\n- If you're building a **component library** or **integrating with an existing codebase**, try [More Flexible Toolchains](#more-flexible-toolchains).\n\n### Create React App\n\n[Create React App](http://github.com/facebookincubator/create-react-app) is a comfortable environment for **learning React**, and is the best way to start building **a new [single-page](/docs/glossary.html#single-page-application) application** in React.\n\nIt sets up your development environment so that you can use the latest JavaScript features, provides a nice developer experience, and optimizes your app for production. You’ll need to have Node >= 6 and npm >= 5.2 on your machine. To create a project, run:\n\n```bash\nnpx create-react-app my-app\ncd my-app\nnpm start\n```\n\n>Note\n>\n>`npx` on the first line is not a typo -- it's a [package runner tool that comes with npm 5.2+](https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b).\n\nCreate React App doesn't handle backend logic or databases; it just creates a frontend build pipeline, so you can use it with any backend you want. Under the hood, it uses [Babel](http://babeljs.io/) and [webpack](https://webpack.js.org/), but you don't need to know anything about them.\n\nWhen you're ready to deploy to production, running `npm run build` will create an optimized build of your app in the `build` folder. You can learn more about Create React App [from its README](https://github.com/facebookincubator/create-react-app#create-react-app-) and the [User Guide](https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/template/README.md#table-of-contents).\n\n### Next.js\n\n[Next.js](https://nextjs.org/) is a popular and lightweight framework for **static and server‑rendered applications** built with React. It includes **styling and routing solutions** out of the box, and assumes that you're using [Node.js](https://nodejs.org/) as the server environment.\n\nLearn Next.js from [its official guide](https://nextjs.org/learn/).\n\n### Gatsby\n\n[Gatsby](https://www.gatsbyjs.org/) is the best way to create **static websites** with React. It lets you use React components, but outputs pre-rendered HTML and CSS to guarantee the fastest load time.\n\nLearn Gatsby from [its official guide](https://www.gatsbyjs.org/docs/) and a [gallery of starter kits](https://www.gatsbyjs.org/docs/gatsby-starters/).\n\n### More Flexible Toolchains\n\nThe following toolchains offer more flexiblity and choice. We recommend them to more experienced users:\n\n- **[Neutrino](https://neutrinojs.org/)** combines the power of [webpack](https://webpack.js.org/) with the simplicity of presets, and includes a preset for [React apps](https://neutrinojs.org/packages/react/) and [React components](https://neutrinojs.org/packages/react-components/).\n\n- **[nwb](https://github.com/insin/nwb)** is particularly great for [publishing React components for npm](https://github.com/insin/nwb/blob/master/docs/guides/ReactComponents.md#developing-react-components-and-libraries-with-nwb). It [can be used](https://github.com/insin/nwb/blob/master/docs/guides/ReactApps.md#developing-react-apps-with-nwb) for creating React apps, too. \n\n- **[Parcel](https://parceljs.org/)** is a fast, zero configuration web application bundler that [works with React](https://parceljs.org/recipes.html#react).\n\n- **[Razzle](https://github.com/jaredpalmer/razzle)** is a server-rendering framework that doesn't require any configuration, but offers more flexibility than Next.js.\n\n## Creating a Toolchain from Scratch\n\nA JavaScript build toolchain typically consists of:\n\n* A **package manager**, such as [Yarn](https://yarnpkg.com/) or [npm](https://www.npmjs.com/). It lets you take advantage of a vast ecosystem of third-party packages, and easily install or update them.\n\n* A **bundler**, such as [webpack](https://webpack.js.org/) or [Parcel](https://parceljs.org/). It lets you write modular code and bundle it together into small packages to optimize load time.\n\n* A **compiler** such as [Babel](http://babeljs.io/). It lets you write modern JavaScript code that still works in older browsers.\n\nIf you prefer to set up your own JavaScript toolchain from scratch, [check out this guide](https://blog.usejournal.com/creating-a-react-app-from-scratch-f3c693b84658) that re-creates some of the Create React App functionality.\n\nDon't forget to ensure your custom toolchain [is correctly set up for production](/docs/optimizing-performance.html#use-the-production-build).\n",
        "type": "MarkdownRemark",
        "contentDigest": "dd519c67f21d907d8955f26de91b8b25",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Create a New React App",
        "id": "create-a-new-react-app",
        "permalink": "docs/create-a-new-react-app.html",
        "redirect_from": [
          "docs/add-react-to-a-new-app.html"
        ],
        "prev": "add-react-to-a-website.html",
        "next": "cdn-links.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/create-a-new-react-app.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/create-a-new-react-app.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/create-a-new-react-app.md",
      "fields": {
        "slug": "docs/create-a-new-react-app.html",
        "path": "docs/create-a-new-react-app.md",
        "redirect": "[\"docs/add-react-to-a-new-app.html\"]"
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/error-decoder.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/error-decoder.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/error-decoder.md absPath of file",
      "internal": {
        "content": "---\nid: error-decoder\ntitle: Error Decoder\npermalink: docs/error-decoder.html\n---\n\nIn the minified production build of React, we avoid sending down full error messages in order to reduce the number of bytes sent over the wire.\n\nWe highly recommend using the development build locally when debugging your app since it tracks additional debug info and provides helpful warnings about potential problems in your apps, but if you encounter an exception while using the production build, this page will reassemble the original text of the error.\n\n<script src=\"/react/js/errorMap.js\"></script>\n<div class=\"error-decoder-container\"></div>\n<script src=\"/react/js/ErrorDecoderComponent.js\"></script>\n",
        "type": "MarkdownRemark",
        "contentDigest": "e21ceb2e52dc8ecb0253ae6731f9800d",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Error Decoder",
        "id": "error-decoder",
        "permalink": "docs/error-decoder.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/error-decoder.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/error-decoder.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/error-decoder.md",
      "fields": {
        "slug": "docs/error-decoder.html",
        "path": "docs/error-decoder.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/faq-ajax.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/faq-ajax.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/faq-ajax.md absPath of file",
      "internal": {
        "content": "---\nid: faq-ajax\ntitle: AJAX 和 API\npermalink: docs/faq-ajax.html\nlayout: docs\ncategory: FAQ\n---\n\n### 怎样发送 AJAX 请求?\n\n任何你喜欢的 AJAX 库都可以与React一起使用。例如一些流行的库 [Axios](https://github.com/axios/axios)，[jQuery AJAX](https://api.jquery.com/jQuery.ajax/) 和浏览器内置的 [window.fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)。\n\n### 我应该在组件的哪个生命周期调用 AJAX?\n\n你用AJAX调用填充数据应该是在 [`componentDidMount`](/docs/react-component.html#mounting) 生命周期方法内。这样你才能在收到数据时使用 `setState` 更新组件。\n\n### 示例: 使用 AJAX 的结果设置局部状态\n\n下方的组件展示了如何在 `componentDidMount` 方法内使用 AJAX 请求来填充组件的局部状态。\n\n示例的 API 返回的 JSON 对象结构如下：\n\n```\n{\n  items: [\n    { id: 1, name: 'Apples', price: '$2' },\n    { id: 2, name: 'Peaches', price: '$5' }\n  ]\n}\n```\n\n```jsx\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.example.com/items\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result.items\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <ul>\n          {items.map(item => (\n            <li key={item.name}>\n              {item.name} {item.price}\n            </li>\n          ))}\n        </ul>\n      );\n    }\n  }\n}\n```\n",
        "type": "MarkdownRemark",
        "contentDigest": "64744321eb01e0a6f1cd175083123503",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "AJAX 和 API",
        "id": "faq-ajax",
        "permalink": "docs/faq-ajax.html",
        "layout": "docs",
        "category": "FAQ",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/faq-ajax.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/faq-ajax.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/faq-ajax.md",
      "fields": {
        "slug": "docs/faq-ajax.html",
        "path": "docs/faq-ajax.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/faq-build.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/faq-build.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/faq-build.md absPath of file",
      "internal": {
        "content": "---\nid: faq-build\ntitle: Babel, JSX, and Build Steps\npermalink: docs/faq-build.html\nlayout: docs\ncategory: FAQ\n---\n\n### 用 React 时需要使用 JSX 吗？\n\n非也！查看 [\"React 不使用 JSX\"](/docs/react-without-jsx.html) 学习更多。\n\n### 用 React 时需要使用 ES6 (+) 吗?\n\n非也！查看 [\"React 不使用 ES6\"](/docs/react-without-es6.html) 学习更多。\n\n### 在 JSX 中如何写注释?\n\n```jsx\n<div>\n  {/* 在这里写注释 */}\n  Hello, {name}!\n</div>\n```\n",
        "type": "MarkdownRemark",
        "contentDigest": "3b2251c830350a555d91044fe1b03f90",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Babel, JSX, and Build Steps",
        "id": "faq-build",
        "permalink": "docs/faq-build.html",
        "layout": "docs",
        "category": "FAQ",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/faq-build.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/faq-build.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/faq-build.md",
      "fields": {
        "slug": "docs/faq-build.html",
        "path": "docs/faq-build.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/faq-internals.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/faq-internals.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/faq-internals.md absPath of file",
      "internal": {
        "content": "---\nid: faq-internals\ntitle: Virtual DOM and Internals\npermalink: docs/faq-internals.html\nlayout: docs\ncategory: FAQ\n---\n\n### 什么是虚拟DOM（Virtual DOM）\n\n虚拟DOM（VDOM）是一种编程概念，是指虚拟的视图被保存在内存中，并通过诸如ReactDOM这样的库与“真实”的DOM保持同步。这个过程被称为[和解](/docs/reconciliation.html)。\n\n这种编程方法使用了React的声明式API：你需要告诉React你想让视图处于什么状态，React则负责确保DOM与该状态相匹配。因此你在构建你的应用时不必自己去完成属性操作、事件处理、DOM更新，React会替你完成这一切。\n\n由于“虚拟DOM”更像一种模式而不是特定的技术，有时候我们也会用它表示其他的意思。在React的世界中，由于 “虚拟DOM” 和 [React元素](/docs/rendering-elements.html) 都是用于表示视图的对象，因此常常被关联在一起。然而React也使用被称为“fibers”的对象来存放组件树的附加信息。在React中，它们也被认为是“虚拟DOM”实现的一部分。\n\n### 影子DOM（Shadow DOM）和虚拟DOM（Virtual DOM）是相同的概念吗？\n\n不，它们并不是相同的概念。影子DOM是一种浏览器技术，主要被设计用来为Web组件中的变量和CSS提供封装。虚拟DOM是由JavaScript库在浏览器API之上实现的一种概念。\n\n### 什么是“React Fiber”？\n\nfiber是React 16中新的和解引擎。它的主要目的是使虚拟DOM能够进行增量渲染。[了解更多](https://github.com/xxn520/react-fiber-architecture-cn)。\n",
        "type": "MarkdownRemark",
        "contentDigest": "5c8dd6a7c458fd7646a5c00f2cdce1e5",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Virtual DOM and Internals",
        "id": "faq-internals",
        "permalink": "docs/faq-internals.html",
        "layout": "docs",
        "category": "FAQ",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/faq-internals.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/faq-internals.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/faq-internals.md",
      "fields": {
        "slug": "docs/faq-internals.html",
        "path": "docs/faq-internals.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/faq-state.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/faq-state.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/faq-state.md absPath of file",
      "internal": {
        "content": "---\nid: faq-state\ntitle: 组件状态\npermalink: docs/faq-state.html\nlayout: docs\ncategory: FAQ\n---\n\n### setState 做了什么？\n\n`setState()` 用于安排一个组件的 `state` 对象的一次更新的时间表。当状态改变时，组件通过重新渲染来响应。\n\n### state 和 props 之间有什么区别？\n\n属性[`props`](/docs/components-and-props.html) （“properties”的缩写）和 [`state`](/docs/state-and-lifecycle.html) 都是普通的JavaScript 对象。两者都具有影响渲染输出的信息。它们在一个重要方面是不同的： `props` 传递*到*组件（类似于函数的参数），而 `state` 是在组件*内部*管理的（类似于函数中声明的变量）。\n\n这里有一些很好的资源，用以进一步了解何时使用 `props` vs `state` ：\n\n* [Props vs State](https://github.com/uberVU/react-guide/blob/master/props-vs-state.md)\n* [ReactJS: Props vs. State](http://lucybain.com/blog/2016/react-state-vs-pros/)\n\n### 为什么 `setState` 给我了错误值？\n\n在React中，`this.props`和`this.state`代表*被渲染的*值，即，目前屏幕上的东西。\n\n`setState` 的调用是异步的——不要紧接在调用 `setState` 之后，依赖 `this.state` 来反射新值。如果你需要基于当前状态计算值，则传递一个更新函数而不是一个对象（请参阅下面的详细信息）。\n\n代码将*不*会按预期方式运行的示例：\n\n```jsx\nincrementCount() {\n  // Note: this will *not* work as intended.\n  this.setState({count: this.state.count + 1});\n}\n\nhandleSomething() {\n  // Let's say `this.state.count` starts at 0.\n  this.incrementCount();\n  this.incrementCount();\n  this.incrementCount();\n  // When React re-renders the component, `this.state.count` will be 1, but you expected 3.\n\n  // This is because `incrementCount()` function above reads from `this.state.count`,\n  // but React doesn't update `this.state.count` until the component is re-rendered.\n  // So `incrementCount()` ends up reading `this.state.count` as 0 every time, and sets it to 1.\n\n  // The fix is described below!\n}\n```\n\n接着看如何解决这个问题。\n\n### 如何用依赖于当前状态的值更新状态？\n\n传递一个函数而不是一个对象给 `setState` 来确保调用总是使用最新的状态（接着往下看）。\n\n### 在 setState 中传递一个对象与一个函数之间有什么区别？\n\n传递一个更新函数允许你在更新器中访问当前的状态值。由于 `setState` 调用是批处理的，这允许你链式更新并确保它们一个建立在另一个之上，而不是产生冲突：\n\n```jsx\nincrementCount() {\n  this.setState((state) => {\n    // Important: read `state` instead of `this.state` when updating.\n    return {count: state.count + 1}\n  });\n}\n\nhandleSomething() {\n  // Let's say `this.state.count` starts at 0.\n  this.incrementCount();\n  this.incrementCount();\n  this.incrementCount();\n\n  // If you read `this.state.count` now, it would still be 0.\n  // But when React re-renders the component, it will be 3.\n}\n```\n\n[了解有关 setState 的更多](/docs/react-component.html#setstate)\n\n### 何时`setState`是异步的?\n\n目前，位于事件处理器中的`setState`是异步的。\n\n这确保，例如，如果`Parent`和`Child`都调用`setState`在一次点击事件中，`Child`不会被重新渲染两次。而是，React \"刷洗\"状态更新在浏览器事件的结束时。这导致重大性能促进在更大应用中。\n\n这是一个实现细节，所以避免直接依赖它。在将来的版本中，React 将在更多情况下默认批处理更新。\n\n### 为什么React不是同步地更新`this.state`?\n\n如前所述，React故意\"等待\"直到所有的组件都调用`setState()`在他们的事件处理器中才开始重新渲染。这提升了性能，避免了不必要的重新渲染。\n\n然而，你可能仍奇怪为什么React不先只是更新`this.state`，不重新渲染。\n\n有两个主要原因：\n\n* 这将破坏`props`和`state`之间的一致性，引起问题，非常难以调试。\n* 这将使一些我们正一起工作的新特征不可能实现。\n\nThis [GitHub comment](https://github.com/facebook/react/issues/11527#issuecomment-360199710) dives deep into the specific examples.\n\n### 我是否应该使用一个像 Redux 或者 Mobx 的状态管理库？\n\n[也许。](http://redux.js.org/docs/faq/General.html#general-when-to-use)\n\n在添加额外的库之前，首先了解 React 是个好主意。你可以只使用 React 来构建相当复杂的应用程序。\n",
        "type": "MarkdownRemark",
        "contentDigest": "eaee03d5c524e2093e34d0878ec89820",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "组件状态",
        "id": "faq-state",
        "permalink": "docs/faq-state.html",
        "layout": "docs",
        "category": "FAQ",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/faq-state.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/faq-state.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/faq-state.md",
      "fields": {
        "slug": "docs/faq-state.html",
        "path": "docs/faq-state.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/faq-structure.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/faq-structure.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/faq-structure.md absPath of file",
      "internal": {
        "content": "---\nid: faq-structure\ntitle: 文件结构\npermalink: docs/faq-structure.html\nlayout: docs\ncategory: FAQ\n---\n\n### 是否有推荐的方式来组织 React 项目？\n\nReact 在对于你如何将文件放入文件夹中不持有意见。也就是说，你也许想考虑生态系统中的一些常用方法。\n\n#### 按照功能或者路由来分组\n\n组织项目的一种常见方法是将 CSS，JS 和测试文件一起放入按功能或路由分组的文件夹中。\n\n```\ncommon/\n  Avatar.js\n  Avatar.css\n  APIUtils.js\n  APIUtils.test.js\nfeed/\n  index.js\n  Feed.js\n  Feed.css\n  FeedStory.js\n  FeedStory.test.js\n  FeedAPI.js\nprofile/\n  index.js\n  Profile.js\n  ProfileHeader.js\n  ProfileHeader.css\n  ProfileAPI.js\n```\n\n“功能”的定义不是通用的，它取决于你选择的划分粒度。如果你不能想出一个顶级文件夹的列表，你可以询问用户你的产品主要由哪些部分组成，并使用他们的心智模型作为蓝图。\n\n#### 按照文件类型来分组\n\n组织项目的另一个流行的方式是将相似的文件分到一起，比如说：\n\n```\napi/\n  APIUtils.js\n  APIUtils.test.js\n  ProfileAPI.js\n  UserAPI.js\ncomponents/\n  Avatar.js\n  Avatar.css\n  Feed.js\n  Feed.css\n  FeedStory.js\n  FeedStory.test.js\n  Profile.js\n  ProfileHeader.js\n  ProfileHeader.css\n```\n\n有些人会喜欢进一步深入，根据组件在应用中所扮演的角色将他们分到不同的文件夹中。举个例子， [Atomic Design](http://bradfrost.com/blog/post/atomic-web-design/) 是一个基于该原则构建的设计方法论.请记住，将这些方法看成有用的案例而不是严格的规则来处理，往往更有成效。\n\n#### 避免太多嵌套\n\nJavaScript 项目中的深层目录嵌套会有许多痛点。在目录之间书写相对的 import 以及在移动文件时更新这些 import 都变得更加困难。除非你有一个非常有说服力的理由来使用深层文件夹结构，否则请考虑将项目自身限制为单个项目中最多嵌套三到四层文件夹。当然，这只是一个建议，它可能与您的项目无关。\n\n#### 不要过度思考这个问题\n\n如果你刚开始一个项目，[不要花超过五分钟](https://en.wikipedia.org/wiki/Analysis_paralysis)在选择一个文件结构上。从以上方法（或者你自己想到的）中任意挑一个然后开始编程吧！在写完一些真实的代码之后，你可能会想重新考虑它。\n\n如果感觉完全卡住，请将所有文件保存在一个单一的文件夹中。最终它会变得足够大，以至于你会想要从其他文件中分离出一些文件。 到那个时候，你将有足够的知识去分辨你最经常编辑的文件。 一般来说，保持经常变化的文件彼此靠近是一个好主意。 这个原则被称为“托管”。\n\n随着项目规模越来越大，在实践中往往会混合使用上述几种方法。所以在一开始选择“正确”的方法并不是很重要。\n",
        "type": "MarkdownRemark",
        "contentDigest": "aefdc4be768aea378b21d3c14556cb2b",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "文件结构",
        "id": "faq-structure",
        "permalink": "docs/faq-structure.html",
        "layout": "docs",
        "category": "FAQ",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/faq-structure.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/faq-structure.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/faq-structure.md",
      "fields": {
        "slug": "docs/faq-structure.html",
        "path": "docs/faq-structure.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/faq-styling.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/faq-styling.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/faq-styling.md absPath of file",
      "internal": {
        "content": "---\nid: faq-styling\ntitle: 样式化和 CSS\npermalink: docs/faq-styling.html\nlayout: docs\ncategory: FAQ\n---\n\n### 怎样给组件添加 CSS 类?\n\n传递一个字符串给 `className` 属性：\n\n```jsx\nrender() {\n  return <span className=\"menu navigation-menu\">Menu</span>\n}\n```\n\nCSS 类依赖组件的属性或状态很普遍：\n\n```jsx\nrender() {\n  let className = 'menu';\n  if (this.props.isActive) {\n    className += ' menu-active';\n  }\n  return <span className={className}>Menu</span>\n}\n```\n\n> 提示\n> \n> 如果你经常发现自己在写类似的代码，[classnames](https://www.npmjs.com/package/classnames) 包可以简化它。\n\n### 可以使用行内样式吗？\n\n是的，在[这里](/docs/dom-elements.html#style)查看关于样式的文档。\n\n### 写行内样式不好吗？\n\nCSS 类比起行内样式通常更加高效。\n\n### CSS-in-JS 是什么？\n\n\"CSS-in-JS\" 代表一个范式，使用 Javascript 组成CSS，而不是在额外的文件里面定义。在[这里](https://github.com/MicheleBertoli/css-in-js)查看 CSS-in-JS 库的比较。\n\n_注意这个功能不是 React 的一部分，而是第三方库提供的。_ React 没有样式应该怎样被定义的主张；如果不信，一个好的起点是项往常一样在一个分离的 `*.css` 文件中定义你的样式，使用[`className`](/docs/dom-elements.html#classname)引用它们。\n\n### 在 React 中如何做动画？\n\nReact 可以被用来增强动画。例如：查看 [React Transition Group](https://reactcommunity.org/react-transition-group/) 和 [React Motion](https://github.com/chenglou/react-motion)。\n",
        "type": "MarkdownRemark",
        "contentDigest": "5fd9cfcc33ff07d2ef1e27fa422af96d",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "样式化和 CSS",
        "id": "faq-styling",
        "permalink": "docs/faq-styling.html",
        "layout": "docs",
        "category": "FAQ",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/faq-styling.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/faq-styling.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/faq-styling.md",
      "fields": {
        "slug": "docs/faq-styling.html",
        "path": "docs/faq-styling.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/forwarding-refs.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/forwarding-refs.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/forwarding-refs.md absPath of file",
      "internal": {
        "content": "---\nid: forwarding-refs\ntitle: Forwarding Refs\npermalink: docs/forwarding-refs.html\n---\n引用传递是把[引用](/docs/refs-and-the-dom.html)从组件传递到它的后代的方法.这种方法在[高阶组件](/docs/higher-order-components.html)中特别有用.\n\n接下来我们举一个利用高阶组件打印组件属性到控制台的例子：\n`embed:forwarding-refs/log-props-before.js`\n\n这个 \"logProps\"高阶组件把所有属性传递给它包装的组件，所以渲染后的结果将是一样的。例如，我们可以用这个高阶组件记录自身获得的属性，并且把属性传递到我们的\"fancy button\" 组件：\n`embed:forwarding-refs/fancy-button.js`\n\n上面的例子有个问题：refs属性不会被传递下去。因为`ref`不是一个属性。就像`key`,react用不一样的方式处理它们。\n如果你在高阶组件上添加ref属性，ref属性只会指向最外层的容器组件，而不是被包装的组件。\n\n这意味着我们想要ref关联到`FancyButton`组件，但实际上ref被关联到到`LogProps`组件：\n`embed:forwarding-refs/fancy-button-ref.js`\n\n幸运的是，我们可以通过使用`React.forwardRef`API传递外层容器的refs到内部`FancyButton`组件.\n`React.forwardRef` 是入参为`props`和`ref`并且返回类型是React节点的函数。例如：\n`embed:forwarding-refs/log-props-after.js`\n\n\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "9d290df90e079cd856a85dfe022f759b",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Forwarding Refs",
        "id": "forwarding-refs",
        "permalink": "docs/forwarding-refs.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/forwarding-refs.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/forwarding-refs.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/forwarding-refs.md",
      "fields": {
        "slug": "docs/forwarding-refs.html",
        "path": "docs/forwarding-refs.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/fragments.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/fragments.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/fragments.md absPath of file",
      "internal": {
        "content": "---\nid: fragments\ntitle: Fragments\npermalink: docs/fragments.html\n---\n\nReact 中一个常见模式是为一个组件返回多个元素。Fragments 可以让你聚合一个子元素列表，并且不在DOM中增加额外节点。\n\nFragments 看起来像空的 JSX 标签：\n\n```js\nrender() {\n  return (\n    <>\n      <ChildA />\n      <ChildB />\n      <ChildC />\n    </>\n  );\n}\n```\n\n## 动机\n\n一个常见模式是为一个组件返回一个子元素列表。以这个示例的 React 片段为例：\n\n```jsx\nclass Table extends React.Component {\n  render() {\n    return (\n      <table>\n        <tr>\n          <Columns />\n        </tr>\n      </table>\n    );\n  }\n}\n```\n\n为了渲染有效的 HTML ， `<Columns />` 需要返回多个 `<td>` 元素。如果一个父 div 在 `<Columns />` 的 `render()` 函数里面使用，那么最终的 HTML 将是无效的。\n\n```jsx\nclass Columns extends React.Component {\n  render() {\n    return (\n      <div>\n        <td>Hello</td>\n        <td>World</td>\n      </div>\n    );\n  }\n}\n```\n\n在 `<Table />` 组件中的输出结果如下：\n\n```jsx\n<table>\n  <tr>\n    <div>\n      <td>Hello</td>\n      <td>World</td>\n    </div>\n  </tr>\n</table>\n```\n\n所以，我们介绍 `Fragments`。\n\n## 使用\n\n```jsx{4,7}\nclass Columns extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <td>Hello</td>\n        <td>World</td>\n      </React.Fragment>\n    );\n  }\n}\n```\n\n在正确的 `<Table />` 组件中，这个结果输出如下：\n\n```jsx\n<table>\n  <tr>\n    <td>Hello</td>\n    <td>World</td>\n  </tr>\n</table>\n```\n\n你可以像使用其它元素那样使用 `<></>`。\n\n### 简短语法\n\n你还可以使用一种新的，更短的语法来声明`React.Fragment`组件。 它看起来像空标签：\n\n```jsx{4,7}\nclass Columns extends React.Component {\n  render() {\n    return (\n      <>\n        <td>Hello</td>\n        <td>World</td>\n      </>\n    );\n  }\n}\n```\n\n您可以像使用任何其他元素一样使用<> </>，除了它不支持keys或属性。\n\n请注意，许多工具尚不支持它，因此您可能希望显式写入<React.Fragment>，直到工具都支持。\n\n### 带 key 的 Fragments\n\n`<></>` 语法不能接受键值或属性。\n\n如果你需要一个带 key 的片段，你可以直接使用 `<React.Fragment />` 。 一个使用场景是映射一个集合为一个片段数组 -- 例如：创建一个描述列表：\n\n```jsx\nfunction Glossary(props) {\n  return (\n    <dl>\n      {props.items.map(item => (\n        // 没有`key`，将会触发一个key警告\n        <React.Fragment key={item.id}>\n          <dt>{item.term}</dt>\n          <dd>{item.description}</dd>\n        </React.Fragment>\n      ))}\n    </dl>\n  );\n}\n```\n\n`key` 是唯一可以传递给 `Fragment` 的属性。在将来，我们可能增加额外的属性支持，比如事件处理。\n\n### 在线 Demo\n\n你可以使用 [CodePen](https://codepen.io/reactjs/pen/VrEbjE?editors=1000) 试试 JSX 片段语法。\n",
        "type": "MarkdownRemark",
        "contentDigest": "4ef8f796fa8c6a1217217cc63d7d9135",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Fragments",
        "id": "fragments",
        "permalink": "docs/fragments.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/fragments.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/fragments.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/fragments.md",
      "fields": {
        "slug": "docs/fragments.html",
        "path": "docs/fragments.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/getting-started.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/getting-started.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/getting-started.md absPath of file",
      "internal": {
        "content": "---\nid: getting-started\ntitle: Getting Started\npermalink: docs/getting-started.html\nnext: add-react-to-a-website.html\nredirect_from:\n  - \"docs/\"\n  - \"docs/index.html\"\n  - \"docs/getting-started-ko-KR.html\"\n  - \"docs/getting-started-zh-CN.html\"\n  - \"docs/installation.html\"\n  - \"download.html\"\n  - \"downloads.html\"\n  - \"docs/try-react.html\"\n  - \"docs/tooling-integration.html\"\n  - \"docs/package-management.html\"\n  - \"docs/language-tooling.html\"\n  - \"docs/environments.html\"\n---\n\n此页面是React文档和相关资源的概述。\n\n**React**是一个用于构建用户界面的JavaScript库。在[我们的主页](/)或[教程](/tutorial/tutorial.html)中了解React的全部内容。\n\n---\n\n- [初探 React](#try-react)\n- [学习 React](#learn-react)\n- [相关补充](#staying-informed)\n- [版本化文档](#versioned-documentation)\n- [有遗漏?](#something-missing)\n\n## 初探 React\n\nReact从一开始就被设计为渐进采用，**你可以根据需要或多或少的使用React。** 无论你是想在简单的HTML页面中添加一些交互性，简单体验一下React，或者创建一个复杂的React驱动的应用程序，本节中的链接都将帮助您入门。\n\n### 在线编辑平台\n\nIf you're interested in playing around with React, you can use an online code playground. Try a Hello World template on [CodePen](codepen://hello-world) or [CodeSandbox](https://codesandbox.io/s/new).\n\nIf you prefer to use your own text editor, you can also [download this HTML file](https://raw.githubusercontent.com/reactjs/reactjs.org/master/static/html/single-file-example.html), edit it, and open it from the local filesystem in your browser. It does a slow runtime code transformation, so we'd only recommend using this for simple demos.\n\n### 将React添加到网站\n\nYou can [add React to an HTML page in one minute](/docs/add-react-to-a-website.html). You can then either gradually expand its presence, or keep it contained to a few dynamic widgets.\n\n### 创建一个新的React应用\n\nWhen starting a React project, [a simple HTML page with script tags](/docs/add-react-to-a-website.html) might still be the best option. It only takes a minute to set up!\n\nAs your application grows, you might want to consider a more integrated setup. There are [several JavaScript toolchains](/docs/create-a-new-react-app.html) we recommend for larger applications. Each of them can work with little to no configuration and lets you take full advantage of the rich React ecosystem.\n\n## 学习 React\n\nPeople come to React from different backgrounds and with different learning styles. Whether you prefer a more theoretical or a practical approach, we hope you'll find this section helpful.\n\n* If you prefer to **learn by doing**, start with our [practical tutorial](/tutorial/tutorial.html).\n* If you prefer to **learn concepts step by step**, start with our [guide to main concepts](/docs/hello-world.html).\n\nLike any unfamiliar technology, React does have a learning curve. With practice and some patience, you *will* get the hang of it.\n\n### 第一个案例\n\nThe [React homepage](/) contains a few small React examples with a live editor. Even if you don't know anything about React yet, try changing their code and see how it affects the result.\n\n### 初学者必读\n\nIf you feel that the React documentation goes at a faster pace than you're comfortable with, check out [this overview of React by Tania Rascia](https://www.taniarascia.com/getting-started-with-react/). It introduces the most important React concepts in a detailed, beginner-friendly way. Once you're done, give the documentation another try!\n\n### 设计师资源\n\nIf you're coming from a design background, [these resources](http://reactfordesigners.com/) are a great place to get started.\n\n### JavaScript资源\n\nThe React documentation assumes some familiarity with programming in the JavaScript language. You don't have to be an expert, but it's harder to learn both React and JavaScript at the same time.\n\nWe recommend going through [this JavaScript overview](https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript) to check your knowledge level. It will take you between 30 minutes and an hour but you will feel more confident learning React.\n\n>小提示\n>\n>Whenever you get confused by something in JavaScript, [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript) and [javascript.info](http://javascript.info/) are great websites to check. There are also [community support forums](/community/support.html) where you can ask for help.\n\n### 实用教程\n\nIf you prefer to **learn by doing,** check out our [practical tutorial](/tutorial/tutorial.html). In this tutorial, we build a tic-tac-toe game in React. You might be tempted to skip it because you're not building games -- but give it a chance. The techniques you'll learn in the tutorial are fundamental to building *any* React apps, and mastering it will give you a much deeper understanding.\n\n### 循序渐进的指南\n\nIf you prefer to **learn concepts step by step,** our [guide to main concepts](/docs/hello-world.html) is the best place to start. Every next chapter in it builds on the knowledge introduced in the previous chapters so you won't miss anything as you go along.\n\n### Thinking in React\n\nMany React users credit reading [Thinking in React](/docs/thinking-in-react.html) as the moment React finally \"clicked\" for them. It's probably the oldest React walkthrough but it's still just as relevant.\n\n### 推荐课程\n\nSometimes people find third-party books and video courses more helpful than the official documentation. We maintain [a list of commonly recommended resources](/community/courses.html), some of which are free.\n\n### 高级概念\n\nOnce you're comfortable with the [main concepts](#main-concepts) and played with React a little bit, you might be interested in more advanced topics. This section will introduce you to the powerful, but less commonly used React features like [context](/docs/context.html) and [refs](/docs/refs-and-the-dom.html).\n\n### API 参考\n\nThis documentation section is useful when you want to learn more details about a particular React API. For example, [`React.Component` API reference](/docs/react-component.html) can provide you with details on how `setState()` works, and what different lifecycle hooks are useful for.\n\n### 词汇表和常见问题FAQ\n\nThe [glossary](/docs/glossary.html) contains an overview of the most common terms you'll see in the React documentation. There is also a FAQ section dedicated to short questions and answers about common topics, including [making AJAX requests](/docs/faq-ajax.html), [component state](/docs/faq-state.html), and [file structure](/docs/faq-structure.html).\n\n## 相关参考信息\n\nThe [React blog](/blog/) is the official source for the updates from the React team. Anything important, including release notes or deprecation notices, will be posted there first.\n\nYou can also follow the [@reactjs account](https://twitter.com/reactjs) on Twitter, but you won't miss anything essential if you only read the blog.\n\nNot every React release deserves its own blog post, but you can find a detailed changelog for every release [in the `CHANGELOG.md` file in the React repository](https://github.com/facebook/react/blob/master/CHANGELOG.md), as well as on the [Releases](https://github.com/facebook/react) page.\n\n## 版本化文档\n\nThis documentation always reflects the latest stable version of React. Since React 16, you can find older versions of the documentation [on a separate page](/versions). Note that documentation for past versions is snapshotted at the time of the release, and isn't being continuously updated.\n\n## 有遗漏?\n\nIf something is missing in the documentation or if you found some part confusing, please [file an issue for the documentation repository](https://github.com/reactjs/reactjs.org/issues/new) with your suggestions for improvement, or tweet at the [@reactjs account](https://twitter.com/reactjs). We love hearing from you!\n",
        "type": "MarkdownRemark",
        "contentDigest": "06bafde37f824c16d2640910e831e286",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Getting Started",
        "id": "getting-started",
        "permalink": "docs/getting-started.html",
        "next": "add-react-to-a-website.html",
        "redirect_from": [
          "docs/",
          "docs/index.html",
          "docs/getting-started-ko-KR.html",
          "docs/getting-started-zh-CN.html",
          "docs/installation.html",
          "download.html",
          "downloads.html",
          "docs/try-react.html",
          "docs/tooling-integration.html",
          "docs/package-management.html",
          "docs/language-tooling.html",
          "docs/environments.html"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/getting-started.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/getting-started.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/getting-started.md",
      "fields": {
        "slug": "docs/getting-started.html",
        "path": "docs/getting-started.md",
        "redirect": "[\"docs/\",\"docs/index.html\",\"docs/getting-started-ko-KR.html\",\"docs/getting-started-zh-CN.html\",\"docs/installation.html\",\"download.html\",\"downloads.html\",\"docs/try-react.html\",\"docs/tooling-integration.html\",\"docs/package-management.html\",\"docs/language-tooling.html\",\"docs/environments.html\"]"
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/handling-events.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/handling-events.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/handling-events.md absPath of file",
      "internal": {
        "content": "---\nid: handling-events\ntitle: 事件处理\npermalink: docs/handling-events.html\nprev: state-and-lifecycle.html\nnext: conditional-rendering.html\nredirect_from:\n  - \"docs/events-ko-KR.html\"\n---\n\nReact 元素的事件处理和 DOM元素的很相似。但是有一点语法上的不同:\n\n* React事件绑定属性的命名采用驼峰式写法，而不是小写。\n* 如果采用 JSX 的语法你需要传入一个函数作为事件处理函数，而不是一个字符串(DOM元素的写法)\n\n例如，传统的 HTML：\n\n```html\n<button onclick=\"activateLasers()\">\n  Activate Lasers\n</button>\n```\n\nReact 中稍稍有点不同：\n\n```js{1}\n<button onClick={activateLasers}>\n  Activate Lasers\n</button>\n```\n\n在 React 中另一个不同是你不能使用返回 `false` 的方式阻止默认行为。你必须明确的使用 `preventDefault`。例如，传统的 HTML 中阻止链接默认打开一个新页面，你可以这样写：\n\n```html\n<a href=\"#\" onclick=\"console.log('The link was clicked.'); return false\">\n  Click me\n</a>\n```\n\n在 React，应该这样来写：\n\n```js{2-5,8}\nfunction ActionLink() {\n  function handleClick(e) {\n    e.preventDefault();\n    console.log('The link was clicked.');\n  }\n\n  return (\n    <a href=\"#\" onClick={handleClick}>\n      Click me\n    </a>\n  );\n}\n```\n\n在这里，`e` 是一个合成事件。React 根据 [W3C spec](https://www.w3.org/TR/DOM-Level-3-Events/) 来定义这些合成事件，所以你不需要担心跨浏览器的兼容性问题。查看 [SyntheticEvent](/docs/events.html) 参考指南来了解更多。\n\n使用 React 的时候通常你不需要使用 `addEventListener` 为一个已创建的 DOM 元素添加监听器。你仅仅需要在这个元素初始渲染的时候提供一个监听器。\n\n当你使用 [ES6 class](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes) 语法来定义一个组件的时候，事件处理器会成为类的一个方法。例如，下面的 `Toggle` 组件渲染一个让用户切换开关状态的按钮：\n\n```js{6,7,10-14,18}\nclass Toggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {isToggleOn: true};\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn\n    }));\n  }\n\n  render() {\n    return (\n      <button onClick={this.handleClick}>\n        {this.state.isToggleOn ? 'ON' : 'OFF'}\n      </button>\n    );\n  }\n}\n\nReactDOM.render(\n  <Toggle />,\n  document.getElementById('root')\n);\n```\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/xEmzGg?editors=0010)\n\n你必须谨慎对待 JSX 回调函数中的 `this`，类的方法默认是不会[绑定](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_objects/Function/bind) `this` 的。如果你忘记绑定 `this.handleClick` 并把它传入 `onClick`, 当你调用这个函数的时候 `this` 的值会是 `undefined`。\n\n这并不是 React 的特殊行为；它是[函数如何在 JavaScript 中运行](https://www.smashingmagazine.com/2014/01/understanding-javascript-function-prototype-bind/)的一部分。通常情况下，如果你没有在方法后面添加 `()` ，例如 `onClick={this.handleClick}`，你应该为这个方法绑定 `this`。\n\n如果使用 `bind` 让你很烦，这里有两种方式可以解决。如果你正在使用实验性的[属性初始化器语法](https://babeljs.io/docs/plugins/transform-class-properties/)，你可以使用属性初始化器来正确的绑定回调函数：\n\n```js{2-6}\nclass LoggingButton extends React.Component {\n  // This syntax ensures `this` is bound within handleClick.\n  // Warning: this is *experimental* syntax.\n  handleClick = () => {\n    console.log('this is:', this);\n  }\n\n  render() {\n    return (\n      <button onClick={this.handleClick}>\n        Click me\n      </button>\n    );\n  }\n}\n```\n\n这个语法在 [Create React App](https://github.com/facebookincubator/create-react-app) 中默认开启。\n\n如果你没有使用属性初始化器语法，你可以在回调函数中使用 [箭头函数](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/Arrow_functions)：\n\n```js{7-9}\nclass LoggingButton extends React.Component {\n  handleClick() {\n    console.log('this is:', this);\n  }\n\n  render() {\n    // This syntax ensures `this` is bound within handleClick\n    return (\n      <button onClick={(e) => this.handleClick(e)}>\n        Click me\n      </button>\n    );\n  }\n}\n```\n\n使用这个语法有个问题就是每次 `LoggingButton` 渲染的时候都会创建一个不同的回调函数。在大多数情况下，这没有问题。然而如果这个回调函数作为一个属性值传入低阶组件，这些组件可能会进行额外的重新渲染。我们通常建议在构造函数中绑定或使用属性初始化器语法来避免这类性能问题。\n\n## 向事件处理程序传递参数\n\n通常我们会为事件处理程序传递额外的参数。例如，若是 `id` 是你要删除那一行的 id，以下两种方式都可以向事件处理程序传递参数：\n\n```js\n<button onClick={(e) => this.deleteRow(id, e)}>Delete Row</button>\n<button onClick={this.deleteRow.bind(this, id)}>Delete Row</button>\n```\n\n上述两种方式是等价的，分别通过 [arrow functions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions) 和 [`Function.prototype.bind`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Function/bind) 来为事件处理函数传递参数。\n\n上面两个例子中，参数 `e` 作为 React 事件对象将会被作为第二个参数进行传递。通过箭头函数的方式，事件对象必须显式的进行传递，但是通过 `bind` 的方式，事件对象以及更多的参数将会被隐式的进行传递。\n\n值得注意的是，通过 `bind` 方式向监听函数传参，在类组件中定义的监听函数，事件对象 `e` 要排在所传递参数的后面，例如:\n\n```js{7-9,17}\nclass Popper extends React.Component{\n    constructor(){\n        super();\n        this.state = {name:'Hello world!'};\n    }\n    \n    preventPop(name, e){    //事件对象e要放在最后\n        e.preventDefault();\n        alert(name);\n    }\n    \n    render(){\n        return (\n            <div>\n                <p>hello</p>\n                {/* Pass params via bind() method. */}\n                <a href=\"https://reactjs.org\" onClick={this.preventPop.bind(this,this.state.name)}>Click</a>\n            </div>\n        );\n    }\n}\n```\n",
        "type": "MarkdownRemark",
        "contentDigest": "3164a56669d6293e2baeb53165fa0849",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "事件处理",
        "id": "handling-events",
        "permalink": "docs/handling-events.html",
        "prev": "state-and-lifecycle.html",
        "next": "conditional-rendering.html",
        "redirect_from": [
          "docs/events-ko-KR.html"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/handling-events.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/handling-events.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/handling-events.md",
      "fields": {
        "slug": "docs/handling-events.html",
        "path": "docs/handling-events.md",
        "redirect": "[\"docs/events-ko-KR.html\"]"
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/hello-world.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/hello-world.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/hello-world.md absPath of file",
      "internal": {
        "content": "---\nid: hello-world\ntitle: Hello World\npermalink: docs/hello-world.html\nprev: cdn-links.html\nnext: introducing-jsx.html\n---\n\n尝试React最简单的方法是使用[CodePen上的Hello World例子](http://codepen.io/gaearon/pen/ZpvBNJ?editors=0010)。如果你不想安装任何东西，可以在浏览器中打开它，然后跟着尝试我们接下来的例子。如果你更愿意使用本地开发环境，可以查看[安装页面](/docs/installation.html) 。\n\n一个最简单的React例子如下:\n\n```js\nReactDOM.render(\n  <h1>Hello, world!</h1>,\n  document.getElementById('root')\n);\n```\n\n它渲染了一个 \"Hello, world!\" 的标题。\n\n接下来的几节将逐步向你介绍如何使用React。我们将详细了解React应用的构成模块：元素和组件。掌握了这些，你将可以使用简单的可复用代码来创建复杂的应用。\n\n## 有关JavaScript的注意事项\n\nReact是一个JavaScript库，因此它需要你熟悉JavaScript。如果你感觉还不够了解，我们建议看看[MDN上有关JavaScript的内容](https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript)，以便你学得更轻松。\n\n在例子中我们也使用了一些ES6语法。由于这些语法还比较新，我们也是尽量谨慎的尝试使用他们。但是我们还是建议你去熟悉一下这些内容：[箭头函数](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions)， [类](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes)， [模板字符串](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)， [`let`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let)， 和 [`const`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/const) 声明。你可以使用 <a href=\"http://babeljs.io/repl/#?babili=false&evaluate=true&lineWrap=false&presets=es2015%2Creact&experimental=false&loose=false&spec=false&code=const%20element%20%3D%20%3Ch1%3EHello%2C%20world!%3C%2Fh1%3E%3B%0Aconst%20container%20%3D%20document.getElementById('root')%3B%0AReactDOM.render(element%2C%20container)%3B%0A\">Babel REPL</a> 来查看ES6的编译结果。\n",
        "type": "MarkdownRemark",
        "contentDigest": "d9b659ba7c7b054ded7548eded215351",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Hello World",
        "id": "hello-world",
        "permalink": "docs/hello-world.html",
        "prev": "cdn-links.html",
        "next": "introducing-jsx.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/hello-world.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/hello-world.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/hello-world.md",
      "fields": {
        "slug": "docs/hello-world.html",
        "path": "docs/hello-world.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/hooks-rules.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/hooks-rules.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/hooks-rules.md absPath of file",
      "internal": {
        "content": "---\nid: hooks-rules\ntitle: Rules of Hooks\npermalink: docs/hooks-rules.html\nnext: hooks-custom.html\nprev: hooks-effect.html\n---\n\n*Hooks* are a new feature proposal that lets you use state and other React features without writing a class. They're currently in React v16.7.0-alpha and being discussed in [an open RFC](https://github.com/reactjs/rfcs/pull/68).\n\nHooks are JavaScript functions, but you need to follow two rules when using them. We provide a [linter plugin](https://www.npmjs.com/package/eslint-plugin-react-hooks) to enforce these rules automatically:\n\n### Only Call Hooks at the Top Level\n\n**Don't call Hooks inside loops, conditions, or nested functions.** Instead, always use Hooks at the top level of your React function. By following this rule, you ensure that Hooks are called in the same order each time a component renders. That's what allows React to correctly preserve the state of Hooks between multiple `useState` and `useEffect` calls. (If you're curious, we'll explain this in depth [below](#explanation).)\n\n### Only Call Hooks from React Functions\n\n**Don't call Hooks from regular JavaScript functions.** Instead, you can:\n\n* ✅ Call Hooks from React function components.\n* ✅ Call Hooks from custom Hooks (we'll learn about them [on the next page](/docs/hooks-custom.html)).\n\nBy following this rule, you ensure that all stateful logic in a component is clearly visible from its source code.\n\n## ESLint Plugin\n\nWe released an ESLint plugin called [`eslint-plugin-react-hooks`](https://www.npmjs.com/package/eslint-plugin-react-hooks) that enforces these two rules. You can add this plugin to your project if you'd like to try it:\n\n```bash\nnpm install eslint-plugin-react-hooks@next\n```\n\n```js\n// Your ESLint configuration\n{\n  \"plugins\": [\n    // ...\n    \"react-hooks\"\n  ],\n  \"rules\": {\n    // ...\n    \"react-hooks/rules-of-hooks\": \"error\"\n  }\n}\n```\n\nIn the future, we intend to include this plugin by default into Create React App and similar toolkits.\n\n**You can skip to the next page explaining how to write [your own Hooks](/docs/hooks-custom.html) now.** On this page, we'll continue by explaining the reasoning behind these rules.\n\n## Explanation\n\nAs we [learned earlier](/docs/hooks-state.html#tip-using-multiple-state-variables), we can use multiple State or Effect Hooks in a single component:\n\n```js\nfunction Form() {\n  // 1. Use the name state variable\n  const [name, setName] = useState('Mary');\n\n  // 2. Use an effect for persisting the form\n  useEffect(function persistForm() {\n    localStorage.setItem('formData', name);\n  });\n\n  // 3. Use the surname state variable\n  const [surname, setSurname] = useState('Poppins');\n\n  // 4. Use an effect for updating the title\n  useEffect(function updateTitle() {\n    document.title = name + ' ' + surname;\n  });\n\n  // ...\n}\n```\n\nSo how does React know which state corresponds to which `useState` call? The answer is that **React relies on the order in which Hooks are called**. Our example works because the order of the Hook calls is the same on every render:\n\n```js\n// ------------\n// First render\n// ------------\nuseState('Mary')           // 1. Initialize the name state variable with 'Mary'\nuseEffect(persistForm)     // 2. Add an effect for persisting the form\nuseState('Poppins')        // 3. Initialize the surname state variable with 'Poppins'\nuseEffect(updateTitle)     // 4. Add an effect for updating the title\n\n// -------------\n// Second render\n// -------------\nuseState('Mary')           // 1. Read the name state variable (argument is ignored)\nuseEffect(persistForm)     // 2. Replace the effect for persisting the form\nuseState('Poppins')        // 3. Read the surname state variable (argument is ignored)\nuseEffect(updateTitle)     // 4. Replace the effect for updating the title\n\n// ...\n```\n\nAs long as the order of the Hook calls is the same between renders, React can associate some local state with each of them. But what happens if we put a Hook call (for example, the `persistForm` effect) inside a condition?\n\n```js\n  // 🔴 We're breaking the first rule by using a Hook in a condition\n  if (name !== '') {\n    useEffect(function persistForm() {\n      localStorage.setItem('formData', name);\n    });\n  }\n```\n\nThe `name !== ''` condition is `true` on the first render, so we run this Hook. However, on the next render the user might clear the form, making the condition `false`. Now that we skip this Hook during rendering, the order of the Hook calls becomes different:\n\n```js\nuseState('Mary')           // 1. Read the name state variable (argument is ignored)\n// useEffect(persistForm)  // 🔴 This Hook was skipped!\nuseState('Poppins')        // 🔴 2 (but was 3). Fail to read the surname state variable\nuseEffect(updateTitle)     // 🔴 3 (but was 4). Fail to replace the effect\n```\n\nReact wouldn't know what to return for the second `useState` Hook call. React expected that the second Hook call in this component corresponds to the `persistForm` effect, just like during the previous render, but it doesn't anymore. From that point, every next Hook call after the one we skipped would also shift by one, leading to bugs.\n\n**This is why Hooks must be called on the top level of our components.** If we want to run an effect conditionally, we can put that condition *inside* our Hook:\n\n```js\n  useEffect(function persistForm() {\n    // 👍 We're not breaking the first rule anymore\n    if (name !== '') {\n      localStorage.setItem('formData', name);\n    }\n  });\n```\n\n**Note that you don't need to worry about this problem if you use the [provided lint rule](https://www.npmjs.com/package/eslint-plugin-react-hooks).** But now you also know *why* Hooks work this way, and which issues the rule is preventing.\n\n## Next Steps\n\nFinally, we're ready to learn about [writing your own Hooks](/docs/hooks-custom.html)! Custom Hooks let you combine Hooks provided by React into your own abstractions, and reuse common stateful logic between different components.\n",
        "type": "MarkdownRemark",
        "contentDigest": "8528d1fbea286eab6a47e2e72896f50e",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Rules of Hooks",
        "id": "hooks-rules",
        "permalink": "docs/hooks-rules.html",
        "next": "hooks-custom.html",
        "prev": "hooks-effect.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/hooks-rules.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/hooks-rules.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/hooks-rules.md",
      "fields": {
        "slug": "docs/hooks-rules.html",
        "path": "docs/hooks-rules.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/installation.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/installation.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/installation.md absPath of file",
      "internal": {
        "content": "## 安装\nReact 一开始就是梯度设计的，你可以按需调用:\n\n- 使用[在线的 Playgrounds](/docs/getting-started.html#online-playgrounds) 尝尝鲜\n- 快速地将 [React 添加到一个网站](/docs/add-react-to-a-website.html) 里 <script> 标签\n- 如果你期待一个功能强大的 JavaScript 工具链，请[创建一个全新的 React 应用](/docs/create-a-new-react-app.html)\n\n作为来自 [CDN](/docs/cdn-links.html) 的一个 <script> 标签，或者作为 [npm](https://www.npmjs.com) 里的一个 react 包，你都可以使用到 React\n",
        "type": "MarkdownRemark",
        "contentDigest": "4806651128c19d5f04d602a966d6ffd4",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/installation.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/installation.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/installation.md",
      "fields": {
        "slug": "/docs/installation.html",
        "path": "docs/installation.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/introducing-jsx.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/introducing-jsx.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/introducing-jsx.md absPath of file",
      "internal": {
        "content": "---\nid: introducing-jsx\ntitle: JSX 简介\npermalink: docs/introducing-jsx.html\nprev: hello-world.html\nnext: rendering-elements.html\n---\n\n我们来观察一下声明的这个变量：\n\n```js\nconst element = <h1>Hello, world!</h1>;\n```\n\n这种看起来可能有些奇怪的标签语法既不是字符串也不是 HTML。\n\n它被称为 JSX， 一种 JavaScript 的语法扩展。 我们推荐在 React 中使用 JSX 来描述用户界面。JSX 乍看起来可能比较像是模版语言，但事实上它完全是在 JavaScript 内部实现的。\n\nJSX 用来声明 React 当中的元素。在[下一个章节](/docs/rendering-elements.html)里面我们会详细介绍元素是如何被渲染出来的，接下来呢，我们先来看看 JSX 的基本使用方法。\n\n### 在 JSX 中使用表达式\n\n 你可以任意地在 JSX 当中使用 [JavaScript 表达式](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Expressions)，在 JSX 当中的表达式要包含在大括号里。\n\n 例如 `2 + 2`， `user.firstName`， 以及 `formatName(user)` 都是可以使用的。\n\n```js{12}\nfunction formatName(user) {\n  return user.firstName + ' ' + user.lastName;\n}\n\nconst user = {\n  firstName: 'Harper',\n  lastName: 'Perez'\n};\n\nconst element = (\n  <h1>\n    Hello, {formatName(user)}!\n  </h1>\n);\n\nReactDOM.render(\n  element,\n  document.getElementById('root')\n);\n```\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/PGEjdG?editors=0010)\n\n我们书写 JSX 的时候一般都会带上换行和缩进，这样可以增强代码的可读性。与此同时，我们同样推荐在 JSX 代码的外面扩上一个小括号，这样可以防止 [分号自动插入](http://stackoverflow.com/q/2846283) 的 bug。\n\n### JSX 本身其实也是一种表达式\n\n在编译之后呢，JSX 其实会被转化为普通的 JavaScript 对象。\n\n这也就意味着，你其实可以在 `if` 或者 `for` 语句里使用 JSX，将它赋值给变量，当作参数传入，作为返回值都可以：\n\n```js{3,5}\nfunction getGreeting(user) {\n  if (user) {\n    return <h1>Hello, {formatName(user)}!</h1>;\n  }\n  return <h1>Hello, Stranger.</h1>;\n}\n```\n\n### JSX 属性\n\n你可以使用引号来定义以字符串为值的属性：\n\n```js\nconst element = <div tabIndex=\"0\"></div>;\n```\n\n也可以使用大括号来定义以 JavaScript 表达式为值的属性：\n\n```js\nconst element = <img src={user.avatarUrl} />;\n```\n\n切记你使用了大括号包裹的 JavaScript 表达式时就不要再到外面套引号了。JSX 会将引号当中的内容识别为字符串而不是表达式。\n\n### JSX 嵌套\n\n如果 JSX 标签是闭合式的，那么你需要在结尾处用 `/>`, 就好像 XML/HTML 一样：\n\n```js\nconst element = <img src={user.avatarUrl} />;\n```\n\nJSX 标签同样可以相互嵌套：\n\n```js\nconst element = (\n  <div>\n    <h1>Hello!</h1>\n    <h2>Good to see you here.</h2>\n  </div>\n);\n```\n\n>**警告:**\n>\n>因为 JSX 的特性更接近 JavaScript 而不是 HTML , 所以 React DOM 使用 `camelCase` 小驼峰命名 来定义属性的名称，而不是使用 HTML 的属性名称。\n>\n>例如，`class` 变成了 [`className`](https://developer.mozilla.org/en-US/docs/Web/API/Element/className)，而 `tabindex` 则对应着 [`tabIndex`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/tabIndex)。\n\n### JSX 防注入攻击\n\n你可以放心地在 JSX 当中使用用户输入：\n\n```js\nconst title = response.potentiallyMaliciousInput;\n// 直接使用是安全的：\nconst element = <h1>{title}</h1>;\n```\n\nReact DOM 在渲染之前默认会 [过滤](http://stackoverflow.com/questions/7381974/which-characters-need-to-be-escaped-on-html) 所有传入的值。它可以确保你的应用不会被注入攻击。所有的内容在渲染之前都被转换成了字符串。这样可以有效地防止 [XSS(跨站脚本)](https://en.wikipedia.org/wiki/Cross-site_scripting) 攻击。\n\n### JSX 代表 Objects\n\nBabel 转译器会把 JSX 转换成一个名为 `React.createElement()` 的方法调用。\n\n下面两种代码的作用是完全相同的：\n\n```js\nconst element = (\n  <h1 className=\"greeting\">\n    Hello, world!\n  </h1>\n);\n```\n\n```js\nconst element = React.createElement(\n  'h1',\n  {className: 'greeting'},\n  'Hello, world!'\n);\n```\n\n`React.createElement()` 这个方法首先会进行一些避免bug的检查，之后会返回一个类似下面例子的对象：\n\n```js\n// 注意: 以下示例是简化过的（不代表在 React 源码中是这样）\nconst element = {\n  type: 'h1',\n  props: {\n    className: 'greeting',\n    children: 'Hello, world'\n  }\n};\n```\n\n这样的对象被称为 “React 元素”。它代表所有你在屏幕上看到的东西。React 通过读取这些对象来构建 DOM 并保持数据内容一致。\n\n我们将在下一个章节当中介绍更多有关 React 元素 是如何渲染成 DOM 的内容。\n\n>**Tip:**\n>\n>如果你是在使用本地编辑器编写 JSX 代码的话，推荐你去装一个支持 JSX 高亮的插件，这样更方便之后的开发学习。\n",
        "type": "MarkdownRemark",
        "contentDigest": "7007b325c92e56a45a04a8efa0732e22",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "JSX 简介",
        "id": "introducing-jsx",
        "permalink": "docs/introducing-jsx.html",
        "prev": "hello-world.html",
        "next": "rendering-elements.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/introducing-jsx.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/introducing-jsx.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/introducing-jsx.md",
      "fields": {
        "slug": "docs/introducing-jsx.html",
        "path": "docs/introducing-jsx.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/legacy-context.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/legacy-context.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/legacy-context.md absPath of file",
      "internal": {
        "content": "---\nid: legacy-context\ntitle: Legacy Context\npermalink: docs/legacy-context.html\n---\n\n> 注释：由于React v15.5开始 `React.PropTypes`已经废弃，我们推荐使用[`prop-types`](https://www.npmjs.com/package/prop-types)来定义`contextTypes`。\n\n使用React可以非常轻松地追踪通过React组件的数据流。在React组件中，你可以看到哪些props被传递，这使得你的应用容易理解。\n\n在有些场景中，你不想要向下每层都手动地传递你需要的 props。这就需要强大的 `context` API了。\n\n## 为什么不要使用Context\n\n绝大多数应用程序不需要使用 context.\n\n如果你想让你的应用更稳定，别使用context。因为这是一个实验性的API，在未来的React版本中可能会被更改。\n\n如果你对状态管理库如[Redux](https://github.com/reactjs/redux)或[Mobx](https://github.com/mobxjs/mobx)不太熟悉，那就别用context了。在很多实际应用中，这些库及其React绑定是管理与许多组件相关的state的不错选择。Redux可能是你更好的选择，而不是context。\n\n如果你不是一个有经验的React的开发者，不要使用context，通常仅使用props和state来实现功能是更好的一种方式。\n\n尽管有这些警告，如果你还是坚持要使用context，那么尽量将使用context的代码隔离到一小块地方并避免直接使用context API，这样以后API变更的时候更容易升级。\n\n## 如何使用Context\n\n假设你有如下代码:\n\n\n```javascript\nclass Button extends React.Component {\n  render() {\n    return (\n      <button style={{background: this.props.color}}>\n        {this.props.children}\n      </button>\n    );\n  }\n}\n\nclass Message extends React.Component {\n  render() {\n    return (\n      <div>\n        {this.props.text} <Button color={this.props.color}>Delete</Button>\n      </div>\n    );\n  }\n}\n\nclass MessageList extends React.Component {\n  render() {\n    const color = \"purple\";\n    const children = this.props.messages.map((message) =>\n      <Message text={message.text} color={color} />\n    );\n    return <div>{children}</div>;\n  }\n}\n```\n\n在这个例子中，我们手动传递color这个prop，以适当地设置`Button`和`Message`组件的样式。使用context，我们可以自动地在组件树中传递参数。\n\n\n```javascript{6,13-15,21,28-30,40-42}\nconst PropTypes = require('prop-types');\n\nclass Button extends React.Component {\n  render() {\n    return (\n      <button style={{background: this.context.color}}>\n        {this.props.children}\n      </button>\n    );\n  }\n}\n\nButton.contextTypes = {\n  color: PropTypes.string\n};\n\nclass Message extends React.Component {\n  render() {\n    return (\n      <div>\n        {this.props.text} <Button>Delete</Button>\n      </div>\n    );\n  }\n}\n\nclass MessageList extends React.Component {\n  getChildContext() {\n    return {color: \"purple\"};\n  }\n\n  render() {\n    const children = this.props.messages.map((message) =>\n      <Message text={message.text} />\n    );\n    return <div>{children}</div>;\n  }\n}\n\nMessageList.childContextTypes = {\n  color: PropTypes.string\n};\n```\n\n通过在`MessageList`（context提供者）中添加`childContextTypes`和`getChildContext`，React会向下自动传递参数，任何组件只要在它的子组件中（这个例子中是`Button`），就能通过定义`contextTypes`来获取参数。\n\n如果`contextTypes`没有定义，那么`context`将会是个空对象。\n\n## 父子组件耦合\n\nContext还能让你构建一个父子组件通讯的API。例如[React Router V4](https://reacttraining.com/react-router)就是这么实现的。\n\n```javascript\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nconst BasicExample = () => (\n  <Router>\n    <div>\n      <ul>\n        <li><Link to=\"/\">Home</Link></li>\n        <li><Link to=\"/about\">About</Link></li>\n        <li><Link to=\"/topics\">Topics</Link></li>\n      </ul>\n\n      <hr />\n\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/topics\" component={Topics} />\n    </div>\n  </Router>\n);\n```\n\n通过`Router`组件向下传递参数，每个`Link`和`Route`组件就能回传到包含的`Router`组件中。\n\n在使用与此类似的API构建你的组件之前，请考虑下是否有更好的选择。例如，如果你乐意的话，可以将整个React组件当做参数来传递。\n\n## 在生命周期函数中引用Context\n\n如果在一个组件中定义了`contextTypes`，那么下面这些[生命周期函数](/docs/react-component.html#the-component-lifecycle)中将会接收到额外的参数，即`context`对象:\n\n\n- [`constructor(props, context)`](/docs/react-component.html#constructor)\n- [`componentWillReceiveProps(nextProps, nextContext)`](/docs/react-component.html#componentwillreceiveprops)\n- [`shouldComponentUpdate(nextProps, nextState, nextContext)`](/docs/react-component.html#shouldcomponentupdate)\n- [`componentWillUpdate(nextProps, nextState, nextContext)`](/docs/react-component.html#componentwillupdate)\n- [`componentDidUpdate(prevProps, prevState, prevContext)`](/docs/react-component.html#componentdidupdate)\n\n## 在无状态函数组件中引用Context\n\n如果`contextTypes`作为函数参数被定义的话，无状态函数组件也是可以引用`context`。以下代码展示了用无状态函数组件写法的`Button`组件。\n\n```javascript\nconst PropTypes = require('prop-types');\n\nconst Button = ({children}, context) =>\n  <button style={{background: context.color}}>\n    {children}\n  </button>;\n\nButton.contextTypes = {color: PropTypes.string};\n```\n\n## 更新Context\n\n千万别这么做。\n\nReact有更新context的API，但是基本已经被废除了，你不应该使用。\n\n当state或者props更新时`getChildContext`方法会被调用。为了在context中更新数据，使用 `this.setState`来更新本地state。这将会生成一个新的context，所有的子组件会接收到更新。\n\n```javascript\nconst PropTypes = require('prop-types');\n\nclass MediaQuery extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {type:'desktop'};\n  }\n\n  getChildContext() {\n    return {type: this.state.type};\n  }\n\n  componentDidMount() {\n    const checkMediaQuery = () => {\n      const type = window.matchMedia(\"(min-width: 1025px)\").matches ? 'desktop' : 'mobile';\n      if (type !== this.state.type) {\n        this.setState({type});\n      }\n    };\n\n    window.addEventListener('resize', checkMediaQuery);\n    checkMediaQuery();\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nMediaQuery.childContextTypes = {\n  type: PropTypes.string\n};\n```\n\n那么问题来了，由于组件更新产生的新的context，如果有一个中间的父组件的`shouldComponentUpdate`返回了`false`,那么接下来的子组件中的context是不会被更新的。这么使用context的话，组件就失控了，所以没有一种可靠的方式来更新context。[这篇博客](https://medium.com/@mweststrate/how-to-safely-use-react-context-b7e343eff076)很好地解释了为什么这是一个问题，以及如何规避它。\n",
        "type": "MarkdownRemark",
        "contentDigest": "8cdd964581f65745c95be434f6349868",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Legacy Context",
        "id": "legacy-context",
        "permalink": "docs/legacy-context.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/legacy-context.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/legacy-context.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/legacy-context.md",
      "fields": {
        "slug": "docs/legacy-context.html",
        "path": "docs/legacy-context.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/portals.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/portals.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/portals.md absPath of file",
      "internal": {
        "content": "---\nid: portals\ntitle: Portals\npermalink: docs/portals.html\n---\n\nPortals 提供了一种很好的将子节点渲染到父组件以外的 DOM 节点的方式。\n\n```js\nReactDOM.createPortal(child, container)\n```\n\n第一个参数（`child`）是任何[可渲染的 React 子元素](/docs/react-component.html#render)，例如一个元素，字符串或碎片。第二个参数（`container`）则是一个 DOM 元素。\n\n## 用法\n\n通常讲，当你从组件的 render 方法返回一个元素，该元素仅能装配 DOM 节点中离其最近的父元素：\n\n```js{4,6}\nrender() {\n  // React mounts a new div and renders the children into it\n  return (\n    <div>\n      {this.props.children}\n    </div>\n  );\n}\n```\n\n然而，有时候将其插入到 DOM 节点的不同位置也是有用的：\n\n```js{6}\nrender() {\n  // React does *not* create a new div. It renders the children into `domNode`.\n  // `domNode` is any valid DOM node, regardless of its location in the DOM.\n  return ReactDOM.createPortal(\n    this.props.children,\n    domNode,\n  );\n}\n```\n\n对于 portal 的一个典型用例是当父组件有 `overflow: hidden` 或 `z-index` 样式，但你需要子组件能够在视觉上“跳出（break out）”其容器。例如，对话框、hovercards以及提示框：\n\n> 注意：\n>\n> 记住这点非常重要，当在使用 portals时，你需要确保遵循合适的可访问指南。\n\n[在 CodePen 上试一试](https://codepen.io/gaearon/pen/yzMaBd)\n\n## 通过 Portals 进行事件冒泡\n\n尽管 portal 可以被放置在 DOM 树的任何地方，但在其他方面其行为和普通的 React 子节点行为一致。无论其子节点是否是 portal，上下文特性依然能够如之前一样正确地工作。由于 portal 仍存在于 *React 树*中，而不用考虑其在 DOM 树中的位置。\n\n这包含事件冒泡。一个从 portal 内部会触发的事件会一直冒泡至包含 *React 树* 的祖先。假设如下 HTML 结构：\n\n```html\n<html>\n  <body>\n    <div id=\"app-root\"></div>\n    <div id=\"modal-root\"></div>\n  </body>\n</html>\n```\n\n在 `#app-root` 里的 `Parent` 组件能够捕获到未被捕获的从兄弟节点 `#modal-root` 冒泡上来的事件。\n\n```js{20-23,34-41,45,53-55,62-63,66}\n// These two containers are siblings in the DOM\nconst appRoot = document.getElementById('app-root');\nconst modalRoot = document.getElementById('modal-root');\n\nclass Modal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.el = document.createElement('div');\n  }\n\n  componentDidMount() {\n    modalRoot.appendChild(this.el);\n  }\n\n  componentWillUnmount() {\n    modalRoot.removeChild(this.el);\n  }\n\n  render() {\n    return ReactDOM.createPortal(\n      this.props.children,\n      this.el,\n    );\n  }\n}\n\nclass Parent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {clicks: 0};\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    // This will fire when the button in Child is clicked,\n    // updating Parent's state, even though button\n    // is not direct descendant in the DOM.\n    this.setState(prevState => ({\n      clicks: prevState.clicks + 1\n    }));\n  }\n\n  render() {\n    return (\n      <div onClick={this.handleClick}>\n        <p>Number of clicks: {this.state.clicks}</p>\n        <p>\n          Open up the browser DevTools\n          to observe that the button\n          is not a child of the div\n          with the onClick handler.\n        </p>\n        <Modal>\n          <Child />\n        </Modal>\n      </div>\n    );\n  }\n}\n\nfunction Child() {\n  // The click event on this button will bubble up to parent,\n  // because there is no 'onClick' attribute defined\n  return (\n    <div className=\"modal\">\n      <button>Click</button>\n    </div>\n  );\n}\n\nReactDOM.render(<Parent />, appRoot);\n```\n\n[在 CodePen 上试一试](https://codepen.io/gaearon/pen/jGBWpE)\n\n在父组件里捕获一个来自 portal 的事件冒泡能够在开发时具有不完全依赖于 portal 的更为灵活的抽象。例如，若你在渲染一个 `<Modal />` 组件，父组件能够捕获其事件而无论其是否采用 portal 实现。\n",
        "type": "MarkdownRemark",
        "contentDigest": "3ff461b9345debcde73bbda88971ce49",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Portals",
        "id": "portals",
        "permalink": "docs/portals.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/portals.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/portals.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/portals.md",
      "fields": {
        "slug": "docs/portals.html",
        "path": "docs/portals.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/react-without-es6.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/react-without-es6.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/react-without-es6.md absPath of file",
      "internal": {
        "content": "---\nid: react-without-es6\ntitle: 不使用 ES6\npermalink: docs/react-without-es6.html\n---\n\n通常我们会用 JavaScript 的 `class` 关键字来创建 React 组件：\n\n```javascript\nclass Greeting extends React.Component {\n  render() {\n    return <h1>Hello, {this.props.name}</h1>;\n  }\n}\n```\n\n如果你不打算使用 ES6，你也可以使用 `create-react-class` 模块来创建：\n\n```javascript\nvar createReactClass = require('create-react-class');\nvar Greeting = createReactClass({\n  render: function() {\n    return <h1>Hello, {this.props.name}</h1>;\n  }\n});\n```\n\nES6 中 `class` 相关的接口与 `createReactClass` 方法十分相似，但有以下几个区别值得注意。\n\n## 声明默认属性\n\n如果使用 `class` 关键字创建组件，可以直接把自定义属性对象写到类的 `defaultProps` 属性中：\n\n```javascript\nclass Greeting extends React.Component {\n  // ...\n}\n\nGreeting.defaultProps = {\n  name: 'Mary'\n};\n```\n\n如果使用 `createReactClass` 方法创建组件，那就需要在参数对象中定义 `getDefaultProps` 方法，并且在这个方法中返回包含自定义属性的对象：\n\n```javascript\nvar Greeting = createReactClass({\n  getDefaultProps: function() {\n    return {\n      name: 'Mary'\n    };\n  },\n\n  // ...\n\n});\n```\n\n## 设置初始状态\n\n如果使用 `class` 关键字创建组件，你可以通过在 `constructor` 中给 `this.state` 赋值的方式来定义组件的初始状态：\n\n```javascript\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {count: props.initialCount};\n  }\n  // ...\n}\n```\n\n如果使用 `createReactClass` 方法创建组件，你就需要多写一个 `getInitialState` 方法，并让这个方法返回你要定义的初始属性：\n\n```javascript\nvar Counter = createReactClass({\n  getInitialState: function() {\n    return {count: this.props.initialCount};\n  },\n  // ...\n});\n```\n\n## 自动绑定\n\n对于使用 `class` 关键字创建的 React 组件，组件中的方法是不会自动绑定 `this` 的。类似地，通过 ES6 `class` 生成的实例，实例上的方法也不会绑定 `this`。因此，你需要在 `constructor` 中为方法手动添加 `.bind(this)`：\n\n```javascript\nclass SayHello extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {message: 'Hello!'};\n    // 这一行很关键\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    alert(this.state.message);\n  }\n\n  render() {\n    // 由于 `this.handleClick` 已经绑定至实例，因此我们才可以用它来处理点击事件\n    return (\n      <button onClick={this.handleClick}>\n        Say hello\n      </button>\n    );\n  }\n}\n```\n\n如果使用 `createReactClass` 方法创建组件，组件中的方法会自动绑定至实例，不需要像上面那样加 `.bind(this)`：\n\n```javascript\nvar SayHello = createReactClass({\n  getInitialState: function() {\n    return {message: 'Hello!'};\n  },\n\n  handleClick: function() {\n    alert(this.state.message);\n  },\n\n  render: function() {\n    return (\n      <button onClick={this.handleClick}>\n        Say hello\n      </button>\n    );\n  }\n});\n```\n\n这就意味着，如果使用 `class` 关键字创建组件，那在处理事件回调的时候就要多写一点点代码。但对于大型项目来说，这样做可以提升运行效率。\n\n如果你觉得上面这个写法很麻烦，那么可以尝试一下**目前还处于实验性阶段**的 Babel 插件 [Class Properties](https://babeljs.io/docs/plugins/transform-class-properties/)。\n\n\n```javascript\nclass SayHello extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {message: 'Hello!'};\n  }\n  // 警告：这种语法还处于实验性阶段\n  // 在这里使用箭头函数就可以把方法绑定给实例：\n  handleClick = () => {\n    alert(this.state.message);\n  }\n\n  render() {\n    return (\n      <button onClick={this.handleClick}>\n        Say hello\n      </button>\n    );\n  }\n}\n```\n\n请注意，这种语法**目前还处于实验性阶段**。也就意味着，语法随时都可能改变。当然，也存在最终没有被官方批准的可能。\n\n为了保险起见，以下三种做法都是可以的：\n\n* 把方法绑定给构造器 (constructor)\n* 使用箭头函数，比如这样写：`onClick={(e) => this.handleClick(e)}`.\n* 使用 `createReactClass`.\n\n## Mixin(混入)\n\n>**注：**\n>\n>ES6 本身是不包含混入支持的。因此，如果你使用 `class` 关键字创建组件，那就不能使用混入功能了。\n>\n>**我们也发现了很多使用混入然后出现了问题的代码库。[因此，我们并不推荐在 ES6 中使用混入](/blog/2016/07/13/mixins-considered-harmful.html).**\n>\n>以下内容仅作为参考\n\n如果完全不同的组件有相似的功能，这就会产生 [\"横切关注点\"问题](https://en.wikipedia.org/wiki/Cross-cutting_concern)。针对这个问题，在使用 [`createReactClass`](/docs/top-level-api.html#react.createclass) 创建 React 组件的时候，引入`混入`功能会是一个很好的解决方案。\n\n一个常见的使用情景是，当一个组件想要每隔一段时间更新，那么最简单的方法就是使用 `setInterval()`。但更重要的是，如果后续代码中不需要这个功能，为了节省内存，你应该把它删除。React 提供了 [生命周期方法](/docs/working-with-the-browser.html#component-lifecycle)，这样你就可以知道某一个组件什么时候要被创建或者什么时候会被销毁。我们先来创建一个使用 `setInterval()` 的混入，它会在组件销毁的时候也销毁。\n\n```javascript\nvar SetIntervalMixin = {\n  componentWillMount: function() {\n    this.intervals = [];\n  },\n  setInterval: function() {\n    this.intervals.push(setInterval.apply(null, arguments));\n  },\n  componentWillUnmount: function() {\n    this.intervals.forEach(clearInterval);\n  }\n};\n\nvar createReactClass = require('create-react-class');\n\nvar TickTock = createReactClass({\n  mixins: [SetIntervalMixin], // 使用混入\n  getInitialState: function() {\n    return {seconds: 0};\n  },\n  componentDidMount: function() {\n    this.setInterval(this.tick, 1000); // 调用混入的方法\n  },\n  tick: function() {\n    this.setState({seconds: this.state.seconds + 1});\n  },\n  render: function() {\n    return (\n      <p>\n        React has been running for {this.state.seconds} seconds.\n      </p>\n    );\n  }\n});\n\nReactDOM.render(\n  <TickTock />,\n  document.getElementById('example')\n);\n```\n\n如果一个组件有多个混入，且其中几个混入中定义了相同的生命周期方法（比如都会在组件被摧毁的时候执行），那么这些生命周期方法是一定会被调用的。通过混入定义的方法，执行顺序也与定义时的顺序一致，且会在组件上的方法执行之后再执行。\n",
        "type": "MarkdownRemark",
        "contentDigest": "4470bce9752e1864155d68f6f479ba61",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "不使用 ES6",
        "id": "react-without-es6",
        "permalink": "docs/react-without-es6.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/react-without-es6.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/react-without-es6.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/react-without-es6.md",
      "fields": {
        "slug": "docs/react-without-es6.html",
        "path": "docs/react-without-es6.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/react-without-jsx.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/react-without-jsx.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/react-without-jsx.md absPath of file",
      "internal": {
        "content": "---\nid: react-without-jsx\ntitle: 不使用 JSX\npermalink: docs/react-without-jsx.html\n---\n\n编写React的时候，JSX并不是必须的。当你不想在你的构建环境中安装相关编译工具的时候，不使用JSX编写React会比较方便。\n\n每一个JSX元素都只是 `React.createElement(component, props, ...children)` 的语法糖。因此，任何时候你用JSX语法写的代码也可以用普通的 JavaScript 语法写出来。\n\n例如，下面这段代码是用JSX语法写的：\n\n```js\nclass Hello extends React.Component {\n  render() {\n    return <div>Hello {this.props.toWhat}</div>;\n  }\n}\n\nReactDOM.render(\n  <Hello toWhat=\"World\" />,\n  document.getElementById('root')\n);\n```\n\n可以被编译成下面这段不使用JSX的代码：\n\n```js\nclass Hello extends React.Component {\n  render() {\n    return React.createElement('div', null, `Hello ${this.props.toWhat}`);\n  }\n}\n\nReactDOM.render(\n  React.createElement(Hello, {toWhat: 'World'}, null),\n  document.getElementById('root')\n);\n```\n\n如果你很好奇想了解更多关于JSX如何被转化为 JavaScript 的例子，你可以尝试下这个[在线Babel编译器](https://babeljs.io/repl/#?babili=false&evaluate=true&lineWrap=false&presets=es2015%2Creact%2Cstage-0&code=function%20hello()%20%7B%0A%20%20return%20%3Cdiv%3EHello%20world!%3C%2Fdiv%3E%3B%0A%7D)。\n\n一个组件可以是一个字符串，或者也可以是`React.Component的子类。当组件是无状态组件的时候，它也可以是一个普通的函数。\n\n\n如果你对于每次都要输入 `React.createElement` 感到非常厌倦，这是一种常用的简写形式：\n\n```js\nconst e = React.createElement;\n\nReactDOM.render(\n  e('div', null, 'Hello World'),\n  document.getElementById('root')\n);\n```\n\n如果你使用 `React.createElement` 的简写形式，这将很方便的去编写不使用 JSX 的 React.\n\n其它选择的话，你可以去参考社区上的项目例如[`react-hyperscript`](https://github.com/mlmorg/react-hyperscript)和 [`hyperscript-helpers`](https://github.com/ohanhi/hyperscript-helpers) 。它们都提供了一些简洁的语法。\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "6c773a5cf58333446919e005705f0e82",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "不使用 JSX",
        "id": "react-without-jsx",
        "permalink": "docs/react-without-jsx.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/react-without-jsx.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/react-without-jsx.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/react-without-jsx.md",
      "fields": {
        "slug": "docs/react-without-jsx.html",
        "path": "docs/react-without-jsx.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/reconciliation.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/reconciliation.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/reconciliation.md absPath of file",
      "internal": {
        "content": "---\nid: reconciliation\ntitle: 协调（Reconciliation）\npermalink: docs/reconciliation.html\n---\n\nReact提供了一组声明式API以让你不必担心每次更新精确地改变了什么。这使得应用的编写容易了很多，但这是在React中如何实现并不是很明显。这篇文章解释了在React中的“差分(diffing)”算法中我们所做出的选择，以让组件更新是可预测的，并且足够快以适应高性能应用。\n\n>译者注：**diffing**算法用来找出两棵树的所有不同点，类似于游戏“找别扭”。\n\n## 目的\n\n当你使用React，在某一个时间点，你可以认为`render()`函数是在创建React元素树。在下一状态或属性更新时，`render()`函数将返回一个不同的React元素树。React需要算出如何高效更新UI以匹配最新的树。\n\n有一些通用的解决方案，对于生成最小操作数的这个算法问题，以将一棵树转换为另一棵树。然而，在[state of the art algorithms](http://grfia.dlsi.ua.es/ml/algorithms/references/editsurvey_bille.pdf) 中有时间复杂度为O(n<sup>3</sup>)，在这里n代表树中元素个数。\n\n若我们在React中使用，展示1000个元素则需要进行10亿次的比较。这太过昂贵。与此不同，React基于两点假设，实现了一个启发的O(n)算法：\n\n1. 两个不同类型的元素将产生不同的树。\n2. 开发者可以使用`key`属性来提示哪些子元素贯穿不同渲染是稳定的。\n\n实践中，上述这些假设适用于大部分应用场景。\n\n## 差分算法\n\n当差分两棵树时，React首先比较两个根元素。根据根元素的类型的不同，其行为会有所不同。\n\n### 不同类型的元素\n\n每当根元素有不同类型，React将拆除旧树并且从零开始重新构建新树。从`<a>`到`<img>`或从`<Article>`到`<Comment>`，或从`<Button>` 到 `<div>`————这些都会导致充分地重新构建。\n\n当拆除一棵树时，旧的DOM节点被销毁。组件实例收到`componentWillUnmount()`。当构建一棵新树时，新的DOM节点被插入到DOM中。组件实例先收到`componentWillMount()`，然后收到`componentDidMount()`。任何与旧树有关的状态都被丢弃。\n\n这个根下任何组件也都将被卸载，他们的状态被销毁。例如，当定义：\n\n```xml\n<div>\n  <Counter />\n</div>\n\n<span>\n  <Counter />\n</span>\n```\n\n这将销毁旧的`Counter`并重装载一个新的。\n\n### 相同类型的DOM元素\n\n当比较两个相同类型的React DOM元素时，React则会观察二者的属性(attributes)，保持相同的底层DOM节点，并仅更新变化的属性。例如：\n\n```xml\n<div className=\"before\" title=\"stuff\" />\n\n<div className=\"after\" title=\"stuff\" />\n```\n\n通过比较这两个元素，React知道仅更改底层DOM元素的`className`。\n\n当更新`style`时，React同样知道仅更新改变的属性(properties)。例如：\n\n```xml\n<div style={{color: 'red', fontWeight: 'bold'}} />\n\n<div style={{color: 'green', fontWeight: 'bold'}} />\n```\n\n当在两个元素之间转化时，React知道仅修改`color`样式，而`fontWeight`不用修改。\n\n在处理完DOM元素后，React递归其子代。\n\n### 相同类型的组件元素\n\n当组件更新时，实例保持相同，这样状态跨渲染被维护。React通过更新底层组件实例的属性(props)来匹配新元素，并在底层实例上调用`componentWillReceiveProps()` 和 `componentWillUpdate()`。\n\n下一步，`render()`方法被调用，差分算法递归处理前一次的结果和新的结果。\n\n### 子代们上的递归\n\n默认时，当递归DOM节点的子节点时，React就是迭代在同一时间点的两个子节点列表，并在不同时产生一个变更。\n\n例如，当在子节点末尾增加一个元素，两棵树的转换效果很好：\n\n```xml\n<ul>\n  <li>first</li>\n  <li>second</li>\n</ul>\n\n<ul>\n  <li>first</li>\n  <li>second</li>\n  <li>third</li>\n</ul>\n```\n\nReact将会匹配两棵树的`<li>first</li>`，并匹配两棵树的`<li>second</li>` 节点，并插入`<li>third</li>`节点树。\n\n如果你的实现方法过于天真，插入元素到列表的开头会使得性能变坏。例如，这两棵树之间转换效果不佳：\n\n```xml\n<ul>\n  <li>Duke</li>\n  <li>Villanova</li>\n</ul>\n\n<ul>\n  <li>Connecticut</li>\n  <li>Duke</li>\n  <li>Villanova</li>\n</ul>\n```\n\nReact将修改每个子节点，而非意识到可以完整保留`<li>Duke</li>` 和 `<li>Villanova</li>`子树。低效成了一个问题。\n\n### Keys\n\n为解决该问题，React支持了一个`key`属性。当子节点有key时，React使用key来匹配原始树的子节点和随后树的子节点。例如，增加一个`key`到上面低效的示例，能让树的转换变得高效：\n\n```xml\n<ul>\n  <li key=\"2015\">Duke</li>\n  <li key=\"2016\">Villanova</li>\n</ul>\n\n<ul>\n  <li key=\"2014\">Connecticut</li>\n  <li key=\"2015\">Duke</li>\n  <li key=\"2016\">Villanova</li>\n</ul>\n```\n\n现在React知道带有`'2014'`的key的元素是新的，带有`'2015'`和`'2016'`的key的元素仅需要移动。\n\n实践中，找到一个key通常不难。你将显示的元素可能已经带有一个唯一的ID，因此key可以来自于你的数据中：\n\n```js\n<li key={item.id}>{item.name}</li>\n```\n\n当不是这种情况时，你可以增加一个新的ID属性给模型，或根据内容的一些部分创建一个哈希值来作为key。key必须是唯一的，只在其兄弟中，不用全局唯一。\n\n作为最后的手段，你可以传递项目在数组中的索引作为key。若元素顺序永远不会改变，该方法效果不错，但重新排序就会很慢。\n\n当索引用作key时，重新排序时也会引起组件状态方面的问题。组件实例进行更新和重用都是基于他们的key。如果key是索引，则移动一个项目改变索引，结果，诸如非受控输入这类的组件状态可能会以意想不到的方式混淆和更新。\n\n[这里](https://reactjs.org/redirect-to-codepen/reconciliation/index-used-as-key)是在CodePen上使用索引作为键可能导致的问题的一个例子，[这里](https://reactjs.org/redirect-to-codepen/reconciliation/no-index-used-as-key)是同一个例子的更新版本，展示了如何不使用索引作为键将解决这些reordering, sorting, 和 prepending的问题。\n\n## 权衡\n\n重点要记住协调算法是一个实现细节。React可以在每次操作时重新渲染整个应用；最终结果仍是相同的。清晰起见，在此上下文中的重新渲染意味着对于所有组件调用`render`。不意味着React将卸载并重新装载他们。将只是应用不同的部分，按照前几节的规则得出的不同。\n\n我们依照规律提炼启发式的算法，为了使大多数场景能更快。在目前实现中，可以表达事实是，一个子树在其兄弟节点中间已经被移动，但你不能告知其已经移动到别的某处。该算法会重新渲染整个子树。\n\n由于React依赖于该启发式算法，若其背后的假设没得到满足，性能将遭殃：\n\n1. 算法无法尝试匹配不同组件类型的子树。如果看见两个输出非常相似的组件类型交替出现，你可能需要使其成为相同类型。实践中，我们没有发现这成为问题。\n\n2. Keys应该是稳定的，可预测的，且唯一的。不稳定的key（类似由`Math.random()`生成的）将引起许多组件实例和DOM节点不必要的重建，这可能引起性能下降并丢失子组件的状态。\n",
        "type": "MarkdownRemark",
        "contentDigest": "03f2f3ec99f03fd9b5aa2317a8624ba7",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "协调（Reconciliation）",
        "id": "reconciliation",
        "permalink": "docs/reconciliation.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/reconciliation.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/reconciliation.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/reconciliation.md",
      "fields": {
        "slug": "docs/reconciliation.html",
        "path": "docs/reconciliation.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/reference-events.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/reference-events.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/reference-events.md absPath of file",
      "internal": {
        "content": "---\nid: events\ntitle: SyntheticEvent\npermalink: docs/events.html\nlayout: docs\ncategory: Reference\n---\n\n此参考指南文档化`SyntheticEvent`包裹器，构成React事件系统的一部分。请参阅[事件处理](/docs/handling-events.html)指南了解更多。\n\n## 概述\n你的事件处理器将会接收`SyntheticEvent`的实例，一个基于浏览器原生事件的跨浏览器实现。它拥有和浏览器原生事件一样的接口，包括`stopPropagation()`和`preventDefault()`，期望事件的行为跨浏览器是相同的。\n\n如果你发现由于某些原因需要使用一些底层的浏览器事件，只需用`nativeEvent`的属性来得到它。每个`SyntheicEvent`对象都有如下属性：\n\n```javascript\nboolean bubbles\nboolean cancelable\nDOMEventTarget currentTarget\nboolean defaultPrevented\nnumber eventPhase\nboolean isTrusted\nDOMEvent nativeEvent\nvoid preventDefault()\nboolean isDefaultPrevented()\nvoid stopPropagation()\nboolean isPropagationStopped()\nDOMEventTarget target\nnumber timeStamp\nstring type\n```\n\n> 注意\n> 从v0.14版本，从事件处理器返回`false`将不再阻止事件传播，代替，应该手动触发`e.stopPropagation()`和`e.preventDefault()`。\n\n### 事件池\n\n`SyntheticEvent`是被池化的。这意味着`SyntheticEvent`对象将会被重用，并且在调用事件回调之后所有属性将会被废弃。这是出于性能因素考虑的。\n因此，你访问事件不能以异步的方式。\n\n```javascript\nfunction onClick(event) {\n  console.log(event); // => nullified object.\n  console.log(event.type); // => \"click\"\n  const eventType = event.type; // => \"click\"\n\n  setTimeout(function() {\n    console.log(event.type); // => null\n    console.log(eventType); // => \"click\"\n  }, 0);\n\n  // Won't work. this.state.clickEvent will only contain null values.\n  this.setState({clickEvent: event});\n\n  // You can still export event properties.\n  this.setState({eventType: event.type});\n}\n```\n\n> 注意\n>\n> 如果你想以异步的方式访问事件的属性值，你必须在事件回调中调用`event.persist()`方法，这样会在池中删除合成事件，并且允许用户代码保留对事件的引用。\n\n## 支持的事件\n\nReact标准化了事件，使其跨不同的浏览器拥有一致的属性。\n\n下面的事件处理器由冒泡阶段的事件触发。欲注册一个捕获阶段的事件处理器，附加`Capture`到事件名后面。举个例子，你可以使用`onClickCapture`代替`onClick`在事件捕获阶段来处理点击事件。\n\n- [Clipboard Events](#clipboard-events)\n- [Composition Events](#composition-events)\n- [Keyboard Events](#keyboard-events)\n- [Focus Events](#focus-events)\n- [Form Events](#form-events)\n- [Mouse Events](#mouse-events)\n- [Pointer Events](#pointer-events)\n- [Selection Events](#selection-events)\n- [Touch Events](#touch-events)\n- [UI Events](#ui-events)\n- [Wheel Events](#wheel-events)\n- [Media Events](#media-events)\n- [Image Events](#image-events)\n- [Animation Events](#animation-events)\n- [Transition Events](#transition-events)\n- [Other Events](#other-events)\n\n***\n\n## 参考\n\n### Clipboard Events\n\n事件名:\n\n```\nonCopy onCut onPaste\n```\n\n属性:\n\n```javascript\nDOMDataTransfer clipboardData\n```\n\n* * *\n\n### Composition Events\n\n事件名:\n\n```\nonCompositionEnd onCompositionStart onCompositionUpdate\n```\n\n属性:\n\n```javascript\nstring data\n```\n\n* * *\n\n### Keyboard Events\n\n事件名:\n\n```\nonKeyDown onKeyPress onKeyUp\n```\n\n属性:\n\n```javascript\nboolean altKey\nnumber charCode\nboolean ctrlKey\nboolean getModifierState(key)\nstring key\nnumber keyCode\nstring locale\nnumber location\nboolean metaKey\nboolean repeat\nboolean shiftKey\nnumber which\n```\n\nThe `key` property can take any of the values documented in the [DOM Level 3 Events spec](https://www.w3.org/TR/uievents-key/#named-key-attribute-values).\n\n* * *\n\n### Focus Events\n\n事件名:\n\n```\nonFocus onBlur\n```\n\n这些焦点事件适用于React DOM中的所有元素，而不仅仅是表单元素。\n\n属性:\n\n```javascript\nDOMEventTarget relatedTarget\n```\n\n* * *\n\n### Form Events\n\n事件名:\n\n```\nonChange onInput onSubmit\n```\n\n关于onChange事件的更多细节，查阅[表单](/docs/forms.html)\n\n* * *\n\n### Mouse Events\n\n事件名:\n\n```\nonClick onContextMenu onDoubleClick onDrag onDragEnd onDragEnter onDragExit\nonDragLeave onDragOver onDragStart onDrop onMouseDown onMouseEnter onMouseLeave\nonMouseMove onMouseOut onMouseOver onMouseUp\n```\n\n `onMouseEnter` 和 `onMouseLeave` 事件从离开的元素传播到进入的元素，并不是普通的冒泡，也没有捕获阶段。\n\n属性:\n\n```javascript\nboolean altKey\nnumber button\nnumber buttons\nnumber clientX\nnumber clientY\nboolean ctrlKey\nboolean getModifierState(key)\nboolean metaKey\nnumber pageX\nnumber pageY\nDOMEventTarget relatedTarget\nnumber screenX\nnumber screenY\nboolean shiftKey\n```\n\n* * *\n\n### Pointer Events\n\nEvent names:\n\n```\nonPointerDown onPointerMove onPointerUp onPointerCancel onGotPointerCapture\nonLostPointerCapture onPointerEnter onPointerLeave onPointerOver onPointerOut\n```\n\nThe `onPointerEnter` and `onPointerLeave` events propagate from the element being left to the one being entered instead of ordinary bubbling and do not have a capture phase.\n\nProperties:\n\nAs defined in the [W3 spec](https://www.w3.org/TR/pointerevents/), pointer events extend [Mouse Events](#mouse-events) with the following properties:\n\n```javascript\nnumber pointerId\nnumber width\nnumber height\nnumber pressure\nnumber tangentialPressure\nnumber tiltX\nnumber tiltY\nnumber twist\nstring pointerType\nboolean isPrimary\n```\n\nA note on cross-browser support:\n\nPointer events are not yet supported in every browser (at the time of writing this article, supported browsers include: Chrome, Firefox, Edge, and Internet Explorer). React deliberately does not polyfill support for other browsers because a standard-conform polyfill would significantly increase the bundle size of `react-dom`.\n\nIf your application requires pointer events, we recommend adding a third party pointer event polyfill.\n\n* * *\n\n### Selection Events\n\n事件名:\n\n```\nonSelect\n```\n\n* * *\n\n### Touch Events\n\n事件名:\n\n```\nonTouchCancel onTouchEnd onTouchMove onTouchStart\n```\n\n属性:\n\n```javascript\nboolean altKey\nDOMTouchList changedTouches\nboolean ctrlKey\nboolean getModifierState(key)\nboolean metaKey\nboolean shiftKey\nDOMTouchList targetTouches\nDOMTouchList touches\n```\n\n* * *\n\n### UI Events\n\n事件名:\n\n```\nonScroll\n```\n\n属性:\n\n```javascript\nnumber detail\nDOMAbstractView view\n```\n\n* * *\n\n### Wheel Events\n\n事件名:\n\n```\nonWheel\n```\n\n属性:\n\n```javascript\nnumber deltaMode\nnumber deltaX\nnumber deltaY\nnumber deltaZ\n```\n\n* * *\n\n### Media Events\n\n事件名:\n\n```\nonAbort onCanPlay onCanPlayThrough onDurationChange onEmptied onEncrypted \nonEnded onError onLoadedData onLoadedMetadata onLoadStart onPause onPlay \nonPlaying onProgress onRateChange onSeeked onSeeking onStalled onSuspend \nonTimeUpdate onVolumeChange onWaiting\n```\n\n* * *\n\n### Image Events\n\n事件名:\n\n```\nonLoad onError\n```\n\n* * *\n\n### Animation Events\n\n事件名:\n\n```\nonAnimationStart onAnimationEnd onAnimationIteration\n```\n\n属性:\n\n```javascript\nstring animationName\nstring pseudoElement\nfloat elapsedTime\n```\n\n* * *\n\n### Transition Events\n\n事件名:\n\n```\nonTransitionEnd\n```\n\n属性:\n\n```javascript\nstring propertyName\nstring pseudoElement\nfloat elapsedTime\n```\n\n* * *\n\n### Other Events\n\n事件名:\n\n```\nonToggle\n```\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "c076c87e05698ff0344adffb196583cc",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "SyntheticEvent",
        "id": "events",
        "permalink": "docs/events.html",
        "layout": "docs",
        "category": "Reference",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/reference-events.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/reference-events.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/reference-events.md",
      "fields": {
        "slug": "docs/events.html",
        "path": "docs/reference-events.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/reference-javascript-environment-requirements.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/reference-javascript-environment-requirements.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/reference-javascript-environment-requirements.md absPath of file",
      "internal": {
        "content": "---\nid: javascript-environment-requirements\ntitle: JavaScript 环境要求\nlayout: docs\ncategory: Reference\npermalink: docs/javascript-environment-requirements.html\n---\n\nReact 16 依赖集合类型 [Map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map) 和 [Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set)。若你要支持老式的可能未提供原生支持的浏览器和设备（例如 IE < 11），考虑在你的应用库中包含一个全局的 polyfill，例如 [core-js](https://github.com/zloirock/core-js) 或 [babel-polyfill](https://babeljs.io/docs/usage/polyfill/)。\n\n一个使用 core-js 支持老版浏览器的 React 16 polyfill 环境大致如下：\n\n```js\nimport 'core-js/es6/map';\nimport 'core-js/es6/set';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(\n  <h1>Hello, world!</h1>,\n  document.getElementById('root')\n);\n```\n\nReact 也依赖于 `requestAnimationFrame` （甚至包括测试环境）。你可以使用[raf](https://www.npmjs.com/package/raf) 包去 shim `requestAnimationFrame`：\n\n```js\nimport 'raf/polyfill';\n```\n",
        "type": "MarkdownRemark",
        "contentDigest": "e12b1c0a5d98a0e9c6e024f87401d902",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "JavaScript 环境要求",
        "id": "javascript-environment-requirements",
        "layout": "docs",
        "category": "Reference",
        "permalink": "docs/javascript-environment-requirements.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/reference-javascript-environment-requirements.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/reference-javascript-environment-requirements.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/reference-javascript-environment-requirements.md",
      "fields": {
        "slug": "docs/javascript-environment-requirements.html",
        "path": "docs/reference-javascript-environment-requirements.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/reference-pure-render-mixin.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/reference-pure-render-mixin.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/reference-pure-render-mixin.md absPath of file",
      "internal": {
        "content": "---\nid: pure-render-mixin\ntitle: PureRenderMixin\nlayout: docs\ncategory: Reference\npermalink: docs/pure-render-mixin.html\n---\n\n> Note\n\n> The `PureRenderMixin` mixin predates `React.PureComponent`. This reference doc is provided for legacy purposes, and you should consider using [`React.PureComponent`](/docs/react-api.html#react.purecomponent) instead.\n\nIf your React component's render function renders the same result given the same props and state, you can use this mixin for a performance boost in some cases.\n\nExample:\n\n```js\nvar PureRenderMixin = require('react-addons-pure-render-mixin');\nvar createReactClass = require('create-react-class');\ncreateReactClass({\n  mixins: [PureRenderMixin],\n\n  render: function() {\n    return <div className={this.props.className}>foo</div>;\n  }\n});\n```\n\nExample using ES6 class syntax:\n\n```js\nimport PureRenderMixin from 'react-addons-pure-render-mixin';\nclass FooComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.shouldComponentUpdate = PureRenderMixin.shouldComponentUpdate.bind(this);\n  }\n\n  render() {\n    return <div className={this.props.className}>foo</div>;\n  }\n}\n```\n\nUnder the hood, the mixin implements [shouldComponentUpdate](/docs/component-specs.html#updating-shouldcomponentupdate), in which it compares the current props and state with the next ones and returns `false` if the equalities pass.\n\n> Note:\n>\n> This only shallowly compares the objects. If these contain complex data structures, it may produce false-negatives for deeper differences. Only mix into components which have simple props and state, or use `forceUpdate()` when you know deep data structures have changed. Or, consider using [immutable objects](https://facebook.github.io/immutable-js/) to facilitate fast comparisons of nested data.\n>\n> Furthermore, `shouldComponentUpdate` skips updates for the whole component subtree. Make sure all the children components are also \"pure\".\n",
        "type": "MarkdownRemark",
        "contentDigest": "95a5d04ca65f97abbcb7739ae9f9c1fa",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "PureRenderMixin",
        "id": "pure-render-mixin",
        "layout": "docs",
        "category": "Reference",
        "permalink": "docs/pure-render-mixin.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/reference-pure-render-mixin.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/reference-pure-render-mixin.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/reference-pure-render-mixin.md",
      "fields": {
        "slug": "docs/pure-render-mixin.html",
        "path": "docs/reference-pure-render-mixin.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/reference-react-dom-server.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/reference-react-dom-server.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/reference-react-dom-server.md absPath of file",
      "internal": {
        "content": "---\nid: react-dom-server\ntitle: ReactDOMServer\nlayout: docs\ncategory: Reference\npermalink: docs/react-dom-server.html\n---\n\n如果你通过 `<script>` 标签加载React，这些高阶API可用于 `ReactDOMServer` 全局。如果你使用ES6，你可以写成 `import ReactDOMServer from 'react-dom/server'`。如果你使用ES5，你可以写成 `var ReactDOMServer = require('react-dom/server')`。\n\n## 概览\n\n`ReactDOMServer` 类可以让你在服务端渲染你的组件。\n\n - [`renderToString()`](#rendertostring)\n - [`renderToStaticMarkup()`](#rendertostaticmarkup)\n\n* * *\n\n## Reference\n\n### `renderToString()`\n\n```javascript\nReactDOMServer.renderToString(element)\n```\n\n把一个React元素渲染为原始的HTML。这个方法最好只在服务端使用。React将会返回一段HTML字符串。你可以用这个方法在服务端生成HTML，并根据初始请求发送标记来加快页面的加载速度，同时让搜索引擎可以抓取你的页面来达到优化SEO的目的。\n\n如果在一个已经有了服务端渲染标记的节点上调用 [`ReactDOM.render()`](/docs/react-dom.html#render) ，React将保留该节点，仅作绑定事件处理，这会让你有一个非常高效的初次加载体验。\n\n* * *\n\n### `renderToStaticMarkup()`\n\n```javascript\nReactDOMServer.renderToStaticMarkup(element)\n```\n\n类似 [`renderToString`](#rendertostring)，但是不会创建额外的DOM属性，例如 `data-reactid` 这些仅在React内部使用的属性。如果你希望把React当作一个简单的静态页面生成器来使用，这很有用，因为去掉额外的属性可以节省很多字节。\n",
        "type": "MarkdownRemark",
        "contentDigest": "0d60a0351336a9d252a6a9ab862018cf",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "ReactDOMServer",
        "id": "react-dom-server",
        "layout": "docs",
        "category": "Reference",
        "permalink": "docs/react-dom-server.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/reference-react-dom-server.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/reference-react-dom-server.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/reference-react-dom-server.md",
      "fields": {
        "slug": "docs/react-dom-server.html",
        "path": "docs/reference-react-dom-server.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/reference-react-dom.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/reference-react-dom.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/reference-react-dom.md absPath of file",
      "internal": {
        "content": "---\nid: react-dom\ntitle: ReactDOM\nlayout: docs\ncategory: Reference\npermalink: docs/react-dom.html\n---\n\n如果你用一个`<script>`标签导入React, 所有的顶层API都能在`ReactDOM`的全局范围内被调用。 如果你用的是npm和ES6，你可以用`import ReactDOM from 'react-dom'`。如果是npm和ES5，你可以用`var ReactDOM = require('react-dom')`。\n\n## 总览\n\n`react-dom`这个软件包提供了针对DOM的方法，可以在你应用的顶层调用，也可以在有需要的情况下用作到React模型外面的逃生出口。你的大部分组件都不应该需要使用这个包。\n\n- [`render()`](#render)\n- [`hydrate()`](#hydrate)\n- [`unmountComponentAtNode()`](#unmountcomponentatnode)\n- [`findDOMNode()`](#finddomnode)\n- [`createPortal()`](#createportal)\n\n### 浏览器支持\n\nReact支持所有常用的浏览器，包括IE9及以上的版本，although [some polyfills are required](/docs/javascript-environment-requirements.html) for older browsers such as IE 9 and IE 10.\n\n> 注意\n>\n> 我们不支持那些不兼容ES5方法的老版浏览器，但如果你的应用包含了polyfill，例如[es5-shim 和 es5-sham](https://github.com/es-shims/es5-shim)，你可能会发现你的应用仍然可以在这些浏览器中正常运行。如果你选择这么干，你就只能孤军奋战了。\n\n* * *\n\n## 参考\n\n### `render()`\n\n```javascript\nReactDOM.render(element, container[, callback])\n```\n\n渲染一个React元素成为DOM，放到所提供的`container`里。并且返回这个组件的一个 [引用](/docs/more-about-refs.html) (或者对于[无状态组件](/docs/components-and-props.html#functional-and-class-components)返回`null`)。\n\n如果这个React元素在前一次已经被渲染成`container`，这将会为其执行一次更新，并且只会按需改变DOM，以反射最新的React元素。\n\n如果可选的回调函数被提供，回调将在组件被渲染或更新之后执行。\n\n> 注意:\n>\n> `ReactDOM.render()` 控制你传进容器节点里的内容。当第一次被调用时，内部存在的任何DOM元素都会被替换掉。之后的调用会使用React的DOM差分算法进行高效的更新。\n>\n> `ReactDOM.render()`不会修改容器节点（只修改容器的子代们）。你可以在不覆盖已有子节点的情况下添加一个组件到已有的DOM节点中去。\n>\n> `ReactDOM.render()` 目前会返回一个引用， 指向 `ReactComponent`的根实例。但是这个返回值是历史遗留的，应该避免使用。因为未来版本的React可能会在某些情况下进行异步渲染。如果你真的需要一个指向 `ReactComponent` 的根实例的引用，推荐的方法是添加一个 [callback ref](/docs/more-about-refs.html#the-ref-callback-attribute)到根元素上。\n>\n> Using `ReactDOM.render()` to hydrate a server-rendered container is deprecated and will be removed in React 17. Use [`hydrate()`](#hydrate) instead.\n\n* * *\n\n### `hydrate()`\n\n```javascript\nReactDOM.hydrate(element, container[, callback])\n```\n\nSame as [`render()`](#render), but is used to hydrate a container whose HTML contents were rendered by [`ReactDOMServer`](/docs/react-dom-server.html). React will attempt to attach event listeners to the existing markup.\n\nReact expects that the rendered content is identical between the server and the client. It can patch up differences in text content, but you should treat mismatches as bugs and fix them. In development mode, React warns about mismatches during hydration. There are no guarantees that attribute differences will be patched up in case of mismatches. This is important for performance reasons because in most apps, mismatches are rare, and so validating all markup would be prohibitively expensive.\n\nIf a single element's attribute or text content is unavoidably different between the server and the client (for example, a timestamp), you may silence the warning by adding `suppressHydrationWarning={true}` to the element. It only works one level deep, and is intended to be an escape hatch. Don't overuse it. Unless it's text content, React still won't attempt to patch it up, so it may remain inconsistent until future updates.\n\nIf you intentionally need to render something different on the server and the client, you can do a two-pass rendering. Components that render something different on the client can read a state variable like `this.state.isClient`, which you can set to `true` in `componentDidMount()`. This way the initial render pass will render the same content as the server, avoiding mismatches, but an additional pass will happen synchronously right after hydration. Note that this approach will make your components slower because they have to render twice, so use it with caution.\n\nRemember to be mindful of user experience on slow connections. The JavaScript code may load significantly later than the initial HTML render, so if you render something different in the client-only pass, the transition can be jarring. However, if executed well, it may be beneficial to render a \"shell\" of the application on the server, and only show some of the extra widgets on the client. To learn how to do this without getting the markup mismatch issues, refer to the explanation in the previous paragraph.\n\n* * *\n\n### `unmountComponentAtNode()`\n\n```javascript\nReactDOM.unmountComponentAtNode(container)\n```\n\n从DOM元素中移除已挂载的React组件，清除它的事件处理器和state。如果容器内没有挂载任何组件，这个函数什么都不会干。\n有组件被卸载的时候返回`true`，没有组件可供卸载时返回 `false`。\n\n* * *\n\n### `findDOMNode()`\n\n```javascript\nReactDOM.findDOMNode(component)\n```\n如果这个组件已经被挂载到DOM中，函数会返回对应的浏览器中生成的DOM元素 。\n当你需要从DOM中读取值时，比如表单的值，或者计算DOM元素的尺寸，这个函数会非常有用。\n **大多数情况下，你可以添加一个指向DOM节点的引用，从而完全避免使用`findDOMNode` 这个函数.** 当 `render` 返回 `null` 或者 `false` 时, `findDOMNode` 也返回 `null`.\n\n> 注意:\n>\n> `findDOMNode` 是用于操作底层DOM节点的备用方案。在大部分情况下都不提倡使用这个方案，因为它破坏了组件的抽象化。\n>\n> `findDOMNode` 只对挂载过的组件有效（也就是已经添加到DOM中去的组件）。如果你试图对一个未挂载的组件调用这个函数\n（比如在一个还未创建的组件的 `render()` 函数中中调用 `findDOMNode()`），程序会抛出一个异常。\n>\n> `findDOMNode` 不能用于函数式的组件中。\n\n* * *\n\n### `createPortal()`\n\n```javascript\nReactDOM.createPortal(child, container)\n```\n\nCreates a portal. Portals provide a way to [render children into a DOM node that exists outside the hierarchy of the DOM component](/docs/portals.html).",
        "type": "MarkdownRemark",
        "contentDigest": "c3bce8ccfae7ae3f28c384ce6053db75",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "ReactDOM",
        "id": "react-dom",
        "layout": "docs",
        "category": "Reference",
        "permalink": "docs/react-dom.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/reference-react-dom.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/reference-react-dom.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/reference-react-dom.md",
      "fields": {
        "slug": "docs/react-dom.html",
        "path": "docs/reference-react-dom.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/reference-test-renderer.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/reference-test-renderer.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/reference-test-renderer.md absPath of file",
      "internal": {
        "content": "---\nid: test-renderer\ntitle: Test Renderer\npermalink: docs/test-renderer.html\nlayout: docs\ncategory: Reference\n---\n\n**Importing**\n\n```javascript\nimport TestRenderer from 'react-test-renderer'; // ES6\nconst TestRenderer = require('react-test-renderer'); // ES5 with npm\n```\n\n## 概览\n\n该包提供了一个React的渲染器，可以用来将 React 组件渲染成纯 JavaScript 对象，不需要依赖于 DOM 和原生移动环境。\n\n本质上，该包可以在无需使用浏览器或[jsdom](https://github.com/tmpvar/jsdom)的情况下，轻松地抓取由 React DOM 或 React Native渲染出的平台视图层次结构（类似于DOM树）。\n\n示例：\n\n```javascript\nimport TestRenderer from 'react-test-renderer';\n\nfunction Link(props) {\n  return <a href={props.page}>{props.children}</a>;\n}\n\nconst testRenderer = TestRenderer.create(\n  <Link page=\"https://www.facebook.com/\">Facebook</Link>\n);\n\nconsole.log(testRenderer.toJSON());\n// { type: 'a',\n//   props: { href: 'https://www.facebook.com/' },\n//   children: [ 'Facebook' ] }\n```\n\n您可以使用 Jest 的快照测试来自动保存一个该 JSON 树文件的副本，并且在您的测试中检查它是否被更改。[了解更多](http://facebook.github.io/jest/blog/2016/07/27/jest-14.html).\n\n您同样可以通过遍历输出来查找特殊节点，并对相应的节点进行断言。\n\n```javascript\nimport TestRenderer from 'react-test-renderer';\n\nfunction MyComponent() {\n  return (\n    <div>\n      <SubComponent foo=\"bar\" />\n      <p className=\"my\">Hello</p>\n    </div>\n  )\n}\n\nfunction SubComponent() {\n  return (\n    <p className=\"sub\">Sub</p>\n  );\n}\n\nconst testRenderer = TestRenderer.create(<MyComponent />);\nconst testInstance = testRenderer.root;\n\nexpect(testInstance.findByType(SubComponent).props.foo).toBe('bar');\nexpect(testInstance.findByProps({className: \"sub\"}).children).toEqual(['Sub']);\n```\n\n### TestRenderer\n\n* [`TestRenderer.create()`](#TestRenderer.create)\n\n### TestRenderer instance\n\n* [`testRenderer.toJSON()`](#testRenderer.toJSON)\n* [`testRenderer.toTree()`](#testRenderer.toTree)\n* [`testRenderer.update()`](#testRenderer.update)\n* [`testRenderer.unmount()`](#testRenderer.unmount)\n* [`testRenderer.getInstance()`](#testRenderer.getInstance)\n* [`testRenderer.root`](#testRenderer.root)\n\n### TestInstance\n\n* [`testInstance.find()`](#testInstance.find)\n* [`testInstance.findByType()`](#testInstance.findByType)\n* [`testInstance.findByProps()`](#testInstance.findByProps)\n* [`testInstance.findAll()`](#testInstance.findAll)\n* [`testInstance.findAllByType()`](#testInstance.findAllByType)\n* [`testInstance.findAllByProps()`](#testInstance.findAllByProps)\n* [`testInstance.instance`](#testInstance.instance)\n* [`testInstance.type`](#testInstance.type)\n* [`testInstance.props`](#testInstance.props)\n* [`testInstance.parent`](#testInstance.parent)\n* [`testInstance.children`](#testInstance.children)\n\n## 参考\n\n### `TestRenderer.create()`\n\n```javascript\nTestRenderer.create(element, options);\n```\n\n通过传来的 React 元素创建一个 `TestRenderer` 的实例。它并不使用真实的 DOM，但是它依然将组件树完整地渲染到内存，所以您可以对它进行断言。返回的实例拥有以下的方法和属性。\n\n### `testRenderer.toJSON()`\n\n```javascript\ntestRenderer.toJSON()\n```\n\n返回一个表示渲染后的 树 的对象。该树仅包含特定平台的节点，像`<div>` 或 `<View>`和他们的属性（props），但是并不包含任何用户编写的组件。这对于[快照测试](http://facebook.github.io/jest/docs/en/snapshot-testing.html#snapshot-testing-with-jest)非常方便。\n\n### `testRenderer.toTree()`\n\n```javascript\ntestRenderer.toTree()\n```\n\n返回一个表示渲染后的 树 的对象。和 `toJSON()` 不同，它表示的内容比 `toJSON()` 提供的内容要更加详细，并且包含用户编写的组件。除非您正在测试渲染器（test rendererer）之上编写您自己的断言库，否则您可能并不需要这个方法。\n\n### `testRenderer.update()`\n\n```javascript\ntestRenderer.update(element)\n```\n\n使用新的根元素重新渲染内存中的树。它模拟根元素的一次React更新。如果新的元素和之前的元素有相同的 type 和 key，该树将会被更新；否则，它将重挂载一个新树。\n\n### `testRenderer.unmount()`\n\n```javascript\ntestRenderer.unmount()\n```\n\n卸载内存中的树，触发相应的生命周期事件。\n\n### `testRenderer.getInstance()`\n\n```javascript\ntestRenderer.getInstance()\n```\n\n如果可用的话，返回与根元素相对应的实例。如果根元素是函数组件（functional component），该方法无效，因为函数组件没有实例。\n\n### `testRenderer.root`\n\n```javascript\ntestRenderer.root\n```\n\n返回根元素“测试实例（test instance）”对象，对于断言树中的特殊节点十分有用。您可以利用它来查找其他更深层的“测试实例（test instance）”。\n\n### `testInstance.find()`\n\n```javascript\ntestInstance.find(test)\n```\n\n找到一个 test(testInstance) 返回 true 的后代 测试实例。如果 test(testInstance) 没有正好只对一个 测试实例 返回 true，将会报错。\n\n### `testInstance.findByType()`\n\n```javascript\ntestInstance.findByType(type)\n```\n\n找到一个匹配指定 类型（type）的 后代 测试实例（testInstances），如果不是正好只有一个测试实例匹配指定的 类型（type），将会报错。\n\n### `testInstance.findByProps()`\n\n```javascript\ntestInstance.findByProps(props)\n```\n\n找到匹配指定 属性（props）的 后代 测试实例（testInstances），如果不是正好只有一个测试实例匹配指定的 类型（type），将会报错。\n\n### `testInstance.findAll()`\n\n```javascript\ntestInstance.findAll(test)\n```\n\n找到所有 `test(testInstance)` 等于 `true` 的后代 测试实例（testInstances）。\n\n### `testInstance.findAllByType()`\n\n```javascript\ntestInstance.findAllByType(type)\n```\n\n找到所有匹配指定 类型（type）的 后代 测试实例（testInstances）。\n\n### `testInstance.findAllByProps()`\n\n```javascript\ntestInstance.findAllByProps(props)\n```\n\n找到所有匹配指定 属性（props）的 后代 测试实例（testInstances）。\n\n### `testInstance.instance`\n\n```javascript\ntestInstance.instance\n```\n\n该测试实例（testInstances）相对应的组件的实例。它只能用于 类组件（class components），因为函数组件（functional components）没有实例。它匹配给定的组件内部的 `this` 的值。\n\n### `testInstance.type`\n\n```javascript\ntestInstance.type\n```\n\n该测试实例（testInstance）相对应的组件的类型（type），例如，一个 `<Button />` 组件有一个 `Button` 类型（type）。\n\n### `testInstance.props`\n\n```javascript\ntestInstance.props\n```\n\n该测试实例（testInstance）相对应的组件的属性（props），例如，一个 `<Button size=\"small\" />` 组件的属性（props）为 `{size: 'small'}`。\n\n### `testInstance.parent`\n\n```javascript\ntestInstance.parent\n```\n\n该测试实例的父测试实例。\n\n### `testInstance.children`\n\n```javascript\ntestInstance.children\n```\n\n该测试实例的子测试实例。\n\n## Ideas\n\n您可以将 `createNodeMock` 函数作为选项（option）传递给 `TestRenderer.create`，可以自行模拟refs。`createNodeMock` 接受当前元素作为参数，并且返回一个模拟的 ref 对象。当您要测试一个依赖于 refs 的组件时，它十分有用。\n\n```javascript\nimport TestRenderer from 'react-test-renderer';\n\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.input = null;\n  }\n  componentDidMount() {\n    this.input.focus();\n  }\n  render() {\n    return <input type=\"text\" ref={el => this.input = el} />\n  }\n}\n\nlet focused = false;\nTestRenderer.create(\n  <MyComponent />,\n  {\n    createNodeMock: (element) => {\n      if (element.type === 'input') {\n        // mock a focus function\n        return {\n          focus: () => {\n            focused = true;\n          }\n        };\n      }\n      return null;\n    }\n  }\n);\nexpect(focused).toBe(true);\n```\n",
        "type": "MarkdownRemark",
        "contentDigest": "7f9d5f2474b5e2982e0813b03a16bf77",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Test Renderer",
        "id": "test-renderer",
        "permalink": "docs/test-renderer.html",
        "layout": "docs",
        "category": "Reference",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/reference-test-renderer.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/reference-test-renderer.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/reference-test-renderer.md",
      "fields": {
        "slug": "docs/test-renderer.html",
        "path": "docs/reference-test-renderer.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/rendering-elements.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/rendering-elements.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/rendering-elements.md absPath of file",
      "internal": {
        "content": "---\nid: rendering-elements\ntitle: 元素渲染\npermalink: docs/rendering-elements.html\nredirect_from: \"docs/displaying-data.html\"\nprev: introducing-jsx.html\nnext: components-and-props.html\n---\n\n元素是构成 React 应用的最小单位。\n\n元素用来描述你在屏幕上看到的内容：\n\n```js\nconst element = <h1>Hello, world</h1>;\n```\n\n与浏览器的 DOM 元素不同，React 当中的元素事实上是普通的对象，React DOM 可以确保 浏览器 DOM 的数据内容与 React 元素保持一致。\n\n>**注意:**\n>\n>初学者很可能把元素的定义和一个内涵更广的定义“组件”给搞混了。我们将会在[下一个章节](/docs/components-and-props.html)当中对组件进行详细的介绍。元素事实上只是构成组件的一个部分，所以我们还是推荐你先读完这一章节的内容再往后看。\n\n## 将元素渲染到 DOM 中\n\n首先我们在一个 HTML 页面中添加一个 `id=\"root\"` 的 `<div>`:\n\n```html\n<div id=\"root\"></div>\n```\n\n在此 div 中的所有内容都将由 React DOM 来管理，所以我们将其称之为 “根” DOM 节点。\n\n我们用React 开发应用时一般只会定义一个根节点。但如果你是在一个已有的项目当中引入 React 的话，你可能会需要在不同的部分单独定义 React 根节点。\n\n要将React元素渲染到根DOM节点中，我们通过把它们都传递给 `ReactDOM.render()` 的方法来将其渲染到页面上：\n\n`embed:rendering-elements/render-an-element.js`\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/rrpgNB?editors=1010)\n\n页面上会展示出 \"Hello World\" 字样。\n\n## 更新元素渲染\n\nReact 元素都是[immutable 不可变](https://en.wikipedia.org/wiki/Immutable_object)的。当元素被创建之后，你是无法改变其内容或属性的。一个元素就好像是动画里的一帧，它代表应用界面在某一时间点的样子。\n\n根据我们现阶段了解的有关 React 知识，更新界面的唯一办法是创建一个新的元素，然后将它传入 `ReactDOM.render()` 方法：\n\n来看一下这个计时器的例子:\n\n`embed:rendering-elements/update-rendered-element.js`\n\n[在 CodePen 上试试。](http://codepen.io/gaearon/pen/gwoJZk?editors=0010)\n\n这个示例通过 [`setInterval()`](https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval) 方法，每秒钟调用一次 `ReactDOM.render()`.\n\n>**注意:**\n>\n>在实际生产开发中，大多数React应用只会调用一次 `ReactDOM.render()` 。在下一个章节中我们将会详细介绍 [有状态组件](/docs/state-and-lifecycle.html) 实现 DOM 更新方式。\n>\n>前后的内容是相辅相成的，所以你最好还是先读完本章节再往下看。\n\n## React 只会更新必要的部分\n\nReact DOM 首先会比较元素内容先后的不同，而在渲染过程中只会更新改变了的部分。\n\n你可以使用浏览器的开发者工具来检查一下[之前的例子](http://codepen.io/gaearon/pen/gwoJZk?editors=0010)。\n\n![DOM inspector showing granular updates](../images/docs/granular-dom-updates.gif)\n\n即便我们每秒都创建了一个描述整个UI树的新元素，React DOM 也只会更新渲染文本节点中发生变化的内容。\n\n根据我们以往的经验，将界面视为一个个特定时刻的固定内容（就像一帧一帧的动画），而不是随时处于变化之中（而不是处于变化中的一整段动画），将会有利于我们理清开发思路，减少各种bug。\n",
        "type": "MarkdownRemark",
        "contentDigest": "a1c3e12a608cc3abe532f28daf5679b5",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "元素渲染",
        "id": "rendering-elements",
        "permalink": "docs/rendering-elements.html",
        "redirect_from": "docs/displaying-data.html",
        "prev": "introducing-jsx.html",
        "next": "components-and-props.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/rendering-elements.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/rendering-elements.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/rendering-elements.md",
      "fields": {
        "slug": "docs/rendering-elements.html",
        "path": "docs/rendering-elements.md",
        "redirect": "\"docs/displaying-data.html\""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/strict-mode.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/strict-mode.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/strict-mode.md absPath of file",
      "internal": {
        "content": "---\nid: strict-mode\ntitle: Strict Mode\npermalink: docs/strict-mode.html\n---\n\n## 严格模式\n`StrictMode`是一个用以标记出应用中潜在问题的工具。就像`Fragment`，`StrictMode`不会渲染任何真实的UI。它为其后代元素触发额外的检查和警告。\n\n> 注意:\n> 严格模式检查只在开发模式下运行，不会与生产模式冲突。\n\n你可以在应用的任何地方启用严格模式。例如：\n\n```js\nimport React from 'react';\n\nfunction ExampleApplication() {\n  return (\n    <div>\n      <Header />\n      <React.StrictMode>\n        <div>\n          <ComponentOne />\n          <ComponentTwo />\n        </div>\n      </React.StrictMode>\n      <Footer />\n    </div>\n  );\n}\n```\n\n在上面的例子中，不会对组件`Header`、`Footer`进行strict mode检查。然而`ComponentOne`、`ComponentTwo`以及它们所有的后代将被检查。\n\n`StrictMode`目前有助于：\n- [识别具有不安全生命周期的组件](#识别具有不安全生命周期的组件)\n- [有关旧式字符串ref用法的警告](#有关旧式字符串ref用法的警告)\n- [检测意外的副作用](#检测意外的副作用)\n\n### 识别具有不安全生命周期的组件\n如同在[博客](https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html)中阐明的，在异步React应用中使用某些老式的生命周期方法不安全。但是, 如果应用程序使用第三方库, 则很难确保不使用这些生命周期方法。幸运的是, 严格的模式可以帮助解决这个问题!\n\n当启用严格模式, React将编译一个所有使用不安全生命周期组件的列表，并打印一条关于这些组件的警告信息，就像：\n\n![](https://reactjs.org/static/strict-mode-unsafe-lifecycles-warning-e4fdbff774b356881123e69ad88eda88-2535d.png)\n\n### 有关旧式字符串ref用法的警告\n以前，React提供了2种方法管理ref：旧式的字符串ref API和回调API。虽然字符串ref API更加方便，但它有些许[缺点](https://github.com/facebook/react/issues/1373)，因此我们的正式建议是[改用回调方式](https://doc.react-china.org/docs/refs-and-the-dom.html#%E6%97%A7%E7%89%88-api%EF%BC%9Astring-%E7%B1%BB%E5%9E%8B%E7%9A%84-refs)\n\nReact 16.3新增了第三种方式, 它提供了字符串 ref 的方便性, 而没有任何缺点:\n```JS\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.inputRef = React.createRef();\n  }\n\n  render() {\n    return <input type=\"text\" ref={this.inputRef} />;\n  }\n\n  componentDidMount() {\n    this.inputRef.current.focus();\n  }\n}\n```\n由于新增的对象式refs很大程度上作为字符串ref的替换，因此strict mode现在对字符串ref的用法发出警告。\n\n> 注意：\n> 除了新的createRef API，回调ref将被继续支持。您不需要在组件中替换回调ref。它们稍微灵活一些, 因此它们将保持为高级功能。\n\n[学习更多有关createRef API内容](https://doc.react-china.org/docs/refs-and-the-dom.html)\n\n### 检测意外的副作用\n理论上，React在两个阶段起作用:\n- **渲染**阶段决定了需要对 DOM 进行哪些更改。在此阶段, React调用`render`(方法), 然后将结果与上一次渲染进行比较。\n- **提交**阶段是React执行任何更改的阶段。(在React DOM中, 指React插入、更新和删除 dom 节点）。在此阶段React也调用生命周期, 如 `componentDidMount` 和 `componentDidUpdate` 。\n\n提交阶段通常很快，但是渲染可能很慢。因此, 即将出现的异步模式 (默认情况下尚未启用) 将呈现工作分解为片断, 暂停和恢复工作以避免阻止浏览器。这意味着在提交之前, 反应可能不止一次地调用渲染阶段生命周期, 或者它可以在不提交的情况下调用它们 (因为错误或更高的优先级中断)。\n\n渲染阶段的生命周期包括以下class component方法：\n- `constructor`\n- `componentWillMount`\n- `componentWillReceiveProps`\n- `componentWillUpdate`\n- `getDerivedStateFromProps`\n- `shouldComponentUpdate`\n-  `render`\n-  `setState` 更新函数 (第一个形参）\n\n因为以上方法可能不止一次被调用，所以它们中不包含副作用尤为重要。忽略此规则可能会导致各种问题, 包括内存泄漏和无效的应用程序状态。不幸的是, 很难发现这些问题, 因为它们通常都是[不确定的](https://en.wikipedia.org/wiki/Deterministic_algorithm)。\n\n严格模式不能自动检测到你的副作用, 但它可以帮助你发现它们, 使其更具确定性。这是通过有意地双调用以下方法来完成的:\n\n- Class component `constructor`\n- `render`\n- `setState` 更新函数 (第一个形参）\n-  static `getDerivedStateFromProps`\n\n> 注意：\n> 只在开发模式生效。生产模式下生命周期不会被双调用。\n\n举个例子，考虑以下代码：\n\n```JS\nclass TopLevelRoute extends React.Component {\n  constructor(props) {\n    super(props);\n\n    SharedApplicationState.recordEvent('ExampleComponent');\n  }\n}\n```\n乍一看, 这段代码似乎没有问题。但是如果 `SharedApplicationState.recordEvent` 不是[幂等](https://en.wikipedia.org/wiki/Idempotence#Computer_science_meaning), 那么多次实例化此组件可能会导致无效的应用程序状态。这种微妙的 bug 可能不会在开发过程中显现出来, 或者它可能会不一致, 因此被忽略。\n\n通过有意的双调用方法 (如组件构造函数), 严格模式使得这样的行为更容易被发现。",
        "type": "MarkdownRemark",
        "contentDigest": "e6a0e9ec067e504d9502bd17d6576bd5",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Strict Mode",
        "id": "strict-mode",
        "permalink": "docs/strict-mode.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/strict-mode.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/strict-mode.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/strict-mode.md",
      "fields": {
        "slug": "docs/strict-mode.html",
        "path": "docs/strict-mode.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/typechecking-with-proptypes.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/typechecking-with-proptypes.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/typechecking-with-proptypes.md absPath of file",
      "internal": {
        "content": "---\nid: typechecking-with-proptypes\ntitle: 使用 PropTypes 进行类型检查\npermalink: docs/typechecking-with-proptypes.html\nredirect_from:\n  - \"docs/react-api.html#typechecking-with-proptypes\"\n---\n\n> 注意:\n> `React.PropTypes` 自 React v15.5 起已弃用。请使用 [`prop-types` ](https://www.npmjs.com/package/prop-types) 库代替。\n\n随着应用日渐庞大，你可以通过类型检查捕获大量错误。 对于某些应用来说，你还可以使用 [Flow](https://flowtype.org/) 或 [TypeScript](https://www.typescriptlang.org/) 这样的 JavaScript 扩展来对整个应用程序进行类型检查。然而即使你不用它们，React 也有一些内置的类型检查功能。要检查组件的属性，你需要配置特殊的 `propTypes` 属性：\n\n```javascript\nimport PropTypes from 'prop-types';\n\nclass Greeting extends React.Component {\n  render() {\n    return (\n      <h1>Hello, {this.props.name}</h1>\n    );\n  }\n}\n\nGreeting.propTypes = {\n  name: PropTypes.string\n};\n```\n\n`PropTypes` 包含一整套验证器，可用于确保你接收的数据是有效的。在这个示例中，我们使用了 `PropTypes.string`。当你给属性传递了无效值时，JavsScript 控制台将会打印警告。出于性能原因，`propTypes` 只在开发模式下进行检查。\n\n### PropTypes\n\n下面是使用不同验证器的例子：\n\n```javascript\nimport PropTypes from 'prop-types';\n\nMyComponent.propTypes = {\n  // 你可以将属性声明为以下 JS 原生类型\n  optionalArray: PropTypes.array,\n  optionalBool: PropTypes.bool,\n  optionalFunc: PropTypes.func,\n  optionalNumber: PropTypes.number,\n  optionalObject: PropTypes.object,\n  optionalString: PropTypes.string,\n  optionalSymbol: PropTypes.symbol,\n\n  // 任何可被渲染的元素（包括数字、字符串、子元素或数组）。\n  optionalNode: PropTypes.node,\n\n  // 一个 React 元素\n  optionalElement: PropTypes.element,\n\n  // 你也可以声明属性为某个类的实例，这里使用 JS 的\n  // instanceof 操作符实现。\n  optionalMessage: PropTypes.instanceOf(Message),\n\n  // 你也可以限制你的属性值是某个特定值之一\n  optionalEnum: PropTypes.oneOf(['News', 'Photos']),\n\n  // 限制它为列举类型之一的对象\n  optionalUnion: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.instanceOf(Message)\n  ]),\n\n  // 一个指定元素类型的数组\n  optionalArrayOf: PropTypes.arrayOf(PropTypes.number),\n\n  // 一个指定类型的对象\n  optionalObjectOf: PropTypes.objectOf(PropTypes.number),\n\n  // 一个指定属性及其类型的对象\n  optionalObjectWithShape: PropTypes.shape({\n    color: PropTypes.string,\n    fontSize: PropTypes.number\n  }),\n\n  // 你也可以在任何 PropTypes 属性后面加上 `isRequired` \n  // 后缀，这样如果这个属性父组件没有提供时，会打印警告信息\n  requiredFunc: PropTypes.func.isRequired,\n\n  // 任意类型的数据\n  requiredAny: PropTypes.any.isRequired,\n\n  // 你也可以指定一个自定义验证器。它应该在验证失败时返回\n  // 一个 Error 对象而不是 `console.warn` 或抛出异常。\n  // 不过在 `oneOfType` 中它不起作用。\n  customProp: function(props, propName, componentName) {\n    if (!/matchme/.test(props[propName])) {\n      return new Error(\n        'Invalid prop `' + propName + '` supplied to' +\n        ' `' + componentName + '`. Validation failed.'\n      );\n    }\n  },\n\n  // 不过你可以提供一个自定义的 `arrayOf` 或 `objectOf` \n  // 验证器，它应该在验证失败时返回一个 Error 对象。 它被用\n  // 于验证数组或对象的每个值。验证器前两个参数的第一个是数组\n  // 或对象本身，第二个是它们对应的键。\n  customArrayProp: PropTypes.arrayOf(function(propValue, key, componentName, location, propFullName) {\n    if (!/matchme/.test(propValue[key])) {\n      return new Error(\n        'Invalid prop `' + propFullName + '` supplied to' +\n        ' `' + componentName + '`. Validation failed.'\n      );\n    }\n  })\n};\n```\n\n### 限制单个子代\n\n使用 `PropTypes.element` 你可以指定只传递一个子代\n\n```javascript\nimport PropTypes from 'prop-types';\n\nclass MyComponent extends React.Component {\n  render() {\n    // This must be exactly one element or it will warn.\n    const children = this.props.children;\n    return (\n      <div>\n        {children}\n      </div>\n    );\n  }\n}\n\nMyComponent.propTypes = {\n  children: PropTypes.element.isRequired\n};\n```\n\n### 属性默认值\n\n你可以通过配置 `defaultProps` 为 `props`定义默认值： \n\n```javascript\nclass Greeting extends React.Component {\n  render() {\n    return (\n      <h1>Hello, {this.props.name}</h1>\n    );\n  }\n}\n\n// 为属性指定默认值:\nGreeting.defaultProps = {\n  name: 'Stranger'\n};\n\n// 渲染 \"Hello, Stranger\":\nReactDOM.render(\n  <Greeting />,\n  document.getElementById('example')\n);\n```\n\n如果你在使用像 [transform-class-properties](https://babeljs.io/docs/plugins/transform-class-properties/) 的 Babel 转换器，你也可以在React 组件类中声明 `defaultProps` 作为静态属性。这个语法还没有最终通过，在浏览器中需要一步编译工作。更多信息，查看[类字段提议](https://github.com/tc39/proposal-class-fields)。\n\n```javascript\nclass Greeting extends React.Component {\n  static defaultProps = {\n    name: 'stranger'\n  }\n\n  render() {\n    return (\n      <div>Hello, {this.props.name}</div>\n    )\n  }\n}\n```\n\n`defaultProps` 用来确保 `this.props.name` 在父组件没有特别指定的情况下，有一个初始值。类型检查发生在 `defaultProps` 赋值之后，所以类型检查也会应用在 `defaultProps` 上面。\n",
        "type": "MarkdownRemark",
        "contentDigest": "f8068a91d1a756f3e88fb3e1e6c8c261",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "使用 PropTypes 进行类型检查",
        "id": "typechecking-with-proptypes",
        "permalink": "docs/typechecking-with-proptypes.html",
        "redirect_from": [
          "docs/react-api.html#typechecking-with-proptypes"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/typechecking-with-proptypes.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/typechecking-with-proptypes.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/typechecking-with-proptypes.md",
      "fields": {
        "slug": "docs/typechecking-with-proptypes.html",
        "path": "docs/typechecking-with-proptypes.md",
        "redirect": "[\"docs/react-api.html#typechecking-with-proptypes\"]"
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/uncontrolled-components.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/uncontrolled-components.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/uncontrolled-components.md absPath of file",
      "internal": {
        "content": "---\nid: uncontrolled-components\ntitle: 非受控组件\npermalink: docs/uncontrolled-components.html\n---\n\n在大多数情况下，我们推荐使用 [受控组件](/docs/forms.html) 来实现表单。 在受控组件中，表单数据由 React 组件处理。如果让表单数据由 DOM 处理时，替代方案为使用非受控组件。\n\n要编写一个非受控组件，而非为每个状态更新编写事件处理程序，你可以 [使用 ref](/docs/refs-and-the-dom.html) 从 DOM 获取表单值。\n\n例如，下面的代码在非受控组件中接收单个属性。\n\n```javascript{8,17}\nclass NameForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    alert('A name was submitted: ' + this.input.value);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name:\n          <input type=\"text\" ref={(input) => this.input = input} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n```\n\n[在 CodePen 上尝试。](https://codepen.io/gaearon/pen/WooRWa?editors=0010)\n\n由于非受控组件将真实数据保存在 DOM 中，因此在使用非受控组件时，更容易同时集成 React 和非 React 代码。如果你想快速而随性，这样做可以减小代码量。否则，你应该使用受控组件。\n\n如果依然不清楚在哪种特定情况下选择哪种类型的组件，那么你应该阅读 [这篇关于受控和非受控的表单输入](http://goshakkk.name/controlled-vs-uncontrolled-inputs-react/) 了解更多。\n\n### 默认值\n\n在 React 的生命周期中，表单元素上的 `value` 属性将会覆盖 DOM 中的值。使用非受控组件时，通常你希望 React 可以为其指定初始值，但不再控制后续更新。要解决这个问题，你可以指定一个 `defaultValue` 属性而不是 `value`。\n\n```javascript{7}\nrender() {\n  return (\n    <form onSubmit={this.handleSubmit}>\n      <label>\n        Name:\n        <input\n          defaultValue=\"Bob\"\n          type=\"text\"\n          ref={(input) => this.input = input} />\n      </label>\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n  );\n}\n```\n\n同样，`<input type=\"checkbox\">` 和 `<input type=\"radio\">` 支持 `defaultChecked`，`<select>` 和 `<textarea>` 支持 `defaultValue`.\n\n### 文件输入标签\n\n在HTML中，`<input type=\"file\">` 可以让用户从其设备存储中选择一个或多个文件上传到服务器，或通过[File API](https://developer.mozilla.org/en-US/docs/Web/API/File/Using_files_from_web_applications)进行操作。\n\n```javascript\n<input type=\"file\" />\n```\n\n在React中，`<input type=\"file\" />` 始终是一个不受控制的组件，因为它的值只能由用户设置，而不是以编程方式设置。\n\n您应该使用File API与文件进行交互。以下示例显示如何创建ref节点以访问提交处理程序中的文件：\n\n```javascript{9,18-23}\nclass FileInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    alert(\n      `Selected file - ${this.fileInput.files[0].name}`\n    );\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Upload file:\n          <input\n            type=\"file\"\n            ref={input => {\n              this.fileInput = input;\n            }}\n          />\n        </label>\n        <br />\n        <button type=\"submit\">Submit</button>\n      </form>\n    );\n  }\n}\n\nReactDOM.render(\n  <FileInput />,\n  document.getElementById('root')\n);\n```\n\n[在 CodePen 上尝试。](https://reactjs.org/redirect-to-codepen/uncontrolled-components/input-type-file)\n",
        "type": "MarkdownRemark",
        "contentDigest": "4e4f87fee80bb8fe1e191f23572d681f",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "非受控组件",
        "id": "uncontrolled-components",
        "permalink": "docs/uncontrolled-components.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/uncontrolled-components.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/uncontrolled-components.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/uncontrolled-components.md",
      "fields": {
        "slug": "docs/uncontrolled-components.html",
        "path": "docs/uncontrolled-components.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/web-components.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/web-components.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/web-components.md absPath of file",
      "internal": {
        "content": "---\nid: web-components\ntitle: Web Components\npermalink: docs/web-components.html\nredirect_from: \"docs/webcomponents.html\"\n---\n\nReact 和 [web组件](https://developer.mozilla.org/en-US/docs/Web/Web_Components) 被用以解决不同问题。Web组件为可重用组件提供了强大的封装能力，而React则是提供了保持DOM和数据同步的声明式库。二者目标互补。作为开发者，你可以随意地在Web组件里使用React，或者在React里使用Web组件，或都有。\n\n大部分使用 React 的开发者并不使用Web组件，但你可能想要，尤其若你正在使用那些用 Web组件编写的第三方UI组件。\n\n## 在React中使用Web组件\n\n```javascript\nclass HelloMessage extends React.Component {\n  render() {\n    return <div>Hello <x-search>{this.props.name}</x-search>!</div>;\n  }\n}\n```\n\n>注意：\n>\n> Web组件通常暴露一个必要的API，例如，一个`video`Web组件可能会暴露`play()`和`pause()`方法。为访问组件的必要 API，你需要使用一个引用以能够直接和DOM节点交互。若你正在使用第三方Web组件，其最好的解决方案是编写一个 React组件，以包装该 Web组件。\n>\n> 由Web组件触发的事件可能无法通过React渲染树来正确冒泡。\n>\n> 你需要手动捕获事件处理器以处理那些在React组件里的事件。 \n\n一个普遍的困扰是 Web组件 使用 \"class\" 而非 \"className\"。\n\n```javascript\nfunction BrickFlipbox() {\n  return (\n    <brick-flipbox class=\"demo\">\n      <div>front</div>\n      <div>back</div>\n    </brick-flipbox>\n  );\n}\n```\n\n## 在Web组件中使用React\n\n```javascript\nconst proto = Object.create(HTMLElement.prototype, {\n  attachedCallback: {\n    value: function() {\n      const mountPoint = document.createElement('span');\n      this.createShadowRoot().appendChild(mountPoint);\n\n      const name = this.getAttribute('name');\n      const url = 'https://www.google.com/search?q=' + encodeURIComponent(name);\n      ReactDOM.render(<a href={url}>{name}</a>, mountPoint);\n    }\n  }\n});\ndocument.registerElement('x-search', {prototype: proto});\n```\n",
        "type": "MarkdownRemark",
        "contentDigest": "b4435dd910515e503aceddc06c8a2f7e",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Web Components",
        "id": "web-components",
        "permalink": "docs/web-components.html",
        "redirect_from": "docs/webcomponents.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/web-components.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/web-components.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/web-components.md",
      "fields": {
        "slug": "docs/web-components.html",
        "path": "docs/web-components.md",
        "redirect": "\"docs/webcomponents.html\""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-06-02-jsfiddle-integration.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-06-02-jsfiddle-integration.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2013-06-02-jsfiddle-integration.md absPath of file",
      "internal": {
        "content": "---\ntitle: JSFiddle Integration\nauthor: [vjeux]\n---\n\n[JSFiddle](https://jsfiddle.net) just announced support for React. This is an exciting news as it makes collaboration on snippets of code a lot easier. You can play around this **[base React JSFiddle](http://jsfiddle.net/vjeux/kb3gN/)**, fork it and share it! A [fiddle without JSX](http://jsfiddle.net/vjeux/VkebS/) is also available.\n\n\n<blockquote class=\"twitter-tweet\" align=\"center\"><p>React (by Facebook) is now available on JSFiddle. <a href=\"http://t.co/wNQf9JPv5u\" title=\"http://facebook.github.io/react/\">facebook.github.io/react/</a></p>&mdash; JSFiddle (@jsfiddle) <a href=\"https://twitter.com/jsfiddle/status/341114115781177344\">June 2, 2013</a></blockquote>\n",
        "type": "MarkdownRemark",
        "contentDigest": "054e9a6abdee59dcd931bd63daf7da00",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "JSFiddle Integration",
        "author": [
          "vjeux"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2013-06-02-jsfiddle-integration.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2013-06-02-jsfiddle-integration.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-06-02-jsfiddle-integration.md",
      "fields": {
        "date": "2013-06-01T16:00:00.000Z",
        "slug": "/blog/2013/06/02/jsfiddle-integration.html",
        "path": "blog/2013-06-02-jsfiddle-integration.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-06-05-why-react.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-06-05-why-react.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2013-06-05-why-react.md absPath of file",
      "internal": {
        "content": "---\ntitle: Why did we build React?\nauthor: [petehunt]\n---\n\nThere are a lot of JavaScript MVC frameworks out there. Why did we build React\nand why would you want to use it?\n\n## React isn't an MVC framework.\n\nReact is a library for building composable user interfaces. It encourages\nthe creation of reusable UI components which present data that changes over\ntime.\n\n## React doesn't use templates.\n\nTraditionally, web application UIs are built using templates or HTML directives.\nThese templates dictate the full set of abstractions that you are allowed to use\nto build your UI.\n\nReact approaches building user interfaces differently by breaking them into\n**components**. This means React uses a real, full featured programming language\nto render views, which we see as an advantage over templates for a few reasons:\n\n- **JavaScript is a flexible, powerful programming language** with the ability\n  to build abstractions. This is incredibly important in large applications.\n- By unifying your markup with its corresponding view logic, React can actually\n  make views **easier to extend and maintain**.\n- By baking an understanding of markup and content into JavaScript, there's\n  **no manual string concatenation** and therefore less surface area for XSS\n  vulnerabilities.\n\nWe've also created [JSX](/docs/jsx-in-depth.html), an optional syntax\nextension, in case you prefer the readability of HTML to raw JavaScript.\n\n## Reactive updates are dead simple.\n\nReact really shines when your data changes over time.\n\nIn a traditional JavaScript application, you need to look at what data changed\nand imperatively make changes to the DOM to keep it up-to-date. Even AngularJS,\nwhich provides a declarative interface via directives and data binding [requires\na linking function to manually update DOM nodes](https://code.angularjs.org/1.0.8/docs/guide/directive#reasonsbehindthecompilelinkseparation).\n\nReact takes a different approach.\n\nWhen your component is first initialized, the `render` method is called,\ngenerating a lightweight representation of your view. From that representation,\na string of markup is produced, and injected into the document. When your data\nchanges, the `render` method is called again. In order to perform updates as\nefficiently as possible, we diff the return value from the previous call to\n`render` with the new one, and generate a minimal set of changes to be applied\nto the DOM.\n\n> The data returned from `render` is neither a string nor a DOM node -- it's a\n> lightweight description of what the DOM should look like.\n\nWe call this process **reconciliation**. Check out\n[this jsFiddle](http://jsfiddle.net/2h6th4ju/) to see an example of\nreconciliation in action.\n\nBecause this re-render is so fast (around 1ms for TodoMVC), the developer\ndoesn't need to explicitly specify data bindings. We've found this approach\nmakes it easier to build apps.\n\n## HTML is just the beginning.\n\nBecause React has its own lightweight representation of the document, we can do\nsome pretty cool things with it:\n\n- Facebook has dynamic charts that render to `<canvas>` instead of HTML.\n- Instagram is a \"single page\" web app built entirely with React and\n  `Backbone.Router`. Designers regularly contribute React code with JSX.\n- We've built internal prototypes that run React apps in a web worker and use\n  React to drive **native iOS views** via an Objective-C bridge.\n- You can run React\n  [on the server](https://github.com/petehunt/react-server-rendering-example)\n  for SEO, performance, code sharing and overall flexibility.\n- Events behave in a consistent, standards-compliant way in all browsers\n  (including IE8) and automatically use\n  [event delegation](http://davidwalsh.name/event-delegate).\n\nHead on over to https://reactjs.org to check out what we have\nbuilt. Our documentation is geared towards building apps with the framework,\nbut if you are interested in the nuts and bolts\n[get in touch](/support.html) with us!\n\nThanks for reading!\n",
        "type": "MarkdownRemark",
        "contentDigest": "9eb72fcce502d960dcdc18b613f0fee6",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Why did we build React?",
        "author": [
          "petehunt"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2013-06-05-why-react.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2013-06-05-why-react.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-06-05-why-react.md",
      "fields": {
        "date": "2013-06-04T16:00:00.000Z",
        "slug": "/blog/2013/06/05/why-react.html",
        "path": "blog/2013-06-05-why-react.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-06-12-community-roundup.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-06-12-community-roundup.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2013-06-12-community-roundup.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Community Round-up #1\"\nauthor: [vjeux]\n---\n\nReact was open sourced two weeks ago and it's time for a little round-up of what has been going on.\n\n## Khan Academy Question Editor\n\nIt looks like [Sophie Alpert](http://sophiebits.com/) is the first person outside of Facebook and Instagram to push React code to production. We are very grateful for her contributions in form of pull requests, bug reports and presence on IRC ([#reactjs on Freenode](irc://chat.freenode.net/reactjs)). Sophie wrote about her experience using React:\n\n> I just rewrote a 2000-line project in React and have now made a handful of pull requests to React. Everything about React I've seen so far seems really well thought-out and I'm proud to be the first non-FB/IG production user of React.\n>\n> The project that I rewrote in React (and am continuing to improve) is the Khan Academy question editor which content creators can use to enter questions and hints that will be presented to students:\n> <figure><a href=\"http://sophiebits.com/2013/06/09/using-react-to-speed-up-khan-academy.html\"><img src=\"../images/blog/khan-academy-editor.png\"></a></figure>\n>\n> [Read the full post...](http://sophiebits.com/2013/06/09/using-react-to-speed-up-khan-academy.html)\n\n## Pimp my Backbone.View (by replacing it with React)\n\n[Paul Seiffert](https://blog.mayflower.de/) wrote a blog post that explains how to integrate React into Backbone applications.\n\n> React has some interesting concepts for JavaScript view objects that can be used to eliminate this one big problem I have with Backbone.js.\n>\n> As in most MVC implementations (although React is probably just a VC implementation), a view is one portion of the screen that is managed by a controlling object. This object is responsible for deciding when to re-render the view and how to react to user input. With React, these view-controllers objects are called components. A component knows how to render its view and how to handle to the user's interaction with it.\n>\n> The interesting thing is that React is figuring out by itself when to re-render a view and how to do this in the most efficient way.\n>\n> [Read the full post...](https://blog.mayflower.de/3937-Backbone-React.html)\n\n## Using facebook's React with require.js\n\n[Mario Mueller](http://blog.xenji.com/) wrote a menu component in React and was able to easily integrate it with require.js, EventEmitter2 and bower.\n\n> I recently stumbled upon facebook's React library, which is a JavaScript library for building reusable frontend components. Even if this lib is only at version 0.3.x it behaves very stable, it is fast and is fun to code. I'm a big fan of require.js, so I tried to use React within the require.js eco system. It was not as hard as expected and here are some examples and some thoughts about it.\n>\n> [Read the full post...](http://blog.xenji.com/2013/06/facebooks-react-require-js.html)\n\n## Origins of React\n\n[Pete Hunt](http://www.petehunt.net/blog/) explained what differentiates React from other JavaScript libraries in [a previous blog post](/blog/2013/06/05/why-react.html). [Lee Byron](http://leebyron.com/) gives another perspective on Quora:\n\n> React isn't quite like any other popular JavaScript libraries, and it solves a very specific problem: complex UI rendering. It's also intended to be used along side many other popular libraries. For example, React works well with Backbone.js, amongst many others.\n>\n> React was born out of frustrations with the common pattern of writing two-way data bindings in complex MVC apps. React is an implementation of one-way data bindings.\n>\n> [Read the full post...](https://www.quora.com/React-JS-Library/How-is-Facebooks-React-JavaScript-library/answer/Lee-Byron?srid=3DcX)\n",
        "type": "MarkdownRemark",
        "contentDigest": "974ce0e38c3ad2b1b2843233ed78329c",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Community Round-up #1",
        "author": [
          "vjeux"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2013-06-12-community-roundup.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2013-06-12-community-roundup.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-06-12-community-roundup.md",
      "fields": {
        "date": "2013-06-11T16:00:00.000Z",
        "slug": "/blog/2013/06/12/community-roundup.html",
        "path": "blog/2013-06-12-community-roundup.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-06-19-community-roundup-2.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-06-19-community-roundup-2.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2013-06-19-community-roundup-2.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Community Round-up #2\"\nauthor: [vjeux]\n---\n\nSince the launch we have received a lot of feedback and are actively working on React 0.4. In the meantime, here are the highlights of this week.\n\n## Some quick thoughts on React\n\n[Andrew Greig](http://www.andrewgreig.com/) made a blog post that gives a high level description of what React is.\n\n> I have been using Facebooks recently released JavaScript framework called React.js for the last few days and have managed to obtain a rather high level understanding of how it works and formed a good perspective on how it fits in to the entire javascript framework ecosystem.\n>\n> Basically, React is not an MVC framework. It is not a replacement for Backbone or Knockout or Angular, instead it is designed to work with existing frameworks and help extend their functionality.\n>\n> It is designed for building big UIs. The type where you have lots of reusable components that are handling events and presenting and changing some backend data. In a traditional MVC app, React fulfils the role of the View. So you would still need to handle the Model and Controller on your own.\n>\n> I found the best way to utilise React was to pair it with Backbone, with React replacing the Backbone View, or to write your own Model/Data object and have React communicate with that.\n>\n> [Read the full post...](http://www.andrewgreig.com/637/)\n\n## React and Socket.IO Chat Application\n\n[Danial Khosravi](https://danialk.github.io/) made a real-time chat application that interacts with the back-end using Socket.IO.\n\n> A week ago I was playing with AngularJS and [this little chat application](https://github.com/btford/angular-socket-io-im) which uses socket.io and nodejs for realtime communication. Yesterday I saw a post about ReactJS in [EchoJS](http://www.echojs.com/) and started playing with this UI library. After playing a bit with React, I decided to write and chat application using React and I used Bran Ford's Backend for server side of this little app.\n> <figure><a href=\"https://danialk.github.io/blog/2013/06/16/reactjs-and-socket-dot-io-chat-application/\"><img src=\"../images/blog/chatapp.png\"></a></figure>\n>\n> [Read the full post...](https://danialk.github.io/blog/2013/06/16/reactjs-and-socket-dot-io-chat-application/)\n\n## React and Other Frameworks\n\n[Pete Hunt](http://www.petehunt.net/blog/) wrote an answer on Quora comparing React and Angular directives. At the end, he explains how you can make an Angular directive that is in fact being rendered with React.\n\n> To set the record straight: React components are far more powerful than Angular templates; they should be compared with Angular's directives instead. So I took the first Google hit for \"AngularJS directive tutorial\" (AngularJS Directives Tutorial - Fundoo Solutions), rewrote it in React and compared them. [...]\n>\n> We've designed React from the beginning to work well with other libraries. Angular is no exception. Let's take the original Angular example and use React to implement the fundoo-rating directive.\n>\n> [Read the full post...](https://www.quora.com/Pete-Hunt/Posts/Facebooks-React-vs-AngularJS-A-Closer-Look)\n\nIn the same vein, [Markov Twain](https://twitter.com/markov_twain/status/345702941845499906) re-implemented the examples on the front-page [with Ember](http://jsbin.com/azihiw/2/edit) and [Vlad Yazhbin](https://twitter.com/vla) re-implemented the tutorial [with Angular](http://jsfiddle.net/vla/Cdrse/).\n\n## Web Components: React & x-tags\n\nMozilla and Google are actively working on Web Components. [Vjeux](http://blog.vjeux.com/) wrote a proof of concept that shows how to implement them using React.\n\n> Using [x-tags](http://www.x-tags.org/) from Mozilla, we can write custom tags within the DOM. This is a great opportunity to be able to write reusable components without being tied to a particular library. I wrote [x-react](https://github.com/vjeux/react-xtags/) to have them being rendered in React.\n> <figure><a href=\"http://blog.vjeux.com/2013/javascript/custom-components-react-x-tags.html\"><img src=\"../images/blog/xreact.png\"></a></figure>\n>\n> [Read the full post...](http://blog.vjeux.com/2013/javascript/custom-components-react-x-tags.html)\n\n## React TodoMVC Example\n\n[TodoMVC.com](http://todomvc.com/) is a website that collects various implementations of the same basic Todo app. [Pete Hunt](http://www.petehunt.net/blog/) wrote an idiomatic React version.\n\n> Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing their JavaScript web apps.\n>\n> To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.\n> <figure><a href=\"http://todomvc.com/labs/architecture-examples/react/\"><img src=\"../images/blog/todomvc.png\"></a></figure>\n>\n> [Read the source code...](https://github.com/tastejs/todomvc/tree/gh-pages/labs/architecture-examples/react)\n\n## JSX is not HTML\n\nMany of you pointed out differences between JSX and HTML. In order to clear up some confusion, we have added some documentation that covers the four main differences:\n\n  - [Whitespace removal](/docs/jsx-is-not-html.html)\n  - [HTML Entities](/docs/jsx-is-not-html.html)\n  - [Comments](/docs/jsx-is-not-html.html)\n  - [Custom HTML Attributes](/docs/jsx-is-not-html.html)\n",
        "type": "MarkdownRemark",
        "contentDigest": "af57eb80672ac6fd635e632516dac06a",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Community Round-up #2",
        "author": [
          "vjeux"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2013-06-19-community-roundup-2.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2013-06-19-community-roundup-2.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-06-19-community-roundup-2.md",
      "fields": {
        "date": "2013-06-18T16:00:00.000Z",
        "slug": "/blog/2013/06/19/community-roundup-2.html",
        "path": "blog/2013-06-19-community-roundup-2.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-06-21-react-v0-3-3.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-06-21-react-v0-3-3.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2013-06-21-react-v0-3-3.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v0.3.3\"\nauthor: [zpao]\n---\n\nWe have a ton of great stuff coming in v0.4, but in the meantime we're releasing v0.3.3. This release addresses some small issues people were having and simplifies our tools to make them easier to use.\n\n\n## react-tools\n\n* Upgrade Commoner so `require` statements are no longer relativized when passing through the transformer. This was a feature needed when building React, but doesn't translate well for other consumers of `bin/jsx`.\n* Upgraded our dependencies on Commoner and Recast so they use a different directory for their cache.\n* Freeze our esprima dependency.\n\n\n## React\n\n* Allow reusing the same DOM node to render different components. e.g. `React.renderComponent(<div/>, domNode); React.renderComponent(<span/>, domNode);` will work now.\n\n\n## JSXTransformer\n\n* Improved the in-browser transformer so that transformed scripts will execute in the expected scope. The allows components to be defined and used from separate files.\n",
        "type": "MarkdownRemark",
        "contentDigest": "a6046967cc7f38a34dc9946c81d7300b",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.3.3",
        "author": [
          "zpao"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2013-06-21-react-v0-3-3.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2013-06-21-react-v0-3-3.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-06-21-react-v0-3-3.md",
      "fields": {
        "date": "2013-06-20T16:00:00.000Z",
        "slug": "/blog/2013/06/21/react-v0-3-3.html",
        "path": "blog/2013-06-21-react-v0-3-3.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-06-27-community-roundup-3.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-06-27-community-roundup-3.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2013-06-27-community-roundup-3.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Community Round-up #3\"\nauthor: [vjeux]\n---\n\nThe highlight of this week is that an interaction-heavy app has been ported to React. React components are solving issues they had with nested views.\n\n## Moving From Backbone To React\n\n[Clay Allsopp](https://twitter.com/clayallsopp) successfully ported [Propeller](http://usepropeller.com/blog/posts/from-backbone-to-react/), a fairly big, interaction-heavy JavaScript app, to React.\n\n> [<img style=\"float: right; margin: 0 0 10px 10px;\" src=\"../images/blog/propeller-logo.png\" />](http://usepropeller.com/blog/posts/from-backbone-to-react/)Subviews involve a lot of easy-to-forget boilerplate that Backbone (by design) doesn't automate. Libraries like Backbone.Marionette offer more abstractions to make view nesting easier, but they're all limited by the fact that Backbone delegates how and went view-document attachment occurs to the application code.\n>\n> React, on the other hand, manages the DOM and only exposes real nodes at select points in its API. The \"elements\" you code in React are actually objects which wrap DOM nodes, not the actual objects which get inserted into the DOM. Internally, React converts those abstractions into actual DOMElements and fills out the document accordingly. [...]\n>\n> We moved about 20 different Backbone view classes to React over the past few weeks, including the live-preview pane that you see in our little iOS demo. Most importantly, it's allowed us to put energy into making each component work great on its own, instead of spending extra cycles to ensure they function in unison. For that reason, we think React is a more scalable way to build view-intensive apps than Backbone alone, and it doesn't require you to drop-everything-and-refactor like a move to Ember or Angular would demand.\n>\n> [Read the full post...](http://usepropeller.com/blog/posts/from-backbone-to-react/)\n\n## Grunt Task for JSX\n\n[Eric Clemmons](https://ericclemmons.github.io/) wrote a task for [Grunt](http://gruntjs.com/) that applies the JSX transformation to your JavaScript files. It also works with [Browserify](http://browserify.org/) if you want all your files to be concatenated and minified together.\n\n> Grunt task for compiling Facebook React's .jsx templates into .js\n>\n> ```javascript\n> grunt.initConfig({\n>   react: {\n>     app: {\n>       options: { extension: 'js' },\n>       files: { 'path/to/output/dir': 'path/to/jsx/templates/dir' }\n> ```\n>\n> It also works great with `grunt-browserify`!\n>\n> ```javascript\n> browserify: {\n>   options: {\n>     transform: [ require('grunt-react').browserify ]\n>   },\n>   app: {\n>     src: 'path/to/source/main.js',\n>     dest: 'path/to/target/output.js'\n> ```\n>\n> [Check out the project ...](https://github.com/ericclemmons/grunt-react)\n\n## Backbone/Handlebars Nested Views\n\n[Joel Burget](http://joelburget.com/) wrote a blog post talking about the way we would write React-like components in Backbone and Handlebars.\n\n> The problem here is that we're trying to maniplate a tree, but there's a textual layer we have to go through. Our views are represented as a tree - the subviews are children of CommentCollectionView - and they end up as part of a tree in the DOM. But there's a Handlebars layer in the middle (which deals in flat strings), so the hierarchy must be destructed and rebuilt when we render.\n>\n> What does it take to render a collection view? In the Backbone/Handlebars view of the world you have to render the template (with stubs), render each subview which replaces a stub, and keep a reference to each subview (or anything within the view that could change in the future).\n>\n> So while our view is conceptually hierarchical, due to the fact that it has to go through a flat textual representation, we need to do a lot of extra work to reassemble that structure after rendering.\n>\n> [Read the full post...](http://joelburget.com/react/)\n\n## JSRomandie Meetup\n\n[Renault John Lecoultre](https://twitter.com/renajohn/) from [BugBuster](http://www.bugbuster.com) did a React introduction talk at a JS meetup called [JS Romandie](https://twitter.com/jsromandie) last week.\n\n<script async class=\"speakerdeck-embed\" data-id=\"888a9d50c01b01300df36658d0894ac1\" data-ratio=\"1.33333333333333\" src=\"//speakerdeck.com/assets/embed.js\"></script>\n\n## CoffeeScript integration\n\n[Vjeux](http://blog.vjeux.com/) used the fact that JSX is just a syntactic sugar on-top of regular JS to rewrite the React front-page examples in CoffeeScript.\n\n> Multiple people asked what's the story about JSX and CoffeeScript. There is no JSX pre-processor for CoffeeScript and I'm not aware of anyone working on it. Fortunately, CoffeeScript is pretty expressive and we can play around the syntax to come up with something that is usable.\n>\n> ```javascript\n> {div, h3, textarea} = React.DOM\n> (div {className: 'MarkdownEditor'}, [\n>   (h3 {}, 'Input'),\n>   (textarea {onKeyUp: @handleKeyUp, ref: 'textarea'},\n>     @state.value\n>   )\n> ])\n> ```\n>\n> [Read the full post...](http://blog.vjeux.com/2013/javascript/react-coffeescript.html)\n\n## Tutorial in Plain JavaScript\n\nWe've seen a lot of people comparing React with various frameworks. [Ricardo Tomasi](http://ricardo.cc/) decided to re-implement the tutorial without any framework, just plain JavaScript.\n\n> Facebook & Instagram launched the React framework and an accompanying tutorial. Developer Vlad Yazhbin decided to rewrite that using AngularJS. The end result is pretty neat, but if you're like me you will not actually appreciate the HTML speaking for itself and doing all the hard work. So let's see what that looks like in plain javascript.\n>\n> [Read the full post...](http://ricardo.cc/2013/06/07/react-tutorial-rewritten-in-plain-javascript.html)\n",
        "type": "MarkdownRemark",
        "contentDigest": "8fe05ced1c386c9af46cc7c8c8fa2a61",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Community Round-up #3",
        "author": [
          "vjeux"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2013-06-27-community-roundup-3.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2013-06-27-community-roundup-3.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-06-27-community-roundup-3.md",
      "fields": {
        "date": "2013-06-26T16:00:00.000Z",
        "slug": "/blog/2013/06/27/community-roundup-3.html",
        "path": "blog/2013-06-27-community-roundup-3.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-07-02-react-v0-4-autobind-by-default.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-07-02-react-v0-4-autobind-by-default.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2013-07-02-react-v0-4-autobind-by-default.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"New in React v0.4: Autobind by Default\"\nauthor: [zpao]\n---\n\nReact v0.4 is very close to completion. As we finish it off, we'd like to share with you some of the major changes we've made since v0.3. This is the first of several posts we'll be making over the next week.\n\n\n## What is React.autoBind?\n\nIf you take a look at most of our current examples, you'll see us using `React.autoBind` for event handlers. This is used in place of `Function.prototype.bind`. Remember that in JS, [function calls are late-bound](https://bonsaiden.github.io/JavaScript-Garden/#function.this). That means that if you simply pass a function around, the `this` used inside won't necessarily be the `this` you expect. `Function.prototype.bind` creates a new, properly bound, function so that when called, `this` is exactly what you expect it to be.\n\nBefore we launched React, we would write this:\n\n```js{4}\nReact.createClass({\n  onClick: function(event) {/* do something with this */},\n  render: function() {\n    return <button onClick={this.onClick.bind(this)} />;\n  }\n});\n```\n\nWe wrote `React.autoBind` as a way to cache the function creation and save on memory usage. Since `render` can get called multiple times, if you used `this.onClick.bind(this)` you would actually create a new function on each pass. With React v0.3 you were able to write this instead:\n\n```js{2,4}\nReact.createClass({\n  onClick: React.autoBind(function(event) {/* do something with this */}),\n  render: function() {\n    return <button onClick={this.onClick} />;\n  }\n});\n```\n\n\n## What's Changing in v0.4?\n\nAfter using `React.autoBind` for a few weeks, we realized that there were very few times that we didn't want that behavior. So we made it the default! Now all methods defined within `React.createClass` will already be bound to the correct instance.\n\nStarting with v0.4 you can just write this:\n\n```js{2,4}\nReact.createClass({\n  onClick: function(event) {/* do something with this */},\n  render: function() {\n    return <button onClick={this.onClick} />;\n  }\n});\n```\n\nFor v0.4 we will simply be making `React.autoBind` a no-op — it will just return the function you pass to it. Most likely you won't have to change your code to account for this change, though we encourage you to update. We'll publish a migration guide documenting this and other changes that come along with React v0.4.\n",
        "type": "MarkdownRemark",
        "contentDigest": "afc028dbf0325f2f518ed4f65d57e4e1",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "New in React v0.4: Autobind by Default",
        "author": [
          "zpao"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2013-07-02-react-v0-4-autobind-by-default.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2013-07-02-react-v0-4-autobind-by-default.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-07-02-react-v0-4-autobind-by-default.md",
      "fields": {
        "date": "2013-07-01T16:00:00.000Z",
        "slug": "/blog/2013/07/02/react-v0-4-autobind-by-default.html",
        "path": "blog/2013-07-02-react-v0-4-autobind-by-default.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-07-11-react-v0-4-prop-validation-and-default-values.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-07-11-react-v0-4-prop-validation-and-default-values.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2013-07-11-react-v0-4-prop-validation-and-default-values.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"New in React v0.4: Prop Validation and Default Values\"\nauthor: [zpao]\n---\n\nMany of the questions we got following the public launch of React revolved around `props`, specifically that people wanted to do validation and to make sure their components had sensible defaults.\n\n\n## Validation\n\nOftentimes you want to validate your `props` before you use them. Perhaps you want to ensure they are a specific type. Or maybe you want to restrict your prop to specific values. Or maybe you want to make a specific prop required. This was always possible — you could have written validations in your `render` or `componentWillReceiveProps` functions, but that gets clunky fast.\n\nReact v0.4 will provide a nice easy way for you to use built-in validators, or to even write your own.\n\n```js\nReact.createClass({\n  propTypes: {\n    // An optional string prop named \"description\".\n    description: React.PropTypes.string,\n\n    // A required enum prop named \"category\".\n    category: React.PropTypes.oneOf(['News','Photos']).isRequired,\n\n    // A prop named \"dialog\" that requires an instance of Dialog.\n    dialog: React.PropTypes.instanceOf(Dialog).isRequired\n  },\n  ...\n});\n```\n\n\n## Default Values\n\nOne common pattern we've seen with our React code is to do something like this:\n\n```js\nReact.createClass({\n  render: function() {\n    var value = this.props.value || 'default value';\n    return <div>{value}</div>;\n  }\n});\n```\n\nDo this for a few `props` across a few components and now you have a lot of redundant code. Starting with React v0.4, you can provide default values in a declarative way:\n\n```js\nReact.createClass({\n  getDefaultProps: function() {\n    return {\n      value: 'default value'\n    };\n  }\n  ...\n});\n```\n\nWe will use the cached result of this function before each `render`. We also perform all validations before each `render` to ensure that you have all of the data you need in the right form before you try to use it.\n\n- - -\n\nBoth of these features are entirely optional. We've found them to be increasingly valuable at Facebook as our applications grow and evolve, and we hope others find them useful as well.\n",
        "type": "MarkdownRemark",
        "contentDigest": "0831997493641456c44dbbfb401a20b9",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "New in React v0.4: Prop Validation and Default Values",
        "author": [
          "zpao"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2013-07-11-react-v0-4-prop-validation-and-default-values.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2013-07-11-react-v0-4-prop-validation-and-default-values.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-07-11-react-v0-4-prop-validation-and-default-values.md",
      "fields": {
        "date": "2013-07-10T16:00:00.000Z",
        "slug": "/blog/2013/07/11/react-v0-4-prop-validation-and-default-values.html",
        "path": "blog/2013-07-11-react-v0-4-prop-validation-and-default-values.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-07-03-community-roundup-4.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-07-03-community-roundup-4.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2013-07-03-community-roundup-4.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Community Round-up #4\"\nauthor: [vjeux]\n---\n\nReact reconciliation process appears to be very well suited to implement a text editor with a live preview as people at Khan Academy show us.\n\n## Khan Academy\n\n[Ben Kamens](http://bjk5.com/) explains how [Sophie Alpert](http://sophiebits.com/) and [Joel Burget](http://joelburget.com/) are promoting React inside of [Khan Academy](https://www.khanacademy.org/). They now have three projects in the works using React.\n\n> Recently two Khan Academy devs dropped into our team chat and said they were gonna use React to write a new feature. They even hinted that we may want to adopt it product-wide.\n>\n> \"The library is only a week old. It's a brand new way of thinking about things. We're the first to use it outside of Facebook. Heck, even the React devs were surprised to hear we're using this in production!!!\"\n>\n> [Read the full post...](http://bjk5.com/post/53742233351/getting-your-team-to-adopt-new-technology)\n\nThe best part is the demo of how React reconciliation process makes live editing more user-friendly.\n\n> Our renderer, post-React, is on the left. A typical math editor's preview is on the right.\n\n[![](../images/blog/monkeys.gif)](http://bjk5.com/post/53742233351/getting-your-team-to-adopt-new-technology)\n\n## React Snippets\n\nOver the past several weeks, members of our team, [Pete Hunt](http://www.petehunt.net/) and [Paul O'Shannessy](http://zpao.com/), answered many questions that were asked in the [React group](https://groups.google.com/forum/#!forum/reactjs). They give a good overview of how to integrate React with other libraries and APIs through the use of [Mixins](/docs/reusable-components.html) and [Lifecycle Methods](/docs/working-with-the-browser.html).\n\n> [Listening Scroll Event](https://groups.google.com/forum/#!topic/reactjs/l6PnP8qbofk)\n>\n>  * [JSFiddle](http://jsfiddle.net/aabeL/1/): Basically I've given you two mixins. The first lets you react to global scroll events. The second is, IMO, much more useful: it gives you scroll start and scroll end events, which you can use with setState() to create components that react based on whether the user is scrolling or not.\n>\n> [Fade-in Transition](https://groups.google.com/forum/#!topic/reactjs/RVAY_eQmdpo)\n>\n>  * [JSFiddle](http://jsfiddle.net/ufe8k/1/): Creating a new `<FadeInWhenAdded>` component and using jQuery `.fadeIn()` function on the DOM node.\n>  * [JSFiddle](http://jsfiddle.net/R8f5L/5/): Using CSS transition instead.\n>\n> [Socket.IO Integration](https://groups.google.com/forum/#!topic/reactjs/pyUZBRWcHB4)\n>\n> * [Gist](https://gist.github.com/zpao/5686416): The big thing to notice is that my component is pretty dumb (it doesn't have to be but that's how I chose to model it). All it does is render itself based on the props that are passed in. renderOrUpdate is where the \"magic\" happens.\n> * [Gist](https://gist.github.com/petehunt/5687230): This example is doing everything -- including the IO -- inside of a single React component.\n> * [Gist](https://gist.github.com/petehunt/5687276): One pattern that we use at Instagram a lot is to employ separation of concerns and consolidate I/O and state into components higher in the hierarchy to keep the rest of the components mostly stateless and purely display.\n>\n> [Sortable jQuery Plugin Integration](https://groups.google.com/forum/#!topic/reactjs/mHfBGI3Qwz4)\n>\n> * [JSFiddle](http://jsfiddle.net/LQxy7/): Your React component simply render empty divs, and then in componentDidMount() you call React.renderComponent() on each of those divs to set up a new root React tree. Be sure to explicitly unmountAndReleaseReactRootNode() for each component in componentWillUnmount().\n\n## Introduction to React Screencast\n\n[Pete Hunt](http://www.petehunt.net/) recorded himself implementing a simple `<Blink>` tag in React.\n\n<figure><iframe src=\"https://player.vimeo.com/video/67248575\" width=\"100%\" height=\"340\" frameborder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe></figure>\n\n## Snake in React\n\n[Tom Occhino](http://tomocchino.com/) implemented Snake in 150 lines with React.\n\n> [Check the source on GitHub](https://github.com/tomocchino/react-snake/blob/master/src/snake.js)\n> <figure><a href=\"https://tomocchino.github.io/react-snake/\"><img src=\"../images/blog/snake.png\"></a></figure>\n",
        "type": "MarkdownRemark",
        "contentDigest": "d48bb15c222468f835eec4952df5c420",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Community Round-up #4",
        "author": [
          "vjeux"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2013-07-03-community-roundup-4.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2013-07-03-community-roundup-4.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-07-03-community-roundup-4.md",
      "fields": {
        "date": "2013-07-02T16:00:00.000Z",
        "slug": "/blog/2013/07/03/community-roundup-4.html",
        "path": "blog/2013-07-03-community-roundup-4.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-07-17-react-v0-4-0.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-07-17-react-v0-4-0.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2013-07-17-react-v0-4-0.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v0.4.0\"\nauthor: [zpao]\n---\n\nOver the past 2 months we've been taking feedback and working hard to make React even better. We fixed some bugs, made some under-the-hood improvements, and added several features that we think will improve the experience developing with React. Today we're proud to announce the availability of React v0.4!\n\n\nThis release could not have happened without the support of our growing community. Since launch day, the community has contributed blog posts, questions to the [Google Group](https://groups.google.com/group/reactjs), and issues and pull requests on GitHub. We've had contributions ranging from documentation improvements to major changes to React's rendering. We've seen people integrate React into the tools they're using and the products they're building, and we're all very excited to see what our budding community builds next!\n\nReact v0.4 has some big changes. We've also restructured the documentation to better communicate how to use React. We've summarized the changes below and linked to documentation where we think it will be especially useful.\n\nWhen you're ready, [go download it](/docs/installation.html)!\n\n\n### React\n\n* Switch from using `id` attribute to `data-reactid` to track DOM nodes. This allows you to integrate with other JS and CSS libraries more easily.\n* Support for more DOM elements and attributes (e.g., `<canvas>`)\n* Improved server-side rendering APIs. `React.renderComponentToString(<component>, callback)` allows you to use React on the server and generate markup which can be sent down to the browser.\n* `prop` improvements: validation and default values. [Read our blog post for details...](/blog/2013/07/11/react-v0-4-prop-validation-and-default-values.html)\n* Support for the `key` prop, which allows for finer control over reconciliation. [Read the docs for details...](/docs/multiple-components.html)\n* Removed `React.autoBind`. [Read our blog post for details...](/blog/2013/07/02/react-v0-4-autobind-by-default.html)\n* Improvements to forms. We've written wrappers around `<input>`, `<textarea>`, `<option>`, and `<select>` in order to standardize many inconsistencies in browser implementations. This includes support for `defaultValue`, and improved implementation of the `onChange` event, and circuit completion. [Read the docs for details...](/docs/forms.html)\n* We've implemented an improved synthetic event system that conforms to the W3C spec.\n* Updates to your component are batched now, which may result in a significantly faster re-render of components. `this.setState` now takes an optional callback as its second parameter. If you were using `onClick={this.setState.bind(this, state)}` previously, you'll want to make sure you add a third parameter so that the event is not treated as the callback.\n\n### JSX\n\n* Support for comment nodes `<div>{/* this is a comment and won't be rendered */}</div>`\n* Children are now transformed directly into arguments instead of being wrapped in an array\n  E.g. `<div><Component1/><Component2/></div>` is transformed into `React.DOM.div(null, Component1(null), Component2(null))`.\n  Previously this would be transformed into `React.DOM.div(null, [Component1(null), Component2(null)])`.\n  If you were using React without JSX previously, your code should still work.\n\n### react-tools\n\n* Fixed a number of bugs when transforming directories\n* No longer re-write `require()`s to be relative unless specified\n",
        "type": "MarkdownRemark",
        "contentDigest": "4129aed572c4dc338b47e087fd5cea3d",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.4.0",
        "author": [
          "zpao"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2013-07-17-react-v0-4-0.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2013-07-17-react-v0-4-0.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-07-17-react-v0-4-0.md",
      "fields": {
        "date": "2013-07-16T16:00:00.000Z",
        "slug": "/blog/2013/07/17/react-v0-4-0.html",
        "path": "blog/2013-07-17-react-v0-4-0.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-07-23-community-roundup-5.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-07-23-community-roundup-5.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2013-07-23-community-roundup-5.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Community Round-up #5\"\nauthor: [vjeux]\n---\n\nWe launched the [React Facebook Page](https://www.facebook.com/react) along with the React v0.4 launch. 700 people already liked it to get updated on the project :)\n\n## Cross-browser onChange\n\n[Sophie Alpert](http://sophiebits.com/) from [Khan Academy](https://www.khanacademy.org/) worked on a cross-browser implementation of `onChange` event that landed in v0.4. She wrote a blog post explaining the various browser quirks she had to deal with.\n\n> First off, what is the input event? If you have an `<input>` element and want to receive events whenever the value changes, the most obvious thing to do is to listen to the change event. Unfortunately, change fires only after the text field is defocused, rather than on each keystroke. The next obvious choice is the keyup event, which is triggered whenever a key is released. Unfortunately, keyup doesn't catch input that doesn't involve the keyboard (e.g., pasting from the clipboard using the mouse) and only fires once if a key is held down, rather than once per inserted character.\n>\n> Both keydown and keypress do fire repeatedly when a key is held down, but both fire immediately before the value changes, so to read the new value you have to defer the handler to the next event loop using `setTimeout(fn, 0)` or similar, which slows down your app. Of course, like keyup, neither keydown nor keypress fires for non-keyboard input events, and all three can fire in cases where the value doesn't change at all (such as when pressing the arrow keys).\n>\n> [Read the full post...](http://sophiebits.com/2013/06/18/a-near-perfect-oninput-shim-for-ie-8-and-9.html)\n\n\n## React Samples\n\nLearning a new library is always easier when you have working examples you can play with. [jwh](https://github.com/jhw) put many of them on his [react-samples GitHub repo](https://github.com/jhw/react-samples).\n\n> Some simple examples with Facebook's React framework\n>\n> * Bootstrap action bar, modal and table [#1](https://rawgithub.com/jhw/react-samples/master/html/actionbar.html),\n> [#2](https://rawgithub.com/jhw/react-samples/master/html/bootstrap_actionbar.html),\n> [#3](https://rawgithub.com/jhw/react-samples/master/html/bootstrap_modal.html),\n> [#4](https://rawgithub.com/jhw/react-samples/master/html/bootstrap_striped_table.html)\n> * Comments [#1](https://rawgithub.com/jhw/react-samples/master/html/comments1.html),\n> [#2](https://rawgithub.com/jhw/react-samples/master/html/comments2.html)\n> * Data Table [#1](https://rawgithub.com/jhw/react-samples/master/html/datatable.html),\n> [#2](https://rawgithub.com/jhw/react-samples/master/html/datatable2.html),\n> [#3](https://rawgithub.com/jhw/react-samples/master/html/datatable3.html),\n> [#4](https://rawgithub.com/jhw/react-samples/master/html/datatable4.html),\n> [#5](https://rawgithub.com/jhw/react-samples/master/html/datatable5.html)\n> * Filter Bar [#1](https://rawgithub.com/jhw/react-samples/master/html/filterbar.html),\n> [#2](https://rawgithub.com/jhw/react-samples/master/html/filterbar2.html),\n> [#3](https://rawgithub.com/jhw/react-samples/master/html/filterbar3.html),\n> [#4](https://rawgithub.com/jhw/react-samples/master/html/filterbar4.html),\n> [#5](https://rawgithub.com/jhw/react-samples/master/html/filterbar5.html)\n> * Fundoo Rating [#1](https://rawgithub.com/jhw/react-samples/master/html/fundoo.html)\n> * Line Char: [#1](https://rawgithub.com/jhw/react-samples/master/html/linechart.html),\n> [#2](https://rawgithub.com/jhw/react-samples/master/html/linechart2.html)\n> * Multi tabs [#1](https://rawgithub.com/jhw/react-samples/master/html/multitabs.html)\n> * Select [#1](https://rawgithub.com/jhw/react-samples/master/html/select.html)\n> * Simple Tabs [#1](https://rawgithub.com/jhw/react-samples/master/html/simpletabs.html),\n> [#2](https://rawgithub.com/jhw/react-samples/master/html/simpletabs2.html),\n> [#3](https://rawgithub.com/jhw/react-samples/master/html/simpletabs3.html),\n> [#4](https://rawgithub.com/jhw/react-samples/master/html/simpletabs4.html)\n> * Toggle [#1](https://rawgithub.com/jhw/react-samples/master/html/toggle.html)\n\n\n## React Chosen Wrapper\n\n[Cheng Lou](https://github.com/chenglou) wrote a wrapper for the [Chosen](https://harvesthq.github.io/chosen/) input library called [react-chosen](https://github.com/chenglou/react-chosen). It took just 25 lines to be able to use jQuery component as a React one.\n\n```javascript\nReact.renderComponent(\n  <Chosen noResultsText=\"No result\" value=\"Harvest\" onChange={doSomething}>\n    <option value=\"Facebook\">Facebook</option>\n    <option value=\"Harvest\">Harvest</option>\n  </Chosen>\n, document.getElementById('example'));\n```\n\n\n## JSX and ES6 Template Strings\n\n[Domenic Denicola](http://domenicdenicola.com/) wrote a slide deck about the great applications of ES6 features and one slide shows how we could use Template Strings to compile JSX at run-time without the need for a pre-processing phase.\n\n<figure><iframe src=\"https://www.slideshare.net/slideshow/embed_code/24187146?rel=0&startSlide=36\" width=\"100%\" height=\"356\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" style=\"border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px\" allowfullscreen webkitallowfullscreen mozallowfullscreen> </iframe></figure>\n\n\n## React Presentation\n\n[Tom Occhino](http://tomocchino.com/) and [Jordan Walke](https://github.com/jordwalke), React developers, did a presentation of React at Facebook Seattle's office. Check out the first 25 minutes for the presentation and the remaining 45 for a Q&A. I highly recommend you watching this video.\n\n<figure><iframe width=\"650\" height=\"400\" src=\"//www.youtube-nocookie.com/embed/XxVg_s8xAms\" frameborder=\"0\" allowfullscreen></iframe></figure>\n\n\n## Docs\n\n[Pete Hunt](http://www.petehunt.net/) rewrote the entirety of the docs for v0.4. The goal was to add more explanation about why we built React and what the best practices are.\n\n> Guides\n>\n> * [Why React?](/docs/why-react.html)\n> * [Displaying Data](/docs/displaying-data.html)\n>   * [JSX in Depth](/docs/jsx-in-depth.html)\n>   * [JSX Gotchas](/docs/jsx-gotchas.html)\n> * [Interactivity and Dynamic UIs](/docs/interactivity-and-dynamic-uis.html)\n> * [Multiple Components](/docs/multiple-components.html)\n> * [Reusable Components](/docs/reusable-components.html)\n> * [Forms](/docs/forms.html)\n> * [Working With the Browser](/docs/working-with-the-browser.html)\n>   * [More About Refs](/docs/more-about-refs.html)\n> * [Tooling integration](/docs/tooling-integration.html)\n> * [Reference](/docs/top-level-api.html)\n",
        "type": "MarkdownRemark",
        "contentDigest": "7fd2b69372205b7b64614d1feefe9b23",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Community Round-up #5",
        "author": [
          "vjeux"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2013-07-23-community-roundup-5.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2013-07-23-community-roundup-5.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-07-23-community-roundup-5.md",
      "fields": {
        "date": "2013-07-22T16:00:00.000Z",
        "slug": "/blog/2013/07/23/community-roundup-5.html",
        "path": "blog/2013-07-23-community-roundup-5.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-07-26-react-v0-4-1.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-07-26-react-v0-4-1.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2013-07-26-react-v0-4-1.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v0.4.1\"\nauthor: [zpao]\n---\n\nReact v0.4.1 is a small update, mostly containing correctness fixes. Some code has been restructured internally but those changes do not impact any of our public APIs.\n\n\n## React\n\n* `setState` callbacks are now executed in the scope of your component.\n* `click` events now work on Mobile Safari.\n* Prevent a potential error in event handling if `Object.prototype` is extended.\n* Don't set DOM attributes to the string `\"undefined\"` on update when previously defined.\n* Improved support for `<iframe>` attributes.\n* Added checksums to detect and correct cases where server-side rendering markup mismatches what React expects client-side.\n\n\n## JSXTransformer\n\n* Improved environment detection so it can be run in a non-browser environment.\n\n\n[Download it now!](/downloads.html)\n",
        "type": "MarkdownRemark",
        "contentDigest": "e9327bb21a856b290ed28785576b3885",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.4.1",
        "author": [
          "zpao"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2013-07-26-react-v0-4-1.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2013-07-26-react-v0-4-1.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-07-26-react-v0-4-1.md",
      "fields": {
        "date": "2013-07-25T16:00:00.000Z",
        "slug": "/blog/2013/07/26/react-v0-4-1.html",
        "path": "blog/2013-07-26-react-v0-4-1.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-07-30-use-react-and-jsx-in-ruby-on-rails.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-07-30-use-react-and-jsx-in-ruby-on-rails.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2013-07-30-use-react-and-jsx-in-ruby-on-rails.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Use React and JSX in Ruby on Rails\"\nauthor: [zpao]\n---\n\nToday we're releasing a gem to make it easier to use React and JSX in Ruby on Rails applications: [react-rails](https://github.com/facebook/react-rails).\n\n\nThis gem has 2 primary purposes:\n\n1. To package `react.js` in a way that's easy to use and easy to update.\n2. To allow you to write JSX without an external build step to transform that into JS.\n\n\n## Packaging react.js\n\nTo make `react.js` available for use client-side, simply add `react` to your manifest, and declare the variant you'd like to use in your environment. When you use `:production`, the minified and optimized `react.min.js` will be used instead of the development version. For example:\n\n```ruby\n# config/environments/development.rb\n\nMyApp::Application.configure do\n  config.react.variant = :development\n  # use :production in production.rb\nend\n```\n\n```js\n// app/assets/javascript/application.js\n\n//= require react\n```\n\n\n## Writing JSX\n\nWhen you name your file with `myfile.js.jsx`, `react-rails` will automatically try to transform that file. For the time being, we still require that you include the docblock at the beginning of the file. For example, this file will get transformed on request.\n\n```js\n/** @jsx React.DOM */\nReact.renderComponent(<MyComponent/>, document.getElementById('example'))\n```\n\n\n## Asset Pipeline\n\n`react-rails` takes advantage of the [asset pipeline](http://guides.rubyonrails.org/asset_pipeline.html) that was introduced in Rails 3.1. A very important part of that pipeline is the `assets:precompile` Rake task. `react-rails` will ensure that your JSX files will be transformed into regular JS before all of your assets are minified and packaged.\n\n\n## Installation\n\nInstallation follows the same process you're familiar with. You can install it globally with `gem install react-rails`, though we suggest you add the dependency to your `Gemfile` directly.\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "1274bab74028fcafd252f7bf78f8779c",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Use React and JSX in Ruby on Rails",
        "author": [
          "zpao"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2013-07-30-use-react-and-jsx-in-ruby-on-rails.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2013-07-30-use-react-and-jsx-in-ruby-on-rails.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-07-30-use-react-and-jsx-in-ruby-on-rails.md",
      "fields": {
        "date": "2013-07-29T16:00:00.000Z",
        "slug": "/blog/2013/07/30/use-react-and-jsx-in-ruby-on-rails.html",
        "path": "blog/2013-07-30-use-react-and-jsx-in-ruby-on-rails.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-08-05-community-roundup-6.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-08-05-community-roundup-6.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2013-08-05-community-roundup-6.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Community Round-up #6\"\nauthor: [vjeux]\n---\n\nThis is the first Community Round-up where none of the items are from Facebook/Instagram employees. It's great to see the adoption of React growing.\n\n## React Game Tutorial\n\n[Caleb Cassel](https://twitter.com/CalebCassel) wrote a [step-by-step tutorial](https://rawgithub.com/calebcassel/react-demo/master/part1.html) about making a small game. It covers JSX, State and Events, Embedded Components and Integration with Backbone.\n<figure><a href=\"https://rawgithub.com/calebcassel/react-demo/master/part1.html\"><img src=\"../images/blog/dog-tutorial.png\"></a></figure>\n\n\n## Reactify\n\n[Andrey Popp](http://andreypopp.com/) created a [Browserify](http://browserify.org/) helper to compile JSX files.\n\n> Browserify v2 transform for `text/jsx`. Basic usage is:\n>\n> ```\n> % browserify -t reactify main.jsx\n> ```\n>\n> `reactify` transform activates for files with either `.jsx` extension or `/** @jsx React.DOM */` pragma as a first line for any `.js` file.\n>\n> [Check it out on GitHub...](https://github.com/andreypopp/reactify)\n\n\n\n## React Integration with Este\n\n[Daniel Steigerwald](http://daniel.steigerwald.cz/) is now using React within [Este](https://github.com/steida/este), which is a development stack for web apps in CoffeeScript that are statically typed using the Closure Library.\n\n```coffeescript\neste.demos.react.todoApp = este.react.create (`/** @lends {React.ReactComponent.prototype} */`)\n  render: ->\n    @div [\n      este.demos.react.todoList 'items': @state['items']\n      if @state['items'].length\n        @p \"#{@state['items'].length} items.\"\n      @form 'onSubmit': @onFormSubmit, [\n        @input\n          'onChange': @onChange\n          'value': @state['text']\n          'autoFocus': true\n          'ref': 'textInput'\n        @button \"Add ##{@state['items'].length + 1}\"\n      ]\n    ]\n```\n\n[Check it out on GitHub...](https://github.com/steida/este-library/blob/master/este/demos/thirdparty/react/start.coffee)\n\n\n## React Stylus Boilerplate\n\n[Zaim Bakar](https://zaim.github.io/) shared his boilerplate to get started with Stylus CSS processor.\n\n> This is my boilerplate React project using Grunt as the build tool, and Stylus as my CSS preprocessor.\n>\n> - Very minimal HTML boilerplate\n> - Uses Stylus, with nib included\n> - Uses two build targets:\n>   - `grunt build` to compile JSX and Stylus into a development build\n>   - `grunt dist` to minify and optimize the development build for production\n>\n> [Check it out on GitHub...](https://github.com/zaim/react-stylus-boilerplate)\n\n\n## WebFUI\n\n[Conrad Barski](http://lisperati.com/), author of the popular book [Land of Lisp](http://landoflisp.com/), wants to use React for his ClojureScript library called [WebFUI](https://github.com/drcode/webfui).\n\n> I'm the author of \"[Land of Lisp](http://landoflisp.com/)\" and I love your framework. I built a somewhat similar framework a year ago [WebFUI](https://github.com/drcode/webfui) aimed at ClojureScript. My framework also uses global event delegates, a global \"render\" function, DOM reconciliation, etc just like react.js. (Of course these ideas all have been floating around the ether for ages, always great to see more people building on them.)\n>\n> Your implementation is more robust, and so I think the next point release of webfui will simply delegate all the \"hard work\" to react.js and will only focus on the areas where it adds value (enabling purely functional UI programming in clojurescript, and some other stuff related to streamlining event handling)\n> <figure><a href=\"https://groups.google.com/forum/#!msg/reactjs/e3bYersyd64/qODfcuBR9LwJ\"><img src=\"../images/blog/landoflisp.png\"></a></figure>\n>\n> [Read the full post...](https://groups.google.com/forum/#!msg/reactjs/e3bYersyd64/qODfcuBR9LwJ)\n",
        "type": "MarkdownRemark",
        "contentDigest": "dfb3559d84e5370dcb7f9cb46fa3b298",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Community Round-up #6",
        "author": [
          "vjeux"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2013-08-05-community-roundup-6.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2013-08-05-community-roundup-6.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-08-05-community-roundup-6.md",
      "fields": {
        "date": "2013-08-04T16:00:00.000Z",
        "slug": "/blog/2013/08/05/community-roundup-6.html",
        "path": "blog/2013-08-05-community-roundup-6.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-08-19-use-react-and-jsx-in-python-applications.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-08-19-use-react-and-jsx-in-python-applications.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2013-08-19-use-react-and-jsx-in-python-applications.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Use React and JSX in Python Applications\"\nauthor: [kmeht]\n---\n\nToday we're happy to announce the initial release of [PyReact](https://github.com/facebook/react-python), which makes it easier to use React and JSX in your Python applications. It's designed to provide an API to transform your JSX files into JavaScript, as well as provide access to the latest React source files.\n\n## Usage\n\nTransform your JSX files via the provided `jsx` module:\n\n```python\nfrom react import jsx\n\n# For multiple paths, use the JSXTransformer class.\ntransformer = jsx.JSXTransformer()\nfor jsx_path, js_path in my_paths:\n    transformer.transform(jsx_path, js_path)\n\n# For a single file, you can use a shortcut method.\njsx.transform('path/to/input/file.jsx', 'path/to/output/file.js')\n```\n\nFor full paths to React files, use the `source` module:\n\n```python\nfrom react import source\n\n# path_for raises IOError if the file doesn't exist.\nreact_js = source.path_for('react.min.js')\n```\n\n## Django\n\nPyReact includes a JSX compiler for [django-pipeline](https://github.com/cyberdelia/django-pipeline). Add it to your project's pipeline settings like this:\n\n```python\nPIPELINE_COMPILERS = (\n  'react.utils.pipeline.JSXCompiler',\n)\n```\n\n## Installation\n\nPyReact is hosted on PyPI, and can be installed with `pip`:\n\n    $ pip install PyReact\n\nAlternatively, add it into your `requirements` file:\n\n    PyReact==0.1.1\n\n**Dependencies**: PyReact uses [PyExecJS](https://github.com/doloopwhile/PyExecJS) to execute the bundled React code, which requires that a JS runtime environment is installed on your machine. We don't explicitly set a dependency on a runtime environment; Mac OS X comes bundled with one. If you're on a different platform, we recommend [PyV8](https://code.google.com/p/pyv8/).\n\nFor the initial release, we've only tested on Python 2.7. Look out for support for Python 3 in the future, and if you see anything that can be improved, we welcome your [contributions](https://github.com/facebook/react-python/blob/master/CONTRIBUTING.md)!\n",
        "type": "MarkdownRemark",
        "contentDigest": "50df588708e793a4d773280fbb7da34b",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Use React and JSX in Python Applications",
        "author": [
          "kmeht"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2013-08-19-use-react-and-jsx-in-python-applications.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2013-08-19-use-react-and-jsx-in-python-applications.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-08-19-use-react-and-jsx-in-python-applications.md",
      "fields": {
        "date": "2013-08-18T16:00:00.000Z",
        "slug": "/blog/2013/08/19/use-react-and-jsx-in-python-applications.html",
        "path": "blog/2013-08-19-use-react-and-jsx-in-python-applications.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-08-26-community-roundup-7.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-08-26-community-roundup-7.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2013-08-26-community-roundup-7.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Community Round-up #7\"\nauthor: [vjeux]\n---\n\nIt's been three months since we open sourced React and it is going well. Some stats so far:\n\n* 114 285 unique visitors on this website\n* [1933 stars](https://github.com/facebook/react/stargazers) and [210 forks](https://github.com/facebook/react/network/members)\n* [226 posts on Google Group](https://groups.google.com/forum/#!forum/reactjs)\n* [76 GitHub projects using React](https://gist.github.com/vjeux/6335762)\n* [30 contributors](https://github.com/facebook/react/graphs/contributors)\n* [15 blog posts](/blog/)\n* 2 early adopters: [Khan Academy](http://sophiebits.com/2013/06/09/using-react-to-speed-up-khan-academy.html) and [Propeller](http://usepropeller.com/blog/posts/from-backbone-to-react/)\n\n\n## Wolfenstein Rendering Engine Ported to React\n\n[Pete Hunt](http://www.petehunt.net/) ported the render code of the web version of Wolfenstein 3D to React. Check out [the demo](http://www.petehunt.net/wolfenstein3D-react/wolf3d.html) and [render.js](https://github.com/petehunt/wolfenstein3D-react/blob/master/js/renderer.js#L183) file for the implementation.\n<figure><a href=\"http://www.petehunt.net/wolfenstein3D-react/wolf3d.html\"><img src=\"../images/blog/wolfenstein_react.png\"></a></figure>\n\n\n## React & Meteor\n\n[Ben Newman](https://twitter.com/benjamn) made a [13-lines wrapper](https://github.com/benjamn/meteor-react/blob/master/lib/mixin.js) to use React and Meteor together. [Meteor](http://www.meteor.com/) handles the real-time data synchronization between client and server. React provides the declarative way to write the interface and only updates the parts of the UI that changed.\n\n> This repository defines a Meteor package that automatically integrates the React rendering framework on both the client and the server, to complement or replace the default Handlebars templating system.\n>\n> The React core is officially agnostic about how you fetch and update your data, so it is far from obvious which approach is the best. This package provides one answer to that question (use Meteor!), and I hope you will find it a compelling combination.\n>\n>```javascript\n>var MyComponent = React.createClass({\n>  mixins: [MeteorMixin],\n>\n>  getMeteorState: function() {\n>    return { foo: Session.get('foo') };\n>  },\n>\n>  render: function() {\n>    return <div>{this.state.foo}</div>;\n>  }\n>});\n>```\n>\n> Dependencies will be registered for any data accesses performed by getMeteorState so that the component can be automatically re-rendered whenever the data changes.\n>\n> [Read more ...](https://github.com/benjamn/meteor-react)\n\n## React Page\n\n[Jordan Walke](https://github.com/jordwalke) implemented a complete React project creator called [react-page](https://github.com/facebook/react-page/). It supports both server-side and client-side rendering, source transform and packaging JSX files using CommonJS modules, and instant reload.\n\n> Easy Application Development with React JavaScript\n> <figure><a href=\"https://github.com/facebook/react-page/\"><img src=\"../images/blog/react-page.png\"></a></figure>\n>\n> **Why Server Rendering?**\n>\n> * Faster initial page speed:\n>   * Markup displayed before downloading large JavaScript.\n>   * Markup can be generated more quickly on a fast server than low power client devices.\n> * Faster Development and Prototyping:\n>   * Instantly refresh your app without waiting for any watch scripts or bundlers.\n> * Easy deployment of static content pages/blogs: just archive using recursive wget.\n> * SEO benefits of indexability and perf.\n>\n> **How Does Server Rendering Work?**\n>\n> * `react-page` computes page markup on the server, sends it to the client so the user can see it quickly.\n> * The corresponding JavaScript is then packaged and sent.\n> * The browser runs that JavaScript, so that all of the event handlers, interactions and update code will run seamlessly on top of the server generated markup.\n> * From the developer's (and the user's) perspective, it's just as if the rendering occurred on the client, only faster.\n>\n> [Try it out ...](https://github.com/facebook/react-page/)\n",
        "type": "MarkdownRemark",
        "contentDigest": "ca60fa3c0d6e352fb8f93350adf0725a",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Community Round-up #7",
        "author": [
          "vjeux"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2013-08-26-community-roundup-7.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2013-08-26-community-roundup-7.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-08-26-community-roundup-7.md",
      "fields": {
        "date": "2013-08-25T16:00:00.000Z",
        "slug": "/blog/2013/08/26/community-roundup-7.html",
        "path": "blog/2013-08-26-community-roundup-7.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-09-24-community-roundup-8.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-09-24-community-roundup-8.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2013-09-24-community-roundup-8.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Community Round-up #8\"\nauthor: [vjeux]\n---\n\nA lot has happened in the month since our last update. Here are some of the more interesting things we've found. But first, we have a couple updates before we share links.\n\nFirst, we are organizing a [React Hackathon](http://reactjshack-a-thon.splashthat.com/) in Facebook's Seattle office on Saturday September 28. If you want to hack on React, meet some of the team or win some prizes, feel free to join us!\n\nWe've also reached a point where there are too many questions for us to handle directly. We're encouraging people to ask questions on [StackOverflow](http://stackoverflow.com/questions/tagged/reactjs) using the tag [[reactjs]](http://stackoverflow.com/questions/tagged/reactjs). Many members of the team and community have subscribed to the tag, so feel free to ask questions there. We think these will be more discoverable than Google Groups archives or IRC logs.\n\n## JavaScript Jabber\n\n[Pete Hunt](http://www.petehunt.net/) and [Jordan Walke](https://github.com/jordwalke) were interviewed on [JavaScript Jabber](http://javascriptjabber.com/073-jsj-react-with-pete-hunt-and-jordan-walke/) for an hour.  They go over many aspects of React such as 60 FPS, Data binding, Performance, Diffing Algorithm, DOM Manipulation, Node.js support, server-side rendering, JSX, requestAnimationFrame and the community. This is a gold mine of information about React.\n\n> **PETE:**  So React was designed all around that. Conceptually, how you build a React app is that every time your data changes, it's like hitting the refresh button in a server-rendered app. What we do is we conceptually throw out all of the markup and event handlers that you've registered and we reset the whole page and then we redraw the entire page. If you're writing a server-rendered app, handling updates is really easy because you hit the refresh button and you're pretty much guaranteed to get what you expect.\n>\n> **MERRICK:**  That's true. You don't get into these odd states.\n>\n> **PETE:**  Exactly, exactly. In order to implement that, we communicate it as a fake DOM. What we'll do is rather than throw out the actual browser html and event handlers, we have an internal representation of what the page looks like and then we generate a brand new representation of what we want the page to look like. Then we perform this really, really fast diffing algorithm between those two page representations, DOM representations. Then React will compute the minimum set of DOM mutations it needs to make to bring the page up to date.\n>\n> Then to finally get to answer your question, that set of DOM mutations then goes into a queue and we can plug in arbitrary flushing strategies for that. For example, when we originally launched React in open source, every setState would immediately trigger a flush to the DOM. That wasn't part of the contract of setState, but that was just our strategy and it worked pretty well. Then this totally awesome open source contributor Sophie Alpert at Khan Academy built a new batching strategy which would basically queue up every single DOM update and state change that happened within an event tick and would execute them in bulk at the end of the event tick.\n>\n> [Read the full conversation ...](http://javascriptjabber.com/073-jsj-react-with-pete-hunt-and-jordan-walke/)\n\n\n## JSXTransformer Trick\n\nWhile this is not going to work for all the attributes since they are camelCased in React, this is a pretty cool trick.\n\n<div style=\"margin-left: 74px;\"><blockquote class=\"twitter-tweet\"><p>Turn any DOM element into a React.js function: JSXTransformer.transform(&quot;/** <a href=\"https://twitter.com/jsx\">@jsx</a> React.DOM */&quot; + element.innerHTML).code</p>&mdash; Ross Allen (@ssorallen) <a href=\"https://twitter.com/ssorallen/statuses/377105575441489920\">September 9, 2013</a></blockquote></div>\n\n## Remarkable React\n\n[Stoyan Stefanov](http://www.phpied.com/) gave a talk at [BrazilJS](http://braziljs.com.br/) about React and wrote an article with the content of the presentation. He goes through the difficulties of writing _active apps_ using the DOM API and shows how React handles it.\n\n> So how does exactly React deal with it internally? Two crazy ideas - virtual DOM and synthetic events.\n>\n> You define you components in React. It builds a virtual DOM in JavaScript land which is way more efficient. Then it updates the DOM. (And \"virtual DOM\" is a very big name for what is simply a JavaScript object with nested key-value pairs)\n>\n> Data changes. React computes a diff (in JavaScript land, which is, of course, much more efficient) and updates the single table cell that needs to change. React replicates the state of the virtual DOM into the actual DOM only when and where it's necessary. And does it all at once, in most cases in a single tick of the `requestAnimationFrame()`.\n>\n> What about event handlers? They are synthetic. React uses event delegation to listen way at the top of the React tree. So removing a node in the virtual DOM has no effect on the event handling.\n>\n> The events are automatically cross-browser (they are React events). They are also much closer to W3C than any browser. That means that for example `e.target` works, no need to look for the event object or checking whether it's `e.target` or `e.srcElement` (IE). Bubbling and capturing phases also work cross browser. React also takes the liberty of making some small fixes, e.g. the event `<input onChange>` fires when you type, not when blur away from the input. And of course, event delegation is used as the most efficient way to handle events. You know that \"thou shall use event delegation\" is also commonly given advice for making web apps snappy.\n>\n> The good thing about the virtual DOM is that it's all in JavaScript land. You build all your UI in JavaScript. Which means it can be rendered on the server side, so you initial view is fast (and any SEO concerns are addressed). Also, if there are especially heavy operations they can be threaded into WebWorkers, which otherwise have no DOM access.\n>\n> [Read More ...](http://www.phpied.com/remarkable-react/)\n\n\n## Markdown in React\n\n[Sophie Alpert](http://sophiebits.com/) converted [marked](https://github.com/chjj/marked), a Markdown JavaScript implementation, in React: [marked-react](https://github.com/sophiebits/marked-react). Even without using JSX, the HTML generation is now a lot cleaner. It is also safer as forgetting a call to `escape` will not introduce an XSS vulnerability.\n<figure><a href=\"https://github.com/sophiebits/marked-react/commit/cb70c9df6542c7c34ede9efe16f9b6580692a457\"><img src=\"../images/blog/markdown_refactor.png\"></a></figure>\n\n\n## Unite from BugBusters\n\n[Renault John Lecoultre](https://twitter.com/renajohn) wrote [Unite](https://www.bugbuster.com/), an interactive tool for analyzing code dynamically using React. It integrates with CodeMirror.\n<figure><a href=\"https://unite.bugbuster.com/\"><img src=\"../images/blog/unite.png\"></a></figure>\n\n## #reactjs IRC Logs\n\n[Vjeux](http://blog.vjeux.com/) re-implemented the display part of the IRC logger in React. Just 130 lines are needed for a performant infinite scroll with timestamps and color-coded author names.\n\n[View the source on JSFiddle...](http://jsfiddle.net/vjeux/QL9tz)\n",
        "type": "MarkdownRemark",
        "contentDigest": "8b5f094d6b88e5af011ce95cc2e183d8",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Community Round-up #8",
        "author": [
          "vjeux"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2013-09-24-community-roundup-8.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2013-09-24-community-roundup-8.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-09-24-community-roundup-8.md",
      "fields": {
        "date": "2013-09-23T16:00:00.000Z",
        "slug": "/blog/2013/09/24/community-roundup-8.html",
        "path": "blog/2013-09-24-community-roundup-8.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-10-16-react-v0.5.0.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-10-16-react-v0.5.0.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2013-10-16-react-v0.5.0.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v0.5\"\nauthor: [zpao]\n---\n\nThis release is the result of several months of hard work from members of the team and the community. While there are no groundbreaking changes in core, we've worked hard to improve performance and memory usage. We've also worked hard to make sure we are being consistent in our usage of DOM properties.\n\nThe biggest change you'll notice as a developer is that we no longer support `class` in JSX as a way to provide CSS classes. Since this prop was being converted to `className` at the transform step, it caused some confusion when trying to access it in composite components. As a result we decided to make our DOM properties mirror their counterparts in the JS DOM API. There are [a few exceptions](https://github.com/facebook/react/blob/master/src/dom/DefaultDOMPropertyConfig.js#L156) where we deviate slightly in an attempt to be consistent internally.\n\nThe other major change in v0.5 is that we've added an additional build - `react-with-addons` - which adds support for some extras that we've been working on including animations and two-way binding. [Read more about these addons in the docs](/docs/addons.html).\n\n## Thanks to Our Community\n\nWe added *22 new people* to the list of authors since we launched React v0.4.1 nearly 3 months ago. With a total of 48 names in our `AUTHORS` file, that means we've nearly doubled the number of contributors in that time period. We've seen the number of people contributing to discussion on IRC, mailing lists, Stack Overflow, and GitHub continue rising. We've also had people tell us about talks they've given in their local community about React.\n\nIt's been awesome to see the things that people are building with React, and we can't wait to see what you come up with next!\n\n\n## Changelog\n\n### React\n\n* Memory usage improvements - reduced allocations in core which will help with GC pauses\n* Performance improvements - in addition to speeding things up, we made some tweaks to stay out of slow path code in V8 and Nitro.\n* Standardized prop -> DOM attribute process. This previously resulting in additional type checking and overhead as well as confusing cases for users. Now we will always convert your value to a string before inserting it into the DOM.\n* Support for Selection events.\n* Support for [Composition events](https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent).\n* Support for additional DOM properties (`charSet`, `content`, `form`, `httpEquiv`, `rowSpan`, `autoCapitalize`).\n* Support for additional SVG properties (`rx`, `ry`).\n* Support for using `getInitialState` and `getDefaultProps` in mixins.\n* Support mounting into iframes.\n* Bug fixes for controlled form components.\n* Bug fixes for SVG element creation.\n* Added `React.version`.\n* Added `React.isValidClass` - Used to determine if a value is a valid component constructor.\n* Removed `React.autoBind` - This was deprecated in v0.4 and now properly removed.\n* Renamed  `React.unmountAndReleaseReactRootNode` to `React.unmountComponentAtNode`.\n* Began laying down work for refined performance analysis.\n* Better support for server-side rendering - [react-page](https://github.com/facebook/react-page) has helped improve the stability for server-side rendering.\n* Made it possible to use React in environments enforcing a strict [Content Security Policy](https://developer.mozilla.org/en-US/docs/Security/CSP/Introducing_Content_Security_Policy). This also makes it possible to use React to build Chrome extensions.\n\n### React with Addons (New!)\n\n* Introduced a separate build with several \"addons\" which we think can help improve the React experience. We plan to deprecate this in the long-term, instead shipping each as standalone pieces. [Read more in the docs](/docs/addons.html).\n\n### JSX\n\n* No longer transform `class` to `className` as part of the transform! This is a breaking change - if you were using `class`, you *must* change this to `className` or your components will be visually broken.\n* Added warnings to the in-browser transformer to make it clear it is not intended for production use.\n* Improved compatibility for Windows\n* Improved support for maintaining line numbers when transforming.\n",
        "type": "MarkdownRemark",
        "contentDigest": "a5f1e5c5827c3164f15e5a3ccb6994a1",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.5",
        "author": [
          "zpao"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2013-10-16-react-v0.5.0.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2013-10-16-react-v0.5.0.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-10-16-react-v0.5.0.md",
      "fields": {
        "date": "2013-10-15T16:00:00.000Z",
        "slug": "/blog/2013/10/16/react-v0.5.0.html",
        "path": "blog/2013-10-16-react-v0.5.0.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-10-29-react-v0-5-1.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-10-29-react-v0-5-1.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2013-10-29-react-v0-5-1.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v0.5.1\"\nauthor: [zpao]\n---\n\nThis release focuses on fixing some small bugs that have been uncovered over the past two weeks. I would like to thank everybody involved, specifically members of the community who fixed half of the issues found. Thanks to [Sophie Alpert][1], [Andrey Popp][2], and [Laurence Rowe][3] for their contributions!\n\n## Changelog\n\n### React\n\n* Fixed bug with `<input type=\"range\">` and selection events.\n* Fixed bug with selection and focus.\n* Made it possible to unmount components from the document root.\n* Fixed bug for `disabled` attribute handling on non-`<input>` elements.\n\n### React with Addons\n\n* Fixed bug with transition and animation event detection.\n\n[1]: https://github.com/sophiebits\n[2]: https://github.com/andreypopp\n[3]: https://github.com/lrowe\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "58dfeebd0ff5bd2a87b263be6a6ee8e5",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.5.1",
        "author": [
          "zpao"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2013-10-29-react-v0-5-1.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2013-10-29-react-v0-5-1.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-10-29-react-v0-5-1.md",
      "fields": {
        "date": "2013-10-28T16:00:00.000Z",
        "slug": "/blog/2013/10/29/react-v0-5-1.html",
        "path": "blog/2013-10-29-react-v0-5-1.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-10-3-community-roundup-9.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-10-3-community-roundup-9.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2013-10-3-community-roundup-9.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Community Round-up #9\"\nauthor: [vjeux]\n---\n\nWe organized a React hackathon last week-end in the Facebook Seattle office. 50 people, grouped into 15 teams, came to hack for a day on React. It was a lot of fun and we'll probably organize more in the future.\n\n![](../images/blog/react-hackathon.jpg)\n\n\n## React Hackathon Winner\n\n[Alex Swan](http://bold-it.com/) implemented [Qu.izti.me](http://qu.izti.me/), a multi-player quiz game. It is real-time via Web Socket and mobile friendly.\n\n> The game itself is pretty simple. People join the \"room\" by going to [http://qu.izti.me](http://qu.izti.me/) on their device. Large displays will show a leaderboard along with the game, and small displays (such as phones) will act as personal gamepads. Users will see questions and a choice of answers. The faster you answer, the more points you earn.\n>\n> In my opinion, Socket.io and React go together like chocolate and peanut butter. The page was always an accurate representation of the game object.\n><figure><a href=\"http://bold-it.com/javascript/facebook-react-example/\"><img src=\"../images/blog/quiztime.png\"></a></figure>\n>\n> [Read More...](http://bold-it.com/javascript/facebook-react-example/)\n\n## JSConf EU Talk: Rethinking Best Practices\n\n[Pete Hunt](http://www.petehunt.net/) presented React at JSConf EU. He covers three controversial design decisions of React:\n\n1. Build **components**, not templates\n2. Re-render the whole app on every update\n3. Virtual DOM\n\nThe video will be available soon on the [JSConf EU website](http://2013.jsconf.eu/speakers/pete-hunt-react-rethinking-best-practices.html), but in the meantime, here are Pete's slides:\n\n<figure><iframe src=\"https://www.slideshare.net/slideshow/embed_code/26589373\" width=\"100%\" height=\"450\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" allowfullscreen></iframe></figure>\n\n\n## Pump - Clojure bindings for React\n\n[Alexander Solovyov](http://solovyov.net/) has been working on React bindings for ClojureScript. This is really exciting as it is using \"native\" ClojureScript data structures.\n\n```ruby\n(ns your.app\n  (:require-macros [pump.def-macros :refer [defr]])\n  (:require [pump.core]))\n\n(defr Component\n  :get-initial-state #(identity {:some-value \"\"})\n\n  [component props state]\n\n  [:div {:class-name \"test\"} \"hello\"])\n```\n\n[Check it out on GitHub...](https://github.com/piranha/pump)\n\n\n## JSXHint\n\n[Todd Kennedy](http://blog.selfassembled.org/) working at [Cond&eacute; Nast](http://www.condenast.com/) implemented a wrapper on-top of [JSHint](http://www.jshint.com/) that first converts JSX files to JS.\n\n> A wrapper around JSHint to allow linting of files containing JSX syntax. Accepts glob patterns. Respects your local .jshintrc file and .gitignore to filter your glob patterns.\n>\n> ```\n> npm install -g jsxhint\n> ```\n>\n> [Check it out on GitHub...](https://github.com/CondeNast/JSXHint)\n\n\n## Turbo React\n\n[Ross Allen](https://twitter.com/ssorallen) working at [Mesosphere](http://mesosphere.io/) combined [Turbolinks](https://github.com/rails/turbolinks/), a library used by Ruby on Rails to speed up page transition, and React.\n\n> \"Re-request this page\" is just a link to the current page. When you click it, Turbolinks intercepts the GET request and fetchs the full page via XHR.\n>\n> The panel is rendered with a random panel- class on each request, and the progress bar gets a random widthX class.\n>\n> With Turbolinks alone, the entire <body> would be replaced, and transitions would not happen. In this little demo though, React adds and removes classes and text, and the attribute changes are animated with CSS transitions. The DOM is otherwise left intact.\n><figure><a href=\"https://turbo-react.herokuapp.com/\"><img src=\"../images/blog/turboreact.png\"></a></figure>\n>\n> [Check out the demo...](https://turbo-react.herokuapp.com/)\n\n\n## Reactive Table\n\n[Stoyan Stefanov](http://www.phpied.com/) continues his series of blog posts about React. This one is an introduction tutorial on rendering a simple table with React.\n\n> React is all about components. So let's build one.\n>\n> Let's call it Table (to avoid any confusion what the component is about).\n>\n> ```javascript\n> var Table = React.createClass({\n>   /*stuff goeth here*/\n> });\n> ```\n>\n> You see that React components are defined using a regular JS object. Some properties and methods of the object such as render() have special meanings, the rest is upforgrabs.\n>\n> [Read the full article...](http://www.phpied.com/reactive-table/)\n",
        "type": "MarkdownRemark",
        "contentDigest": "3bbcad4ed2404fdfec11ab420f5eba12",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Community Round-up #9",
        "author": [
          "vjeux"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2013-10-3-community-roundup-9.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2013-10-3-community-roundup-9.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-10-3-community-roundup-9.md",
      "fields": {
        "date": "2013-10-02T16:00:00.000Z",
        "slug": "/blog/2013/10/3/community-roundup-9.html",
        "path": "blog/2013-10-3-community-roundup-9.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-11-18-community-roundup-11.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-11-18-community-roundup-11.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2013-11-18-community-roundup-11.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Community Round-up #11\"\nauthor: [vjeux]\n---\n\nThis round-up is the proof that React has taken off from its Facebook's root: it features three in-depth presentations of React done by external people. This is awesome, keep them coming!\n\n## Super VanJS 2013 Talk\n\n[Steve Luscher](https://github.com/steveluscher) working at [LeanPub](https://leanpub.com/) made a 30 min talk at [Super VanJS](https://twitter.com/vanjs). He does a remarkable job at explaining why React is so fast with very exciting demos using the HTML5 Audio API.\n\n<figure><iframe width=\"650\" height=\"338\" src=\"//www.youtube-nocookie.com/embed/1OeXsL5mr4g\" frameborder=\"0\" allowfullscreen></iframe></figure>\n\n\n## React Tips\n\n[Connor McSheffrey](http://connormcsheffrey.com/) and [Cheng Lou](https://github.com/chenglou) added a new section to the documentation. It's a list of small tips that you will probably find useful while working on React. Since each article is very small and focused, we [encourage you to contribute](/tips/introduction.html)!\n\n- [Inline Styles](/tips/inline-styles.html)\n- [If-Else in JSX](/tips/if-else-in-JSX.html)\n- [Self-Closing Tag](/tips/self-closing-tag.html)\n- [Maximum Number of JSX Root Nodes](/tips/maximum-number-of-jsx-root-nodes.html)\n- [Shorthand for Specifying Pixel Values in style props](/tips/style-props-value-px.html)\n- [Type of the Children props](/tips/children-props-type.html)\n- [Value of null for Controlled Input](/tips/controlled-input-null-value.html)\n- [`componentWillReceiveProps` Not Triggered After Mounting](/tips/componentWillReceiveProps-not-triggered-after-mounting.html)\n- [Props in getInitialState Is an Anti-Pattern](/tips/props-in-getInitialState-as-anti-pattern.html)\n- [DOM Event Listeners in a Component](/tips/dom-event-listeners.html)\n- [Load Initial Data via AJAX](/tips/initial-ajax.html)\n- [False in JSX](/tips/false-in-jsx.html)\n\n\n## Intro to the React Framework\n\n[Pavan Podila](http://blog.pixelingene.com/) wrote an in-depth introduction to React on TutsPlus. This is definitively worth reading.\n\n> Within a component-tree, data should always flow down. A parent-component should set the props of a child-component to pass any data from the parent to the child. This is termed as the Owner-Owned pair. On the other hand user-events (mouse, keyboard, touches) will always bubble up from the child all the way to the root component, unless handled in between.\n<figure><a href=\"http://dev.tutsplus.com/tutorials/intro-to-the-react-framework--net-35660\"><img src=\"../images/blog/tutsplus.png\"></a></figure>\n>\n> [Read the full article ...](http://dev.tutsplus.com/tutorials/intro-to-the-react-framework--net-35660)\n\n\n## 140-characters textarea\n\n[Brian Kim](https://github.com/brainkim) wrote a small textarea component that gradually turns red as you reach the 140-characters limit. Because he only changes the background color, React is smart enough not to mess with the text selection.\n\n<p data-height=\"178\" data-theme-id=\"0\" data-slug-hash=\"FECGb\" data-user=\"brainkim\" data-default-tab=\"result\" class='codepen'>See the Pen <a href='http://codepen.io/brainkim/pen/FECGb'>FECGb</a> by Brian Kim (<a href='http://codepen.io/brainkim'>@brainkim</a>) on <a href='http://codepen.io'>CodePen</a></p>\n<script async src=\"//codepen.io/assets/embed/ei.js\"></script>\n\n\n## Genesis Skeleton\n\n[Eric Clemmons](https://ericclemmons.github.io/) is working on a \"Modern, opinionated, full-stack starter kit for rapid, streamlined application development\". The version 0.4.0 has just been released and has first-class support for React.\n<figure><a href=\"http://genesis-skeleton.com/\"><img src=\"../images/blog/genesis_skeleton.png\"></a>a></figure>\n\n\n## AgFlow Talk\n\n[Robert Zaremba](http://rz.scale-it.pl/) working on [AgFlow](http://www.agflow.com/) recently talked in Poland about React.\n\n> In a nutshell, I presented why we chose React among other available options (ember.js, angular, backbone ...) in AgFlow, where I’m leading an application development.\n>\n> During the talk a wanted to highlight that React is not about implementing a Model, but a way to construct visible components with some state. React is simple. It is super simple, you can learn it in 1h. On the other hand what is model? Which functionality it should provide? React does one thing and does it the best (for me)!\n>\n> [Read the full article...](http://rz.scale-it.pl/2013/10/20/frontend_components_in_react.html)\n\n<figure><iframe src=\"https://docs.google.com/presentation/d/1JSFbjCuuexwOHCeHWBMNRIJdyfD2Z0ZQwX65WOWkfaI/embed?start=false\" frameborder=\"0\" width=\"100%\" height=\"468\" allowfullscreen=\"true\" mozallowfullscreen=\"true\" webkitallowfullscreen=\"true\"> </iframe></figure>\n\n\n## JSX\n\n[Todd Kennedy](http://tck.io/) working at Cond&eacute; Nast wrote [JSXHint](https://github.com/CondeNast/JSXHint) and explains in a blog post his perspective on JSX.\n\n> Lets start with the elephant in the room: JSX?\n> Is this some sort of template language? Specifically no. This might have been the first big stumbling block. What looks like to be a templating language is actually an in-line DSL that gets transpiled directly into JavaScript by the JSX transpiler.\n>\n> Creating elements in memory is quick -- copying those elements into the DOM is where the slowness occurs. This is due to a variety of issues, most namely reflow/paint. Changing the items in the DOM causes the browser to re-paint the display, apply styles, etc. We want to keep those operations to an absolute minimum, especially if we're dealing with something that needs to update the DOM frequently.\n>\n> [Read the full article...](http://tck.io/posts/jsxhint_and_react.html)\n\n\n## Photo Gallery\n\n[Maykel Loomans](http://miekd.com/), designer at Instagram, wrote a gallery for photos he shot using React.\n<figure><a href=\"http://photos.miekd.com/xoxo2013/\"><img src=\"../images/blog/xoxo2013.png\"></a>a></figure>\n\n\n## Random Tweet\n\n<img src=\"../images/blog/steve_reverse.gif\" style=\"float: right;\" />\n<div style=\"width: 320px;\"><blockquote class=\"twitter-tweet\"><p>I think this reversed gif of Steve Urkel best describes my changing emotions towards the React Lib <a href=\"http://t.co/JoX0XqSXX3\">http://t.co/JoX0XqSXX3</a></p>&mdash; Ryan Seddon (@ryanseddon) <a href=\"https://twitter.com/ryanseddon/statuses/398572848802852864\">November 7, 2013</a></blockquote></div>\n",
        "type": "MarkdownRemark",
        "contentDigest": "6281af0c7adc2db4e4477b8c89be9ac0",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Community Round-up #11",
        "author": [
          "vjeux"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2013-11-18-community-roundup-11.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2013-11-18-community-roundup-11.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-11-18-community-roundup-11.md",
      "fields": {
        "date": "2013-11-17T16:00:00.000Z",
        "slug": "/blog/2013/11/18/community-roundup-11.html",
        "path": "blog/2013-11-18-community-roundup-11.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-12-18-react-v0.5.2-v0.4.2.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-12-18-react-v0.5.2-v0.4.2.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2013-12-18-react-v0.5.2-v0.4.2.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v0.5.2, v0.4.2\"\nauthor: [zpao]\n---\n\nToday we're releasing an update to address a potential XSS vulnerability that can\t arise when using user data as a `key`. Typically \"safe\" data is used for a `key`, for example, an id from your database, or a unique hash. However there are cases where it may be reasonable to use user generated content. A carefully crafted piece of content could result in arbitrary JS execution. While we make a very concerted effort to ensure all text is escaped before inserting it into the DOM, we missed one case. Immediately following the discovery of this vulnerability, we performed an audit to ensure we this was the only such vulnerability.\n\nThis only affects v0.5.x and v0.4.x. Versions in the 0.3.x family are unaffected.\n\nUpdated versions are available for immediate download via npm, bower, and on our [download page][download].\n\nWe take security very seriously at Facebook. For most of our products, users don't need to know that a security issue has been fixed. But with libraries like React, we need to make sure developers using React have access to fixes to keep their users safe.\n\nWhile we've encouraged responsible disclosure as part of [Facebook's whitehat bounty program][bounty] since we launched, we don't have a good process for notifying our users. Hopefully we don't need to use it, but moving forward we'll set up a little bit more process to ensure the safety of our users. Ember.js has [an excellent policy][ember] which we may use as our model.\n\nYou can learn more about the vulnerability discussed here: [CVE-2013-7035][cve].\n\n[download]: /react/downloads.html\n[bounty]: https://www.facebook.com/whitehat/\n[ember]: http://emberjs.com/security/\n[cve]: https://groups.google.com/forum/#!topic/reactjs/OIqxlB2aGfU\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "483b4a0d7bc68acf18996526b3de6b56",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.5.2, v0.4.2",
        "author": [
          "zpao"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2013-12-18-react-v0.5.2-v0.4.2.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2013-12-18-react-v0.5.2-v0.4.2.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-12-18-react-v0.5.2-v0.4.2.md",
      "fields": {
        "date": "2013-12-17T16:00:00.000Z",
        "slug": "/blog/2013/12/18/react-v0.5.2-v0.4.2.html",
        "path": "blog/2013-12-18-react-v0.5.2-v0.4.2.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-12-19-react-v0.8.0.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-12-19-react-v0.8.0.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2013-12-19-react-v0.8.0.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v0.8\"\nauthor: [zpao]\n---\n\nI'll start by answering the obvious question:\n\n> What happened to 0.6 and 0.7?\n\nIt's become increasingly obvious since our launch in May that people want to use React on the server. With the server-side rendering abilities, that's a perfect fit. However using the same copy of React on the server and then packaging it up for the client is surprisingly a harder problem. People have been using our `react-tools` module which includes React, but when browserifying that ends up packaging all of `esprima` and some other dependencies that aren't needed on the client. So we wanted to make this whole experience better.\n\nWe talked with [Jeff Barczewski][jeff] who was the owner of the `react` module on npm. He was kind enough to transition ownership to us and release his package under a different name: `autoflow`. I encourage you to [check it out][autoflow] if you're writing a lot of asynchronous code. In order to not break all of `react`'s current users of 0.7.x, we decided to bump our version to 0.8 and skip the issue entirely. We're also including a warning if you use our `react` module like you would use the previous package.\n\nIn order to make the transition to 0.8 for our current users as painless as possible, we decided to make 0.8 primarily a bug fix release on top of 0.5. No public APIs were changed (even if they were already marked as deprecated). We haven't added any of the new features we have in master, though we did take the opportunity to pull in some improvements to internals.\n\nWe hope that by releasing `react` on npm, we will enable a new set of uses that have been otherwise difficult. All feedback is welcome!\n\n\n## Changelog\n\n### React\n\n* Added support for more attributes:\n  * `rows` & `cols` for `<textarea>`\n  * `defer` & `async` for `<script>`\n  * `loop` for `<audio>` & `<video>`\n  * `autoCorrect` for form fields (a non-standard attribute only supported by mobile WebKit)\n* Improved error messages\n* Fixed Selection events in IE11\n* Added `onContextMenu` events\n\n### React with Addons\n\n* Fixed bugs with TransitionGroup when children were undefined\n* Added support for `onTransition`\n\n### react-tools\n\n* Upgraded `jstransform` and `esprima-fb`\n\n### JSXTransformer\n\n* Added support for use in IE8\n* Upgraded browserify, which reduced file size by ~65KB (16KB gzipped)\n\n[jeff]: https://github.com/jeffbski\n[autoflow]: https://github.com/jeffbski/autoflow\n",
        "type": "MarkdownRemark",
        "contentDigest": "529f9a17af221ff4d5f3d068fafa7230",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.8",
        "author": [
          "zpao"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2013-12-19-react-v0.8.0.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2013-12-19-react-v0.8.0.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-12-19-react-v0.8.0.md",
      "fields": {
        "date": "2013-12-18T16:00:00.000Z",
        "slug": "/blog/2013/12/19/react-v0.8.0.html",
        "path": "blog/2013-12-19-react-v0.8.0.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-12-23-community-roundup-12.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-12-23-community-roundup-12.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2013-12-23-community-roundup-12.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Community Round-up #12\"\nauthor: [vjeux]\n---\n\nReact got featured on the front-page of Hacker News thanks to the Om library. If you try it out for the first time, take a look at the [docs](/docs/getting-started.html) and do not hesitate to ask questions on the [Google Group](https://groups.google.com/group/reactjs), [IRC](irc://chat.freenode.net/reactjs) or [Stack Overflow](http://stackoverflow.com/questions/tagged/reactjs). We are trying our best to help you out!\n\n## The Future of JavaScript MVC\n\n[David Nolen](https://swannodette.github.io/) announced Om, a thin wrapper on-top of React in ClojureScript. It stands out by only using immutable data structures. This unlocks the ability to write a very efficient [shouldComponentUpdate](/docs/component-specs.html#updating-shouldcomponentupdate) and get huge performance improvements on some tasks.\n\n> We've known this for some time over here in the ClojureScript corner of the world - all of our collections are immutable and modeled directly on the original Clojure versions written in Java. Modern JavaScript engines have now been tuned to the point that it's no longer uncommon to see collection performance within 2.5X of the Java Virtual Machine.\n>\n> Wait, wait, wait. What does the performance of persistent data structures have to do with the future of JavaScript MVCs?\n>\n> A whole lot.\n> <figure><a href=\"https://swannodette.github.io/2013/12/17/the-future-of-javascript-mvcs/\"><img src=\"../images/blog/om-backbone.png\"></a></figure>\n>\n> [Read the full article...](https://swannodette.github.io/2013/12/17/the-future-of-javascript-mvcs/)\n\n\n\n## Scroll Position with React\n\nManaging the scroll position when new content is inserted is usually very tricky to get right. [Vjeux](http://blog.vjeux.com/) discovered that [componentWillUpdate](/docs/component-specs.html#updating-componentwillupdate) and [componentDidUpdate](/docs/component-specs.html#updating-componentdidupdate) were triggered exactly at the right time to manage the scroll position.\n\n> We can check the scroll position before the component has updated with componentWillUpdate and scroll if necessary at componentDidUpdate\n>\n> ```js\n> componentWillUpdate: function() {\n>   var node = this.getDOMNode();\n>   this.shouldScrollBottom =\n>     (node.scrollTop + node.offsetHeight) === node.scrollHeight;\n> },\n> componentDidUpdate: function() {\n>   if (this.shouldScrollBottom) {\n>     var node = this.getDOMNode();\n>     node.scrollTop = node.scrollHeight\n>   }\n> },\n> ```\n>\n> [Check out the blog article...](http://blog.vjeux.com/2013/javascript/scroll-position-with-react.html)\n\n\n## Lights Out\n\nReact declarative approach is well suited to write games. [Cheng Lou](https://github.com/chenglou) wrote the famous Lights Out game in React. It's a good example of use of [TransitionGroup](/docs/animation.html) to implement animations.\n<figure><a href=\"https://chenglou.github.io/react-lights-out/\"><img src=\"../images/blog/lights-out.png\"></a></figure>\n\n[Try it out!](https://chenglou.github.io/react-lights-out/)\n\n\n## Reactive Table Bookmarklet\n\n[Stoyan Stefanov](http://www.phpied.com/) wrote a bookmarklet to process tables on the internet. It adds a little \"pop\" button that expands to a full-screen view with sorting, editing and export to csv and json.\n<figure><a href=\"http://www.phpied.com/reactivetable-bookmarklet/\"><img src=\"../images/blog/reactive-bookmarklet.png\"></a></figure>\n\n[Check out the blog post...](http://www.phpied.com/reactivetable-bookmarklet/)\n\n\n## MontageJS Tutorial in React\n\n[Ross Allen](https://twitter.com/ssorallen) implemented [MontageJS](http://montagejs.org/)'s [Reddit tutorial](http://montagejs.org/docs/tutorial-reddit-client-with-montagejs.html) in React. This is a good opportunity to compare the philosophies of the two libraries.\n\n[View the source on JSFiddle...](https://jsfiddle.net/ssorallen/fEsYt/)\n\n## Writing Good React Components\n\n[William Högman Rudenmalm](http://blog.whn.se/) wrote an article on how to write good React components. This is full of good advice.\n\n> The idea of dividing software into smaller parts or components is hardly new - It is the essance of good software. The same principles that apply to software in general apply to building React components. That doesn’t mean that writing good React components is just about applying general rules.\n>\n> The web offers a unique set of challenges, which React offers interesting solutions to. First and foremost among these solutions is the what is called the Mock DOM. Rather than having user code interface with the DOM in a direct fashion, as is the case with most DOM manipulation libraries.\n>\n> You build a model of how you want the DOM end up like. React then inserts this model into the DOM. This is very useful for updates because React simply compares the model or mock DOM against the actual DOM, and then only updates based on the difference between the two states.\n>\n> [Read the full article ...](http://blog.whn.se/post/69621609605/writing-good-react-components)\n\n\n## Hoodie React TodoMVC\n\n[Sven Lito](http://svenlito.com/) integrated the React TodoMVC example within an [Hoodie](http://hood.ie/) web app environment. This should let you get started using Hoodie and React.\n\n```\nhoodie new todomvc -t \"hoodiehq/hoodie-react-todomvc\"\n```\n\n[Check out on GitHub...](https://github.com/hoodiehq/hoodie-react-todomvc)\n\n## JSX Compiler\n\nEver wanted to have a quick way to see what a JSX tag would be converted to? [Tim Yung](http://www.yungsters.com/) made a page for it.\n<figure><a href=\"/react/jsx-compiler.html\"><img src=\"../images/blog/jsx-compiler.png\"></a></figure>\n\n[Try it out!](/jsx-compiler.html)\n\n\n\n## Random Tweet\n\n<center><blockquote class=\"twitter-tweet\" lang=\"en\"><p>.<a href=\"https://twitter.com/jordwalke\">@jordwalke</a> lays down some truth <a href=\"http://t.co/AXAn0UlUe3\">http://t.co/AXAn0UlUe3</a>, optimizing your JS application shouldn&#39;t force you to rewrite so much code <a href=\"https://twitter.com/search?q=%23reactjs&amp;src=hash\">#reactjs</a></p>&mdash; David Nolen (@swannodette) <a href=\"https://twitter.com/swannodette/statuses/413780079249215488\">December 19, 2013</a></blockquote></center>\n",
        "type": "MarkdownRemark",
        "contentDigest": "854a8166c4a3663fb87a4dab867f9ecb",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Community Round-up #12",
        "author": [
          "vjeux"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2013-12-23-community-roundup-12.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2013-12-23-community-roundup-12.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-12-23-community-roundup-12.md",
      "fields": {
        "date": "2013-12-22T16:00:00.000Z",
        "slug": "/blog/2013/12/23/community-roundup-12.html",
        "path": "blog/2013-12-23-community-roundup-12.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-12-30-community-roundup-13.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-12-30-community-roundup-13.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2013-12-30-community-roundup-13.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Community Round-up #13\"\nauthor: [vjeux]\n---\n\nHappy holidays! This blog post is a little-late Christmas present for all the React users. Hopefully it will inspire you to write awesome web apps in 2014!\n\n\n## React Touch\n\n[Pete Hunt](http://www.petehunt.net/) wrote three demos showing that React can be used to run 60fps native-like experiences on mobile web. A frosted glass effect, an image gallery with 3d animations and an infinite scroll view.\n\n<figure><iframe src=\"//player.vimeo.com/video/79659941\" width=\"100%\" height=\"400\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe></figure>\n\n[Try out the demos!](https://petehunt.github.io/react-touch/)\n\n\n## Introduction to React\n\n[Stoyan Stefanov](http://www.phpied.com/) talked at Joe Dev On Tech about React. He goes over all the features of the library and ends with a concrete example.\n\n<figure><iframe width=\"650\" height=\"315\" src=\"//www.youtube-nocookie.com/embed/SMMRJif5QW0\" frameborder=\"0\" allowfullscreen></iframe></figure>\n\n\n## JSX: E4X The Good Parts\n\nJSX is often compared to the now defunct E4X, [Vjeux](http://blog.vjeux.com/) went over all the E4X features and explained how JSX is different and hopefully doesn't repeat the same mistakes.\n\n> E4X (ECMAScript for XML) is a JavaScript syntax extension and a runtime to manipulate XML. It was promoted by Mozilla but failed to become mainstream and is now deprecated. JSX was inspired by E4X. In this article, I'm going to go over all the features of E4X and explain the design decisions behind JSX.\n>\n> **Historical Context**\n>\n> E4X has been created in 2002 by John Schneider. This was the golden age of XML where it was being used for everything: data, configuration files, code, interfaces (DOM) ... E4X was first implemented inside of Rhino, a JavaScript implementation from Mozilla written in Java.\n>\n> [Continue reading ...](http://blog.vjeux.com/2013/javascript/jsx-e4x-the-good-parts.html)\n\n\n## React + Socket.io\n\n[Geert Pasteels](http://enome.be/nl) made a small experiment with Socket.io. He wrote a very small mixin that synchronizes React state with the server. Just include this mixin to your React component and it is now live!\n\n```javascript\nchangeHandler: function (data) {\n  if (!_.isEqual(data.state, this.state) && this.path === data.path) {\n    this.setState(data.state);\n  }\n},\ncomponentDidMount: function (root) {\n  this.path = utils.nodePath(root);\n  socket.on('component-change', this.changeHandler);\n},\ncomponentWillUpdate: function (props, state) {\n  socket.emit('component-change', { path: this.path, state: state });\n},\ncomponentWillUnmount: function () {\n  socket.removeListener('component-change', this.change);\n}\n```\n\n[Check it out on GitHub...](https://github.com/Enome/react.io)\n\n\n## cssobjectify\n\n[Andrey Popp](http://andreypopp.com/) implemented a source transform that takes a CSS file and converts it to JSON. This integrates pretty nicely with React.\n\n```javascript\n/* style.css */\nMyComponent {\n  font-size: 12px;\n  background-color: red;\n}\n\n/* myapp.js */\nvar React = require('react-tools/build/modules/React');\nvar Styles = require('./styles.css');\n\nvar MyComponent = React.createClass({\n  render: function() {\n    return (\n      <div style={Styles.MyComponent}>\n        Hello, world!\n      </div>\n    )\n  }\n});\n```\n\n[Check it out on GitHub...](https://github.com/andreypopp/cssobjectify)\n\n\n## ngReact\n\n[David Chang](http://davidandsuzi.com/) working at [HasOffer](http://www.hasoffers.com/) wanted to speed up his Angular app and replaced Angular primitives by React at different layers. When using React naively it is 67% faster, but when combining it with angular's transclusion it is 450% slower.\n\n> Rendering this takes 803ms for 10 iterations, hovering around 35 and 55ms for each data reload (that's 67% faster). You'll notice that the first load takes a little longer than successive loads, and the second load REALLY struggles - here, it's 433ms, which is more than half of the total time!\n> <figure><a href=\"http://davidandsuzi.com/ngreact-react-components-in-angular/\"><img src=\"../images/blog/ngreact.png\"></a></figure>\n>\n> [Read the full article...](http://davidandsuzi.com/ngreact-react-components-in-angular/)\n\n\n## vim-jsx\n\n[Max Wang](https://github.com/mxw) made a vim syntax highlighting and indentation plugin for vim.\n\n> Syntax highlighting and indenting for JSX. JSX is a JavaScript syntax transformer which translates inline XML document fragments into JavaScript objects. It was developed by Facebook alongside React.\n>\n> This bundle requires pangloss's [vim-javascript](https://github.com/pangloss/vim-javascript) syntax highlighting.\n>\n> Vim support for inline XML in JS is remarkably similar to the same for PHP.\n>\n> [View on GitHub...](https://github.com/mxw/vim-jsx)\n\n\n## Random Tweet\n\n<center><blockquote class=\"twitter-tweet\" lang=\"en\"><p>I may be starting to get annoying with this, but ReactJS is really exciting. I truly feel the virtual DOM is a game changer.</p>&mdash; Eric Florenzano (@ericflo) <a href=\"https://twitter.com/ericflo/statuses/413842834974732288\">December 20, 2013</a></blockquote></center>\n",
        "type": "MarkdownRemark",
        "contentDigest": "bf6e4dffeb573a5d1d29a167eba1725d",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Community Round-up #13",
        "author": [
          "vjeux"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2013-12-30-community-roundup-13.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2013-12-30-community-roundup-13.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-12-30-community-roundup-13.md",
      "fields": {
        "date": "2013-12-29T16:00:00.000Z",
        "slug": "/blog/2013/12/30/community-roundup-13.html",
        "path": "blog/2013-12-30-community-roundup-13.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-01-02-react-chrome-developer-tools.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-01-02-react-chrome-developer-tools.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-01-02-react-chrome-developer-tools.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React Chrome Developer Tools\"\nauthor: [sebmarkbage]\n---\n\nWith the new year, we thought you'd enjoy some new tools for debugging React code. Today we're releasing the [React Developer Tools](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi), an extension to the Chrome Developer Tools. [Download them from the Chrome Web Store](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi).\n\n<figure><iframe width=\"650\" height=\"315\" src=\"//www.youtube-nocookie.com/embed/Cey7BS6dE0M\" frameborder=\"0\" allowfullscreen></iframe></figure>\n\nYou will get a new tab titled \"React\" in your Chrome DevTools. This tab shows you a list of the root React Components that are rendered on the page as well as the subcomponents that each root renders.\n\nSelecting a Component in this tab allows you to view and edit its props and state in the panel on the right. In the breadcrumbs at the bottom, you can inspect the selected Component, the Component that created it, the Component that created that one, and so on.\n\nWhen you inspect a DOM element using the regular Elements tab, you can switch over to the React tab and the corresponding Component will be automatically selected. The Component will also be automatically selected if you have a breakpoint within its render phase. This allows you to step through the render tree and see how one Component affects another one.\n<figure><a href=\"https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi\"><img src=\"../images/blog/react-dev-tools.jpg\"></a></figure>\n\nWe hope these tools will help your team better understand your component hierarchy and track down bugs. We're very excited about this initial launch and appreciate any feedback you may have. As always, we also accept [pull requests on GitHub](https://github.com/facebook/react-devtools).\n",
        "type": "MarkdownRemark",
        "contentDigest": "7fcb852b83f4f57e315bfc4bdfd0bc4d",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React Chrome Developer Tools",
        "author": [
          "sebmarkbage"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-01-02-react-chrome-developer-tools.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-01-02-react-chrome-developer-tools.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-01-02-react-chrome-developer-tools.md",
      "fields": {
        "date": "2014-01-01T16:00:00.000Z",
        "slug": "/blog/2014/01/02/react-chrome-developer-tools.html",
        "path": "blog/2014-01-02-react-chrome-developer-tools.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-02-05-community-roundup-15.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-02-05-community-roundup-15.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-02-05-community-roundup-15.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Community Round-up #15\"\nauthor: [jgebhardt]\n---\n\nInterest in React seems to have surged ever since David Nolen ([@swannodette](https://twitter.com/swannodette))'s introduction of [Om](https://github.com/swannodette/om) in his post [\"The Future of JavaScript MVC Frameworks\"](https://swannodette.github.io/2013/12/17/the-future-of-javascript-mvcs/).\n\nIn this React Community Round-up, we are taking a closer look at React from a functional programming perspective.\n\n## \"React: Another Level of Indirection\"\nTo start things off, Eric Normand ([@ericnormand](https://twitter.com/ericnormand)) of [LispCast](http://lispcast.com) makes the case for [React from a general functional programming standpoint](http://www.lispcast.com/react-another-level-of-indirection) and explains how React's \"Virtual DOM provides the last piece of the Web Frontend Puzzle for ClojureScript\".\n\n> The Virtual DOM is an indirection mechanism that solves the difficult problem of DOM programming: how to deal with incremental changes to a stateful tree structure. By abstracting away the statefulness, the Virtual DOM turns the real DOM into an immediate mode GUI, which is perfect for functional programming.\n>\n> [Read the full post...](http://www.lispcast.com/react-another-level-of-indirection)\n\n## Reagent: Minimalistic React for ClojureScript\nDan Holmsand ([@holmsand](https://twitter.com/holmsand)) created [Reagent](https://holmsand.github.io/reagent/), a simplistic ClojureScript API to React.\n\n> It allows you to define efficient React components using nothing but plain ClojureScript functions and data, that describe your UI using a Hiccup-like syntax.\n>\n> The goal of Reagent is to make it possible to define arbitrarily complex UIs using just a couple of basic concepts, and to be fast enough by default that you rarely have to care about performance.\n>\n> [Check it out on GitHub...](https://holmsand.github.io/reagent/)\n\n\n## Functional DOM programming\n\nReact's one-way data-binding naturally lends itself to a functional programming approach. Facebook's Pete Hunt ([@floydophone](https://twitter.com/floydophone)) explores how one would go about [writing web apps in a functional manner](https://medium.com/p/67d81637d43). Spoiler alert:\n\n> This is React. It’s not about templates, or data binding, or DOM manipulation. It’s about using functional programming with a virtual DOM representation to build ambitious, high-performance apps with JavaScript.\n>\n> [Read the full post...](https://medium.com/p/67d81637d43)\n\nPete also explains this in detail at his #MeteorDevShop talk (about 30 Minutes):\n\n<iframe width=\"650\" height=\"315\" src=\"//www.youtube-nocookie.com/embed/Lqcs6hPOcFw?start=2963\" frameborder=\"0\" allowfullscreen></iframe>\n\n\n\n## Kioo: Separating markup and logic\n[Creighton Kirkendall](https://github.com/ckirkendall) created [Kioo](https://github.com/ckirkendall/kioo), which adds Enlive-style templating to React. HTML templates are separated from the application logic. Kioo comes with separate examples for both Om and Reagent.\n\nA basic example from github:\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <body>\n    <header>\n      <h1>Header placeholder</h1>\n      <ul id=\"navigation\">\n        <li class=\"nav-item\"><a href=\"#\">Placeholder</a></li>\n      </ul>\n    </header>\n    <div class=\"content\">place holder</div>\n  </body>\n</html>\n```\n\n```clojure\n...\n\n(defn my-nav-item [[caption func]]\n  (kioo/component \"main.html\" [:.nav-item]\n    {[:a] (do-> (content caption)\n                (set-attr :onClick func))}))\n\n(defn my-header [heading nav-elms]\n  (kioo/component \"main.html\" [:header]\n    {[:h1] (content heading)\n     [:ul] (content (map my-nav-item nav-elms))}))\n\n(defn my-page [data]\n  (kioo/component \"main.html\"\n    {[:header] (substitute (my-header (:heading data)\n                                      (:navigation data)))\n     [:.content] (content (:content data))}))\n\n(def app-state (atom {:heading    \"main\"\n                      :content    \"Hello World\"\n                      :navigation [[\"home\" #(js/alert %)]\n                                   [\"next\" #(js/alert %)]]}))\n\n(om/root app-state my-page (.-body js/document))\n```\n\n## Om\n\nIn an interview with David Nolen, Tom Coupland ([@tcoupland](https://twitter.com/tcoupland)) of InfoQ provides a nice summary of recent developments around Om (\"[Om: Enhancing Facebook's React with Immutability](http://www.infoq.com/news/2014/01/om-react)\").\n\n> David [Nolen]: I think people are starting to see the limitations of just JavaScript and jQuery and even more structured solutions like Backbone, Angular, Ember, etc. React is a fresh approach to the DOM problem that seems obvious in hindsight.\n>\n> [Read the full interview...](http://www.infoq.com/news/2014/01/om-react)\n\n### A slice of React, ClojureScript and Om\n\nFredrik Dyrkell ([@lexicallyscoped](https://twitter.com/lexicallyscoped)) rewrote part of the [React tutorial in both ClojureScript and Om](http://www.lexicallyscoped.com/2013/12/25/slice-of-reactjs-and-cljs.html), along with short, helpful explanations.\n\n> React has sparked a lot of interest in the Clojure community lately [...]. At the very core, React lets you build up your DOM representation in a functional fashion by composing pure functions and you have a simple building block for everything: React components.\n>\n> [Read the full post...](http://www.lexicallyscoped.com/2013/12/25/slice-of-reactjs-and-cljs.html)\n\nIn a separate post, Dyrkell breaks down [how to build a binary clock component](http://www.lexicallyscoped.com/2014/01/23/ClojureScript-react-om-binary-clock.html) in Om.\n\n[[Demo](http://www.lexicallyscoped.com/demo/binclock/)] [[Code](https://github.com/fredyr/binclock/blob/master/src/binclock/core.cljs)]\n\n### Time Travel: Implementing undo in Om\nDavid Nolen shows how to leverage immutable data structures to [add global undo](https://swannodette.github.io/2013/12/31/time-travel/) functionality to an app – using just 13 lines of ClojureScript.\n\n### A Step-by-Step Om Walkthrough\n\n[Josh Lehman](http://www.joshlehman.me) took the time to create an extensive [step-by-step walkthrough](http://www.joshlehman.me/rewriting-the-react-tutorial-in-om/) of the React tutorial in Om. The well-documented source is on [github](https://github.com/jalehman/omtut-starter).\n\n### Omkara\n\n[brendanyounger](https://github.com/brendanyounger) created [omkara](https://github.com/brendanyounger/omkara), a starting point for ClojureScript web apps based on Om/React. It aims to take advantage of server-side rendering and comes with a few tips on getting started with Om/React projects.\n\n### Om Experience Report\nAdam Solove ([@asolove](https://twitter.com/asolove/)) [dives a little deeper into Om, React and ClojureScript](http://adamsolove.com/js/clojure/2014/01/06/om-experience-report.html). He shares some helpful tips he gathered while building his [CartoCrayon](https://github.com/asolove/carto-crayon) prototype.\n\n## Not-so-random Tweet\n\n\n<div><blockquote class=\"twitter-tweet\" lang=\"en\"><p>[@swannodette](https://twitter.com/swannodette) No thank you! It's honestly a bit weird because Om is exactly what I didn't know I wanted for doing functional UI work.</p>&mdash; Adam Solove (@asolove) <a href=\"https://twitter.com/asolove/status/420294067637858304\">January 6, 2014</a></blockquote></div>\n",
        "type": "MarkdownRemark",
        "contentDigest": "21157eadd863d2e60cc57477bb1939b5",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Community Round-up #15",
        "author": [
          "jgebhardt"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-02-05-community-roundup-15.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-02-05-community-roundup-15.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-02-05-community-roundup-15.md",
      "fields": {
        "date": "2014-02-04T16:00:00.000Z",
        "slug": "/blog/2014/02/05/community-roundup-15.html",
        "path": "blog/2014-02-05-community-roundup-15.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-02-15-community-roundup-16.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-02-15-community-roundup-16.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-02-15-community-roundup-16.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Community Round-up #16\"\nauthor: [jgebhardt]\n---\n\nThere have been many posts recently covering the <i>why</i> and <i>how</i> of React. This week's community round-up includes a collection of recent articles to help you get started with React, along with a few posts that explain some of the inner workings.\n\n\n## React in a nutshell\nGot five minutes to pitch React to your coworkers? John Lynch ([@johnrlynch](https://twitter.com/johnrlynch)) put together [this excellent and refreshing slideshow](http://slid.es/johnlynch/reactjs):\n\n<iframe src=\"//slid.es/johnlynch/reactjs/embed\" width=\"100%\" height=\"420\" scrolling=\"no\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>\n\n\n\n## React's diff algorithm\n\nReact core team member Christopher Chedeau ([@vjeux](https://twitter.com/vjeux)) explores the innards of React's tree diffing algorithm in this [extensive and well-illustrated post](http://calendar.perfplanet.com/2013/diff/). <figure>[![](../images/blog/react-diff-tree.png)](http://calendar.perfplanet.com/2013/diff/)</figure>\n\nWhile we're talking about tree diffing: Matt Esch ([@MatthewEsch](https://twitter.com/MatthewEsch)) created [this project](https://github.com/Matt-Esch/virtual-dom), which aims to implement the virtual DOM and a corresponding diff algorithm as separate modules.\n\n\n\n\n## Many, many new introductions to React!\n\n\n\nJames Padosley wrote a short post on the basics (and merits) of React: [What is React?](http://james.padolsey.com/javascript/what-is-react/)\n> What I like most about React is that it doesn't impose heady design patterns and data-modelling abstractions on me. [...] Its opinions are so minimal and its abstractions so focused on the problem of the DOM, that you can merrily slap your design choices atop.\n>\n> [Read the full post...](http://james.padolsey.com/javascript/what-is-react/)\n\nTaylor Lapeyre ([@taylorlapeyre](https://twitter.com/taylorlapeyre)) wrote another nice [introduction to React](http://words.taylorlapeyre.me/an-introduction-to-react).\n\n> React expects you to do the work of getting and pushing data from the server. This makes it very easy to implement React as a front end solution, since it simply expects you to hand it data. React does all the other work.\n>\n> [Read the full post...](http://words.taylorlapeyre.me/an-introduction-to-react)\n\n\n[This \"Deep explanation for newbies\"](http://www.webdesignporto.com/react-js-in-pure-javascript-facebook-library/?utm_source=echojs&utm_medium=post&utm_campaign=echojs) by [@ProJavaScript](https://twitter.com/ProJavaScript) explains how to get started building a React game without using the optional JSX syntax.\n\n### React around the world\n\nIt's great to see the React community expand internationally. [This site](http://habrahabr.ru/post/189230/) features a React introduction in Russian.\n\n### React tutorial series\n\n[Christopher Pitt](https://medium.com/@followchrisp) explains [React Components](https://medium.com/react-tutorials/828c397e3dc8) and [React Properties](https://medium.com/react-tutorials/ef11cd55caa0). The former includes a nice introduction to using JSX, while the latter focuses on adding interactivity and linking multiple components together. Also check out the [other posts in his React Tutorial series](https://medium.com/react-tutorials), e.g. on using [React + Backbone Model](https://medium.com/react-tutorials/8aaec65a546c) and [React + Backbone Router](https://medium.com/react-tutorials/c00be0cf1592).\n\n### Beginner tutorial: Implementing the board game Go\n\n[Chris LaRose](http://cjlarose.com/) walks through the steps of creating a Go app in React, showing how to separate application logic from the rendered components. Check out his [tutorial](http://cjlarose.com/2014/01/09/react-board-game-tutorial.html) or go straight to the [code](https://github.com/cjlarose/react-go).\n\n### Egghead.io video tutorials\n\nJoe Maddalone ([@joemaddalone](https://twitter.com/joemaddalone)) of [egghead.io](https://egghead.io/) created a series of React video tutorials, such as [this](http://www.youtube-nocookie.com/v/rFvZydtmsxM) introduction to React Components. [[part 1](http://www.youtube-nocookie.com/v/rFvZydtmsxM)], [[part 2](http://www.youtube-nocookie.com/v/5yvFLrt7N8M)]\n\n### \"React: Finally, a great server/client web stack\"\n\nEric Florenzano ([@ericflo](https://twitter.com/ericflo)) sheds some light on what makes React perfect for server rendering:\n\n> [...] the ideal solution would fully render the markup on the server, deliver it to the client so that it can be shown to the user instantly. Then it would asynchronously load some JavaScript that would attach to the rendered markup, and invisibly promote the page into a full app that can render its own markup. [...]\n\n> What I've discovered is that enough of the pieces have come together, that this futuristic-sounding web environment is actually surprisingly easy to do now with React.js.\n\n> [Read the full post...](http://eflorenzano.com/blog/2014/01/23/react-finally-server-client/)\n\n## Building a complex React component\n[Matt Harrison](http://matt-harrison.com/) walks through the process of [creating an SVG-based Resistance Calculator](http://matt-harrison.com/building-a-complex-web-component-with-facebooks-react-library/) using React. <figure>[![](../images/blog/resistance-calculator.png)](http://matt-harrison.com/building-a-complex-web-component-with-facebooks-react-library/)</figure>\n\n\n\n## Random Tweets\n\n<div><blockquote class=\"twitter-tweet\" lang=\"en\"><p>[#reactjs](https://twitter.com/search?q=%23reactjs&src=hash) has very simple API, but it's amazing how much work has been done under the hood to make it blazing fast.</p>&mdash; Anton Astashov (@anton_astashov) <a href=\"https://twitter.com/anton_astashov/status/417556491646693378\">December 30, 2013</a></blockquote></div>\n\n<div><blockquote class=\"twitter-tweet\" lang=\"en\"><p>[#reactjs]((https://twitter.com/search?q=%23reactjs&src=hash) makes refactoring your HTML as easy & natural as refactoring your javascript [@react_js](https://twitter.com/react_js)</p>&mdash; Jared Forsyth (@jaredforsyth) <a href=\"https://twitter.com/jaredforsyth/status/420304083010854912\">January 6, 2014</a></blockquote></div>\n\n<div><blockquote class=\"twitter-tweet\" lang=\"en\"><p>Played with react.js for an hour, so many things suddenly became stupidly simple.</p>&mdash; andrewingram (@andrewingram) <a href=\"https://twitter.com/andrewingram/status/422810480701620225\">January 13, 2014</a></blockquote></div>\n\n<div><blockquote class=\"twitter-tweet\" lang=\"en\"><p>[@okonetchnikov](https://twitter.com/okonetchnikov) HOLY CRAP react is nice</p>&mdash; julik (@julikt) <a href=\"https://twitter.com/julikt/status/422843478792765440\">January 13, 2014</a></blockquote></div>\n\n<div><blockquote class=\"twitter-tweet\" lang=\"en\"><p>brb rewriting everything with react\n</p>&mdash; Ben Smithett (@bensmithett) <a href=\"https://twitter.com/bensmithett/status/430671242186592256\">February 4, 2014</a></blockquote></div>\n",
        "type": "MarkdownRemark",
        "contentDigest": "a59370806b58aa938b6d5e7e4239484e",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Community Round-up #16",
        "author": [
          "jgebhardt"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-02-15-community-roundup-16.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-02-15-community-roundup-16.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-02-15-community-roundup-16.md",
      "fields": {
        "date": "2014-02-14T16:00:00.000Z",
        "slug": "/blog/2014/02/15/community-roundup-16.html",
        "path": "blog/2014-02-15-community-roundup-16.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-02-16-react-v0.9-rc1.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-02-16-react-v0.9-rc1.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-02-16-react-v0.9-rc1.md absPath of file",
      "internal": {
        "content": "---\ntitle: React v0.9 RC\nauthor: [sophiebits]\n---\n\nWe're almost ready to release React v0.9! We're posting a release candidate so that you can test your apps on it; we'd much prefer to find show-stopping bugs now rather than after we release.\n\nThe release candidate is available for download from the CDN:\n\n* **React**  \n  Dev build with warnings: <https://fb.me/react-0.9.0-rc1.js>  \n  Minified build for production: <https://fb.me/react-0.9.0-rc1.min.js>\n* **React with Add-Ons**  \n  Dev build with warnings: <https://fb.me/react-with-addons-0.9.0-rc1.js>  \n  Minified build for production: <https://fb.me/react-with-addons-0.9.0-rc1.min.js>\n* **In-Browser JSX transformer**  \n  <https://fb.me/JSXTransformer-0.9.0-rc1.js>\n\nWe've also published version `0.9.0-rc1` of the `react` and `react-tools` packages on npm and the `react` package on bower.\n\nPlease try these builds out and [file an issue on GitHub](https://github.com/facebook/react/issues/new) if you see anything awry.\n\n## Upgrade Notes\n\nIn addition to the changes to React core listed below, we've made a small change to the way JSX interprets whitespace to make things more consistent. With this release, space between two components on the same line will be preserved, while a newline separating a text node from a tag will be eliminated in the output. Consider the code:\n\n```html\n<div>\n  Monkeys:\n  {listOfMonkeys} {submitButton}\n</div>\n```\n\nIn v0.8 and below, it was transformed to the following:\n\n```javascript\nReact.DOM.div(null,\n  \" Monkeys: \",\n  listOfMonkeys, submitButton\n)\n```\n\nIn v0.9, it will be transformed to this JS instead:\n\n```javascript{2,3}\nReact.DOM.div(null,\n  \"Monkeys:\",\n  listOfMonkeys, \" \", submitButton\n)\n```\n\nWe believe this new behavior is more helpful and eliminates cases where unwanted whitespace was previously added.\n\nIn cases where you want to preserve the space adjacent to a newline, you can write a JS string like `{\"Monkeys: \"}` in your JSX source. We've included a script to do an automated codemod of your JSX source tree that preserves the old whitespace behavior by adding and removing spaces appropriately. You can [install jsx\\_whitespace\\_transformer from npm](https://github.com/facebook/react/blob/master/npm-jsx_whitespace_transformer/README.md) and run it over your source tree to modify files in place. The transformed JSX files will preserve your code's existing whitespace behavior.\n\n## Changelog\n\n### React Core\n\n#### Breaking Changes\n\n- The lifecycle methods `componentDidMount` and `componentDidUpdate` no longer receive the root node as a parameter; use `this.getDOMNode()` instead\n- Whenever a prop is equal to `undefined`, the default value returned by `getDefaultProps` will now be used instead\n- `React.unmountAndReleaseReactRootNode` was previously deprecated and has now been removed\n- `React.renderComponentToString` is now synchronous and returns the generated HTML string\n- Full-page rendering (that is, rendering the `<html>` tag using React) is now supported only when starting with server-rendered markup\n- On mouse wheel events, `deltaY` is no longer negated\n- When prop types validation fails, a warning is logged instead of an error thrown (with the production build of React, the type checks are now skipped for performance)\n- On `input`, `select`, and `textarea` elements, `.getValue()` is no longer supported; use `.getDOMNode().value` instead\n- `this.context` on components is now reserved for internal use by React\n\n#### New Features\n\n- React now never rethrows errors, so stack traces are more accurate and Chrome's purple break-on-error stop sign now works properly\n- Added a new tool for profiling React components and identifying places where defining `shouldComponentUpdate` can give performance improvements\n- Added support for SVG tags `defs`, `linearGradient`, `polygon`, `radialGradient`, `stop`\n- Added support for more attributes:\n  - `noValidate` and `formNoValidate` for forms\n  - `property` for Open Graph `<meta>` tags\n  - `sandbox`, `seamless`, and `srcDoc` for `<iframe>` tags\n  - `scope` for screen readers\n  - `span` for `<colgroup>` tags\n- Added support for defining `propTypes` in mixins\n- Added `any`, `arrayOf`, `component`, `oneOfType`, `renderable`, `shape` to `React.PropTypes`\n- Added support for `statics` on component spec for static component methods\n- On all events, `.currentTarget` is now properly set\n- On keyboard events, `.key` is now polyfilled in all browsers for special (non-printable) keys\n- On clipboard events, `.clipboardData` is now polyfilled in IE\n- On drag events, `.dataTransfer` is now present\n- Added support for `onMouseOver` and `onMouseOut` in addition to the existing `onMouseEnter` and `onMouseLeave` events\n- Added support for `onLoad` and `onError` on `<img>` elements\n- Added support for `onReset` on `<form>` elements\n- The `autoFocus` attribute is now polyfilled consistently on `input`, `select`, and `textarea`\n\n#### Bug Fixes\n\n- React no longer adds an `__owner__` property to each component's `props` object; passed-in props are now never mutated\n- When nesting top-level components (e.g., calling `React.renderComponent` within `componentDidMount`), events now properly bubble to the parent component\n- Fixed a case where nesting top-level components would throw an error when updating\n- Passing an invalid or misspelled propTypes type now throws an error\n- On mouse enter/leave events, `.target`, `.relatedTarget`, and `.type` are now set properly\n- On composition events, `.data` is now properly normalized in IE9 and IE10\n- CSS property values no longer have `px` appended for the unitless properties `columnCount`, `flex`, `flexGrow`, `flexShrink`, `lineClamp`, `order`, `widows`\n- Fixed a memory leak when unmounting children with a `componentWillUnmount` handler\n- Fixed a memory leak when `renderComponentToString` would store event handlers\n- Fixed an error that could be thrown when removing form elements during a click handler\n- `key` values containing `.` are now supported\n- Shortened `data-reactid` values for performance\n- Components now always remount when the `key` property changes\n- Event handlers are attached to `document` only when necessary, improving performance in some cases\n- Events no longer use `.returnValue` in modern browsers, eliminating a warning in Chrome\n- `scrollLeft` and `scrollTop` are no longer accessed on document.body, eliminating a warning in Chrome\n- General performance fixes, memory optimizations, improvements to warnings and error messages\n\n### React with Addons\n\n- `React.addons.TransitionGroup` was renamed to `React.addons.CSSTransitionGroup`\n- `React.addons.TransitionGroup` was added as a more general animation wrapper\n- `React.addons.cloneWithProps` was added for cloning components and modifying their props\n- Bug fix for adding back nodes during an exit transition for CSSTransitionGroup\n- Bug fix for changing `transitionLeave` in CSSTransitionGroup\n- Performance optimizations for CSSTransitionGroup\n- On checkbox `<input>` elements, `checkedLink` is now supported for two-way binding\n\n### JSX Compiler and react-tools Package\n\n- Whitespace normalization has changed; now space between two tags on the same line will be preserved, while newlines between two tags will be removed\n- The `react-tools` npm package no longer includes the React core libraries; use the `react` package instead.\n- `displayName` is now added in more cases, improving error messages and names in the React Dev Tools\n- Fixed an issue where an invalid token error was thrown after a JSX closing tag\n- `JSXTransformer` now uses source maps automatically in modern browsers\n- `JSXTransformer` error messages now include the filename and problematic line contents when a file fails to parse\n",
        "type": "MarkdownRemark",
        "contentDigest": "4a1dce06fef937dc898f8c527cb2971b",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.9 RC",
        "author": [
          "sophiebits"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-02-16-react-v0.9-rc1.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-02-16-react-v0.9-rc1.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-02-16-react-v0.9-rc1.md",
      "fields": {
        "date": "2014-02-15T16:00:00.000Z",
        "slug": "/blog/2014/02/16/react-v0.9-rc1.html",
        "path": "blog/2014-02-16-react-v0.9-rc1.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-01-06-community-roundup-14.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-01-06-community-roundup-14.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-01-06-community-roundup-14.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Community Round-up #14\"\nauthor: [vjeux]\n---\n\nThe theme of this first round-up of 2014 is integration. I've tried to assemble a list of articles and projects that use React in various environments.\n\n## React Baseline\n\nReact is only one-piece of your web application stack. [Mark Lussier](https://github.com/intabulas) shared his baseline stack that uses React along with Grunt, Browserify, Bower, Zepto, Director and Sass. This should help you get started using React for a new project.\n\n> As I do more projects with ReactJS I started to extract a baseline to use when starting new projects. This is very opinionated and I change my opinion from time to time. This is by no ways perfect and in your opinion most likely wrong :).. which is why I love github\n>\n> I encourage you to fork, and make it right and submit a pull request!\n>\n> My current opinion is using tools like Grunt, Browserify, Bower and multiple grunt plugins to get the job done. I also opted for Zepto over jQuery and the Flatiron Project's Director when I need a router. Oh and for the last little bit of tech that makes you mad, I am in the SASS camp when it comes to stylesheets\n>\n> [Check it out on GitHub...](https://github.com/intabulas/reactjs-baseline)\n\n\n## Animal Sounds\n\n[Josh Duck](http://joshduck.com/) used React in order to build a Windows 8 tablet app. This is a good example of a touch app written in React.\n[![](../images/blog/animal-sounds.jpg)](http://apps.microsoft.com/windows/en-us/app/baby-play-animal-sounds/9280825c-2ed9-41c0-ba38-aa9a5b890bb9)\n\n[Download the app...](http://apps.microsoft.com/windows/en-us/app/baby-play-animal-sounds/9280825c-2ed9-41c0-ba38-aa9a5b890bb9)\n\n\n## React Rails Tutorial\n\n[Selem Delul](http://selem.im) bundled the [React Tutorial](/tutorial/tutorial.html) into a rails app. This is a good example on how to get started with a rails project.\n\n> ```sh\n> git clone https://github.com/necrodome/react-rails-tutorial\n> cd react-rails-tutorial\n> bundle install\n> rake db:migrate\n> rails s\n> ```\n> Then visit http://localhost:3000/app to see the React application that is explained in the React Tutorial. Try opening multiple tabs!\n>\n> [View on GitHub...](https://github.com/necrodome/react-rails-tutorial)\n\n## Mixing with Backbone\n\n[Eldar Djafarov](http://eldar.djafarov.com/) implemented a mixin to link Backbone models to React state and a small abstraction to write two-way binding on-top.\n\n[View code on JSFiddle](http://jsfiddle.net/djkojb/qZf48/13/)\n\n[Check out the blog post...](http://eldar.djafarov.com/2013/11/reactjs-mixing-with-backbone/)\n\n\n## React Infinite Scroll\n\n[Guillaume Rivals](https://twitter.com/guillaumervls) implemented an InfiniteScroll component. This is a good example of a React component that has a simple yet powerful API.\n\n```javascript\n<InfiniteScroll\n  pageStart={0}\n  loadMore={loadFunc}\n  hasMore={true || false}\n  loader={<div className=\"loader\">Loading ...</div>}>\n  {items} // <-- This is the \"stuff\" you want to load\n</InfiniteScroll>\n```\n\n[Try it out on GitHub!](https://github.com/guillaumervls/react-infinite-scroll)\n\n\n## Web Components Style\n\n[Thomas Aylott](http://subtlegradient.com/) implemented an API that looks like Web Components but using React underneath.\n\n[View the source on JSFiddle...](http://jsfiddle.net/SubtleGradient/ue2Aa)\n\n## React vs Angular\n\nReact is often compared with Angular. [Pete Hunt](http://skulbuny.com/2013/10/31/react-vs-angular/) wrote an opinionated post on the subject.\n\n> First of all I think it’s important to evaluate technologies on objective rather than subjective features. “It feels nicer” or “it’s cleaner” aren’t valid reasons: performance, modularity, community size and ease of testing / integration with other tools are.\n>\n> I’ve done a lot of work benchmarking, building apps, and reading the code of Angular to try to come up with a reasonable comparison between their ways of doing things.\n>\n> [Read the full post...](http://skulbuny.com/2013/10/31/react-vs-angular/)\n\n\n\n## Random Tweet\n\n<div><blockquote class=\"twitter-tweet\" lang=\"en\"><p>Really intrigued by React.js. I&#39;ve looked at all JS frameworks, and excepting <a href=\"https://twitter.com/serenadejs\">@serenadejs</a> this is the first one which makes sense to me.</p>&mdash; Jonas Nicklas (@jonicklas) <a href=\"https://twitter.com/jonicklas/statuses/412640708755869696\">December 16, 2013</a></blockquote></div>\n",
        "type": "MarkdownRemark",
        "contentDigest": "06ccba1afb4517ecda06434598244786",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Community Round-up #14",
        "author": [
          "vjeux"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-01-06-community-roundup-14.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-01-06-community-roundup-14.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-01-06-community-roundup-14.md",
      "fields": {
        "date": "2014-01-05T16:00:00.000Z",
        "slug": "/blog/2014/01/06/community-roundup-14.html",
        "path": "blog/2014-01-06-community-roundup-14.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-02-24-community-roundup-17.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-02-24-community-roundup-17.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-02-24-community-roundup-17.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Community Round-up #17\"\nauthor: [jgebhardt]\n---\n\n\nIt's exciting to see the number of real-world React applications and components skyrocket over the past months! This community round-up features a few examples of inspiring React applications and components.\n\n## React in the Real World\n\n### Facebook Lookback video editor\nLarge parts of Facebook's web frontend are already powered by React. The recently released Facebook [Lookback video and its corresponding editor](https://www.facebook.com/lookback/edit/) are great examples of a complex, real-world React app.\n\n### Russia's largest bank is now powered by React\nSberbank, Russia's largest bank, recently switched large parts of their site to use React, as detailed in [this post by Vyacheslav Slinko](https://groups.google.com/forum/#!topic/reactjs/Kj6WATX0atg).\n\n### Relato\n[Relato](https://bripkens.github.io/relato/) by [Ben Ripkens](https://github.com/bripkens) shows Open Source Statistics based on npm data. It features a filterable and sortable table built in React. Check it out &ndash; it's super fast!\n\n### Makona Editor\n\n John Lynch ([@johnrlynch](https://twitter.com/johnrlynch)) created Makona, a block-style document editor for the web. Blocks of different content types comprise documents, authored using plain markup. At the switch of a toggle, block contents are then rendered on the page. While not quite a WYSIWYG editor, Makona uses plain textareas for input. This makes it compatible with a wider range of platforms than traditional rich text editors.\n[![](../images/blog/makona-editor.png)](https://johnthethird.github.io/makona-editor/)\n\n### Create Chrome extensions using React\nReact is in no way limited to just web pages. Brandon Tilley ([@BinaryMuse](https://twitter.com/BinaryMuse)) just released a detailed walk-through of [how he built his Chrome extension \"Fast Tab Switcher\" using React](http://brandontilley.com/2014/02/24/creating-chrome-extensions-with-react.html).\n\n\n### Twitter Streaming Client\n\nJavier Aguirre ([@javaguirre](https://twitter.com/javaguirre)) put together a simple [twitter streaming client using node, socket.io and React](http://javaguirre.net/2014/02/11/twitter-streaming-api-with-node-socket-io-and-reactjs/).\n\n\n### Sproutsheet\n\n[Sproutsheet](http://sproutsheet.com/) is a gardening calendar. You can use it to track certain events that happen in the life of your plants. It's currently in beta and supports localStorage, and data/image import and export.\n\n### Instant Domain Search\n[Instant Domain Search](https://instantdomainsearch.com/) also uses React. It sure is instant!\n\n\n### SVG-based graphical node editor\n[NoFlo](http://noflojs.org/) and [Meemoo](http://meemoo.org/) developer [Forresto Oliphant](http://www.forresto.com/) built an awesome SVG-based [node editor](https://forresto.github.io/prototyping/react/) in React.\n [![](../images/blog/react-svg-fbp.png)](https://forresto.github.io/prototyping/react/)\n\n\n### Ultimate Tic-Tac-Toe Game in React\nRafał Cieślak ([@Ravicious](https://twitter.com/Ravicious)) wrote a [React version](https://ravicious.github.io/ultimate-ttt/) of [Ultimate Tic Tac Toe](http://mathwithbaddrawings.com/2013/06/16/ultimate-tic-tac-toe/). Find the source [here](https://github.com/ravicious/ultimate-ttt).\n\n\n\n### ReactJS Gallery\n\n[Emanuele Rampichini](https://github.com/lele85)'s [ReactJS Gallery](https://github.com/lele85/ReactGallery) is a cool demo app that shows fullscreen images from a folder on the server. If the folder content changes, the gallery app updates via websockets.\n\nEmanuele shared this awesome demo video with us:\n\n<iframe width=\"650\" height=\"315\" src=\"//www.youtube-nocookie.com/embed/jYcpaemt90M\" frameborder=\"0\" allowfullscreen></iframe>\n\n\n\n## React Components\n\n\n### Table Sorter\n[Table Sorter](https://bgerm.github.io/react-table-sorter-demo/) by [bgerm](https://github.com/bgerm) [[source](https://github.com/bgerm/react-table-sorter-demo)] is another helpful React component.\n\n### Static-search\n\nDmitry Chestnykh [@dchest](https://twitter.com/dchest) wrote a [static search indexer](https://github.com/dchest/static-search) in Go, along with a [React-based web front-end](http://www.codingrobots.com/search/) that consumes search result via JSON.\n\n### Lorem Ipsum component\n\n[Martin Andert](https://github.com/martinandert) created [react-lorem-component](https://github.com/martinandert/react-lorem-component), a simple component for all your placeholding needs.\n\n### Input with placeholder shim\n[react-input-placeholder](enigma-io/react-input-placeholder) by [enigma-io](@enigma-io) is a small wrapper around React.DOM.input that shims in placeholder functionality for browsers that don't natively support it.\n\n### diContainer\n\n[dicontainer](https://github.com/SpektrumFM/dicontainer) provides a dependency container that lets you inject Angular-style providers and services as simple React.js Mixins.\n\n\n## React server rendering\n\nEver wonder how to pre-render React components on the server? [react-server-example](https://github.com/mhart/react-server-example) by Michael Hart ([@hichaelmart](https://twitter.com/hichaelmart)) walks through the necessary steps.\n\nSimilarly, Alan deLevie ([@adelevie](https://twitter.com/adelevie)) created [react-client-server-starter](https://github.com/adelevie/react-client-server-starter), another detailed walk-through of how to server-render your app.\n\n\n\n## Random Tweet\n\n<div><blockquote class=\"twitter-tweet\" lang=\"en\"><p>Recent changes: web ui is being upgraded to [#reactjs](https://twitter.com/search?q=%23reactjs&src=hash), HEAD~4 at [https://camlistore.googlesource.com/camlistore/](https://camlistore.googlesource.com/camlistore/)</p>&mdash; Camlistore (@Camlistore) <a href=\"https://twitter.com/Camlistore/status/423925795820539904\">January 16, 2014</a></blockquote></div>\n",
        "type": "MarkdownRemark",
        "contentDigest": "8e4abe0272ef16fe096b6fabfecd75f6",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Community Round-up #17",
        "author": [
          "jgebhardt"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-02-24-community-roundup-17.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-02-24-community-roundup-17.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-02-24-community-roundup-17.md",
      "fields": {
        "date": "2014-02-23T16:00:00.000Z",
        "slug": "/blog/2014/02/24/community-roundup-17.html",
        "path": "blog/2014-02-24-community-roundup-17.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-03-14-community-roundup-18.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-03-14-community-roundup-18.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-03-14-community-roundup-18.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Community Round-up #18\"\nauthor: [jgebhardt]\n---\n\nIn this Round-up, we are taking a few closer looks at React's interplay with different frameworks and architectures.\n\n## \"Little framework BIG splash\"\n\nLet's start with yet another refreshing introduction to React: Craig Savolainen ([@maedhr](https://twitter.com/maedhr)) walks through some first steps, demonstrating [how to build a Google Maps component](http://infinitemonkeys.influitive.com/little-framework-big-splash) using React.\n\n## Architecting your app with react\n\nBrandon Konkle ([@bkonkle](https://twitter.com/bkonkle))\n[Architecting your app with react](http://lincolnloop.com/blog/architecting-your-app-react-part-1/)\nWe're looking forward to part 2!\n\n> React is not a full MVC framework, and this is actually one of its strengths. Many who adopt React choose to do so alongside their favorite MVC framework, like Backbone. React has no opinions about routing or syncing data, so you can easily use your favorite tools to handle those aspects of your frontend application. You'll often see React used to manage specific parts of an application's UI and not others. React really shines, however, when you fully embrace its strategies and make it the core of your application's interface.\n>\n> [Read the full article...](http://lincolnloop.com/blog/architecting-your-app-react-part-1/)\n\n## React vs. async DOM manipulation\n\nEliseu Monar ([@eliseumds](https://twitter.com/eliseumds))'s post \"[ReactJS vs async concurrent rendering](http://eliseumds.tumblr.com/post/77843550010/vitalbox-pchr-reactjs-vs-async-concurrent-rendering)\" is a great example of how React quite literally renders a whole array of common web development work(arounds) obsolete.\n\n\n\n## React, Scala and the Play Framework\n[Matthias Nehlsen](http://matthiasnehlsen.com/) wrote a detailed introductory piece on [React and the Play Framework](http://matthiasnehlsen.com/blog/2014/01/05/play-framework-and-facebooks-react-library/), including a helpful architectural diagram of a typical React app.\n\nNehlsen's React frontend is the second implementation of his chat application's frontend, following an AngularJS version. Both implementations are functionally equivalent and offer some perspective on differences between the two frameworks.\n\nIn [another article](http://matthiasnehlsen.com/blog/2014/01/24/scala-dot-js-and-reactjs/), he walks us through the process of using React with scala.js to implement app-wide undo functionality.\n\nAlso check out his [talk](http://m.ustream.tv/recorded/42780242) at Ping Conference 2014, in which he walks through a lot of the previously content in great detail.\n\n## React and Backbone\n\nThe folks over at [Venmo](https://venmo.com/) are using React in conjunction with Backbone.\nThomas Boyt ([@thomasaboyt](https://twitter.com/thomasaboyt)) wrote [this detailed piece](http://www.thomasboyt.com/2013/12/17/using-reactjs-as-a-backbone-view.html) about why React and Backbone are \"a fantastic pairing\".\n\n## React vs. Ember\n\nEric Berry ([@coderberry](https://twitter.com/coderberry)) developed Ember equivalents for some of the official React examples. Read his post for a side-by-side comparison of the respective implementations: [\"Facebook React vs. Ember\"](https://instructure.github.io/blog/2013/12/17/facebook-react-vs-ember/).\n\n\n## React and plain old HTML\n\nDaniel Lo Nigro ([@Daniel15](https://twitter.com/Daniel15)) created [React-Magic](https://github.com/reactjs/react-magic), which leverages React to ajaxify plain old html pages and even [allows CSS transitions between pageloads](http://stuff.dan.cx/facebook/react-hacks/magic/red.php).\n\n> React-Magic intercepts all navigation (link clicks and form posts) and loads the requested page via an AJAX request. React is then used to \"diff\" the old HTML with the new HTML, and only update the parts of the DOM that have been changed.\n>\n> [Check out the project on GitHub...](https://github.com/reactjs/react-magic)\n\nOn a related note, [Reactize](https://turbo-react.herokuapp.com/) by Ross Allen ([@ssorallen](https://twitter.com/ssorallen)) is a similarly awesome project: A wrapper for Rails' [Turbolinks](https://github.com/rails/turbolinks/), which seems to have inspired John Lynch ([@johnrlynch](https://twitter.com/johnrlynch)) to then create [a server-rendered version using the JSX transformer in Rails middleware](http://www.rigelgroupllc.com/blog/2014/01/12/react-jsx-transformer-in-rails-middleware/).\n\n## React and Object.observe\nCheck out [François de Campredon](https://github.com/fdecampredon)'s implementation of [TodoMVC based on React and ES6's Object.observe](https://github.com/fdecampredon/react-observe-todomvc/).\n\n\n## React and Angular\n\nIan Bicking ([@ianbicking](https://twitter.com/ianbicking)) of Mozilla Labs [explains why he \"decided to go with React instead of Angular.js\"](https://plus.google.com/+IanBicking/posts/Qj8R5SWAsfE).\n\n### ng-React Update\n\n[David Chang](https://github.com/davidchang) works through some performance improvements of his [ngReact](https://github.com/davidchang/ngReact) project. His post [\"ng-React Update - React 0.9 and Angular Track By\"](http://davidandsuzi.com/ngreact-update/) includes some helpful advice on boosting render performance for Angular components.\n\n> Angular gives you a ton of functionality out of the box - a full MV* framework - and I am a big fan, but I'll admit that you need to know how to twist the right knobs to get performance.\n>\n> That said, React gives you a very strong view component out of the box with the performance baked right in. Try as I did, I couldn't actually get it any faster. So pretty impressive stuff.\n>\n>[Read the full post...](http://davidandsuzi.com/ngreact-update/)\n\n\nReact was also recently mentioned at ng-conf, where the Angular team commented on React's concept of the virtual DOM:\n\n<iframe width=\"650\" height=\"315\" src=\"//www.youtube-nocookie.com/embed/srt3OBP2kGc?start=113\" frameborder=\"0\" allowfullscreen></iframe>\n\n## React and Web Components\n\nJonathan Krause ([@jonykrause](https://twitter.com/jonykrause)) offers his thoughts regarding [parallels between React and Web Components](http://jonykrau.se/posts/the-value-of-react), highlighting the value of React's ability to render pages on the server practically for free.\n\n## Immutable React\n\n[Peter Hausel](http://pk11.kinja.com/) shows how to build a Wikipedia auto-complete demo based on immutable data structures (similar to [mori](https://npmjs.org/package/mori)), really taking advantage of the framework's one-way reactive data binding:\n\n> Its truly reactive design makes DOM updates finally sane and when combined with persistent data structures one can experience JavaScript development like it was never done before.\n>\n> [Read the full post](http://tech.kinja.com/immutable-react-1495205675)\n\n\n## D3 and React\n\n[Ben Smith](http://10consulting.com/) built some great SVG-based charting components using a little less of D3 and a little more of React: [D3 and React - the future of charting components?](http://10consulting.com/2014/02/19/d3-plus-reactjs-for-charting/)\n\n## Om and React\nJosh Haberman ([@joshhaberman](https://twitter.com/JoshHaberman)) discusses performance differences between React, Om and traditional MVC frameworks in \"[A closer look at OM vs React performance](http://blog.reverberate.org/2014/02/on-future-of-javascript-mvc-frameworks.html)\".\n\nSpeaking of Om: [Omchaya](https://github.com/sgrove/omchaya) by Sean Grove ([@sgrove](https://twitter.com/sgrove)) is a neat Cljs/Om example project.\n\n\n## Random Tweets\n\n<div><blockquote class=\"twitter-tweet\" lang=\"en\"><p>Worked for 2 hours on a [@react_js](https://twitter.com/react_js) app sans internet. Love that I could get stuff done with it without googling every question.</p>&mdash; John Shimek (@varikin) <a href=\"https://twitter.com/varikin/status/436606891657949185\">February 20, 2014</a></blockquote></div>\n",
        "type": "MarkdownRemark",
        "contentDigest": "3892c314ed7874076685aaa61d4ea32f",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Community Round-up #18",
        "author": [
          "jgebhardt"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-03-14-community-roundup-18.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-03-14-community-roundup-18.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-03-14-community-roundup-18.md",
      "fields": {
        "date": "2014-03-13T16:00:00.000Z",
        "slug": "/blog/2014/03/14/community-roundup-18.html",
        "path": "blog/2014-03-14-community-roundup-18.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-03-19-react-v0.10-rc1.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-03-19-react-v0.10-rc1.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-03-19-react-v0.10-rc1.md absPath of file",
      "internal": {
        "content": "---\ntitle: React v0.10 RC\nauthor: [zpao]\n---\n\n[v0.9 has only been out for a month](/blog/2014/02/20/react-v0.9.html), but we’re getting ready to push out v0.10 already. Unlike v0.9 which took a long time, we don't have a long list of changes to talk about.\n\nThe release candidate is available for download from the CDN:\n\n* **React**  \n  Dev build with warnings: <https://fb.me/react-0.10.0-rc1.js>  \n  Minified build for production: <https://fb.me/react-0.10.0-rc1.min.js>  \n* **React with Add-Ons**  \n  Dev build with warnings: <https://fb.me/react-with-addons-0.10.0-rc1.js>  \n  Minified build for production: <https://fb.me/react-with-addons-0.10.0-rc1.min.js>  \n* **In-Browser JSX transformer**  \n  <https://fb.me/JSXTransformer-0.10.0-rc1.js>\n\nWe've also published version `0.10.0-rc1` of the `react` and `react-tools` packages on npm and the `react` package on bower.\n\nPlease try these builds out and [file an issue on GitHub](https://github.com/facebook/react/issues/new) if you see anything awry.\n\n## Clone On Mount\n\nThe main purpose of this release is to provide a smooth upgrade path as we evolve some of the implementation of core. In v0.9 we started warning in cases where you called methods on unmounted components. This is part of an effort to enforce the idea that the return value of a component (`React.DOM.div()`, `MyComponent()`) is in fact not a reference to the component instance React uses in the virtual DOM. The return value is instead a light-weight object that React knows how to use. Since the return value currently is a reference to the same object React uses internally, we need to make this transition in stages as many people have come to depend on this implementation detail.\n\nIn 0.10, we’re adding more warnings to catch a similar set of patterns. When a component is mounted we clone it and use that object for our internal representation. This allows us to capture calls you think you’re making to a mounted component. We’ll forward them on to the right object, but also warn you that this is breaking. See “Access to the Mounted Instance” on [this page](https://fb.me/react-warning-descriptors). Most of the time you can solve your pattern by using refs.\n\nStoring a reference to your top level component is a pattern touched upon on that page, but another examples that demonstrates what we see a lot of:\n\n```js\n// This is a common pattern. However instance here really refers to a\n// \"descriptor\", not necessarily the mounted instance.\nvar instance = <MyComponent/>;\nReact.renderComponent(instance);\n// ...\ninstance.setProps(...);\n\n// The change here is very simple. The return value of renderComponent will be\n// the mounted instance.\nvar instance = React.renderComponent(<MyComponent/>)\n// ...\ninstance.setProps(...);\n```\n\nThese warnings and method forwarding are only enabled in the development build. The production builds continue to work as they did in v0.9. We strongly encourage you to use the development builds to catch these warnings and fix the call sites.\n\nThe plan for v0.11 is that we will go fully to \"descriptors\". Method calls on the return value of `MyComponent()` will fail hard.\n\n## Changelog\n\n### React Core\n\n#### New Features\n* Added warnings to help migrate towards descriptors\n* Made it possible to server render without React-related markup (`data-reactid`, `data-react-checksum`). This DOM will not be mountable by React. [Read the docs for `React.renderComponentToStaticMarkup`](/docs/top-level-api.html#react.rendercomponenttostaticmarkup)\n* Added support for more attributes:\n  * `srcSet` for `<img>` to specify images at different pixel ratios\n  * `textAnchor` for SVG\n\n#### Bug Fixes\n* Ensure all void elements don’t insert a closing tag into the markup.\n* Ensure `className={false}` behaves consistently\n* Ensure `this.refs` is defined, even if no refs are specified.\n\n### Addons\n\n* `update` function to deal with immutable data. [Read the docs](/docs/update.html)\n\n### react-tools\n* Added an option argument to `transform` function. The only option supported is `harmony`, which behaves the same as `jsx --harmony` on the command line. This uses the ES6 transforms from [jstransform](https://github.com/facebook/jstransform).\n",
        "type": "MarkdownRemark",
        "contentDigest": "206cb9c2d0642b1d04664e0d155d6bf0",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.10 RC",
        "author": [
          "zpao"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-03-19-react-v0.10-rc1.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-03-19-react-v0.10-rc1.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-03-19-react-v0.10-rc1.md",
      "fields": {
        "date": "2014-03-18T16:00:00.000Z",
        "slug": "/blog/2014/03/19/react-v0.10-rc1.html",
        "path": "blog/2014-03-19-react-v0.10-rc1.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-03-21-react-v0.10.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-03-21-react-v0.10.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-03-21-react-v0.10.md absPath of file",
      "internal": {
        "content": "---\ntitle: React v0.10\nauthor: [zpao]\n---\n\nHot on the heels of the [release candidate earlier this week](/blog/2014/03/19/react-v0.10-rc1.html), we're ready to call v0.10 done. The only major issue we discovered had to do with the `react-tools` package, which has been updated. We've copied over the changelog from the RC with some small clarifying changes.\n\nThe release is available for download from the CDN:\n\n* **React**  \n  Dev build with warnings: <https://fb.me/react-0.10.0.js>  \n  Minified build for production: <https://fb.me/react-0.10.0.min.js>  \n* **React with Add-Ons**  \n  Dev build with warnings: <https://fb.me/react-with-addons-0.10.0.js>  \n  Minified build for production: <https://fb.me/react-with-addons-0.10.0.min.js>  \n* **In-Browser JSX transformer**  \n  <https://fb.me/JSXTransformer-0.10.0.js>\n\nWe've also published version `0.10.0` of the `react` and `react-tools` packages on npm and the `react` package on bower.\n\nPlease try these builds out and [file an issue on GitHub](https://github.com/facebook/react/issues/new) if you see anything awry.\n\n## Clone On Mount\n\nThe main purpose of this release is to provide a smooth upgrade path as we evolve some of the implementation of core. In v0.9 we started warning in cases where you called methods on unmounted components. This is part of an effort to enforce the idea that the return value of a component (`React.DOM.div()`, `MyComponent()`) is in fact not a reference to the component instance React uses in the virtual DOM. The return value is instead a light-weight object that React knows how to use. Since the return value currently is a reference to the same object React uses internally, we need to make this transition in stages as many people have come to depend on this implementation detail.\n\nIn 0.10, we’re adding more warnings to catch a similar set of patterns. When a component is mounted we clone it and use that object for our internal representation. This allows us to capture calls you think you’re making to a mounted component. We’ll forward them on to the right object, but also warn you that this is breaking. See “Access to the Mounted Instance” on [this page](https://fb.me/react-warning-descriptors). Most of the time you can solve your pattern by using refs.\n\nStoring a reference to your top level component is a pattern touched upon on that page, but another examples that demonstrates what we see a lot of:\n\n```js\n// This is a common pattern. However instance here really refers to a\n// \"descriptor\", not necessarily the mounted instance.\nvar instance = <MyComponent/>;\nReact.renderComponent(instance);\n// ...\ninstance.setProps(...);\n\n// The change here is very simple. The return value of renderComponent will be\n// the mounted instance.\nvar instance = React.renderComponent(<MyComponent/>)\n// ...\ninstance.setProps(...);\n```\n\nThese warnings and method forwarding are only enabled in the development build. The production builds continue to work as they did in v0.9. We strongly encourage you to use the development builds to catch these warnings and fix the call sites.\n\nThe plan for v0.11 is that we will go fully to \"descriptors\". Method calls on the return value of `MyComponent()` will fail hard.\n\n## Changelog\n\n### React Core\n\n#### New Features\n* Added warnings to help migrate towards descriptors\n* Made it possible to server render without React-related markup (`data-reactid`, `data-react-checksum`). This DOM will not be mountable by React. [Read the docs for `React.renderComponentToStaticMarkup`](/docs/top-level-api.html#react.rendercomponenttostaticmarkup)\n* Added support for more attributes:\n  * `srcSet` for `<img>` to specify images at different pixel ratios\n  * `textAnchor` for SVG\n\n#### Bug Fixes\n* Ensure all void elements don’t insert a closing tag into the markup.\n* Ensure `className={false}` behaves consistently\n* Ensure `this.refs` is defined, even if no refs are specified.\n\n### Addons\n\n* `update` function to deal with immutable data. [Read the docs](/docs/update.html)\n\n### react-tools\n* Added an option argument to `transform` function. The only option supported is `harmony`, which behaves the same as `jsx --harmony` on the command line. This uses the ES6 transforms from [jstransform](https://github.com/facebook/jstransform).\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "bdb17a3e426ff152deef750ee9001048",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.10",
        "author": [
          "zpao"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-03-21-react-v0.10.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-03-21-react-v0.10.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-03-21-react-v0.10.md",
      "fields": {
        "date": "2014-03-20T16:00:00.000Z",
        "slug": "/blog/2014/03/21/react-v0.10.html",
        "path": "blog/2014-03-21-react-v0.10.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-04-04-reactnet.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-04-04-reactnet.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-04-04-reactnet.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Use React and JSX in ASP.NET MVC\"\nauthor: [Daniel15]\n---\n\nToday we're happy to announce the initial release of\n[ReactJS.NET](http://reactjs.net/), which makes it easier to use React and JSX\nin .NET applications, focusing specifically on ASP.NET MVC web applications.\nIt has several purposes:\n\n - On-the-fly JSX to JavaScript compilation. Simply reference JSX files and they\n   will be compiled and cached server-side.\n\n   ```html\n   <script src=\"@Url.Content(\"/Scripts/HelloWorld.jsx\")\"></script>\n   ```\n - JSX to JavaScript compilation via popular minification/combination libraries\n   (Cassette and ASP.NET Bundling and Minification). This is suggested for\n   production websites.\n - Server-side component rendering to make your initial render super fast.\n\nEven though we are focusing on ASP.NET MVC, ReactJS.NET can also be used in\nWeb Forms applications as well as non-web applications (for example, in build\nscripts). ReactJS.NET currently only works on Microsoft .NET but we are working\non support for Linux and Mac OS X via Mono as well.\n\nInstallation\n------------\nReactJS.NET is packaged in NuGet. Simply run `Install-Package React.Mvc4` in the\npackage manager console or search NuGet for \"React\" to install it.\n[See the documentation](http://reactjs.net/docs) for more information. The\nGitHub project contains\n[a sample website](https://github.com/reactjs/React.NET/tree/master/src/React.Sample.Mvc4)\ndemonstrating all of the features.\n\nLet us know what you think, and feel free to send through any feedback and\nreport bugs [on GitHub](https://github.com/reactjs/React.NET).\n",
        "type": "MarkdownRemark",
        "contentDigest": "3811c3eeb94ae90f0c8a646a8fb51c56",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Use React and JSX in ASP.NET MVC",
        "author": [
          "Daniel15"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-04-04-reactnet.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-04-04-reactnet.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-04-04-reactnet.md",
      "fields": {
        "date": "2014-04-03T16:00:00.000Z",
        "slug": "/blog/2014/04/04/reactnet.html",
        "path": "blog/2014-04-04-reactnet.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-03-28-the-road-to-1.0.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-03-28-the-road-to-1.0.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-03-28-the-road-to-1.0.md absPath of file",
      "internal": {
        "content": "---\ntitle: The Road to 1.0\nauthor: [zpao]\n---\n\nWhen we launched React last spring, we purposefully decided not to call it 1.0. It was production ready, but we had plans to evolve APIs and behavior as we saw how people were using React, both internally and externally. We've learned a lot over the past 9 months and we've thought a lot about what 1.0 will mean for React. A couple weeks ago, I outlined [several projects][projects] that we have planned to take us to 1.0 and beyond. Today I'm writing a bit more about them to give our users a better insight into our plans.\n\nOur primary goal with 1.0 is to clarify our messaging and converge on an API that is aligned with our goals. In order to do that, we want to clean up bad patterns we've seen in use and really help enable developers write good code.\n\n## Descriptors\n\nThe first part of this is what we're calling \"descriptors\". I talked about this briefly in our [v0.10 announcements][v0.10]. The goal here is to separate our virtual DOM representation from our use of it. Simply, this means the return value of a component (e.g. `React.DOM.div()`, `MyComponent()`) will be a simple object containing the information React needs to render. Currently the object returned is actually linked to React's internal representation of the component and even directly to the DOM element. This has enabled some bad patterns that are quite contrary to how we want people to use React. That's our failure.\n\nWe added some warnings in v0.9 to start migrating some of these bad patterns. With v0.10 we'll catch more. You'll see more on this soon as we expect to ship v0.11 with descriptors.\n\n## API Cleanup\n\nThis is really connected to everything. We want to keep the API as simple as possible and help developers [fall into the pit of success][pitofsuccess]. Enabling bad patterns with bad APIs is not success.\n\n## ES6\n\nBefore we even launched React publicly, members of the team were talking about how we could leverage ES6, namely classes, to improve the experience of creating React components. Calling `React.createClass(...)` isn't great. We don't quite have the right answer here yet, but we're close. We want to make sure we make this as simple as possible. It could look like this:\n\n```js\nclass MyComponent extends React.Component {\n  render() {\n    ...\n  }\n}\n```\n\nThere are other features of ES6 we're already using in core. I'm sure we'll see more of that. The `jsx` executable we ship with `react-tools` already supports transforming many parts of ES6 into code that will run on older browsers.\n\n## Context\n\nWhile we haven't documented `context`, it exists in some form in React already. It exists as a way to pass values through a tree without having to use props at every single point. We've seen this need crop up time and time again, so we want to make this as easy as possible. Its use has performance tradeoffs, and there are known weaknesses in our implementation, so we want to make sure this is a solid feature.\n\n## Addons\n\nAs you may know, we ship a separate build of React with some extra features we called \"addons\". While this has served us fine, it's not great for our users. It's made testing harder, but also results in more cache misses for people using a CDN. The problem we face is that many of these \"addons\" need access to parts of React that we don't expose publicly. Our goal is to ship each addon on its own and let each hook into React as needed. This would also allow others to write and distribute \"addons\".\n\n## Browser Support\n\nAs much as we'd all like to stop supporting older browsers, it's not always possible. Facebook still supports IE8. While React won't support IE8 forever, our goal is to have 1.0 support IE8. Hopefully we can continue to abstract some of these rough parts.\n\n## Animations\n\nFinding a way to define animations in a declarative way is a hard problem. We've been exploring the space for a long time. We've introduced some half-measures to alleviate some use cases, but the larger problem remains. While we'd like to make this a part of 1.0, realistically we don't think we'll have a good solution in place.\n\n## Miscellaneous\n\nThere are several other things I listed on [our projects page][projects] that we're tracking. Some of them are internals and have no obvious outward effect (improve tests, repo separation, updated test runner). I encourage you to take a look.\n\n[v0.10]: /react/blog/2014/03/21/react-v0.10.html\n[pitofsuccess]: http://blog.codinghorror.com/falling-into-the-pit-of-success/\n[projects]: https://github.com/facebook/react/wiki/Projects\n",
        "type": "MarkdownRemark",
        "contentDigest": "9389f1f17719e6706fad1fa91885fde0",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "The Road to 1.0",
        "author": [
          "zpao"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-03-28-the-road-to-1.0.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-03-28-the-road-to-1.0.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-03-28-the-road-to-1.0.md",
      "fields": {
        "date": "2014-03-27T16:00:00.000Z",
        "slug": "/blog/2014/03/28/the-road-to-1.0.html",
        "path": "blog/2014-03-28-the-road-to-1.0.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-05-06-flux.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-05-06-flux.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-05-06-flux.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Flux: An Application Architecture for React\"\nauthor: [fisherwebdev, jingc]\n---\n\nWe recently spoke at one of f8's breakout session about Flux, a data flow architecture that works well with React.  Check out the video here:\n\n<figure><iframe width=\"650\" height=\"315\" src=\"//www.youtube-nocookie.com/embed/nYkdrAPrdcw?list=PLb0IAmt7-GS188xDYE-u1ShQmFFGbrk0v&start=621\" frameborder=\"0\" allowfullscreen></iframe></figure>\n\nTo summarize, Flux works well for us because the single directional data flow makes it easy to understand and modify an application as it becomes more complicated. We found that two-way data bindings lead to cascading updates, where changing one data model led to another data model updating, making it very difficult to predict what would change as the result of a single user interaction.\n\nIn Flux, the Dispatcher is a singleton that directs the flow of data and ensures that updates do not cascade. As an application grows, the Dispatcher becomes more vital, as it can also manage dependencies between stores by invoking the registered callbacks in a specific order.\n\nWhen a user interacts with a React view, the view sends an action (usually represented as a JavaScript object with some fields) through the dispatcher, which notifies the various stores that hold the application's data and business logic. When the stores change state, they notify the views that something has updated. This works especially well with React's declarative model, which allows the stores to send updates without specifying how to transition views between states.\n\nFlux is more of a pattern than a formal framework, so you can start using Flux immediately without a lot of new code. An [example of this architecture](https://github.com/facebook/flux/tree/master/examples/flux-todomvc) is available, along with more [detailed documentation](https://facebook.github.io/flux/docs/overview.html) and a [tutorial](https://facebook.github.io/flux/docs/todo-list.html). Look for more examples to come in the future.\n",
        "type": "MarkdownRemark",
        "contentDigest": "840cb4f03b198b24214c53aac4f0b60a",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Flux: An Application Architecture for React",
        "author": [
          "fisherwebdev",
          "jingc"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-05-06-flux.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-05-06-flux.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-05-06-flux.md",
      "fields": {
        "date": "2014-05-05T16:00:00.000Z",
        "slug": "/blog/2014/05/06/flux.html",
        "path": "blog/2014-05-06-flux.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-05-29-one-year-of-open-source-react.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-05-29-one-year-of-open-source-react.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-05-29-one-year-of-open-source-react.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"One Year of Open-Source React\"\nauthor: [chenglou]\n---\n\nToday marks the one-year open-source anniversary of React.\n\nIt’s been a crazy ride. 2.3k commits and 1.5k issues and pull requests later, we’re approaching version 1.0 and nearing 7k GitHub stars, with big names such as Khan Academy, New York Times, and Airbnb (and naturally, Facebook and Instagram) using React in production, and many more developers blogging their success stories with it. The [roadmap](/blog/2014/03/28/the-road-to-1.0.html) gives a glimpse into the future of the library; exciting stuff lies ahead!\n\nEvery success has its story. React was born out of our frustration at existing solutions for building UIs. When it was first suggested at Facebook, few people thought that functionally re-rendering everything and diffing the results could ever perform well. However, support grew after we built the first implementation and people wrote their first components. When we open-sourced React, the initial reception was [similarly skeptical](https://www.reddit.com/r/programming/comments/1fak87/react_facebooks_latest_javascript_client_library/). It challenges many pre-established conventions and received mostly disapproving first-impressions, intermingled with positive ones that often were votes of confidence in Facebook’s engineering capabilities. On an open, competitive platform such as the web, it's been hard to convince people to try React. [JSX](/docs/jsx-in-depth.html), in particular, filtered out a huge chunk of potential early adopters.\n\nFast forward one year, React has strongly [grown in popularity](https://news.ycombinator.com/item?id=7489959). Special acknowledgments go to Khan Academy, the ClojureScript community, and established frameworks such as Ember and Angular for contributing to and debating on our work. We'd also like to thank all the [individual contributors](https://github.com/facebook/react/graphs/contributors) who have taken the time to help out over the past year. React, as a library and as a new paradigm on the web, wouldn't have gained as much traction without them. In the future, we will continue to try to set an example of what's possible to achieve when we rethink about current “best practices”.\n\nHere’s to another year!\n",
        "type": "MarkdownRemark",
        "contentDigest": "3af0db1ee86540ad80bb97543fee8eb1",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "One Year of Open-Source React",
        "author": [
          "chenglou"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-05-29-one-year-of-open-source-react.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-05-29-one-year-of-open-source-react.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-05-29-one-year-of-open-source-react.md",
      "fields": {
        "date": "2014-05-28T16:00:00.000Z",
        "slug": "/blog/2014/05/29/one-year-of-open-source-react.html",
        "path": "blog/2014-05-29-one-year-of-open-source-react.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-06-27-community-roundup-19.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-06-27-community-roundup-19.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-06-27-community-roundup-19.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Community Round-up #19\"\nauthor: [chenglou]\n---\n\n## React Meetups!\nEver wanted to find developers who also share the same interest in React than you? Recently, there has been a React Meetup in [San Francisco](http://www.meetup.com/ReactJS-San-Francisco/) (courtesy of [Telmate](http://www.telmate.com)), and one in [London](http://www.meetup.com/London-React-User-Group/) (courtesy of [Stuart Harris](http://www.meetup.com/London-React-User-Group/members/105837542/), [Cain Ullah](http://www.meetup.com/London-React-User-Group/members/15509971/) and [Zoe Merchant](http://www.meetup.com/London-React-User-Group/members/137058242/)). These two events have been big successes; a second one in London is [already planned](http://www.meetup.com/London-React-User-Group/events/191406572/).\n\nIf you don't live near San Francisco or London, why not start one in your community?\n\n## Complementary Tools\nIn case you haven't seen it, we've consolidated the tooling solution around React on [this wiki page](https://github.com/facebook/react/wiki/Complementary-Tools). Some of the notable recent entries include:\n\n- [Ryan Florence](https://github.com/rpflorence) and [Michael Jackson](https://github.com/mjackson)'s [react-nested-router](https://github.com/rpflorence/react-nested-router), which is a translation of the Ember router API to React.\n\n- [Stephen J. Collings](https://github.com/stevoland)'s [react-bootstrap](https://github.com/react-bootstrap/react-bootstrap), which wraps the popular framework with a bit of React goodness. The [website](https://react-bootstrap.github.io/components.html) features live-editable demos.\n\n- [Andrey Popp](https://github.com/andreypopp)'s [react-quickstart](https://github.com/andreypopp/react-quickstart), which gives you a quick template for server-side rendering and routing, among other features.\n\nThese are some of the links that often pop up on the #reactjs IRC channel. If you made something that you think deserves to be shown on the wiki, feel free to add it!\n\n## React in Interesting Places\n\nThe core concepts React themselves is something very valuable that the community is exploring and pushing further. A year ago, we wouldn't have imagined something like [Bruce Hauman](http://rigsomelight.com)'s [Flappy Bird ClojureScript port](http://rigsomelight.com/2014/05/01/interactive-programming-flappy-bird-clojurescript.html), whose interactive programming has been made possible through React:\n\n<iframe width=\"650\" height=\"315\" src=\"//www.youtube-nocookie.com/embed/KZjFVdU8VLI\" frameborder=\"0\" allowfullscreen></iframe>\n\nAnd don't forget [Pete Hunt](https://github.com/petehunt)'s Wolfenstein 3D rendering engine in React ([source code](https://github.com/petehunt/wolfenstein3D-react/blob/master/js/renderer.js#L183)). While it's nearly a year old, it's still a nice demo.\n\n[![](../images/blog/wolfenstein_react.png)](http://www.petehunt.net/wolfenstein3D-react/wolf3d.html)\n\nGive us a shoutout on IRC or [React Google Groups](https://groups.google.com/forum/#!forum/reactjs) if you've used React in some Interesting places.\n\n## Even More People Using React\n\n### Prismatic\n[Prismatic](http://getprismatic.com/home) recently shrank their codebase fivefold with the help of React and its popular ClojureScript wrapper, [Om](https://github.com/swannodette/om). They detailed their very positive experience [here](http://blog.getprismatic.com/om-sweet-om-high-functional-frontend-engineering-with-clojurescript-and-react/).\n\n> Finally, the state is normalized: each piece of information is represented in a single place. Since React ensures consistency between the DOM and the application data, the programmer can focus on ensuring that the state properly stays up to date in response to user input. If the application state is normalized, then this consistency is guaranteed by definition, completely avoiding the possibility of an entire class of common bugs.\n\n### Adobe Brackets\n[Kevin Dangoor](http://www.kevindangoor.com) works on [Brackets](http://brackets.io/?lang=en), the open-source code editor. After writing [his first impression on React](http://www.kevindangoor.com/2014/05/simplifying-code-with-react/), he followed up with another insightful [article](http://www.kevindangoor.com/2014/05/react-in-brackets/) on how to gradually make the code transition, how to preserve the editor's good parts, and how to tune Brackets' tooling around JSX.\n\n> We don’t need to switch to React everywhere, all at once. It’s not a framework that imposes anything on the application structure. [...] Easy, iterative adoption is definitely something in React’s favor for us.\n\n### Storehouse\n[Storehouse](https://www.storehouse.co) (Apple Design Award 2014)'s web presence is build with React. Here's [an example story](https://www.storehouse.co/stories/y2ad-mexico-city-clouds). Congratulations on the award!\n\n### Vim Awesome\n[Vim Awesome](http://vimawesome.com), an open-source Vim plugins directory built on React, was just launched. Be sure to [check out the source code](https://github.com/divad12/vim-awesome) if you're curious to see an example of how to build a small single-page React app.\n\n## Random Tweets\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p>Spent 12 hours so far with <a href=\"https://twitter.com/hashtag/reactjs?src=hash\">#reactjs</a>. Spent another 2 wondering why we&#39;ve been doing JS frameworks wrong until now. React makes me happy.</p>&mdash; Paul Irwin (@paulirwin) <a href=\"https://twitter.com/paulirwin/statuses/481263947589242882\">June 24, 2014</a></blockquote>\n",
        "type": "MarkdownRemark",
        "contentDigest": "20765a21966fe9eed2ef7a4da3822b4e",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Community Round-up #19",
        "author": [
          "chenglou"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-06-27-community-roundup-19.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-06-27-community-roundup-19.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-06-27-community-roundup-19.md",
      "fields": {
        "date": "2014-06-26T16:00:00.000Z",
        "slug": "/blog/2014/06/27/community-roundup-19.html",
        "path": "blog/2014-06-27-community-roundup-19.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-07-13-react-v0.11-rc1.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-07-13-react-v0.11-rc1.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-07-13-react-v0.11-rc1.md absPath of file",
      "internal": {
        "content": "---\ntitle: React v0.11 RC\nauthor: [zpao]\n---\n\nIt's that time again… we're just about ready to ship a new React release! v0.11 includes a wide array of bug fixes and features. We highlighted some of the most important changes below, along with the full changelog.\n\nThe release candidate is available for download from the CDN:\n\n* **React**  \n  Dev build with warnings: <https://fb.me/react-0.11.0-rc1.js>  \n  Minified build for production: <https://fb.me/react-0.11.0-rc1.min.js>  \n* **React with Add-Ons**  \n  Dev build with warnings: <https://fb.me/react-with-addons-0.11.0-rc1.js>  \n  Minified build for production: <https://fb.me/react-with-addons-0.11.0-rc1.min.js>  \n* **In-Browser JSX transformer**  \n  <https://fb.me/JSXTransformer-0.11.0-rc1.js>\n\nWe've also published version `0.11.0-rc1` of the `react` and `react-tools` packages on npm and the `react` package on bower.\n\nPlease try these builds out and [file an issue on GitHub](https://github.com/facebook/react/issues/new) if you see anything awry.\n\n\n## `getDefaultProps`\n\nStarting in React 0.11, `getDefaultProps()` is called only once when `React.createClass()` is called, instead of each time a component is rendered. This means that `getDefaultProps()` can no longer vary its return value based on `this.props` and any objects will be shared across all instances. This change improves performance and will make it possible in the future to do PropTypes checks earlier in the rendering process, allowing us to give better error messages.\n\n\n## Rendering to `null`\n\nSince React's release, people have been using work arounds to \"render nothing\". Usually this means returning an empty `<div/>` or `<span/>`. Some people even got clever and started returning `<noscript/>` to avoid extraneous DOM nodes. We finally provided a \"blessed\" solution that allows developers to write meaningful code. Returning `null` is an explicit indication to React that you do not want anything rendered. Behind the scenes we make this work with a `<noscript>` element, though in the future we hope to not put anything in the document. In the mean time, `<noscript>` elements do not affect layout in any way, so you can feel safe using `null` today!\n\n```js\n// Before\nrender: function() {\n  if (!this.state.visible) {\n    return <span/>;\n  }\n  // ...\n}\n\n// After\nrender: function() {\n  if (!this.state.visible) {\n    return null;\n  }\n  // ...\n}\n```\n\n\n## JSX Namespacing\n\nAnother feature request we've been hearing for a long time is the ability to have namespaces in JSX. Given that JSX is just JavaScript, we didn't want to use XML namespacing. Instead we opted for a standard JS approach: object property access. Instead of assigning variables to access components stored in an object (such as a component library), you can now use the component directly as `<Namespace.Component/>`.\n\n```js\n// Before\nvar UI = require('UI');\nvar UILayout = UI.Layout;\nvar UIButton = UI.Button;\nvar UILabel = UI.Label;\n\nrender: function() {\n  return <UILayout><UIButton /><UILabel>text</UILabel></UILayout>;\n}\n\n// After\nvar UI = require('UI');\n\nrender: function() {\n  return <UI.Layout><UI.Button /><UI.Label>text</UI.Label></UI.Layout>;\n}\n```\n\n\n## Improved keyboard event normalization\n\nKeyboard events now contain a normalized `e.key` value according to the [DOM Level 3 Events spec](http://www.w3.org/TR/DOM-Level-3-Events/#keys-special), allowing you to write simpler key handling code that works in all browsers, such as:\n\n```js\nhandleKeyDown: function(e) {\n  if (e.key === 'Enter') {\n    // Handle enter key\n  } else if (e.key === ' ') {\n    // Handle spacebar\n  } else if (e.key === 'ArrowLeft') {\n    // Handle left arrow\n  }\n},\n```\n\nKeyboard and mouse events also now include a normalized `e.getModifierState()` that works consistently across browsers.\n\n## Changelog\n\n### React Core\n\n#### Breaking Changes\n* `getDefaultProps()` is now called once per class and shared across all instances\n\n#### New Features\n* Rendering to `null`\n* Keyboard events include normalized `e.key` and `e.getModifierState()` properties\n* New normalized `onBeforeInput` event\n* `React.Children.count` has been added as a helper for counting the number of children\n\n#### Bug Fixes\n\n* Re-renders are batched in more cases\n* Events: `e.view` properly normalized\n* Added Support for more HTML attributes (`coords`, `crossOrigin`, `download`, `hrefLang`, `mediaGroup`, `muted`, `scrolling`, `shape`, `srcSet`, `start`, `useMap`)\n* Improved SVG support\n  * Changing `className` on a mounted SVG component now works correctly\n  * Added support for elements `mask` and `tspan`\n  * Added support for attributes `dx`, `dy`, `fillOpacity`, `fontFamily`, `fontSize`, `markerEnd`, `markerMid`, `markerStart`, `opacity`, `patternContentUnits`, `patternUnits`, `preserveAspectRatio`, `strokeDasharray`, `strokeOpacity`\n* CSS property names with vendor prefixes (`Webkit`, `ms`, `Moz`, `O`) are now handled properly\n* Duplicate keys no longer cause a hard error; now a warning is logged (and only one of the children with the same key is shown)\n* `img` event listeners are now unbound properly, preventing the error \"Two valid but unequal nodes with the same `data-reactid`\"\n* Added explicit warning when missing polyfills\n\n### React With Addons\n* PureRenderMixin\n* Perf: a new set of tools to help with performance analysis\n* Update: New `$apply` command to transform values\n* TransitionGroup bug fixes with null elements, Android\n\n### React NPM Module\n* Now includes the pre-built packages under `dist/`.\n* `envify` is properly listed as a dependency instead of a peer dependency\n\n### JSX\n* Added support for namespaces, eg `<Components.Checkbox />`\n* JSXTransformer\n  * Enable the same `harmony` features available in the command line with `<script type=\"text/jsx;harmony=true\">`\n  * Scripts are downloaded in parallel for more speed. They are still executed in order (as you would expect with normal script tags)\n  * Fixed a bug preventing sourcemaps from working in Firefox\n\n### React Tools Module\n* Improved readme with usage and API information\n* Improved ES6 transforms available with `--harmony` option\n* Added `--source-map-inline` option to the `jsx` executable\n* New `transformWithDetails` API which gives access to the raw sourcemap data\n\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "db19bb2dcc19fa46245545e3dc73aa01",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.11 RC",
        "author": [
          "zpao"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-07-13-react-v0.11-rc1.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-07-13-react-v0.11-rc1.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-07-13-react-v0.11-rc1.md",
      "fields": {
        "date": "2014-07-12T16:00:00.000Z",
        "slug": "/blog/2014/07/13/react-v0.11-rc1.html",
        "path": "blog/2014-07-13-react-v0.11-rc1.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-07-25-react-v0.11.1.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-07-25-react-v0.11.1.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-07-25-react-v0.11.1.md absPath of file",
      "internal": {
        "content": "---\ntitle: React v0.11.1\nauthor: [zpao]\n---\n\nToday we're releasing React v0.11.1 to address a few small issues. Thanks to everybody who has reported them as they've begun upgrading.\n\nThe first of these is the most major and resulted in a regression with the use of `setState` inside `componentWillMount` when using React on the server. These `setState` calls are batched into the initial render. A change we made to our batching code resulted in this path hitting DOM specific code when run server-side, in turn throwing an error as `document` is not defined.\n\nThere are several fixes we're including in v0.11.1 that are focused around the newly supported `event.getModifierState()` function. We made some adjustments to improve this cross-browser standardization.\n\nThe final fix we're including is to better support a workaround for some IE8 behavior. The edge-case bug we're fixing was also present in v0.9 and v0.10, so while it wasn't a short-term regression, we wanted to make sure we support IE8 to the best of our abilities.\n\nWe'd also like to call out a couple additional breaking changes that we failed to originally mention in the release notes for v0.11. We updated that blog post and the changelog, so we encourage you to go read about the changes around [Descriptors](/blog/2014/07/17/react-v0.11.html#descriptors) and [Prop Type Validation](/blog/2014/07/17/react-v0.11.html#prop-type-validation).\n\nThe release is available for download from the CDN:\n\n* **React**  \n  Dev build with warnings: <https://fb.me/react-0.11.1.js>  \n  Minified build for production: <https://fb.me/react-0.11.1.min.js>  \n* **React with Add-Ons**  \n  Dev build with warnings: <https://fb.me/react-with-addons-0.11.1.js>  \n  Minified build for production: <https://fb.me/react-with-addons-0.11.1.min.js>  \n* **In-Browser JSX transformer**  \n  <https://fb.me/JSXTransformer-0.11.1.js>\n\nWe've also published version `0.11.1` of the `react` and `react-tools` packages on npm and the `react` package on bower.\n\nPlease try these builds out and [file an issue on GitHub](https://github.com/facebook/react/issues/new) if you see anything awry.\n\n## Changelog\n\n### React Core\n\n#### Bug Fixes\n* `setState` can be called inside `componentWillMount` in non-DOM environments\n* `SyntheticMouseEvent.getEventModifierState` correctly renamed to `getModifierState`\n* `getModifierState` correctly returns a `boolean`\n* `getModifierState` is now correctly case sensitive\n* Empty Text node used in IE8 `innerHTML` workaround is now removed, fixing rerendering in certain cases\n\n### JSXTransformer\n* Fix duplicate variable declaration (caused issues in some browsers)\n",
        "type": "MarkdownRemark",
        "contentDigest": "69387cd70460c5bc30fc43c43c3b43f2",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.11.1",
        "author": [
          "zpao"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-07-25-react-v0.11.1.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-07-25-react-v0.11.1.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-07-25-react-v0.11.1.md",
      "fields": {
        "date": "2014-07-24T16:00:00.000Z",
        "slug": "/blog/2014/07/25/react-v0.11.1.html",
        "path": "blog/2014-07-25-react-v0.11.1.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-07-28-community-roundup-20.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-07-28-community-roundup-20.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-07-28-community-roundup-20.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Community Round-up #20\"\nauthor: [LoukaN]\n---\n\nIt's an exciting time for React as there are now more commits from open source contributors than from Facebook engineers! Keep up the good work :)\n\n## Atom moves to React\n\n[Atom, GitHub's code editor, is now using React](http://blog.atom.io/2014/07/02/moving-atom-to-react.html) to build the editing experience. They made the move in order to improve performance. By default, React helped them eliminate unnecessary reflows, enabling them to focus on architecting the rendering pipeline in order to minimize repaints by using hardware acceleration. This is a testament to the fact that React's architecture is perfect for high performant applications.\n\n[<img src=\"../images/blog/gpu-cursor-move.gif\" style=\"width: 100%;\" />](http://blog.atom.io/2014/07/02/moving-atom-to-react.html)\n\n\n## Why Does React Scale?\n\nAt the last [JSConf.us](http://2014.jsconf.us/), Vjeux talked about the design decisions made in the API that allows it to scale to a large number of developers. If you don't have 20 minutes, take a look at the [annotated slides](https://speakerdeck.com/vjeux/why-does-react-scale-jsconf-2014).\n\n<iframe width=\"650\" height=\"315\" src=\"//www.youtube-nocookie.com/embed/D-ioDiacTm8\" frameborder=\"0\" allowfullscreen></iframe>\n\n\n## Live Editing\n\nOne of the best features of React is that it provides the foundations to implement concepts that were otherwise extremely difficult, like server-side rendering, undo-redo, rendering to non-DOM environments like canvas... [Dan Abramov](https://twitter.com/dan_abramov) got hot code reloading working with webpack in order to [live edit a React project](https://gaearon.github.io/react-hot-loader/)!\n\n<iframe src=\"//player.vimeo.com/video/100010922\" width=\"100%\" height=\"315\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>\n\n\n## ReactIntl Mixin by Yahoo\n\nThere are a couple of React-related projects that recently appeared on Yahoo's GitHub, the first one being an  [internationalization mixin](https://github.com/yahoo/react-intl). It's great to see them getting excited about React and contributing back to the community.\n\n```javascript\nvar MyComponent = React.createClass({\n  mixins: [ReactIntlMixin],\n  render: function() {\n    return (\n      <div>\n        <p>{this.intlDate(1390518044403, { hour: 'numeric', minute: 'numeric' })}</p>\n        <p>{this.intlNumber(400, { style: 'percent' })}</p>\n      </div>\n    );\n  }\n});\n\nReact.renderComponent(\n  <MyComponent locales={['fr-FR']} />,\n  document.getElementById('example')\n);\n```\n\n## Thinking and Learning React\n\nJosephine Hall, working at Icelab, used React to write a mobile-focused application. She wrote a blog post [“Thinking and Learning React.js”](http://icelab.com.au/articles/thinking-and-learning-reactjs/) to share her experience with elements they had to use. You'll learn about routing, event dispatch, touchable components, and basic animations.\n\n\n## London React Meetup\n\nIf you missed the last [London React Meetup](http://www.meetup.com/London-React-User-Group/events/191406572/), the video is available, with lots of great content.\n\n- What's new in React 0.11 and how to improve performance by guaranteeing immutability\n- State handling in React with Morearty.JS\n- React on Rails - How to use React with Ruby on Rails to build isomorphic apps\n- Building an isomorphic, real-time to-do list with moped and node.js\n\n<iframe width=\"650\" height=\"315\" src=\"//www.youtube-nocookie.com/embed/CP3lvm5Ppqo\" frameborder=\"0\" allowfullscreen></iframe>\n\nIn related news, the next [React SF Meetup](http://www.meetup.com/ReactJS-San-Francisco/events/195518392/) will be from Prezi: [“Immediate Mode on the Web: How We Implemented the Prezi Viewer in JavaScript”](https://medium.com/prezi-engineering/how-and-why-prezi-turned-to-javascript-56e0ca57d135). While not in React, their tech is really awesome and shares a lot of React's design principles and perf optimizations.\n\n\n## Using React and KendoUI Together\n\nOne of the strengths of React is that it plays nicely with other libraries. Jim Cowart proved it by writing a tutorial that explains how to write [React component adapters for KendoUI](http://www.ifandelse.com/using-reactjs-and-kendoui-together/).\n\n<figure><a href=\"http://www.ifandelse.com/using-reactjs-and-kendoui-together/\"><img src=\"../images/blog/kendoui.png\" /></a></figure>\n\n\n## Acorn JSX\n\nIngvar Stepanyan extended the Acorn JavaScript parser to support JSX. The result is a [JSX parser](https://github.com/RReverser/acorn-jsx) that's 1.5–2.0x faster than the official JSX implementation. It is an experiment and is not meant to be used for serious things, but it's always a good thing to get competition on performance!\n\n\n## ReactScriptLoader\n\nYariv Sadan created [ReactScriptLoader](https://github.com/yariv/ReactScriptLoader) to make it easier to write components that require an external script.\n\n```javascript\nvar Foo = React.createClass({\n  mixins: [ReactScriptLoaderMixin],\n  getScriptURL: function() {\n    return 'http://d3js.org/d3.v3.min.js';\n  },\n  getInitialState: function() {\n    return { scriptLoading: true, scriptLoadError: false };\n  },\n  onScriptLoaded: function() {\n    this.setState({scriptLoading: false});\n  },\n  onScriptError: function() {\n    this.setState({scriptLoading: false, scriptLoadError: true});\n  },\n  render: function() {\n    var message =\n      this.state.scriptLoading ? 'Loading script...' :\n      this.state.scriptLoadError ? 'Loading failed' :\n      'Loading succeeded';\n    return <span>{message}</span>;\n  }\n});\n```\n\n## Random Tweet\n\n<blockquote class=\"twitter-tweet\" data-conversation=\"none\" lang=\"en\"><p>“<a href=\"https://twitter.com/apphacker\">@apphacker</a>: I take back the mean things I said about <a href=\"https://twitter.com/reactjs\">@reactjs</a> I actually like it.” Summarizing the life of ReactJS in a single tweet.</p>&mdash; Jordan (@jordwalke) <a href=\"https://twitter.com/jordwalke/statuses/490747339607265280\">July 20, 2014</a></blockquote>\n",
        "type": "MarkdownRemark",
        "contentDigest": "14ec31b63a2a974d1ec5f26168083644",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Community Round-up #20",
        "author": [
          "LoukaN"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-07-28-community-roundup-20.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-07-28-community-roundup-20.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-07-28-community-roundup-20.md",
      "fields": {
        "date": "2014-07-27T16:00:00.000Z",
        "slug": "/blog/2014/07/28/community-roundup-20.html",
        "path": "blog/2014-07-28-community-roundup-20.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-07-30-flux-actions-and-the-dispatcher.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-07-30-flux-actions-and-the-dispatcher.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-07-30-flux-actions-and-the-dispatcher.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Flux: Actions and the Dispatcher\"\nauthor: [fisherwebdev]\n---\n\nFlux is the application architecture Facebook uses to build JavaScript applications. It's based on a unidirectional data flow.  We've built everything from small widgets to huge applications with Flux, and it's handled everything we've thrown at it. Because we've found it to be a great way to structure our code, we're excited to share it with the open source community. [Jing Chen presented Flux](http://youtu.be/nYkdrAPrdcw?t=10m20s) at the F8 conference, and since that time we've seen a lot of interest in it. We've also published an [overview of Flux](https://facebook.github.io/flux/docs/overview.html) and a [TodoMVC example](https://github.com/facebook/flux/tree/master/examples/flux-todomvc/), with an accompanying [tutorial](https://facebook.github.io/flux/docs/todo-list.html).\n\nFlux is more of a pattern than a full-blown framework, and you can start using it without a lot of new code beyond React. Up until recently, however, we haven't released one crucial piece of our Flux software: the dispatcher. But along with the creation of the new [Flux code repository](https://github.com/facebook/flux) and [Flux website](https://facebook.github.io/flux/), we've now open sourced the same [dispatcher](https://facebook.github.io/flux/docs/dispatcher.html) we use in our production applications.\n\n\nWhere the Dispatcher Fits in the Flux Data Flow\n-----------------------------------------------\n\nThe dispatcher is a singleton, and operates as the central hub of data flow in a Flux application. It is essentially a registry of callbacks, and can invoke these callbacks in order. Each _store_ registers a callback with the dispatcher. When new data comes into the dispatcher, it then uses these callbacks to propagate that data to all of the stores. The process of invoking the callbacks is initiated through the dispatch() method, which takes a data payload object as its sole argument.\n\n\nActions and ActionCreators\n--------------------------\n\nWhen new data enters the system, whether through a person interacting with the application or through a web api call, that data is packaged into an _action_ — an object literal containing the new fields of data and a specific action type. We often create a library of helper methods called ActionCreators that not only create the action object, but also pass the action to the dispatcher.\n\nDifferent actions are identified by a type attribute. When all of the stores receive the action, they typically use this attribute to determine if and how they should respond to it. In a Flux application, both stores and views control themselves; they are not acted upon by external objects. Actions flow into the stores through the callbacks they define and register, not through setter methods.\n\nLetting the stores update themselves eliminates many entanglements typically found in MVC applications, where cascading updates between models can lead to unstable state and make accurate testing very difficult. The objects within a Flux application are highly decoupled, and adhere very strongly to the [Law of Demeter](https://en.wikipedia.org/wiki/Law_of_Demeter), the principle that each object within a system should know as little as possible about the other objects in the system. This results in software that is more maintainable, adaptable, testable, and easier for new engineering team members to understand.\n\n<img src=\"../images/blog/flux-diagram.png\" style=\"width: 100%;\" />\n\n\nWhy We Need a Dispatcher\n------------------------\n\nAs an application grows, dependencies across different stores are a near certainty. Store A will inevitably need Store B to update itself first, so that Store A can know how to update itself. We need the dispatcher to be able to invoke the callback for Store B, and finish that callback, before moving forward with Store A. To declaratively assert this dependency, a store needs to be able to say to the dispatcher, \"I need to wait for Store B to finish processing this action.\" The dispatcher provides this functionality through its waitFor() method.\n\nThe dispatch() method provides a simple, synchronous iteration through the callbacks, invoking each in turn. When waitFor() is encountered within one of the callbacks, execution of that callback stops and waitFor() provides us with a new iteration cycle over the dependencies. After the entire set of dependencies have been fulfilled, the original callback then continues to execute.\n\nFurther, the waitFor() method may be used in different ways for different actions, within the same store's callback.  In one case, Store A might need to wait for Store B.  But in another case, it might need to wait for Store C.  Using waitFor() within the code block that is specific to an action allows us to have fine-grained control of these dependencies.\n\nProblems arise, however, if we have circular dependencies. That is, if Store A needs to wait for Store B, and Store B needs to wait for Store A, we could wind up in an endless loop. The dispatcher now available in the Flux repo protects against this by throwing an informative error to alert the developer that this problem has occurred. The developer can then create a third store and resolve the circular dependency.\n\n\nExample Chat App\n----------------\n\nAlong with the same dispatcher that Facebook uses in its production applications, we've also published a new example [chat app](https://github.com/facebook/flux/tree/master/examples/flux-chat), slightly more complicated than the simplistic TodoMVC, so that engineers can better understand how Flux solves problems like dependencies between stores and calls to a web API.\n\nWe're hopeful that the new Flux repository will grow with time to include additional tools, boilerplate code and further examples. And we hope that Flux will prove as useful to you as it has to us. Enjoy!\n",
        "type": "MarkdownRemark",
        "contentDigest": "f5c0780bf0ca1c8537022f8a7a15dd7e",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Flux: Actions and the Dispatcher",
        "author": [
          "fisherwebdev"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-07-30-flux-actions-and-the-dispatcher.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-07-30-flux-actions-and-the-dispatcher.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-07-30-flux-actions-and-the-dispatcher.md",
      "fields": {
        "date": "2014-07-29T16:00:00.000Z",
        "slug": "/blog/2014/07/30/flux-actions-and-the-dispatcher.html",
        "path": "blog/2014-07-30-flux-actions-and-the-dispatcher.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-08-03-community-roundup-21.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-08-03-community-roundup-21.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-08-03-community-roundup-21.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Community Round-up #21\"\nauthor: [LoukaN]\n---\n\n## React Router\n[Ryan Florence](http://ryanflorence.com/) and [Michael Jackson](https://twitter.com/mjackson) ported Ember's router to React in a project called [React Router](https://github.com/rackt/react-router). This is a very good example of both communities working together to make the web better!\n\n```javascript\nReact.renderComponent((\n  <Routes>\n    <Route handler={App}>\n      <Route name=\"about\" handler={About}/>\n      <Route name=\"users\" handler={Users}>\n        <Route name=\"user\" path=\"/user/:userId\" handler={User}/>\n      </Route>\n    </Route>\n  </Routes>\n), document.getElementById('example'));\n```\n\n## Going Big with React\n\nAreeb Malik, from Facebook, talks about his experience using React. \"On paper, all those JS frameworks look promising: clean implementations, quick code design, flawless execution. But what happens when you stress test JavaScript? What happens when you throw 6 megabytes of code at it? In this talk, we'll investigate how React performs in a high stress situation, and how it has helped our team build safe code on a massive scale\"\n\n[![](../images/blog/skills-matter.png)](https://skillsmatter.com/skillscasts/5429-going-big-with-react)\n\n<!--\n<iframe allowfullscreen=\"\" data-progress=\"true\" frameborder=\"0\" height=\"390\" id=\"vimeo-player\" mozallowfullscreen=\"\" src=\"//player.vimeo.com/video/100245392?api=1&amp;title=0\" webkitallowfullscreen=\"\" width=\"640\"></iframe>\n-->\n\n\n## What is React?\n\n[Craig McKeachie](http://www.funnyant.com/author/admin/) author of [JavaScript Framework Guide](http://www.funnyant.com/javascript-framework-guide/) wrote an excellent news named [\"What is React.js? Another Template Library?](http://www.funnyant.com/reactjs-what-is-it/)\n\n- Is React a template library?\n- Is React similar to Web Components?\n- Are the Virtual DOM and Shadow DOM the same?\n- Can React be used with other JavaScript MVC frameworks?\n- Who uses React?\n- Is React a premature optimization if you aren’t Facebook or Instagram?\n- Can I work with designers?\n- Will React hurt my search engine optimizations (SEO)?\n- Is React a framework for building applications or a library with one feature?\n- Are components a better way to build an application?\n- Can I build something complex with React?\n\n\n## Referencing Dynamic Children\n\nWhile Matt Zabriskie was working on [react-tabs](https://www.npmjs.com/package/react-tabs) he discovered how to use React.Children.map and React.addons.cloneWithProps in order to [reference dynamic children](http://www.mattzabriskie.com/blog/react-referencing-dynamic-children).\n\n```javascript\nvar App = React.createClass({\n  render: function () {\n    var children = React.Children.map(this.props.children, function(child, index) {\n      return React.addons.cloneWithProps(child, {\n        ref: 'child-' + index\n      });\n    });\n    return <div>{children}</div>;\n  }\n});\n```\n\n\n## JSX with Sweet.js using Readtables\n\nHave you ever wondered how JSX was implemented? James Long wrote a very instructive blog post that explains how to [compile JSX with Sweet.js using Readtables](http://jlongster.com/Compiling-JSX-with-Sweet.js-using-Readtables).\n\n[![](../images/blog/sweet-jsx.png)](http://jlongster.com/Compiling-JSX-with-Sweet.js-using-Readtables)\n\n\n## First Look: Getting Started with React\n\n[Kirill Buga](http://modernweb.com/authors/kirill-buga/) wrote an article on Modern Web explaining how [React is different from traditional MVC](http://modernweb.com/2014/07/23/getting-started-reactjs/) used by most JavaScript applications\n\n<figure><a href=\"http://modernweb.com/2014/07/23/getting-started-reactjs\"><img src=\"../images/blog/first-look.png\" /></a></figure>\n\n\n## React Draggable\n\n[Matt Zabriskie](https://github.com/mzabriskie) released a [project](https://github.com/mzabriskie/react-draggable) to make your react components draggable.\n\n[![](../images/blog/react-draggable.png)](https://mzabriskie.github.io/react-draggable/example/)\n\n\n## HTML Parser2 React\n\n[Jason Brown](https://browniefed.github.io/) adapted htmlparser2 to React: [htmlparser2-react](https://www.npmjs.com/package/htmlparser2-react). That allows you to convert raw HTML to the virtual DOM.\nThis is not the intended way to use React but can be useful as last resort if you have an existing piece of HTML.\n\n```javascript\nvar html = '<div data-id=\"1\" class=\"hey this is a class\" ' +\n  'style=\"width:100%;height: 100%;\"><article id=\"this-article\">' +\n  '<p>hey this is a paragraph</p><div><ul><li>1</li><li>2</li>' +\n  '<li>3</li></ul></div></article></div>';\nvar parsedComponent = reactParser(html, React);\n```\n\n\n## Building UIs with React\n\nIf you haven't yet tried out React, Jacob Rios did a Hangout where he covers the most important aspects and thankfully he recorded it!\n\n<iframe width=\"650\" height=\"315\" src=\"//www.youtube-nocookie.com/embed/lAn7GVoGlKU\" frameborder=\"0\" allowfullscreen></iframe>\n\n\n## Random Tweets\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p>We shipped reddit&#39;s first production <a href=\"https://twitter.com/reactjs\">@reactjs</a> code last week, our checkout process.&#10;&#10;<a href=\"https://t.co/KUInwsCmAF\">https://t.co/KUInwsCmAF</a></p>&mdash; Brian Holt (@holtbt) <a href=\"https://twitter.com/holtbt/statuses/493852312604254208\">July 28, 2014</a></blockquote>\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p>.<a href=\"https://twitter.com/AirbnbNerds\">@AirbnbNerds</a> just launched our first user-facing React.js feature to production! We love it so far. <a href=\"https://t.co/KtyudemcIW\">https://t.co/KtyudemcIW</a> /<a href=\"https://twitter.com/floydophone\">@floydophone</a></p>&mdash; spikebrehm (@spikebrehm) <a href=\"https://twitter.com/spikebrehm/statuses/491645223643013121\">July 22, 2014</a></blockquote>\n",
        "type": "MarkdownRemark",
        "contentDigest": "87be366a3bd4804c849a783ef30c4378",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Community Round-up #21",
        "author": [
          "LoukaN"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-08-03-community-roundup-21.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-08-03-community-roundup-21.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-08-03-community-roundup-21.md",
      "fields": {
        "date": "2014-08-02T16:00:00.000Z",
        "slug": "/blog/2014/08/03/community-roundup-21.html",
        "path": "blog/2014-08-03-community-roundup-21.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-09-03-introducing-the-jsx-specification.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-09-03-introducing-the-jsx-specification.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-09-03-introducing-the-jsx-specification.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Introducing the JSX Specification\"\nauthor: [sebmarkbage]\n---\n\nAt Facebook we've been using JSX for a long time. We originally introduced it to the world last year alongside React, but we actually used it in another form before that to create native DOM nodes. We've also seen some similar efforts grow out of our work in order to be used with other libraries and in interesting ways. At this point React JSX is just one of many implementations.\n\nIn order to make it easier to implement new versions and to make sure that the syntax remains compatible, we're now formalizing the syntax of JSX in a stand-alone spec without any semantic meaning. It's completely stand-alone from React itself.\n\nRead the spec now at <https://facebook.github.io/jsx/>.\n\nThis is not a proposal to be standardized in ECMAScript. It's just a reference document that transpiler writers and syntax highlighters can agree on. It's currently in a draft stage and will probably continue to be a living document.\n\nFeel free to [open an Issue](https://github.com/facebook/jsx/issues/new) or Pull Request if you find something wrong.\n",
        "type": "MarkdownRemark",
        "contentDigest": "c7ef95e332cfeeee45c14dda568d107e",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Introducing the JSX Specification",
        "author": [
          "sebmarkbage"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-09-03-introducing-the-jsx-specification.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-09-03-introducing-the-jsx-specification.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-09-03-introducing-the-jsx-specification.md",
      "fields": {
        "date": "2014-09-02T16:00:00.000Z",
        "slug": "/blog/2014/09/03/introducing-the-jsx-specification.html",
        "path": "blog/2014-09-03-introducing-the-jsx-specification.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-09-12-community-round-up-22.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-09-12-community-round-up-22.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-09-12-community-round-up-22.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Community Round-up #22\"\nlayout: post\nauthor: [LoukaN]\n---\n\nThis has been an exciting summer as four big companies: Yahoo, Mozilla, Airbnb and Reddit announced that they were using React!\n\n<table><tr><td>\n<blockquote width=\"300\" class=\"twitter-tweet\" data-cards=\"hidden\" lang=\"en\"><p>Our friends at <a href=\"https://twitter.com/Yahoo\">@yahoo</a> talk about migrating Yahoo! Mail from YUI to ReactJS at the next <a href=\"https://twitter.com/hashtag/ReactJS?src=hash\">#ReactJS</a> meetup! <a href=\"http://t.co/Cu2AaE0sVE\">http://t.co/Cu2AaE0sVE</a></p>&mdash; Facebook Open Source (@fbOpenSource) <a href=\"https://twitter.com/fbOpenSource/status/510258065900572672\">September 12, 2014</a></blockquote>\n</td><td valign=\"top\">\n<blockquote width=\"300\" class=\"twitter-tweet\" lang=\"en\"><p>I guess <a href=\"https://twitter.com/reactjs\">@reactjs</a> is getting into Firefox :-) Thanks <a href=\"https://twitter.com/n1k0\">@n1k0</a> ! <a href=\"https://t.co/kipfUS0hu4\">https://t.co/kipfUS0hu4</a></p>&mdash; David Bruant (@DavidBruant) <a href=\"https://twitter.com/DavidBruant/status/484956929933213696\">July 4, 2014</a></blockquote>\n</td></tr><tr><td>\n<blockquote width=\"300\" class=\"twitter-tweet\" lang=\"en\"><p>.<a href=\"https://twitter.com/AirbnbNerds\">@AirbnbNerds</a> just launched our first user-facing React.js feature to production! We love it so far. <a href=\"https://t.co/KtyudemcIW\">https://t.co/KtyudemcIW</a> /<a href=\"https://twitter.com/floydophone\">@floydophone</a></p>&mdash; spikebrehm (@spikebrehm) <a href=\"https://twitter.com/spikebrehm/statuses/491645223643013121\">July 22, 2014</a></blockquote>\n</td><td>\n<blockquote width=\"300\" class=\"twitter-tweet\" lang=\"en\"><p>We shipped reddit&#39;s first production <a href=\"https://twitter.com/reactjs\">@reactjs</a> code last week, our checkout process.&#10;&#10;<a href=\"https://t.co/KUInwsCmAF\">https://t.co/KUInwsCmAF</a></p>&mdash; Brian Holt (@holtbt) <a href=\"https://twitter.com/holtbt/statuses/493852312604254208\">July 28, 2014</a></blockquote>\n</td></tr></table>\n\n## React's Architecture\n\n[Vjeux](http://blog.vjeux.com/), from the React team, gave a talk at OSCON on the history of React and the various optimizations strategies that are implemented. You can also check out the [annotated slides](https://speakerdeck.com/vjeux/oscon-react-architecture) or [Chris Dawson](http://thenewstack.io/author/chrisdawson/)'s notes titled [JavaScript’s History and How it Led To React](http://thenewstack.io/javascripts-history-and-how-it-led-to-reactjs/).\n\n<iframe width=\"650\" height=\"315\" src=\"//www.youtube-nocookie.com/embed/eCf5CquV_Bw\" frameborder=\"0\" allowfullscreen></iframe>\n\n\n## v8 optimizations\n\nJakob Kummerow landed [two optimizations to V8](http://www.chromium.org/developers/speed-hall-of-fame#TOC-2014-06-18) specifically targeted at optimizing React. That's really exciting to see browser vendors helping out on performance!\n\n\n## Reusable Components by Khan Academy\n\n[Khan Academy](https://www.khanacademy.org/) released [many high quality standalone components](https://khan.github.io/react-components/) they are using. This is a good opportunity to see what React code used in production look like.\n\n```javascript\nvar TeX = require('react-components/js/tex.jsx');\nReact.renderComponent(<TeX>\\nabla \\cdot E = 4 \\pi \\rho</TeX>, domNode);\n\nvar translated = (\n  <$_ first=\"Motoko\" last=\"Kusanagi\">\n    Hello, %(first)s %(last)s!\n  </$_>\n);\n```\n\n\n## React + Browserify + Gulp\n\n[Trường](http://truongtx.me/) wrote a little guide to help your [getting started using React, Browserify and Gulp](http://truongtx.me/2014/07/18/using-reactjs-with-browserify-and-gulp/).\n\n<figure><a href=\"http://truongtx.me/2014/07/18/using-reactjs-with-browserify-and-gulp/\"><img src=\"../images/blog/react-browserify-gulp.jpg\" /></a></figure>\n\n\n## React Style\n\nAfter React put HTML inside of JavaScript, Sander Spies takes the same approach with CSS: [IntegratedCSS](https://github.com/SanderSpies/react-style). It seems weird at first but this is the direction where React is heading.\n\n```javascript\nvar Button = React.createClass({\n  normalStyle: ReactStyle(function() {\n    return { backgroundColor: vars.orange };\n  }),\n  activeStyle: ReactStyle(function() {\n    if (this.state.active) {\n      return { color: 'yellow', padding: '10px' };\n    }\n  }),\n  render: function() {\n    return (\n      <div styles={[this.normalStyle(), this.activeStyle()]}>\n        Hello, I'm styled\n      </div>\n    );\n  }\n});\n```\n\n\n## Virtual DOM in Elm\n\n[Evan Czaplicki](http://evan.czaplicki.us) explains how Elm implements the idea of a Virtual DOM and a diffing algorithm. This is great to see React ideas spread to other languages.\n\n> Performance is a good hook, but the real benefit is that this approach leads to code that is easier to understand and maintain. In short, it becomes very simple to create reusable HTML widgets and abstract out common patterns. This is why people with larger code bases should be interested in virtual DOM approaches.\n>\n> [Read the full article](http://elm-lang.org/blog/Blazing-Fast-Html.elm)\n\n\n## Components Tutorial\n\nIf you are getting started with React, [Joe Maddalone](http://www.joemaddalone.com/) made a good tutorial on how to build your first component.\n\n<iframe width=\"650\" height=\"200\" src=\"//www.youtube-nocookie.com/embed/rFvZydtmsxM\" frameborder=\"0\" allowfullscreen></iframe>\n\n\n## Saving time & staying sane?\n\nWhen [Kent William Innholt](http://http://kentwilliam.com/) who works at [M>Path](http://mpath.com/) summed up his experience using React in an [article](http://kentwilliam.com/articles/saving-time-staying-sane-pros-cons-of-react-js).\n\n> We're building an ambitious new web app, where the UI complexity represents most of the app's complexity overall. It includes a tremendous amount of UI widgets as well as a lot rules on what-to-show-when. This is exactly the sort of situation React.js was built to simplify.\n>\n> - **Big win**: Tighter coupling of markup and behavior\n> - **Jury's still out**: CSS lives outside React.js\n> - **Big win**: Cascading updates and functional thinking\n> - **Jury's still out**: Verbose propagation\n>\n> [Read the article...](http://kentwilliam.com/articles/saving-time-staying-sane-pros-cons-of-react-js)\n\n\n## Weather\n\nTo finish this round-up, Andrew Gleave made a page that displays the [Weather](https://github.com/andrewgleave/react-weather). It's great to see that React is also used for small prototypes.\n\n\n<figure><a href=\"https://github.com/andrewgleave/react-weather\"><img src=\"../images/blog/weather.png\" /></a></figure>\n",
        "type": "MarkdownRemark",
        "contentDigest": "bc0ef900bd38834a114750eebb60d78e",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Community Round-up #22",
        "layout": "post",
        "author": [
          "LoukaN"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-09-12-community-round-up-22.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-09-12-community-round-up-22.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-09-12-community-round-up-22.md",
      "fields": {
        "date": "2014-09-11T16:00:00.000Z",
        "slug": "/blog/2014/09/12/community-round-up-22.html",
        "path": "blog/2014-09-12-community-round-up-22.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-09-16-react-v0.11.2.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-09-16-react-v0.11.2.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-09-16-react-v0.11.2.md absPath of file",
      "internal": {
        "content": "---\ntitle: React v0.11.2\nauthor: [zpao]\n---\n\nToday we're releasing React v0.11.2 to add a few small features.\n\nWe're adding support for two more DOM elements, `<dialog>` and `<picture>`, as well as the associated attributes needed to use these elements: `open`, `media`, and `sizes`. While not all browsers support these natively, some of our cutting edge users want to make use of them, so we're making them available to everybody.\n\nWe're also doing some work to prepare for v0.12 and improve compatibility between the versions. To do this we are replacing `React.createDescriptor` with `React.createElement`. `createDescriptor` will continue to work with a warning and will be gone in v0.12. Chances are that this won't affect anybody.\n\nAnd lastly, on the heels of announcing Flow at [@Scale](http://atscaleconference.com/) yesterday, we're adding the ability to strip TypeScript-like type annotations as part of the `jsx` transform. To use, simply use the `--strip-types` flag on the command line, or set `stripTypes` in the `options` object when calling the API. We'll be talking about Flow more in the coming months. But for now, it's helpful to know that it is a flow-sensitive JavaScript type checker we will be open sourcing soon.\n\nThe release is available for download from the CDN:\n\n* **React**  \n  Dev build with warnings: <https://fb.me/react-0.11.2.js>  \n  Minified build for production: <https://fb.me/react-0.11.2.min.js>  \n* **React with Add-Ons**  \n  Dev build with warnings: <https://fb.me/react-with-addons-0.11.2.js>  \n  Minified build for production: <https://fb.me/react-with-addons-0.11.2.min.js>  \n* **In-Browser JSX transformer**  \n  <https://fb.me/JSXTransformer-0.11.2.js>\n\nWe've also published version `0.11.2` of the `react` and `react-tools` packages on npm and the `react` package on bower.\n\nPlease try these builds out and [file an issue on GitHub](https://github.com/facebook/react/issues/new) if you see anything awry.\n\n### React Core\n\n#### New Features\n\n* Added support for `<dialog>` element and associated `open` attribute\n* Added support for `<picture>` element and associated `media` and `sizes` attributes\n* Added `React.createElement` API in preparation for React v0.12\n  * `React.createDescriptor` has been deprecated as a result\n\n### JSX\n\n* `<picture>` is now parsed into `React.DOM.picture`\n\n### React Tools\n\n* Update `esprima` and `jstransform` for correctness fixes\n* The `jsx` executable now exposes a `--strip-types` flag which can be used to remove TypeScript-like type annotations\n  * This option is also exposed to `require('react-tools').transform` as `stripTypes`\n",
        "type": "MarkdownRemark",
        "contentDigest": "709ed63b24ec028583a5185f401ee583",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.11.2",
        "author": [
          "zpao"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-09-16-react-v0.11.2.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-09-16-react-v0.11.2.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-09-16-react-v0.11.2.md",
      "fields": {
        "date": "2014-09-15T16:00:00.000Z",
        "slug": "/blog/2014/09/16/react-v0.11.2.html",
        "path": "blog/2014-09-16-react-v0.11.2.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-10-16-react-v0.12-rc1.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-10-16-react-v0.12-rc1.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-10-16-react-v0.12-rc1.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v0.12 RC\"\nauthor: [sebmarkbage]\n---\n\nWe are finally ready to share the work we've been doing over the past couple months. A lot has gone into this and we want to make sure we iron out any potential issues before we make this final. So, we're shipping a Release Candidate for React v0.12 today. If you get a chance, please give it a try and report any issues you find! A full changelog will accompany the final release but we've highlighted the interesting and breaking changes below.\n\n\nThe release candidate is available for download:\n\n* **React**  \n  Dev build with warnings: <https://fb.me/react-0.12.0-rc1.js>  \n  Minified build for production: <https://fb.me/react-0.12.0-rc1.min.js>  \n* **React with Add-Ons**  \n  Dev build with warnings: <https://fb.me/react-with-addons-0.12.0-rc1.js>  \n  Minified build for production: <https://fb.me/react-with-addons-0.12.0-rc1.min.js>  \n* **In-Browser JSX transformer**  \n  <https://fb.me/JSXTransformer-0.12.0-rc1.js>\n\nWe've also published version `0.12.0-rc1` of the `react` and `react-tools` packages on npm and the `react` package on bower.\n\n\n## React Elements\n\nThe biggest conceptual change we made in v0.12 is the move to React Elements. [We talked about this topic in depth earlier this week](/blog/2014/10/14/introducting-react-elements.html). If you haven't already, you should read up on the exciting changes in there!\n\n\n## JSX Changes\n\nEarlier this year we decided to write [a specification for JSX](https://facebook.github.io/jsx/). This has allowed us to make some changes focused on the React specific JSX and still allow others to innovate in the same space.\n\n\n### The `@jsx` Pragma is Gone!\n\nWe have wanted to do this since before we even open sourced React. No more `/** @jsx React.DOM */`!. The React specific JSX transform assumes you have `React` in scope (which had to be true before anyway).\n\n`JSXTransformer` and `react-tools` have both been updated to account for this.\n\n\n### JSX for Function Calls is No Longer Supported\n\nThe React specific JSX transform no longer transforms to function calls. Instead we use `React.createElement` and pass it arguments. This allows us to make optimizations and better support React as a compile target for things like Om. Read more in the [React Elements introduction](/blog/2014/10/14/introducting-react-elements.html).\n\nThe result of this change is that we will no longer support arbitrary function calls. We understand that the ability to do was a convenient shortcut for many people but we believe the gains will be worth it.\n\n\n### JSX Lower-case Convention\n\nWe used to have a whitelist of HTML tags that got special treatment in JSX. However as new HTML tags got added to the spec, or we added support for more SVG tags, we had to go update our whitelist. Additionally, there was ambiguity about the behavior. There was always the chance that something new added to the tag list would result in breaking your code. For example:\n\n```javascript\nreturn <component />;\n```\n\nIs `component` an existing HTML tag? What if it becomes one?\n\nTo address this, we decided on a convention: __All JSX tags that start with a lower-case letter or contain a dash are treated as HTML.__\n\nThis means that you no longer have to wait for us to upgrade JSX to use new tags. This also introduces the possibility to consume custom elements (Web Components) - although custom attributes are not yet fully supported.\n\nCurrently we still use the whitelist as a sanity check. The transform will fail when it encounters an unknown tag. This allows you to update your code without hitting errors in production.\n\nIn addition, the HTML tags are converted to strings instead of using `React.DOM` directly. `<div/>` becomes `React.createElement('div')` instead of `React.DOM.div()`.\n\n\n### JSX Spread Attributes\n\nPreviously there wasn't a way to for you to pass a dynamic or unknown set of properties through JSX. This is now possible using the spread `...` operator.\n\n```javascript\nvar myProps = { a: 1, b: 2 };\nreturn <MyComponent {...myProps} />;\n```\n\nThis merges the properties of the object onto the props of `MyComponent`.\n\n[Read More About Spread Attributes](https://gist.github.com/sebmarkbage/07bbe37bc42b6d4aef81)\n\nIf you used to use plain function calls to pass arbitrary props objects...\n\n```javascript\nreturn MyComponent(myProps);\n```\n\nYou can now switch to using Spread Attributes instead:\n\n```javascript\nreturn <MyComponent {...myProps} />;\n```\n\n\n## Breaking Change: `key` and `ref` Removed From `this.props`\n\nThe props `key` and `ref` were already reserved property names. This turned out to be difficult to explicitly statically type since any object can accept these extra props. It also screws up JIT optimizations of React internals in modern VMs.\n\nThese are concepts that React manages from outside the Component before it even gets created so it shouldn't be part of the props.\n\nWe made this distinction clearer by moving them off the props object and onto the `ReactElement` itself. This means that you need to rename:\n\n`someElement.props.key` -> `someElement.key`\n\nYou can no longer access `this.props.ref` and `this.props.key` from inside the Component instance itself. So you need to use a different name for those props.\n\nYou do NOT need to change the way to define `key` and `ref`, only if you need to read it. E.g. `<div key=\"my-key\" />` and `div({ key: 'my-key' })` still works.\n\n\n## Breaking Change: Default Props Resolution\n\nThis is a subtle difference but `defaultProps` are now resolved at `ReactElement` creation time instead of when it's mounted. This is means that we can avoid allocating an extra object for the resolved props.\n\nYou will primarily see this breaking if you're also using `transferPropsTo`.\n\n\n## Deprecated: transferPropsTo\n\n`transferPropsTo` is deprecated in v0.12 and will be removed in v0.13. This helper function was a bit magical. It auto-merged a certain whitelist of properties and excluded others. It was also transferring too many properties. This meant that we have to keep a whitelist of valid HTML attributes in the React runtime. It also means that we can't catch typos on props.\n\nOur suggested solution is to use the Spread Attributes.\n\n```javascript\nreturn <div {...this.props} />;\n```\n\nOr, just if you're not using JSX:\n\n```javascript\nreturn div(this.props);\n```\n\nAlthough to avoid passing too many props down, you'll probably want to use something like ES7 rest properties. [Read more about upgrading from transferPropsTo](https://gist.github.com/sebmarkbage/a6e220b7097eb3c79ab7).\n\n\n## Deprecated: Returning `false` in Event Handlers\n\nIt used to be possible to return `false` from event handlers to preventDefault. We did this because this works in most browsers. This is a confusing API and we might want to use the return value for something else. Therefore, this is deprecated. Use `event.preventDefault()` instead.\n\n\n## Renamed APIs\n\nAs part of the [new React terminology](https://gist.github.com/sebmarkbage/fcb1b6ab493b0c77d589) we aliased some existing APIs to use the new naming convention:\n\n- `React.renderComponent` -> `React.render`\n- `React.renderComponentToString` -> `React.renderToString`\n- `React.renderComponentToStaticMarkup` -> `React.renderToStaticMarkup`\n- `React.isValidComponent` -> `React.isValidElement`\n- `React.PropTypes.component` -> `React.PropTypes.element`\n- `React.PropTypes.renderable` -> `React.PropTypes.node`\n\nThe older APIs will log a warning but work the same. They will be removed in v0.13.\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "4bd3f946c89a51f90e370d26d83db904",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.12 RC",
        "author": [
          "sebmarkbage"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-10-16-react-v0.12-rc1.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-10-16-react-v0.12-rc1.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-10-16-react-v0.12-rc1.md",
      "fields": {
        "date": "2014-10-15T16:00:00.000Z",
        "slug": "/blog/2014/10/16/react-v0.12-rc1.html",
        "path": "blog/2014-10-16-react-v0.12-rc1.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-10-27-react-js-conf.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-10-27-react-js-conf.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-10-27-react-js-conf.md absPath of file",
      "internal": {
        "content": "---\ntitle: React.js Conf\nauthor: [vjeux]\n---\n\nEvery few weeks someone asks us when we are going to organize a conference for React. Our answer has always been \"some day\". In the mean time, people have been talking about React at other JavaScript conferences around the world. But now the time has finally come for us to have a conference of our own.\n\n**We're happy to announce [React.js Conf](http://conf.reactjs.com/)! It will take place January 28-29, 2015 on Facebook's campus in Menlo Park, California.**\n\nBefore we open registration, [we're looking for great talks](http://conf.reactjs.com/call-for-presenters.html). We want to see how you pushed application development forward! If you ever talked to a meet-up, pitched React to your co-workers, or done something awesome and want to talk about it, let us know!\n\nHere are some areas of research we want to explore during the conference if you need some inspiration: server-side rendering, data fetching, language features (eg es6, clojure), immutability, rendering targets (eg svg, canvas), real-time updates...\n\nWe look forward to seeing many of you in person in just a few short months!\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "d77374f72864ce83c6718744a9646663",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React.js Conf",
        "author": [
          "vjeux"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-10-27-react-js-conf.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-10-27-react-js-conf.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-10-27-react-js-conf.md",
      "fields": {
        "date": "2014-10-26T16:00:00.000Z",
        "slug": "/blog/2014/10/27/react-js-conf.html",
        "path": "blog/2014-10-27-react-js-conf.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-10-28-react-v0.12.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-10-28-react-v0.12.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-10-28-react-v0.12.md absPath of file",
      "internal": {
        "content": "---\ntitle: React v0.12\nauthor: [zpao]\n---\n\nWe're happy to announce the availability of React v0.12! After over a week of baking as the release candidate, we uncovered and fixed a few small issues. Thanks to all of you who upgraded and gave us feedback!\n\nWe have talked a lot about some of the bigger changes in this release. [We introduced new terminology](/blog/2014/10/14/introducing-react-elements.html) and changed APIs to clean up and simplify some of the concepts of React. [We also made several changes to JSX](/blog/2014/10/16/react-v0.12-rc1.html) and deprecated a few functions. We won't go into depth about these changes again but we encourage you to read up on these changes in the linked posts. We'll summarize these changes and discuss some of the other changes and how they may impact you below. As always, a full changelog is also included below.\n\n\nThe release is available for download:\n\n* **React**  \n  Dev build with warnings: <https://fb.me/react-0.12.0.js>  \n  Minified build for production: <https://fb.me/react-0.12.0.min.js>  \n* **React with Add-Ons**  \n  Dev build with warnings: <https://fb.me/react-with-addons-0.12.0.js>  \n  Minified build for production: <https://fb.me/react-with-addons-0.12.0.min.js>  \n* **In-Browser JSX transformer**  \n  <https://fb.me/JSXTransformer-0.12.0.js>\n\nWe've also published version `0.12.0` of the `react` and `react-tools` packages on npm and the `react` package on bower.\n\n## New Terminology & Updated APIs\n\nv0.12 is bringing about some new terminology. [We introduced](/blog/2014/10/14/introducing-react-elements.html) this 2 weeks ago and we've also documented it in [a new section of the documentation](/docs/glossary.html). As a part of this, we also corrected many of our top-level APIs to align with the terminology. `Component` has been removed from all of our `React.render*` methods. While at one point the argument you passed to these functions was called a Component, it no longer is. You are passing ReactElements. To align with `render` methods in your component classes, we decided to keep the top-level functions short and sweet. `React.renderComponent` is now `React.render`.\n\nWe also corrected some other misnomers. `React.isValidComponent` actually determines if the argument is a ReactElement, so it has been renamed to `React.isValidElement`. In the same vein, `React.PropTypes.component` is now `React.PropTypes.element` and `React.PropTypes.renderable` is now `React.PropTypes.node`.\n\nThe old methods will still work but will warn upon first use. They will be removed in v0.13.\n\n## JSX Changes\n\n[We talked more in depth about these before](/blog/2014/10/16/react-v0.12-rc1.html#jsx-changes), so here are the highlights.\n\n* No more `/** @jsx React.DOM */`!\n* We no longer transform to a straight function call. `<Component/>` now becomes `React.createElement(Component)`\n* DOM components don't make use of `React.DOM`, instead we pass the tag name directly. `<div/>` becomes `React.createElement('div')`\n* We introduced spread attributes as a quick way to transfer props.\n\n## DevTools Improvements, No More `__internals`\n\nFor months we've gotten complaints about the React DevTools message. It shouldn't have logged the up-sell message when you were already using the DevTools. Unfortunately this was because the way we implemented these tools resulted in the DevTools knowing about React, but not the reverse. We finally gave this some attention and enabled React to know if the DevTools are installed. We released an update to the devtools several weeks ago making this possible. Extensions in Chrome should auto-update so you probably already have the update installed!\n\nAs a result of this update, we no longer need to expose several internal modules to the world. If you were taking advantage of this implementation detail, your code will break. `React.__internals` is no more.\n\n## License Change - BSD\n\nWe updated the license on React to the BSD 3-Clause license with an explicit patent grant. Previously we used the Apache 2 license. These licenses are very similar and our extra patent grant is equivalent to the grant provided in the Apache license. You can still use React with the confidence that we have granted the use of any patents covering it. This brings us in line with the same licensing we use across the majority of our open source projects at Facebook.\n\nYou can read the full text of the [LICENSE](https://github.com/facebook/react/blob/master/LICENSE) and [`PATENTS`](https://github.com/facebook/react/blob/master/PATENTS) files on GitHub.\n\n- - -\n\n## Changelog\n\n### React Core\n\n#### Breaking Changes\n\n* `key` and `ref` moved off props object, now accessible on the element directly\n* React is now BSD licensed with accompanying Patents grant\n* Default prop resolution has moved to Element creation time instead of mount time, making them effectively static\n* `React.__internals` is removed - it was exposed for DevTools which no longer needs access\n* Composite Component functions can no longer be called directly - they must be wrapped with `React.createFactory` first. This is handled for you when using JSX.\n\n#### New Features\n\n* Spread operator (`{...}`) introduced to deprecate `this.transferPropsTo`\n* Added support for more HTML attributes: `acceptCharset`, `classID`, `manifest`\n\n#### Deprecations\n\n* `React.renderComponent` --> `React.render`\n* `React.renderComponentToString` --> `React.renderToString`\n* `React.renderComponentToStaticMarkup` --> `React.renderToStaticMarkup`\n* `React.isValidComponent` --> `React.isValidElement`\n* `React.PropTypes.component` --> `React.PropTypes.element`\n* `React.PropTypes.renderable` --> `React.PropTypes.node`\n* **DEPRECATED** `React.isValidClass`\n* **DEPRECATED** `instance.transferPropsTo`\n* **DEPRECATED** Returning `false` from event handlers to preventDefault\n* **DEPRECATED** Convenience Constructor usage as function, instead wrap with `React.createFactory`\n* **DEPRECATED** use of `key={null}` to assign implicit keys\n\n#### Bug Fixes\n\n* Better handling of events and updates in nested results, fixing value restoration in \"layered\" controlled components\n* Correctly treat `event.getModifierState` as case sensitive\n* Improved normalization of `event.charCode`\n* Better error stacks when involving autobound methods\n* Removed DevTools message when the DevTools are installed\n* Correctly detect required language features across browsers\n* Fixed support for some HTML attributes:\n  * `list` updates correctly now\n  * `scrollLeft`, `scrollTop` removed, these should not be specified as props\n* Improved error messages\n\n### React With Addons\n\n#### New Features\n\n* `React.addons.batchedUpdates` added to API for hooking into update cycle\n\n#### Breaking Changes\n\n* `React.addons.update` uses `assign` instead of `copyProperties` which does `hasOwnProperty` checks. Properties on prototypes will no longer be updated correctly.\n\n#### Bug Fixes\n\n* Fixed some issues with CSS Transitions\n\n### JSX\n\n#### Breaking Changes\n\n* Enforced convention: lower case tag names are always treated as HTML tags, upper case tag names are always treated as composite components\n* JSX no longer transforms to simple function calls\n\n#### New Features\n\n* `@jsx React.DOM` no longer required\n* spread (`{...}`) operator introduced to allow easier use of props\n\n#### Bug Fixes\n\n* JSXTransformer: Make sourcemaps an option when using APIs directly (eg, for react-rails)\n",
        "type": "MarkdownRemark",
        "contentDigest": "9d78dc70f39477ee81c598adc115d7a5",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.12",
        "author": [
          "zpao"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-10-28-react-v0.12.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-10-28-react-v0.12.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-10-28-react-v0.12.md",
      "fields": {
        "date": "2014-10-27T16:00:00.000Z",
        "slug": "/blog/2014/10/28/react-v0.12.html",
        "path": "blog/2014-10-28-react-v0.12.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-11-24-react-js-conf-updates.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-11-24-react-js-conf-updates.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-11-24-react-js-conf-updates.md absPath of file",
      "internal": {
        "content": "---\ntitle: React.js Conf Updates\nauthor: [vjeux]\n---\n\nYesterday was the [React.js Conf](http://conf.reactjs.com/index.html) call for presenters submission deadline. We were\nsurprised to have received a total of **one hundred talk proposals** and were\namazed that 600 people requested to be notified when ticket go on sale. This is incredible!\n\nWhen we organized the conference, we decided to start small since this is the\nfirst React.js conference. Also, we weren't sure what level of demand to expect,\nso we planned for a single-track, two-day conference on Facebook's campus. The\nlargest room available would accommodate 18 speaking slots and 200 attendees.\nThe spacial configuration makes it difficult to add a second track and changing\nvenues only two months in advance would be too difficult, so we are deciding to\nstick with the originally planned format and venue on Facebook's campus.\n\nUnfortunately, this means that we can only accept a small number of the awesome\nconference talk proposals. In order to make sure attendees get a fair shot at\nregistering, we're going to sell tickets in three separate first-come,\nfirst-serve phases. **Tickets will cost $200 regardless of which phase they are\npurchased from and all proceeds will go to charity**.\n\n- Friday November 28th 2014 — Noon PST: First wave of tickets\n- Friday December 5th 2014 — Noon PST: Second wave of tickets\n- Friday December 12th 2014 — Noon PST: Third and last wave of tickets\n\nWe really do wish that everyone could attend React.js Conf, but in order to\nensure a quality experience for those who attend, we feel it will be best to\nlimit the size of the conference to what was originally planned for. This means\nthat not everyone who wants to attend will be able to, and many talks that\nwould be excellent contributions to the conference will have to be postponed\nuntil the next conference. All the talks will be recorded and put online shortly after.\n\nWe hope to see many of you at React.js Conf this January.\n\nSincerely,\n\nReact Core Team\n",
        "type": "MarkdownRemark",
        "contentDigest": "aab6b4310d022e7c0f8bdd800db2704a",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React.js Conf Updates",
        "author": [
          "vjeux"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-11-24-react-js-conf-updates.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-11-24-react-js-conf-updates.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-11-24-react-js-conf-updates.md",
      "fields": {
        "date": "2014-11-23T16:00:00.000Z",
        "slug": "/blog/2014/11/24/react-js-conf-updates.html",
        "path": "blog/2014-11-24-react-js-conf-updates.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-12-18-react-v0.12.2.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-12-18-react-v0.12.2.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-12-18-react-v0.12.2.md absPath of file",
      "internal": {
        "content": "---\ntitle: React v0.12.2\nauthor: [zpao]\n---\n\nWe just shipped React v0.12.2, bringing the 0.12 branch up to date with a few small fixes that landed in master over the past 2 months.\n\nYou may have noticed that we did not do an announcement for v0.12.1. That release was snuck out in anticipation of [Flow](http://flowtype.org/), with only transform-related changes. Namely we added a flag to the `jsx` executable which allowed you to safely transform Flow-based code to vanilla JS. If you didn't update for that release, you can safely skip it and move directly to v0.12.2.\n\nThe release is available for download from the CDN:\n\n* **React**  \n  Dev build with warnings: <https://fb.me/react-0.12.2.js>  \n  Minified build for production: <https://fb.me/react-0.12.2.min.js>  \n* **React with Add-Ons**  \n  Dev build with warnings: <https://fb.me/react-with-addons-0.12.2.js>  \n  Minified build for production: <https://fb.me/react-with-addons-0.12.2.min.js>  \n* **In-Browser JSX transformer**  \n  <https://fb.me/JSXTransformer-0.12.2.js>\n\nWe've also published version `0.12.2` of the `react` and `react-tools` packages on npm and the `react` package on bower. `0.12.1` is also available in the same locations if need those.\n\nPlease try these builds out and [file an issue on GitHub](https://github.com/facebook/react/issues/new) if you see anything awry.\n\n## Changelog\n\n### React Core\n\n* Added support for more HTML attributes: `formAction`, `formEncType`, `formMethod`, `formTarget`, `marginHeight`, `marginWidth`\n* Added `strokeOpacity` to the list of unitless CSS properties\n* Removed trailing commas (allows npm module to be bundled and used in IE8)\n* Fixed bug resulting in error when passing `undefined` to `React.createElement` - now there is a useful warning\n\n### React Tools\n\n* JSX-related transforms now always use double quotes for props and `displayName`\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "afb1d4f3fe7053b52e06f47c6beb1612",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.12.2",
        "author": [
          "zpao"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-12-18-react-v0.12.2.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-12-18-react-v0.12.2.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-12-18-react-v0.12.2.md",
      "fields": {
        "date": "2014-12-17T16:00:00.000Z",
        "slug": "/blog/2014/12/18/react-v0.12.2.html",
        "path": "blog/2014-12-18-react-v0.12.2.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-12-19-react-js-conf-diversity-scholarship.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-12-19-react-js-conf-diversity-scholarship.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-12-19-react-js-conf-diversity-scholarship.md absPath of file",
      "internal": {
        "content": "---\ntitle: React.js Conf Diversity Scholarship\nauthor: [zpao]\n---\n\nToday I'm really happy to announce the React.js Conf Diversity Scholarship! We believe that a diverse set of viewpoints and opinions is really important to build a thriving community. In an ideal world, every part of the tech community would be made up of people from all walks of life. However the reality is that we must be proactive and make an effort to make sure everybody has a voice. As conference organizers we worked closely with the Diversity Team here at Facebook to set aside 10 tickets and provide a scholarship. 10 tickets may not be many in the grand scheme but we really believe that this will have a positive impact on the discussions we have at the conference.\n\nI'm really excited about this and I hope you are too! The full announcement is below:\n\n- - -\n\nThe Diversity Team at Facebook is excited to announce that we are now accepting applications for the React.js Conf scholarship!\n\nBeginning today, those studying or working in computer science or a related field can apply for an all-expense paid scholarship to attend the React.js Conf at Facebook’s Headquarters in Menlo Park, CA on January 28 & 29, 2015. React opens a world of new possibilities such as server-side rendering, real-time updates, different rendering targets like SVG and canvas. Join us at React.js Conf to shape the future of client-side applications! For more information about the React.js conference, please see the [website](http://conf.reactjs.com/) and [previous](/blog/2014/10/27/react-js-conf.html) [updates](/blog/2014/11/24/react-js-conf-updates.html) on our blog.\n\nAt Facebook, we believe that anyone anywhere can make a positive impact by developing products to make the world more open and connected to the people and things they care about. Given the current realities of the tech industry and the lack of representation of communities we seek to serve, applicants currently under-represented in Computer Science and related fields are strongly encouraged to apply.\nFacebook will make determinations on scholarship recipients in its sole discretion. Facebook complies with all equal opportunity laws.\n\nTo apply for the scholarship, please visit the Application Page: <https://www.surveymonkey.com/s/XVJGK6R>\n\n## Award Includes\n\n* Paid registration fee for the React.js Conf January 28 & 29th at Facebook’s Headquarters in Menlo Park, CA\n* Paid travel and lodging expenses\n* Additional $200 meal stipend\n\n## Important Dates\n\n* Monday, January 5, 2015: Applications for the React.js Conf Scholarship must be submitted in full\n* Friday, January 9, 2015: Award recipients will be notified by email of their acceptance\n* Wednesday & Thursday, January 28 & 29, 2015: React.js Conf\n\n## Eligibility\n\n* Must currently be studying or working in Computer Science or a related field\n* International applicants are welcome, but you will be responsible for securing your own visa to attend the conference\n* You must be available to attend the full duration of React.js conf on January 28 and 29 at Facebook Headquarters in Menlo Park\n",
        "type": "MarkdownRemark",
        "contentDigest": "b79309ab36d81b1dc866ae893a16c1d4",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React.js Conf Diversity Scholarship",
        "author": [
          "zpao"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-12-19-react-js-conf-diversity-scholarship.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-12-19-react-js-conf-diversity-scholarship.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-12-19-react-js-conf-diversity-scholarship.md",
      "fields": {
        "date": "2014-12-18T16:00:00.000Z",
        "slug": "/blog/2014/12/19/react-js-conf-diversity-scholarship.html",
        "path": "blog/2014-12-19-react-js-conf-diversity-scholarship.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-01-27-react-v0.13.0-beta-1.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-01-27-react-v0.13.0-beta-1.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-01-27-react-v0.13.0-beta-1.md absPath of file",
      "internal": {
        "content": "---\ntitle: React v0.13.0 Beta 1\nauthor: [sebmarkbage]\n---\n\nReact 0.13 has a lot of nice features but there is one particular feature that I'm really excited about. I couldn't wait for React.js Conf to start tomorrow morning.\n\nMaybe you're like me and staying up late excited about the conference, or maybe you weren't one of the lucky ones to get a ticket. Either way I figured I'd give you all something to play with until then.\n\nWe just published a beta version of React v0.13.0 to [npm](https://www.npmjs.com/package/react)! You can install it with `npm install react@0.13.0-beta.1`. Since this is a pre-release, we don't have proper release notes ready.\n\nSo what is that one feature I'm so excited about that I just couldn't wait to share?\n\n\n## Plain JavaScript Classes!!\n\nJavaScript originally didn't have a built-in class system. Every popular framework built their own, and so did we. This means that you have a learn slightly different semantics for each framework.\n\nWe figured that we're not in the business of designing a class system. We just want to use whatever is the idiomatic JavaScript way of creating classes.\n\nIn React 0.13.0 you no longer need to use `React.createClass` to create React components. If you have a transpiler you can use ES6 classes today. You can use the transpiler we ship with `react-tools` by making use of the harmony option: `jsx --harmony`.\n\n\n### ES6 Classes\n\n```javascript\nclass HelloMessage extends React.Component {\n  render() {\n    return <div>Hello {this.props.name}</div>;\n  }\n}\n\nReact.render(<HelloMessage name=\"Sebastian\" />, mountNode);\n```\n\nThe API is mostly what you would expect, with the exception of `getInitialState`. We figured that the idiomatic way to specify class state is to just use a simple instance property. Likewise `getDefaultProps` and `propTypes` are really just properties on the constructor.\n\n```javascript\nexport class Counter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {count: props.initialCount};\n  }\n  tick() {\n    this.setState({count: this.state.count + 1});\n  }\n  render() {\n    return (\n      <div onClick={this.tick.bind(this)}>\n        Clicks: {this.state.count}\n      </div>\n    );\n  }\n}\nCounter.propTypes = { initialCount: React.PropTypes.number };\nCounter.defaultProps = { initialCount: 0 };\n```\n\n### ES7+ Property Initializers\n\nWait, assigning to properties seems like a very imperative way of defining classes! You're right, however, we designed it this way because it's idiomatic. We fully expect a more declarative syntax for property initialization to arrive in future version of JavaScript. It might look something like this:\n\n```javascript\n// Future Version\nexport class Counter extends React.Component {\n  static propTypes = { initialCount: React.PropTypes.number };\n  static defaultProps = { initialCount: 0 };\n  state = { count: this.props.initialCount };\n  tick() {\n    this.setState({ count: this.state.count + 1 });\n  }\n  render() {\n    return (\n      <div onClick={this.tick.bind(this)}>\n        Clicks: {this.state.count}\n      </div>\n    );\n  }\n}\n```\n\nThis was inspired by TypeScript's property initializers.\n\n### Autobinding\n\n`React.createClass` has a built-in magic feature that bound all methods to `this` automatically for you. This can be a little confusing for JavaScript developers that are not used to this feature in other classes, or it can be confusing when they move from React to other classes.\n\nTherefore we decided not to have this built-in into React's class model. You can still explicitly prebind methods in your constructor if you want.\n\n```javascript\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.tick = this.tick.bind(this);\n  }\n  tick() {\n    ...\n  }\n  ...\n}\n```\n\nHowever, when we have the future property initializers, there is a neat trick that you can use to accomplish this syntactically:\n\n```javascript\nclass Counter extends React.Component {\n  tick = () => {\n    ...\n  }\n  ...\n}\n```\n\n### Mixins\n\nUnfortunately, we will not launch any mixin support for ES6 classes in React. That would defeat the purpose of only using idiomatic JavaScript concepts.\n\nThere is no standard and universal way to define mixins in JavaScript. In fact, several features to support mixins were dropped from ES6 today. There are a lot of libraries with different semantics. We think that there should be one way of defining mixins that you can use for any JavaScript class. React just making another doesn't help that effort.\n\nTherefore, we will keep working with the larger JS community to create a standard for mixins. We will also start designing a new compositional API that will help make common tasks easier to do without mixins. E.g. first-class subscriptions to any kind of Flux store.\n\nLuckily, if you want to keep using mixins, you can just keep using `React.createClass`.\n\n> **Note:**\n>\n> The classic `React.createClass` style of creating classes will continue to work just fine.\n\n## Other Languages!\n\nSince these classes are just plain old JavaScript classes, you can use other languages that compile to JavaScript classes, such as TypeScript.\n\nYou can also use CoffeeScript classes:\n\n```coffeescript\ndiv = React.createFactory 'div'\n\nclass Counter extends React.Component\n  @propTypes = initialCount: React.PropTypes.number\n  @defaultProps = initialCount: 0\n\n  constructor: (props) ->\n    super props\n    @state = count: props.initialCount\n\n  tick: =>\n    @setState count: @state.count + 1\n\n  render: ->\n    div onClick: @tick,\n      'Clicks: '\n      @state.count\n```\n\nYou can even use the old ES3 module pattern if you want:\n\n```javascript\nfunction MyComponent(initialProps) {\n  return {\n    state: { value: initialProps.initialValue },\n    render: function() {\n      return <span className={this.state.value} />\n    }\n  };\n}\n```\n",
        "type": "MarkdownRemark",
        "contentDigest": "c9b6206294b3ad98e170735b878da11f",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.13.0 Beta 1",
        "author": [
          "sebmarkbage"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-01-27-react-v0.13.0-beta-1.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-01-27-react-v0.13.0-beta-1.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-01-27-react-v0.13.0-beta-1.md",
      "fields": {
        "date": "2015-01-26T16:00:00.000Z",
        "slug": "/blog/2015/01/27/react-v0.13.0-beta-1.html",
        "path": "blog/2015-01-27-react-v0.13.0-beta-1.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-02-20-introducing-relay-and-graphql.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-02-20-introducing-relay-and-graphql.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-02-20-introducing-relay-and-graphql.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Introducing Relay and GraphQL\"\nlayout: post\nauthor: [wincent]\n---\n\n## Data fetching for React applications\n\nThere's more to building an application than creating a user interface. Data fetching is still a tricky problem, especially as applications become more complicated. At [React.js Conf](http://conf.reactjs.com/) we announced two projects we've created at Facebook to make data fetching simple for developers, even as a product grows to include dozens of contributors and the application becomes as complex as Facebook itself.\n\n<iframe width=\"650\" height=\"315\" src=\"https://www.youtube-nocookie.com/embed/9sc8Pyc51uU\" frameborder=\"0\" allowfullscreen></iframe>\n\nThe two projects &mdash; Relay and GraphQL &mdash; have been in use in production at Facebook for some time, and we're excited to be bringing them to the world as open source in the future. In the meantime, we wanted to share some additional information about the projects here.\n\n<script async class=\"speakerdeck-embed\" data-id=\"7af7c2f33bf9451a892dcd91de55b7c2\" data-ratio=\"1.29456384323641\" src=\"//speakerdeck.com/assets/embed.js\"></script>\n\n## What is Relay?\n\nRelay is a new framework from Facebook that provides data-fetching functionality for React applications. It was announced at React.js Conf (January 2015).\n\nEach component specifies its own data dependencies declaratively using a query language called GraphQL. The data is made available to the component via properties on `this.props`.\n\nDevelopers compose these React components naturally, and Relay takes care of composing the data queries into efficient batches, providing each component with exactly the data that it requested (and no more), updating those components when the data changes, and maintaining a client-side store (cache) of all data.\n\n## What is GraphQL?\n\nGraphQL is a data querying language designed to describe the complex, nested data dependencies of modern applications. It's been in production use in Facebook's native apps for several years.\n\nOn the server, we configure the GraphQL system to map queries to underlying data-fetching code. This configuration layer allows GraphQL to work with arbitrary underlying storage mechanisms. Relay uses GraphQL as its query language, but it is not tied to a specific implementation of GraphQL.\n\n## The value proposition\n\nRelay was born out of our experiences building large applications at Facebook. Our overarching goal is to enable developers to create correct, high-performance applications in a straightforward and obvious way. The design enables even large teams to make changes with a high degree of isolation and confidence. Fetching data is hard, dealing with ever-changing data is hard, and performance is hard. Relay aims to reduce these problems to simple ones, moving the tricky bits into the framework and freeing you to concentrate on building your application.\n\nBy co-locating the queries with the view code, the developer can reason about what a component is doing by looking at it in isolation; it's not necessary to consider the context where the component was rendered in order to understand it. Components can be moved anywhere in a render hierarchy without having to apply a cascade of modifications to parent components or to the server code which prepares the data payload.\n\nCo-location leads developers to fall into the \"pit of success\", because they get exactly the data they asked for and the data they asked for is explicitly defined right next to where it is used. This means that performance becomes the default (it becomes much harder to accidentally over-fetch), and components are more robust (under-fetching is also less likely for the same reason, so components won't try to render missing data and blow up at runtime).\n\nRelay provides a predictable environment for developers by maintaining an invariant: a component won't be rendered until all the data it requested is available. Additionally, queries are defined statically (ie. we can extract queries from a component tree before rendering) and the GraphQL schema provides an authoritative description of what queries are valid, so we can validate queries early and fail fast when the developer makes a mistake.\n\nOnly the fields of an object that a component explicitly asks for will be accessible to that component, even if other fields are known and cached in the store (because another component requested them). This makes it impossible for implicit data dependency bugs to exist latently in the system.\n\nBy handling all data-fetching via a single abstraction, we're able to handle a bunch of things that would otherwise have to be dealt with repeatedly and pervasively across the application:\n\n- **Performance:** All queries flow through the framework code, where things that would otherwise be inefficient, repeated query patterns get automatically collapsed and batched into efficient, minimal queries. Likewise, the framework knows which data have been previously requested, or for which requests are currently \"in flight\", so queries can be automatically de-duplicated and the minimal queries can be produced.\n- **Subscriptions:** All data flows into a single store, and all reads from the store are via the framework. This means the framework knows which components care about which data and which should be re-rendered when data changes; components never have to set up individual subscriptions.\n- **Common patterns:** We can make common patterns easy. Pagination is the example that [Jing](https://twitter.com/jingc) gave at the conference: if you have 10 records initially, getting the next page just means declaring you want 15 records in total, and the framework automatically constructs the minimal query to grab the delta between what you have and what you need, requests it, and re-renders your view when the data become available.\n- **Simplified server implementation:** Rather than having a proliferation of end-points (per action, per route), a single GraphQL endpoint can serve as a facade for any number of underlying resources.\n- **Uniform mutations:** There is one consistent pattern for performing mutations (writes), and it is conceptually baked into the data querying model itself. You can think of a mutation as a query with side-effects: you provide some parameters that describe the change to be made (eg. attaching a comment to a record) and a query that specifies the data you'll need to update your view of the world after the mutation completes (eg. the comment count on the record), and the data flows through the system using the normal flow. We can do an immediate \"optimistic\" update on the client (ie. update the view under the assumption that the write will succeed), and finally commit it, retry it or roll it back in the event of an error when the server payload comes back.\n\n## How does it relate to Flux?\n\nIn some ways Relay is inspired by Flux, but the mental model is much simpler. Instead of multiple stores, there is one central store that caches all GraphQL data. Instead of explicit subscriptions, the framework itself can track which data each component requests, and which components should be updated whenever the data change. Instead of actions, modifications take the form of mutations.\n\nAt Facebook, we have apps built entirely using Flux, entirely using Relay, or with both. One pattern we see emerging is letting Relay manage the bulk of the data flow for an application, but using Flux stores on the side to handle a subset of application state.\n\n## Open source plans\n\nWe're working very hard right now on getting both GraphQL (a spec, and a reference implementation) and Relay ready for public release (no specific dates yet, but we are super excited about getting these out there).\n\nIn the meantime, we'll be providing more and more information in the form of blog posts (and in [other channels](https://gist.github.com/wincent/598fa75e22bdfa44cf47)). As we get closer to the open source release, you can expect more concrete details, syntax and API descriptions and more.\n\nWatch this space!\n",
        "type": "MarkdownRemark",
        "contentDigest": "aa9b1bec0713adf823dcfe0c5a13e608",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Introducing Relay and GraphQL",
        "layout": "post",
        "author": [
          "wincent"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-02-20-introducing-relay-and-graphql.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-02-20-introducing-relay-and-graphql.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-02-20-introducing-relay-and-graphql.md",
      "fields": {
        "date": "2015-02-19T16:00:00.000Z",
        "slug": "/blog/2015/02/20/introducing-relay-and-graphql.html",
        "path": "blog/2015-02-20-introducing-relay-and-graphql.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-02-24-react-v0.13-rc1.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-02-24-react-v0.13-rc1.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-02-24-react-v0.13-rc1.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v0.13 RC\"\nauthor: [zpao]\ndate: 2015-02-24 14:00\n---\n\nOver the weekend we pushed out our first (and hopefully only) release candidate for React v0.13!\n\nWe've talked a little bit about the changes that are coming. The splashiest of these changes is support for ES6 Classes. You can read more about this in [our beta announcement](/blog/2015/01/27/react-v0.13.0-beta-1.html). We're really excited about this! Sebastian also posted earlier this morning about [some of the other changes coming focused around ReactElement](/blog/2015/02/24/streamlining-react-elements.html). The changes we've been working on there will hopefully enable lots of improvements to performance and developer experience.\n\n\nThe release candidate is available for download:\n\n* **React**  \n  Dev build with warnings: <https://fb.me/react-0.13.0-rc1.js>  \n  Minified build for production: <https://fb.me/react-0.13.0-rc1.min.js>  \n* **React with Add-Ons**  \n  Dev build with warnings: <https://fb.me/react-with-addons-0.13.0-rc1.js>  \n  Minified build for production: <https://fb.me/react-with-addons-0.13.0-rc1.min.js>  \n* **In-Browser JSX transformer**  \n  <https://fb.me/JSXTransformer-0.13.0-rc1.js>\n\nWe've also published version `0.13.0-rc1` of the `react` and `react-tools` packages on npm and the `react` package on bower.\n\n- - -\n\n## Changelog\n\n### React Core\n\n#### Breaking Changes\n\n* Mutating `props` after an element is created is deprecated and will cause warnings in development mode; future versions of React will incorporate performance optimizations assuming that props aren't mutated\n* Static methods (defined in `statics`) are no longer autobound to the component class\n* `ref` resolution order has changed slightly such that a ref to a component is available immediately after its `componentDidMount` method is called; this change should be observable only if your component calls a parent component's callback within your `componentDidMount`, which is an anti-pattern and should be avoided regardless\n* Calls to `setState` in life-cycle methods are now always batched and therefore asynchronous. Previously the first call on the first mount was synchronous.\n* `setState` and `forceUpdate` on an unmounted component now warns instead of throwing. That avoids a possible race condition with Promises.\n* Access to most internal properties has been completely removed, including `this._pendingState` and `this._rootNodeID`.\n\n#### New Features\n\n* Support for using ES6 classes to build React components; see the [v0.13.0 beta 1 notes](/blog/2015/01/27/react-v0.13.0-beta-1.html) for details\n* Added new top-level API `React.findDOMNode(component)`, which should be used in place of `component.getDOMNode()`. The base class for ES6-based components will not have `getDOMNode`. This change will enable some more patterns moving forward.\n* New `ref` style, allowing a callback to be used in place of a name: `<Photo ref={(c) => this._photo = c} />` allows you to reference the component with `this._photo` (as opposed to `ref=\"photo\"` which gives `this.refs.photo`)\n* `this.setState()` can now take a function as the first argument for transactional state updates, such as `this.setState((state, props) => ({count: state.count + 1}));` -- this means that you no longer need to use `this._pendingState`, which is now gone.\n* Support for iterators and immutable-js sequences as children\n\n#### Deprecations\n\n* `ComponentClass.type` is deprecated. Just use `ComponentClass` (usually as `element.type === ComponentClass`)\n* Some methods that are available on `createClass`-based components are removed or deprecated from ES6 classes (for example, `getDOMNode`, `setProps`, `replaceState`).\n\n\n### React with Add-Ons\n\n#### Deprecations\n\n* `React.addons.classSet` is now deprecated. This functionality can be replaced with several freely available modules. [classnames](https://www.npmjs.com/package/classnames) is one such module.\n\n\n### React Tools\n\n#### Breaking Changes\n\n* When transforming ES6 syntax, `class` methods are no longer enumerable by default, which requires `Object.defineProperty`; if you support browsers such as IE8, you can pass `--target es3` to mirror the old behavior\n\n#### New Features\n\n* `--target` option is available on the jsx command, allowing users to specify and ECMAScript version to target.\n  * `es5` is the default.\n  * `es3` restored the previous default behavior. An additional transform is added here to ensure the use of reserved words as properties is safe (eg `this.static` will become `this['static']` for IE8 compatibility).\n* The transform for the call spread operator has also been enabled.\n\n\n### JSX\n\n#### Breaking Changes\n* A change was made to how some JSX was parsed, specifically around the use of `>` or `}` when inside an element. Previously it would be treated as a string but now it will be treated as a parse error. We will be releasing a standalone executable to find and fix potential issues in your JSX code.\n",
        "type": "MarkdownRemark",
        "contentDigest": "14d63a8ef44e886e71b3c84e49a56733",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.13 RC",
        "author": [
          "zpao"
        ],
        "date": "2015-02-24 14:00",
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-02-24-react-v0.13-rc1.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-02-24-react-v0.13-rc1.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-02-24-react-v0.13-rc1.md",
      "fields": {
        "date": "2015-02-23T16:00:00.000Z",
        "slug": "/blog/2015/02/24/react-v0.13-rc1.html",
        "path": "blog/2015-02-24-react-v0.13-rc1.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-03-03-react-v0.13-rc2.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-03-03-react-v0.13-rc2.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-03-03-react-v0.13-rc2.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v0.13 RC2\"\nauthor: [sebmarkbage]\n---\n\nThanks to everybody who has already been testing the release candidate. We've received some good feedback and as a result we're going to do a second release candidate. The changes are minimal. We haven't changed the behavior of any APIs we exposed in the previous release candidate. Here's a summary of the changes:\n\n* Introduced a new API (`React.cloneElement`, see below for details).\n* Fixed a bug related to validating `propTypes` when using the new `React.addons.createFragment` API.\n* Improved a couple warning messages.\n* Upgraded jstransform and esprima.\n\nThe release candidate is available for download:\n\n* **React**  \n  Dev build with warnings: <https://fb.me/react-0.13.0-rc2.js>  \n  Minified build for production: <https://fb.me/react-0.13.0-rc2.min.js>  \n* **React with Add-Ons**  \n  Dev build with warnings: <https://fb.me/react-with-addons-0.13.0-rc2.js>  \n  Minified build for production: <https://fb.me/react-with-addons-0.13.0-rc2.min.js>  \n* **In-Browser JSX transformer**  \n  <https://fb.me/JSXTransformer-0.13.0-rc2.js>\n\nWe've also published version `0.13.0-rc2` of the `react` and `react-tools` packages on npm and the `react` package on bower.\n\n- - -\n\n## React.cloneElement\n\nIn React v0.13 RC2 we will introduce a new API, similar to `React.addons.cloneWithProps`, with this signature:\n\n```js\nReact.cloneElement(element, props, ...children);\n```\n\nUnlike `cloneWithProps`, this new function does not have any magic built-in behavior for merging `style` and `className` for the same reason we don't have that feature from `transferPropsTo`. Nobody is sure what exactly the complete list of magic things are, which makes it difficult to reason about the code and difficult to reuse when `style` has a different signature (e.g. in the upcoming React Native).\n\n`React.cloneElement` is *almost* equivalent to:\n\n```js\n<element.type {...element.props} {...props}>{children}</element.type>\n```\n\nHowever, unlike JSX and `cloneWithProps`, it also preserves `ref`s. This means that if you get a child with a `ref` on it, you won't accidentally steal it from your ancestor. You will get the same `ref` attached to your new element.\n\nOne common pattern is to map over your children and add a new prop. There were many issues reported about `cloneWithProps` losing the ref, making it harder to reason about your code. Now following the same pattern with `cloneElement` will work as expected. For example:\n\n```js\nvar newChildren = React.Children.map(this.props.children, function(child) {\n  return React.cloneElement(child, { foo: true })\n});\n```\n\n> Note: `React.cloneElement(child, { ref: 'newRef' })` *DOES* override the `ref` so it is still not possible for two parents to have a ref to the same child, unless you use callback-refs.\n\nThis was a critical feature to get into React 0.13 since props are now immutable. The upgrade path is often to clone the element, but by doing so you might lose the `ref`. Therefore, we needed a nicer upgrade path here. As we were upgrading callsites at Facebook we realized that we needed this method. We got the same feedback from the community. Therefore we decided to make another RC before the final release to make sure we get this in.\n\nWe plan to eventually deprecate `React.addons.cloneWithProps`. We're not doing it yet, but this is a good opportunity to start thinking about your own uses and consider using `React.cloneElement` instead. We'll be sure to ship a release with deprecation notices before we actually remove it so no immediate action is necessary.\n",
        "type": "MarkdownRemark",
        "contentDigest": "fc2ee199e37a400268ad602d3a488d91",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.13 RC2",
        "author": [
          "sebmarkbage"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-03-03-react-v0.13-rc2.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-03-03-react-v0.13-rc2.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-03-03-react-v0.13-rc2.md",
      "fields": {
        "date": "2015-03-02T16:00:00.000Z",
        "slug": "/blog/2015/03/03/react-v0.13-rc2.html",
        "path": "blog/2015-03-03-react-v0.13-rc2.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-03-04-community-roundup-25.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-03-04-community-roundup-25.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-03-04-community-roundup-25.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Community Round-up #25\"\nlayout: post\nauthor: [matthewjohnston4]\n---\n\n## React 101\n\nInterest in React has been exploding recently, so it's a good time to explore some great recent tutorials and videos that cover getting started.\n\n[Ryan Clark](https://github.com/rynclark) provides a [great overview of the basics of React](http://ryanclark.me/getting-started-with-react/) with the goal of building a really simple dropdown nav.\n\n[Formidable Labs](https://github.com/FormidableLabs) and [Seattle JS](http://www.meetup.com/seattlejs/) recently hosted a series of React, Flux, and Flow workshops, and the first part is available to watch online:\n\n<iframe width=\"650\" height=\"300\" src=\"//www.youtube-nocookie.com/embed/Pd6Ub7Ju2RM\" frameborder=\"0\" allowfullscreen></iframe>\n\n[AEFlash](https://github.com/aearly) writes up [some best practices and tips](http://aeflash.com/2015-02/react-tips-and-best-practices.html) to help you avoid potential pitfalls when developing with React.\n\nBlack Mutt Media [takes us through their usage of React](http://blackmuttmedia.com/blog/react-tmdb-api/) and Ruby to build an autocomplete field, and some of the pitfalls they encountered along the way.\n\nOur own [Sebastian Markbåge](https://github.com/sebmarkbage) was on the [Web Platform Podcast](http://thewebplatform.libsyn.com/31-building-with-reactjs) to have a chat about all aspects of React.\n\n<iframe style=\"border: none\" src=\"//html5-player.libsyn.com/embed/episode/id/3370114/height/75/width/200/theme/standard-mini/direction/no/autoplay/no/autonext/no/thumbnail/yes/preload/no/no_addthis/no/\" height=\"26\" width=\"100%\" scrolling=\"no\" allowfullscreen=\"\" webkitallowfullscreen=\"\" mozallowfullscreen=\"\" oallowfullscreen=\"\" msallowfullscreen=\"\"></iframe>\n\n## Community Additions\n\n[Formidable Labs](https://github.com/FormidableLabs) have been busy, as they've also[ just launched Radium](http://projects.formidablelabs.com/radium/), a React component that provides you with the ability to use inline styles instead of CSS. They're also [looking for some help](http://projects.formidablelabs.com/radium-bootstrap/) contributing to a Radium Bootstrap implementation.\n\n[Reactiflux.com](http://reactiflux.com/) is a new Slack community based around (you guessed it!) React, and Flux.\n\n[React Week](http://reactweek.com/) is a week-long learning workshop, happening next week, for React, Flux, and other related technologies, run by [Ryan Florence](https://github.com/ryanflorence).\n\n[Babel-sublime](https://github.com/babel/babel-sublime) is a new package which provides Sublime with language definitions for ES6 JavaScript with React JSX syntax extensions.\n\n[react-meteor](https://github.com/reactjs/react-meteor), a package that replaces the default templating system of the Meteor platform with React, recently received a big update.\n\n## Rebuilding with React\n\n[Rich Manalang](https://github.com/rmanalan) from Atlassian [explains why](https://developer.atlassian.com/blog/2015/02/rebuilding-hipchat-with-react/) they rebuilt their HipChat web client from scratch using React, and how they're already using it to rebuild their native desktop clients.\n\n[Andrew Hillel](https://twitter.com/andyhillel) of the BBC gives [an excellent and thorough breakdown](http://www.bbc.co.uk/blogs/internet/entries/47a96d23-ae04-444e-808f-678e6809765d) of the stack they used to rebuild their homepage, with React as an integral part of the front-end.\n\nA team from New Zealand called [Atomic](https://atomic.io/) is [building web and mobile prototyping and design tools](http://thenextweb.com/creativity/2015/02/19/meet-atomic-missing-tool-interface-design-thats-entirely-browser/) entirely in-browser, and as co-founder [Darryl Gray](https://twitter.com/darrylgray) says, “React.js “totally changed” the fact that browser performance often wasn’t good enough for complex tools like this.”.\n\n[Polarr](https://github.com/Polarrco) have rebuilt [their browser-based photo editor](http://polarrist.tumblr.com/post/111290422225/polarr-photo-editor-2-0-alpha-is-here) with React.\n\n<center><a href=\"http://polarrist.tumblr.com/post/111290422225/polarr-photo-editor-2-0-alpha-is-here\"><img src=\"../images/blog/polarr.jpg\"></a></center>\n\n## It's F8!\n\nF8 2015 is just around the corner, and you can [sign up for the video streams](https://www.fbf8.com/stream.html) in advance because we're sure to be covering all things React.\n\n## Meetups\n\n<table><tr><td width=\"50%\" valign=\"top\">\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p>Our <a href=\"https://twitter.com/reactjs\">@reactjs</a> meetup is in full effect <a href=\"https://twitter.com/hashtag/ReactJS?src=hash\">#ReactJS</a> &#10;&#10;btw bathroom code is 6012 lol <a href=\"http://t.co/7iUpvmm3zz\">pic.twitter.com/7iUpvmm3zz</a></p>&mdash; littleBits (@littleBits) <a href=\"https://twitter.com/littleBits/status/570373833028472832\">February 25, 2015</a></blockquote>\n</td><td width=\"50%\" valign=\"top\">\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p><a href=\"https://twitter.com/yrezgui\">@yrezgui</a> captivating us with <a href=\"https://twitter.com/reactjs\">@reactjs</a> at <a href=\"https://twitter.com/DevRocketUK\">@DevRocketUK</a>. Thanks to the amazing sponsors <a href=\"https://twitter.com/makersacademy\">@makersacademy</a> and <a href=\"https://twitter.com/couchbase\">@couchbase</a>. <a href=\"http://t.co/xwA773omky\">pic.twitter.com/xwA773omky</a></p>&mdash; James Nocentini (@jamiltz) <a href=\"https://twitter.com/jamiltz/status/570306188577001473\">February 24, 2015</a></blockquote>\n</td></tr><tr><td width=\"50%\" valign=\"top\">\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p>Listening to a bunch of very clever geekoids at the <a href=\"https://twitter.com/reactjs\">@reactjs</a> seminar. Nice! <a href=\"http://t.co/0TeTOJOerO\">pic.twitter.com/0TeTOJOerO</a></p>&mdash; Nick Middleweek (@nmiddleweek) <a href=\"https://twitter.com/nmiddleweek/status/568183658395394049\">February 18, 2015</a></blockquote>\n</td><td width=\"50%\" valign=\"top\">\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p>Watching the <a href=\"https://twitter.com/FrontendMasters\">@FrontendMasters</a> ReactJS workshop! <a href=\"http://t.co/YraYIK97Lu\">pic.twitter.com/YraYIK97Lu</a></p>&mdash; ReactJS News (@ReactJSNews) <a href=\"https://twitter.com/ReactJSNews/status/566269552112041985\">February 13, 2015</a></blockquote>\n</td></tr></table>\n",
        "type": "MarkdownRemark",
        "contentDigest": "23a9449818c10e941617d74a0c611cae",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Community Round-up #25",
        "layout": "post",
        "author": [
          "matthewjohnston4"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-03-04-community-roundup-25.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-03-04-community-roundup-25.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-03-04-community-roundup-25.md",
      "fields": {
        "date": "2015-03-03T16:00:00.000Z",
        "slug": "/blog/2015/03/04/community-roundup-25.html",
        "path": "blog/2015-03-04-community-roundup-25.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-03-10-react-v0.13.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-03-10-react-v0.13.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-03-10-react-v0.13.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v0.13\"\nauthor: [sophiebits]\n---\n\nToday, we're happy to release React v0.13!\n\nThe most notable new feature is [support for ES6 classes](/blog/2015/01/27/react-v0.13.0-beta-1.html), which allows developers to have more flexibility when writing components. Our eventual goal is for ES6 classes to replace `React.createClass` completely, but until we have a replacement for current mixin use cases and support for class property initializers in the language, we don't plan to deprecate `React.createClass`.\n\nAt EmberConf and ng-conf last week, we were excited to see that Ember and Angular have been working on speed improvements and now both have performance comparable to React. We've always thought that performance isn't the most important reason to choose React, but we're still planning more optimizations to **make React even faster**.\n\nOur planned optimizations require that ReactElement objects are immutable, which has always been a best practice when writing idiomatic React code. In this release, we've added runtime warnings that fire when props are changed or added between the time an element is created and when it's rendered. When migrating your code, you may want to use new `React.cloneElement` API (which is similar to `React.addons.cloneWithProps` but preserves `key` and `ref` and does not merge `style` or `className` automatically). For more information about our planned optimizations, see GitHub issues\n[#3226](https://github.com/facebook/react/issues/3226),\n[#3227](https://github.com/facebook/react/issues/3227),\n[#3228](https://github.com/facebook/react/issues/3228).\n\nThe release is now available for download:\n\n* **React**  \n  Dev build with warnings: <https://fb.me/react-0.13.0.js>  \n  Minified build for production: <https://fb.me/react-0.13.0.min.js>  \n* **React with Add-Ons**  \n  Dev build with warnings: <https://fb.me/react-with-addons-0.13.0.js>  \n  Minified build for production: <https://fb.me/react-with-addons-0.13.0.min.js>  \n* **In-Browser JSX transformer**  \n  <https://fb.me/JSXTransformer-0.13.0.js>\n\nWe've also published version `0.13.0` of the `react` and `react-tools` packages on npm and the `react` package on bower.\n\n- - -\n\n## Changelog\n\n### React Core\n\n#### Breaking Changes\n\n* Deprecated patterns that warned in 0.12 no longer work: most prominently, calling component classes without using JSX or React.createElement and using non-component functions with JSX or createElement\n* Mutating `props` after an element is created is deprecated and will cause warnings in development mode; future versions of React will incorporate performance optimizations assuming that props aren't mutated\n* Static methods (defined in `statics`) are no longer autobound to the component class\n* `ref` resolution order has changed slightly such that a ref to a component is available immediately after its `componentDidMount` method is called; this change should be observable only if your component calls a parent component's callback within your `componentDidMount`, which is an anti-pattern and should be avoided regardless\n* Calls to `setState` in life-cycle methods are now always batched and therefore asynchronous. Previously the first call on the first mount was synchronous.\n* `setState` and `forceUpdate` on an unmounted component now warns instead of throwing. That avoids a possible race condition with Promises.\n* Access to most internal properties has been completely removed, including `this._pendingState` and `this._rootNodeID`.\n\n#### New Features\n\n* Support for using ES6 classes to build React components; see the [v0.13.0 beta 1 notes](/blog/2015/01/27/react-v0.13.0-beta-1.html) for details.\n* Added new top-level API `React.findDOMNode(component)`, which should be used in place of `component.getDOMNode()`. The base class for ES6-based components will not have `getDOMNode`. This change will enable some more patterns moving forward.\n* Added a new top-level API `React.cloneElement(el, props)` for making copies of React elements – see the [v0.13 RC2 notes](/blog/2015/03/03/react-v0.13-rc2.html#react.cloneelement) for more details.\n* New `ref` style, allowing a callback to be used in place of a name: `<Photo ref={(c) => this._photo = c} />` allows you to reference the component with `this._photo` (as opposed to `ref=\"photo\"` which gives `this.refs.photo`).\n* `this.setState()` can now take a function as the first argument for transactional state updates, such as `this.setState((state, props) => ({count: state.count + 1}));` – this means that you no longer need to use `this._pendingState`, which is now gone.\n* Support for iterators and immutable-js sequences as children.\n\n#### Deprecations\n\n* `ComponentClass.type` is deprecated. Just use `ComponentClass` (usually as `element.type === ComponentClass`).\n* Some methods that are available on `createClass`-based components are removed or deprecated from ES6 classes (`getDOMNode`, `replaceState`, `isMounted`, `setProps`, `replaceProps`).\n\n\n### React with Add-Ons\n\n#### New Features\n\n* [`React.addons.createFragment` was added](/docs/create-fragment.html) for adding keys to entire sets of children.\n\n#### Deprecations\n\n* `React.addons.classSet` is now deprecated. This functionality can be replaced with several freely available modules. [classnames](https://www.npmjs.com/package/classnames) is one such module.\n* Calls to `React.addons.cloneWithProps` can be migrated to use `React.cloneElement` instead – make sure to merge `style` and `className` manually if desired.\n\n\n### React Tools\n\n#### Breaking Changes\n\n* When transforming ES6 syntax, `class` methods are no longer enumerable by default, which requires `Object.defineProperty`; if you support browsers such as IE8, you can pass `--target es3` to mirror the old behavior\n\n#### New Features\n\n* `--target` option is available on the jsx command, allowing users to specify and ECMAScript version to target.\n  * `es5` is the default.\n  * `es3` restores the previous default behavior. An additional transform is added here to ensure the use of reserved words as properties is safe (eg `this.static` will become `this['static']` for IE8 compatibility).\n* The transform for the call spread operator has also been enabled.\n\n\n### JSX\n\n#### Breaking Changes\n* A change was made to how some JSX was parsed, specifically around the use of `>` or `}` when inside an element. Previously it would be treated as a string but now it will be treated as a parse error. The [`jsx_orphaned_brackets_transformer`](https://www.npmjs.com/package/jsx_orphaned_brackets_transformer) package on npm can be used to find and fix potential issues in your JSX code.\n",
        "type": "MarkdownRemark",
        "contentDigest": "57baf40be2d154c2051ed50cbf745263",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.13",
        "author": [
          "sophiebits"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-03-10-react-v0.13.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-03-10-react-v0.13.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-03-10-react-v0.13.md",
      "fields": {
        "date": "2015-03-09T16:00:00.000Z",
        "slug": "/blog/2015/03/10/react-v0.13.html",
        "path": "blog/2015-03-10-react-v0.13.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-03-16-react-v0.13.1.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-03-16-react-v0.13.1.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-03-16-react-v0.13.1.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v0.13.1\"\nauthor: [zpao]\n---\n\nIt's been less than a week since we shipped v0.13.0 but it's time to do another quick release. We just released v0.13.1 which contains bugfixes for a number of small issues.\n\nThanks all of you who have been upgrading your applications and taking the time to report issues. And a huge thank you to those of you who submitted pull requests for the issues you found! 2 of the 6 fixes that went out today came from people who aren't on the core team!\n\nThe release is now available for download:\n\n* **React**  \n  Dev build with warnings: <https://fb.me/react-0.13.1.js>  \n  Minified build for production: <https://fb.me/react-0.13.1.min.js>  \n* **React with Add-Ons**  \n  Dev build with warnings: <https://fb.me/react-with-addons-0.13.1.js>  \n  Minified build for production: <https://fb.me/react-with-addons-0.13.1.min.js>  \n* **In-Browser JSX transformer**  \n  <https://fb.me/JSXTransformer-0.13.1.js>\n\nWe've also published version `0.13.1` of the `react` and `react-tools` packages on npm and the `react` package on bower.\n\n- - -\n\n## Changelog\n\n### React Core\n\n#### Bug Fixes\n\n* Don't throw when rendering empty `<select>` elements\n* Ensure updating `style` works when transitioning from `null`\n\n### React with Add-Ons\n\n#### Bug Fixes\n\n* TestUtils: Don't warn about `getDOMNode` for ES6 classes\n* TestUtils: Ensure wrapped full page components (`<html>`, `<head>`, `<body>`) are treated as DOM components\n* Perf: Stop double-counting DOM components\n\n### React Tools\n\n#### Bug Fixes\n\n* Fix option parsing for `--non-strict-es6module`\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "fa462ae92170c8862c18fb8e74b5370b",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.13.1",
        "author": [
          "zpao"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-03-16-react-v0.13.1.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-03-16-react-v0.13.1.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-03-16-react-v0.13.1.md",
      "fields": {
        "date": "2015-03-15T16:00:00.000Z",
        "slug": "/blog/2015/03/16/react-v0.13.1.html",
        "path": "blog/2015-03-16-react-v0.13.1.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-03-26-introducing-react-native.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-03-26-introducing-react-native.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-03-26-introducing-react-native.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Introducing React Native\"\nauthor: [sophiebits]\n---\n\nIn January at React.js Conf, we announced React Native, a new framework for building native apps using React. We're happy to announce that we're open-sourcing React Native and you can start building your apps with it today.\n\nFor more details, see [Tom Occhino's post on the Facebook Engineering blog](https://code.facebook.com/posts/1014532261909640/react-native-bringing-modern-web-techniques-to-mobile/):\n\n> *What we really want is the user experience of the native mobile platforms, combined with the developer experience we have when building with React on the web.*\n>\n> *With a bit of work, we can make it so the exact same React that's on GitHub can power truly native mobile applications. The only difference in the mobile environment is that instead of running React in the browser and rendering to divs and spans, we run it an embedded instance of JavaScriptCore inside our apps and render to higher-level platform-specific components.*\n>\n> *It's worth noting that we're not chasing “write once, run anywhere.” Different platforms have different looks, feels, and capabilities, and as such, we should still be developing discrete apps for each platform, but the same set of engineers should be able to build applications for whatever platform they choose, without needing to learn a fundamentally different set of technologies for each. We call this approach “learn once, write anywhere.”*\n\nTo learn more, visit the [React Native website](https://facebook.github.io/react-native/).\n",
        "type": "MarkdownRemark",
        "contentDigest": "ab19d2b22c65b4b02f7fefaee102fa60",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Introducing React Native",
        "author": [
          "sophiebits"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-03-26-introducing-react-native.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-03-26-introducing-react-native.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-03-26-introducing-react-native.md",
      "fields": {
        "date": "2015-03-25T16:00:00.000Z",
        "slug": "/blog/2015/03/26/introducing-react-native.html",
        "path": "blog/2015-03-26-introducing-react-native.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-03-30-community-roundup-26.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-03-30-community-roundup-26.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-03-30-community-roundup-26.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Community Round-up #26\"\nlayout: post\nauthor: [vjeux]\n---\n\nWe open sourced React Native last week and the community reception blew away all our expectations! So many of you tried it, made cool stuff with it, raised many issues and even submitted pull requests to fix them! The entire team wants to say thank you!\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p><a href=\"https://twitter.com/hashtag/reactnative?src=hash\">#reactnative</a> is like when you get a new expansion pack, and everybody is running around clueless about which NPC to talk to for the quests</p>&mdash; Ryan Florence (@ryanflorence) <a href=\"https://twitter.com/ryanflorence/status/581810423554543616\">March 28, 2015</a></blockquote>\n\n\n## When is React Native Android coming?\n\n**Give us 6 months**. At Facebook, we strive to only open-source projects that we are using in production. While the Android backend for React Native is starting to work (see video below at 37min), it hasn't been shipped to any users yet. There's a lot of work that goes into open-sourcing a project, and we want to do it right so that you have a great experience when using it.\n\n<iframe width=\"650\" height=\"315\" src=\"https://www.youtube-nocookie.com/embed/X6YbAKiLCLU?start=2220\" frameborder=\"0\" allowfullscreen></iframe>\n\n\n## Ray Wenderlich - Property Finder\n\nIf you are getting started with React Native, you should absolutely [use this tutorial](http://www.raywenderlich.com/99473/introducing-react-native-building-apps-javascript) from Colin Eberhardt. It goes through all the steps to make a reasonably complete app.\n\n[![](../images/blog/property-finder.png)](http://www.raywenderlich.com/99473/introducing-react-native-building-apps-javascript)\n\nColin also [blogged about his experience using React Native](http://blog.scottlogic.com/2015/03/26/react-native-retrospective.html) for a few weeks and gives his thoughts on why you would or wouldn't use it.\n\n\n## The Changelog\n\nSpencer Ahrens and I had the great pleasure to talk about React Native on [The Changelog](https://thechangelog.com/149/) podcast. It was really fun to chat for an hour, I hope that you'll enjoy listening to it. :)\n\n<audio src=\"http://fdlyr.co/d/changelog/cdn.5by5.tv/audio/broadcasts/changelog/2015/changelog-149.mp3\" controls=\"controls\" style=\"width: 100%\"></audio>\n\n\n## Hacker News\n\nLess than 24 hours after React Native was open sourced, Simarpreet Singh built an [Hacker News reader app from scratch](https://github.com/iSimar/HackerNews-React-Native). It's unbelievable how fast he was able to pull it off!\n\n[![](../images/blog/hacker-news-react-native.png)](https://github.com/iSimar/HackerNews-React-Native)\n\n\n## Parse + React\n\nThere's a huge ecosystem of JavaScript modules on npm and React Native was designed to work well with the ones that don't have DOM dependencies. Parse is a great example; you can `npm install parse` on your React Native project and it'll work as is. :) We still have [a](https://github.com/facebook/react-native/issues/406) [few](https://github.com/facebook/react-native/issues/370) [issues](https://github.com/facebook/react-native/issues/316) to solve; please create an issue if your favorite library doesn't work out of the box.\n\n[![](../images/blog/parse-react.jpg)](http://blog.parse.com/2015/03/25/parse-and-react-shared-chemistry/)\n\n\n## tcomb-form-native\n\nGiulio Canti is the author of the [tcomb-form library](https://github.com/gcanti/tcomb-form) for React. He already [ported it to React Native](https://github.com/gcanti/tcomb-form-native) and it looks great!\n\n[![](../images/blog/tcomb-react-native.png)](https://github.com/gcanti/tcomb-form-native)\n\n\n## Facebook Login with React Native\n\nOne of the reason we built React Native is to be able to use all the libraries in the native ecosystem. Brent Vatne leads the way and explains [how to use Facebook Login with React Native](http://brentvatne.ca/facebook-login-with-react-native/).\n\n\n## Modus Create\n\nJay Garcia spent a lot of time during the beta working on a NES music player with React Native. He wrote a blog post to share his experience and explains some code snippets.\n\n[![](../images/blog/modus-create.gif)](http://moduscreate.com/react-native-has-landed/)\n\n\n## React Native with Babel and webpack\n\nReact Native ships with a custom packager and custom ES6 transforms instead of using what the open source community settled on such as [webpack](https://webpack.js.org/) and [Babel](https://babeljs.io/). The main reason for this is performance – we couldn't get those tools to have sub-second reload time on a large codebase.\n\nRoman Liutikov found a way to [use webpack and Babel to run on React Native](https://github.com/roman01la/react-native-babel)! In the future, we want to work with those projects to provide cleaner extension mechanisms.\n\n\n## A Dynamic, Crazy, Native Mobile Future—Powered by JavaScript\n\nClay Allsopp wrote a post about [all the crazy things you could do with a JavaScript engine that renders native views](https://medium.com/@clayallsopp/a-dynamic-crazy-native-mobile-future-powered-by-javascript-70f2d56b1987). What about native embeds, seamless native browser, native search engine or even app generation...\n\n\n## Random Tweet\n\nWe've spent a lot of efforts getting the onboarding as easy as possible and we're really happy that people noticed. We still have a lot of work to do on documentation, stay tuned!\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p>Wow. Getting started with React Native might have been the smoothest experience I’ve ever had with a new developer product.</p>&mdash; Andreas Eldh (@eldh) <a href=\"https://twitter.com/eldh/status/581186172094980096\">March 26, 2015</a></blockquote>\n",
        "type": "MarkdownRemark",
        "contentDigest": "a57de910592506c529eb5c1fe3177d3a",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Community Round-up #26",
        "layout": "post",
        "author": [
          "vjeux"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-03-30-community-roundup-26.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-03-30-community-roundup-26.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-03-30-community-roundup-26.md",
      "fields": {
        "date": "2015-03-29T16:00:00.000Z",
        "slug": "/blog/2015/03/30/community-roundup-26.html",
        "path": "blog/2015-03-30-community-roundup-26.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-04-17-react-native-v0.4.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-04-17-react-native-v0.4.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-04-17-react-native-v0.4.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React Native v0.4\"\nlayout: post\nauthor: [vjeux]\n---\n\nIt's been three weeks since we open sourced React Native and there's been some insane amount of activity already: over 12.5k stars, 1000 commits, 500 issues, 380 pull requests, and 100 contributors, plus [35 plugins](http://react.parts/native-ios) and [1 app in the app store](http://herman.asia/building-a-flashcard-app-with-react-native)! We were expecting some buzz around the project but this is way beyond anything we imagined. Thank you!\n\nI'd especially like to thank community members Brent Vatne and James Ide who have both already contributed meaningfully to the project and have been extremely helpful on IRC and with issues and pull requests\n\n## Changelog\n\nThe main focus of the past few weeks has been to make React Native the best possible experience for people outside of Facebook. Here's a high level summary of what's happened since we open sourced:\n\n* **Error messages and documentation**: We want React Native to be the absolute best developer experience for building mobile apps. We've added a lot of warnings, improved the documentation, and fixed many bugs. If you encounter anything, and I really mean anything, that is not expected or clear, please create an issue - we want to hear about it and fix it.\n* **NPM modules compatibility**: There are a lot of libraries on NPM that do not depend on node/browser internals that would be really useful in React Native, such as superagent, underscore, parse, and many others.  The packager is now a lot more faithful to node/browserify/webpack dependency resolution. If your favorite library doesn't work out of the box, please open up an issue.\n* **Infrastructure**: We are refactoring the internals of React Native to make it easier to plug in to existing iOS codebases, as well as improve performance by removing redundant views and shadow views, supporting multiple root views and manually registering classes to reduce startup time.\n* **Components**: The API for a lot of UI components and APIs, especially the ones we're not using heavily inside of Facebook, has dramatically improved thanks to many of your pull requests.\n* **Tests**: We ported JavaScript tests, iOS Snapshot tests, and End to End tests to Travis CI. We have broken GitHub master a couple of times (whoops!) when syncing and we hope that with this growing suite of tests it's going to become harder and harder to do so.\n* **Patent Grant**: Many of you had concerns and questions around the PATENTS file. We pushed [a new version of the grant](https://code.facebook.com/posts/1639473982937255/updating-our-open-source-patent-grant/).\n* **Per commit history**: In order to synchronize from Facebook to GitHub, we used to do one giant commit every few days. We improved our tooling and now have per commit history that maintains author information (both internal and external from pull requests), and we retroactively applied this to historical diffs to provide proper attribution.\n\n## Where are we going?\n\nIn addition to supporting pull requests, issues, and general improvements, we're also working hard on our internal React Native integrations and on React Native for Android.\n",
        "type": "MarkdownRemark",
        "contentDigest": "9696a85bb4a4642d13a7efc2db6cf07c",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React Native v0.4",
        "layout": "post",
        "author": [
          "vjeux"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-04-17-react-native-v0.4.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-04-17-react-native-v0.4.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-04-17-react-native-v0.4.md",
      "fields": {
        "date": "2015-04-16T16:00:00.000Z",
        "slug": "/blog/2015/04/17/react-native-v0.4.html",
        "path": "blog/2015-04-17-react-native-v0.4.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-04-18-react-v0.13.2.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-04-18-react-v0.13.2.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-04-18-react-v0.13.2.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v0.13.2\"\nauthor: [zpao]\n---\n\nYesterday the [React Native team shipped v0.4](/blog/2015/04/17/react-native-v0.4.html). Those of us working on the web team just a few feet away couldn't just be shown up like that so we're shipping v0.13.2 today as well! This is a bug fix release to address a few things while we continue to work towards v0.14.\n\nThe release is now available for download:\n\n* **React**  \n  Dev build with warnings: <https://fb.me/react-0.13.2.js>  \n  Minified build for production: <https://fb.me/react-0.13.2.min.js>  \n* **React with Add-Ons**  \n  Dev build with warnings: <https://fb.me/react-with-addons-0.13.2.js>  \n  Minified build for production: <https://fb.me/react-with-addons-0.13.2.min.js>  \n* **In-Browser JSX transformer**  \n  <https://fb.me/JSXTransformer-0.13.2.js>\n\nWe've also published version `0.13.2` of the `react` and `react-tools` packages on npm and the `react` package on bower.\n\n- - -\n\n## Changelog\n\n### React Core\n\n#### New Features\n\n* Added `strokeDashoffset`, `flexPositive`, `flexNegative` to the list of unitless CSS properties\n* Added support for more DOM properties:\n  * `scoped` - for `<style>` elements\n  * `high`, `low`, `optimum` - for `<meter>` elements\n  * `unselectable` - IE-specific property to prevent user selection\n\n#### Bug Fixes\n\n* Fixed a case where re-rendering after rendering null didn't properly pass context\n* Fixed a case where re-rendering after rendering with `style={null}` didn't properly update `style`\n* Update `uglify` dependency to prevent a bug in IE8\n* Improved warnings\n\n### React with Add-Ons\n\n#### Bug Fixes\n\n* Immutabilty Helpers: Ensure it supports `hasOwnProperty` as an object key\n\n### React Tools\n\n* Improve documentation for new options\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "2a2792fef4f35ec986b5a29b7a7ae3b2",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.13.2",
        "author": [
          "zpao"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-04-18-react-v0.13.2.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-04-18-react-v0.13.2.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-04-18-react-v0.13.2.md",
      "fields": {
        "date": "2015-04-17T16:00:00.000Z",
        "slug": "/blog/2015/04/18/react-v0.13.2.html",
        "path": "blog/2015-04-18-react-v0.13.2.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-05-08-react-v0.13.3.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-05-08-react-v0.13.3.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-05-08-react-v0.13.3.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v0.13.3\"\nauthor: [zpao]\n---\n\nToday we're sharing another patch release in the v0.13 branch. There are only a few small changes, with a couple to address some issues that arose around that undocumented feature so many of you are already using: `context`. We also improved developer ergonomics just a little bit, making some warnings better.\n\nThe release is now available for download:\n\n* **React**  \n  Dev build with warnings: <https://fb.me/react-0.13.3.js>  \n  Minified build for production: <https://fb.me/react-0.13.3.min.js>  \n* **React with Add-Ons**  \n  Dev build with warnings: <https://fb.me/react-with-addons-0.13.3.js>  \n  Minified build for production: <https://fb.me/react-with-addons-0.13.3.min.js>  \n* **In-Browser JSX transformer**  \n  <https://fb.me/JSXTransformer-0.13.3.js>\n\nWe've also published version `0.13.3` of the `react` and `react-tools` packages on npm and the `react` package on bower.\n\n- - -\n\n## Changelog\n\n### React Core\n\n#### New Features\n\n* Added `clipPath` element and attribute for SVG\n* Improved warnings for deprecated methods in plain JS classes\n\n#### Bug Fixes\n\n* Loosened `dangerouslySetInnerHTML` restrictions so `{__html: undefined}` will no longer throw\n* Fixed extraneous context warning with non-pure `getChildContext`\n* Ensure `replaceState(obj)` retains prototype of `obj`\n\n### React with Add-ons\n\n### Bug Fixes\n\n* Test Utils: Ensure that shallow rendering works when components define `contextTypes`\n",
        "type": "MarkdownRemark",
        "contentDigest": "7fbe4f93ae886ae43ac6fe70a7237725",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.13.3",
        "author": [
          "zpao"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-05-08-react-v0.13.3.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-05-08-react-v0.13.3.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-05-08-react-v0.13.3.md",
      "fields": {
        "date": "2015-05-07T16:00:00.000Z",
        "slug": "/blog/2015/05/08/react-v0.13.3.html",
        "path": "blog/2015-05-08-react-v0.13.3.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-05-22-react-native-release-process.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-05-22-react-native-release-process.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-05-22-react-native-release-process.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React Native Release Process\"\nauthor: [vjeux]\n---\n\nThe React Native release process have been a bit chaotic since we open sourced. It was unclear when new code was released, there was no changelog, we bumped the minor and patch version inconsistently and we often had to submit updates right after a release to fix a bad bug. In order to *move fast with stable infra*, we are introducing a real release process with a two-week release schedule.\n\nTo explain how it works, let me walk you through an example. Today, Friday, we took the current state of master and put it on the 0.5-stable branch. We [published 0.5.0-rc](https://github.com/facebook/react-native/releases/tag/v0.5.0-rc), an RC (Release Candidate) when we cut the branch. For two weeks, we're going to let it stabilize and only cherry-pick critical bug fixes from master.\n\nFriday in two weeks, we're going to publish the 0.5.0 release, create the 0.6-stable branch and publish 0.6.0-rc as well.\n\nThe release process is synchronized with Facebook's mobile release process. This means that everything in the open source release is also being shipped as part of all the Facebook apps that use React Native!\n\nYou now have three ways to get React Native. You should chose the one you want based on the amount of risk you tolerate:\n\n- **master**: You have updates as soon as they are committed. This is if you want to live on the bleeding edge or want to submit pull requests.\n- **rc**: If you don't want to update every day and deal with many instabilities but want to have recent updates, this is your best shot.\n- **release**: This is the most stable version we offer. The trade-off is that it contains commits that are up to a month old.\n\nIf you want more details, I highly recommend this video that explains how Facebook mobile release process works and why it was setup this way.\n\n<iframe width=\"650\" height=\"300\" src=\"https://www.youtube.com/embed/mOyoTUETmSM\" frameborder=\"0\" allowfullscreen></iframe>\n",
        "type": "MarkdownRemark",
        "contentDigest": "a867d53a929ce69908c225b29afd7497",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React Native Release Process",
        "author": [
          "vjeux"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-05-22-react-native-release-process.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-05-22-react-native-release-process.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-05-22-react-native-release-process.md",
      "fields": {
        "date": "2015-05-21T16:00:00.000Z",
        "slug": "/blog/2015/05/22/react-native-release-process.html",
        "path": "blog/2015-05-22-react-native-release-process.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-06-12-deprecating-jstransform-and-react-tools.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-06-12-deprecating-jstransform-and-react-tools.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-06-12-deprecating-jstransform-and-react-tools.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Deprecating JSTransform and react-tools\"\nauthor: [zpao]\n---\n\nToday we're announcing the deprecation of react-tools and JSTransform.\n\nAs many people have noticed already, React and React Native have both switched their respective build systems to make use of [Babel](http://babeljs.io/). This replaced [JSTransform](https://github.com/facebook/jstransform), the source transformation tool that we wrote at Facebook. JSTransform has been really good for us over the past several years, however as the JavaScript language continues to evolve, the architecture we used has begun to show its age. We've faced maintenance issues and lagged behind implementing new language features. Last year, Babel (previously 6to5) exploded onto the scene, implementing new features at an amazing pace. Since then it has evolved a solid plugin API, and implemented some of our non-standard language features (JSX and Flow type annotations).\n\nreact-tools has always been a very thin wrapper around JSTransform. It has served as a great tool for the community to get up and running, but at this point we're ready to [let it go](https://www.youtube.com/watch?v=moSFlvxnbgk). We won't ship a new version for v0.14.\n\n## Migrating to Babel\n\nMany people in the React and broader JavaScript community have already adopted Babel. It has [integrations with a number of tools](http://babeljs.io/docs/setup/). Depending on your tool, you'll want to read up on the instructions.\n\nWe've been working with the Babel team as we started making use of it and we're confident that it will be the right tool to use with React.\n\n## Other Deprecations\n\n### esprima-fb\n\nAs a result of no longer maintaining JSTransform, we no longer have a need to maintain our Esprima fork ([esprima-fb](https://github.com/facebook/esprima/)). The upstream Esprima and other esprima-based forks, like Espree, have been doing an excellent job of supporting new language features recently. If you have a need of an esprima-based parser, we encourage you to look into using one of those.\n\nAlternatively, if you need to parse JSX, take a look at [acorn](https://github.com/marijnh/acorn) parser in combination with [acorn-jsx](https://github.com/RReverser/acorn-jsx) plugin which is used inside of Babel and thus always supports the latest syntax.\n\n### JSXTransformer\nJSXTransformer is another tool we built specifically for consuming JSX in the browser. It was always intended as a quick way to prototype code before setting up a build process. It would look for `<script>` tags with `type=\"text/jsx\"` and then transform and run. This ran the same code that react-tools ran on the server. Babel ships with [a nearly identical tool](https://babeljs.io/docs/usage/browser/), which has already been integrated into [JS Bin](https://jsbin.com/).\n\nWe'll be deprecating JSXTransformer, however the current version will still be available from various CDNs and Bower.\n",
        "type": "MarkdownRemark",
        "contentDigest": "87e0d3ae7814a057ccd610df69044f09",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Deprecating JSTransform and react-tools",
        "author": [
          "zpao"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-06-12-deprecating-jstransform-and-react-tools.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-06-12-deprecating-jstransform-and-react-tools.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-06-12-deprecating-jstransform-and-react-tools.md",
      "fields": {
        "date": "2015-06-11T16:00:00.000Z",
        "slug": "/blog/2015/06/12/deprecating-jstransform-and-react-tools.html",
        "path": "blog/2015-06-12-deprecating-jstransform-and-react-tools.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-07-03-react-v0.14-beta-1.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-07-03-react-v0.14-beta-1.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-07-03-react-v0.14-beta-1.md absPath of file",
      "internal": {
        "content": "---\ntitle: React v0.14 Beta 1\nauthor: [sophiebits]\n---\n\nThis week, many people in the React community are at [ReactEurope](https://www.react-europe.org/) in the beautiful (and very warm) city of Paris, the second React conference that's been held to date. At our last conference, we released the first beta of React 0.13, and we figured we'd do the same today with our first beta of React 0.14, giving you something to play with if you're not at the conference or you're looking for something to do on the way home.\n\nWith React 0.14, we're continuing to let React mature and to make minor changes as the APIs continue to settle down. I'll talk only about the two largest changes in this blog post; when we publish the final release we'll be sure to update all of our documentation and include a full changelog.\n\nYou can install the new beta with `npm install react@0.14.0-beta1` and `npm install react-dom@0.14.0-beta1`. As mentioned in [Deprecating react-tools](https://reactjs.org/blog/2015/06/12/deprecating-jstransform-and-react-tools.html), we're no longer updating the react-tools package so this release doesn't include a new version of it. Please try the new version out and let us know what you think, and please do file issues on our GitHub repo if you run into any problems.\n\n## Two Packages\n\nAs we look at packages like [react-native](https://github.com/facebook/react-native), [react-art](https://github.com/reactjs/react-art), [react-canvas](https://github.com/Flipboard/react-canvas), and [react-three](https://github.com/Izzimach/react-three), it's become clear that the beauty and essence of React has nothing to do with browsers or the DOM.\n\nWe think the true foundations of React are simply ideas of components and elements: being able to describe what you want to render in a declarative way. These are the pieces shared by all of these different packages. The parts of React specific to certain rendering targets aren't usually what we think of when we think of React. As one example, DOM diffing currently enables us to build React for the browser and make it fast enough to be useful, but if the DOM didn't have a stateful, imperative API, we might not need diffing at all.\n\nTo make this more clear and to make it easier to build more environments that React can render to, we're splitting the main `react` package into two: `react` and `react-dom`.\n\nThe `react` package contains `React.createElement`, `React.createClass` and `React.Component`, `React.PropTypes`, `React.Children`, and the other helpers related to elements and component classes. We think of these as the [_isomorphic_](http://nerds.airbnb.com/isomorphic-javascript-future-web-apps/) or [_universal_](https://medium.com/@mjackson/universal-javascript-4761051b7ae9) helpers that you need to build components.\n\nThe `react-dom` package contains `ReactDOM.render`, `ReactDOM.unmountComponentAtNode`, and `ReactDOM.findDOMNode`, and in `react-dom/server` we have server-side rendering support with `ReactDOMServer.renderToString` and `ReactDOMServer.renderToStaticMarkup`.\n\n```js\nvar React = require('react');\nvar ReactDOM = require('react-dom');\n\nvar MyComponent = React.createClass({\n  render: function() {\n    return <div>Hello World</div>;\n  }\n});\n\nReactDOM.render(<MyComponent />, node);\n```\n\nWe anticipate that most components will need to depend only on the `react` package, which is lightweight and doesn't include any of the actual rendering logic. To start, we expect people to render DOM-based components with our `react-dom` package, but there's nothing stopping someone from diving deep on performance and writing a `awesome-faster-react-dom` package which can render *the exact same DOM-based components*. By decoupling the component definitions from the rendering, this becomes possible.\n\nMore importantly, this paves the way to writing components that can be shared between the web version of React and React Native. This isn't yet easily possible, but we intend to make this easy in a future version so you can share React code between your website and native apps.\n\nThe addons have moved to separate packages as well: `react-addons-clone-with-props`, `react-addons-create-fragment`, `react-addons-css-transition-group`, `react-addons-linked-state-mixin`, `react-addons-pure-render-mixin`, `react-addons-shallow-compare`, `react-addons-transition-group`, and `react-addons-update`, plus `ReactDOM.unstable_batchedUpdates` in `react-dom`.\n\nFor now, please use the same version of `react` and `react-dom` in your apps to avoid versioning problems -- but we plan to remove this requirement later. (This release includes the old methods in the `react` package with a deprecation warning, but they'll be removed completely in 0.15.)\n\n## DOM node refs\n\nThe other big change we're making in this release is exposing refs to DOM components as the DOM node itself. That means: we looked at what you can do with a `ref` to a DOM component and realized that the only useful thing you can do with it is call `this.refs.giraffe.getDOMNode()` to get the underlying DOM node. In this release, `this.refs.giraffe` _is_ the actual DOM node.\n\nRefs to custom component classes work exactly as before.\n\n```js\nvar Zoo = React.createClass({\n  render: function() {\n    return (\n      <div>\n        Giraffe's name: <input ref=\"giraffe\" />\n      </div>\n    );\n  },\n\n  showName: function() {\n    // Previously:\n    // var input = this.refs.giraffe.getDOMNode();\n    var input = this.refs.giraffe;\n\n    alert(input.value);\n  }\n});\n```\n\nThis change also applies to the return result of `ReactDOM.render` when passing a DOM node as the top component. As with refs, this change does not affect custom components (eg. `<MyFancyMenu>` or `<MyContextProvider>`), which remain unaffected by this change.\n\nAlong with this change, we're also replacing `component.getDOMNode()` with `ReactDOM.findDOMNode(component)`. The `findDOMNode` method drills down to find which DOM node was rendered by a component, but it returns its argument when passed a DOM node so it's safe to call on a DOM component too. We introduced this function quietly in the last release, but now we're deprecating `.getDOMNode()` completely: it should be easy to change all existing calls in your code to be `ReactDOM.findDOMNode`. We also have an [automated codemod script](https://www.npmjs.com/package/react-codemod) to help you with this transition. Note that the `findDOMNode` calls are unnecessary when you already have a DOM component ref (as in the example above), so you can (and should) skip them in most cases going forward.\n\nWe hope you're as excited about this release as we are! Let us know what you think of it.\n",
        "type": "MarkdownRemark",
        "contentDigest": "28e8d41cf0ca965c10d5e3c03e66e76f",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.14 Beta 1",
        "author": [
          "sophiebits"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-07-03-react-v0.14-beta-1.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-07-03-react-v0.14-beta-1.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-07-03-react-v0.14-beta-1.md",
      "fields": {
        "date": "2015-07-02T16:00:00.000Z",
        "slug": "/blog/2015/07/03/react-v0.14-beta-1.html",
        "path": "blog/2015-07-03-react-v0.14-beta-1.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-08-03-new-react-devtools-beta.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-08-03-new-react-devtools-beta.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-08-03-new-react-devtools-beta.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"New React Devtools Beta\"\nauthor: [jaredly]\n---\n\nWe've made an entirely new version of the devtools, and we want you to try it\nout!\n\n![The full devtools gif](../images/blog/devtools-full.gif)\n\n## Why entirely new?\n\nPerhaps the biggest reason was to create a defined API for dealing with\ninternals, so that other tools could benefit as well and not have to depend on\nimplementation details. This gives us more freedom to refactor things\ninternally without worrying about breaking tooling.\n\nThe current version of the devtools is a fork of Blink's \"Elements\" pane, and\nis imperative, mutation-driven, and tightly integrated with Chrome-specific\nAPIs. The new devtools are much less coupled to Chrome, and easier to reason\nabout thanks to React.\n\n## What are the benefits?\n\n- 100% React\n- Firefox compatible\n- React Native compatible\n- more extensible & hackable\n\n## Are there any new features?\n\nYeah!\n\n### The Tree View\n\n![The new tree view of the devtools](../images/blog/devtools-tree-view.png)\n\n- Much richer view of your props, including the contents of objects and arrays\n- Custom components are emphasized, native components are de-emphasized\n- Stateful components have a red collapser\n- Improved keyboard navigation (hjkl or arrow keys)\n- Selected component is available in the console as `$r`\n- Props that change highlight in green\n- Right-click menu\n\n  - Scroll node into view\n  - Show the source for a component in the \"Sources\" pane\n  - Show the element in the \"Elements\" pane\n\n### Searching\n\nSelect the search bar (or press \"/\"), and start searching for a component by\nname.\n\n![](../images/blog/devtools-search.gif)\n\n### The Side Pane\n\n- Now shows the `context` for a component\n- Right-click to store a prop/state value as a global variable\n\n![](../images/blog/devtools-side-pane.gif)\n\n## How do I install it?\n\nFirst, disable the Chrome web store version, or it will break things. Then\n[download the .crx](https://github.com/facebook/react-devtools/releases) and\ndrag it into your `chrome://extensions` page. If it's not working to drag it\nfrom the downloads bar, try opening your downloads folder and drag it from\nthere.\n\nOnce we've determined that there aren't any major regressions, we'll update\nthe official web store version, and everyone will be automatically upgraded.\n\n### Also Firefox!\n\nWe also have an initial version of the devtools for Firefox, which you can\ndownload from the same [release page](https://github.com/facebook/react-devtools/releases).\n\n## Feedback welcome\n\nLet us know what issues you run into\n[on GitHub](https://github.com/facebook/react-devtools/issues), and check out\n[the README](https://github.com/facebook/react-devtools/tree/devtools-next)\nfor more info.\n\n## Update\n*August 12, 2015*\n\nA second beta is out, with a number of bugfixes. It is also listed on the\n[releases page](https://github.com/facebook/react-devtools/releases).\n",
        "type": "MarkdownRemark",
        "contentDigest": "5ebe758ceeb4bdff94c0cdd3debc9fd5",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "New React Devtools Beta",
        "author": [
          "jaredly"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-08-03-new-react-devtools-beta.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-08-03-new-react-devtools-beta.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-08-03-new-react-devtools-beta.md",
      "fields": {
        "date": "2015-08-02T16:00:00.000Z",
        "slug": "/blog/2015/08/03/new-react-devtools-beta.html",
        "path": "blog/2015-08-03-new-react-devtools-beta.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-08-11-relay-technical-preview.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-08-11-relay-technical-preview.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-08-11-relay-technical-preview.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Relay Technical Preview\"\nauthor: [josephsavona]\n---\n\n# Relay\n\nToday we're excited to share an update on Relay - the technical preview is now open-source and [available on GitHub](http://github.com/facebook/relay).\n\n## Why Relay\n\nWhile React simplified the process of developing complex user-interfaces, it left open the question of how to interact with data on the server. It turns out that this was a significant source of friction for our developers; fragile coupling between client and server caused data-related bugs and made iteration harder. Furthermore, developers were forced to constantly re-implement complex async logic instead of focusing on their apps. Relay addresses these concerns by borrowing important lessons from React: it provides *declarative, component-oriented data fetching for React applications*.\n\nDeclarative data-fetching means that Relay applications specify *what* data they need, not *how* to fetch that data. Just as React uses a description of the desired UI to manage view updates, Relay uses a data description in the form of GraphQL queries. Given these descriptions, Relay coalesces queries into batches for efficiency, manages error-prone asynchronous logic, caches data for performance, and automatically updates views as data changes.\n\nRelay is also component-oriented, extending the notion of a React component to include a description of what data is necessary to render it. This colocation allows developers to reason locally about their application and eliminates bugs such as under- or over-fetching data.\n\nRelay is in use at Facebook in production apps, and we're using it more and more because *Relay lets developers focus on their products and move fast*. It's working for us and we'd like to share it with the community.\n\n## What's Included\n\nWe're open-sourcing a technical preview of Relay - the core framework that we use internally, with some modifications for use outside Facebook. As this is the first release, it's good to keep in mind that there may be some incomplete or missing features. We'll continue to develop Relay and are working closely with the GraphQL community to ensure that Relay tracks updates during GraphQL's RFC period. But we couldn't wait any longer to get this in your hands, and we're looking forward to your feedback and contributions.\n\nRelay is available on [GitHub](http://github.com/facebook/relay) and [npm](https://www.npmjs.com/package/react-relay).\n\n## What's Next\n\nThe team is super excited to be releasing Relay - and just as excited about what's next. Here are some of the things we'll be focusing on:\n\n- Offline support. This will allow applications to fulfill queries and enqueue updates without connectivity.\n- Real-time updates. In collaboration with the GraphQL community, we're working to define a specification for subscriptions and provide support for them in Relay.\n- A generic Relay. Just as the power of React was never about the virtual DOM, Relay is much more than a GraphQL client. We're working to extend Relay to provide a unified interface for interacting not only with server data, but also in-memory and native device data (and, even better, a mix of all three).\n- Finally, it's all too easy as developers to focus on those people with the newest devices and fastest internet connections. We're working to make it easier to build applications that are robust in the face of slow or intermittent connectivity.\n\nThanks!\n",
        "type": "MarkdownRemark",
        "contentDigest": "e369bb5acd7ef9a47e66b0769b33ba0d",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Relay Technical Preview",
        "author": [
          "josephsavona"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-08-11-relay-technical-preview.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-08-11-relay-technical-preview.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-08-11-relay-technical-preview.md",
      "fields": {
        "date": "2015-08-10T16:00:00.000Z",
        "slug": "/blog/2015/08/11/relay-technical-preview.html",
        "path": "blog/2015-08-11-relay-technical-preview.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-08-13-reacteurope-roundup.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-08-13-reacteurope-roundup.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-08-13-reacteurope-roundup.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"ReactEurope Round-up\"\nlayout: post\nauthor: [matthewjohnston4]\n---\n\nLast month, the first React.js European conference took place in the city of Paris, at ReactEurope. Attendees were treated to a range of talks covering React, React Native, Flux, Relay, and GraphQL. Big thanks to everyone involved with organizing the conference, to all the attendees, and everyone who gave their time to speak - it wouldn't have been possible without the help and support of the React community.\n\n[Christopher Chedeau](https://github.com/vjeux) gave the opening keynote to the conference:\n\n<iframe width=\"650\" height=\"366\" src=\"//www.youtube.com/embed/PAA9O4E1IM4\" frameborder=\"0\" allowfullscreen></iframe>\n\n[Spencer Ahrens](https://github.com/sahrens) walks through building an advanced gestural UI leveraging the unique power of the React Native layout and animation systems to build a complex and fluid experience:\n\n<iframe width=\"650\" height=\"366\" src=\"//www.youtube.com/embed/xDlfrcM6YBk\" frameborder=\"0\" allowfullscreen></iframe>\n\n[Lee Byron](https://github.com/leebyron) explores GraphQL, its core principles, how it works, and what makes it a powerful tool:\n\n<iframe width=\"650\" height=\"366\" src=\"//www.youtube.com/embed/WQLzZf34FJ8\" frameborder=\"0\" allowfullscreen></iframe>\n\n[Joseph Savona](https://github.com/josephsavona) explores the problems Relay solves, its architecture and the query lifecycle, and how can you use Relay to build more scalable apps. There are examples of how Relay powers applications as complex as the Facebook News Feed:\n\n<iframe width=\"650\" height=\"366\" src=\"//www.youtube.com/embed/IrgHurBjQbg\" frameborder=\"0\" allowfullscreen></iframe>\n\n[Nick Schrock](https://github.com/schrockn) and [Dan Schafer](https://github.com/dschafer) take a deeper dive into putting GraphQL to work. How can we build a GraphQL API to work with an existing REST API or server-side data model? What are best practices when building a GraphQL API, and how do they differ from traditional REST best practices? How does Facebook use GraphQL? Most importantly, what does a complete and coherent GraphQL API looks like, and how can we get started building one?\n\n<iframe width=\"650\" height=\"366\" src=\"//www.youtube.com/embed/gY48GW87Feo\" frameborder=\"0\" allowfullscreen></iframe>\n\n[Sebastian Markbåge](https://github.com/sebmarkbage) talks about why the DOM is flawed and how it is becoming a second-class citizen in the land of React apps:\n\n<iframe width=\"650\" height=\"366\" src=\"//www.youtube.com/embed/Zemce4Y1Y-A\" frameborder=\"0\" allowfullscreen></iframe>\n\n[Sebastian McKenzie](https://github.com/sebmck) goes over how existing JSX build pipeline infrastructure can be further utilised to perform even more significant code transformations such as transpilation, optimisation, profiling and more, reducing bugs, making your code faster and you as a developer more productive and happy:\n\n<iframe width=\"650\" height=\"366\" src=\"//www.youtube.com/embed/OFuDvqZmUrE\" frameborder=\"0\" allowfullscreen></iframe>\n\n[Cheng Lou](https://github.com/chenglou) gives a talk on the past, the present and the future of animation, and the place React can potentially take in this:\n\n<iframe width=\"650\" height=\"366\" src=\"//www.youtube.com/embed/1tavDv5hXpo\" frameborder=\"0\" allowfullscreen></iframe>\n\nAnd there was a Q&A session with the whole team covering a range of React topics:\n\n<iframe width=\"650\" height=\"366\" src=\"//www.youtube.com/embed/CRJZBZ_-6hQ\" frameborder=\"0\" allowfullscreen></iframe>\n\nAnd there were lots of great talks from the React community:\n\n* [Michael Chan](https://www.youtube.com/watch?v=ERB1TJBn32c&list=PLCC436JpVnK0Phxld2dD4tM4xPMxJCiRD&index=2) looks at how to solve problems like CSS theming and media queries with contexts and plain old JavaScript. He also looks at the role of container-components and when it's better to \"just use CSS.\".\n* [Elie Rotenberg](https://www.youtube.com/watch?v=JSjhhUvB9DY&index=3&list=PLCC436JpVnK0Phxld2dD4tM4xPMxJCiRD) talks about Flux over the Wire, building isomorphic, real-time React apps using a novel interpretation of Flux.\n* [Ryan Florence](https://www.youtube.com/watch?v=BF58ZJ1ZQxY&list=PLCC436JpVnK0Phxld2dD4tM4xPMxJCiRD&index=6) says “Your front and back ends are already successfully in production but you don't have to miss out on the productivity that React brings. Forget the rewrites, this is brownfield!”.\n* [Dan Abramov](https://www.youtube.com/watch?v=xsSnOQynTHs&index=7&list=PLCC436JpVnK0Phxld2dD4tM4xPMxJCiRD) demonstrates how React can be used together with webpack Hot Module Replacement to create a live editing environment with time travel that supercharges your debugging experience and transforms the way you work on real apps every day.\n* [Mikhail Davydov](https://www.youtube.com/watch?v=ee_U2t-8L48&index=10&list=PLCC436JpVnK0Phxld2dD4tM4xPMxJCiRD) shows you how to ask the browser layout engine for help, how to avoid slavery of DSL, and build declarative Text UI using only web-technologies like HTML, JS, CSS and React.\n* [Kevin Robinson](https://www.youtube.com/watch?v=EOz4D_714R8&list=PLCC436JpVnK3HvUSAHpt-LRJkIK8pQG6R&index=3) shares how user experience choices are a primary influence on how Twitter design the data layer, especially for teams developing new products with full-stack capabilities.\n* [Jed Watson](https://www.youtube.com/watch?v=ctwmd5L1U_Q&list=PLCC436JpVnK3HvUSAHpt-LRJkIK8pQG6R&index=4) shares what Thinkmill have learned about React and mobile app development, and how they've approached the unique challenges of mobile web apps - with tools that are useful to all developers building touch interfaces with React, as well as a walkthrough of their development process and framework.\n* [Michael Jackson](https://www.youtube.com/watch?v=Q6Kczrgw6ic&list=PLCC436JpVnK3HvUSAHpt-LRJkIK8pQG6R&index=5) discusses how your users can benefit from the many tools that React Router provides including server-side rendering, real URLs on native devices, and much, much more.\n* [Michael Ridgway](https://www.youtube.com/watch?v=MrozpFEBEBE&index=7&list=PLCC436JpVnK3HvUSAHpt-LRJkIK8pQG6R) walks you through an isomorphic Flux architecture to give you the holy grail of frontend development.\n* [Aria Buckles](https://www.youtube.com/watch?v=2Qu-Ulrsfl8&index=8&list=PLCC436JpVnK3HvUSAHpt-LRJkIK8pQG6R) covers Khan Academy's techniques and patterns to make dealing with large pure components simpler, as well as current open questions.\n* [Evan Morikawa and Ben Gotow](https://www.youtube.com/watch?v=Uu4Yz2HmCgE&index=9&list=PLCC436JpVnK3HvUSAHpt-LRJkIK8pQG6R) talk about specific features of React & Flux, React CSS, programming design patterns, and custom libraries, which can turn a static application into a dynamic platform that an ecosystem of developers can build on top of.\n* [Zalando](https://www.youtube.com/watch?v=3EQhkquvVmY&list=PLCC436JpVnK0Phxld2dD4tM4xPMxJCiRD&index=9), [Rangle.io](https://www.youtube.com/watch?v=nAWKR1bBDsU&index=12&list=PLCC436JpVnK0Phxld2dD4tM4xPMxJCiRD), [Automattic](https://www.youtube.com/watch?v=hjhyrBbDp6U&index=13&list=PLCC436JpVnK0Phxld2dD4tM4xPMxJCiRD), [Thinkmill](https://www.youtube.com/watch?v=ApoCktYaRxk&list=PLCC436JpVnK0Phxld2dD4tM4xPMxJCiRD&index=14), and [Red Badger](https://www.youtube.com/watch?v=hdKidiwR8DM&list=PLCC436JpVnK0Phxld2dD4tM4xPMxJCiRD&index=15) provided lots of insight into how larger companies are using React.\n\nThere was also a [great series of Lightning talks](https://www.youtube.com/playlist?list=PLCC436JpVnK3xnOZ727t0vd3nbb5ZqCyo) from [Joshua Sierles](https://github.com/jsierles), [Ovidiu Cherecheș](https://github.com/skidding), [Mike Grabowski](https://github.com/grabbou), [Dave Brotherstone](https://github.com/bruderstein), [Sunil Pai](https://github.com/threepointone), [Andreas Savvides](https://github.com/AnSavvides), and [Petr Bela](https://github.com/petrbela).\n\nYou can view the full list of talks on [the ReactEurope YouTube channel](https://www.youtube.com/channel/UCorlLn2oZfgOJ-FUcF2eZ1A).\n",
        "type": "MarkdownRemark",
        "contentDigest": "a8a20e425c7380051093d659f3ba7826",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "ReactEurope Round-up",
        "layout": "post",
        "author": [
          "matthewjohnston4"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-08-13-reacteurope-roundup.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-08-13-reacteurope-roundup.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-08-13-reacteurope-roundup.md",
      "fields": {
        "date": "2015-08-12T16:00:00.000Z",
        "slug": "/blog/2015/08/13/reacteurope-roundup.html",
        "path": "blog/2015-08-13-reacteurope-roundup.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-09-02-new-react-developer-tools.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-09-02-new-react-developer-tools.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-09-02-new-react-developer-tools.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"New React Developer Tools\"\nlayout: post\nauthor: [sophiebits]\n---\n\nA month ago, we [posted a beta](/blog/2015/08/03/new-react-devtools-beta.html) of the new React developer tools. Today, we're releasing the first stable version of the new devtools. We're calling it version 0.14, but it's a full rewrite so we think of it more like a 2.0 release.\n\n![Video/screenshot of new devtools](../images/blog/devtools-full.gif)\n\nIt contains a handful of new features, including:\n\n* Built entirely with React, making it easier to develop and extend\n* Firefox support\n* Selected component instance is available as `$r` from the console\n* More detail is shown in props in the component tree\n* Right-click any node and choose \"Show Source\" to jump to the `render` method in the Sources panel\n* Right-click any props or state value to make it available as `$tmp` from the console\n* Full React Native support\n\n## Installation\n\nDownload the new devtools from the [Chrome Web Store](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi) and on [Mozilla Add-ons](https://addons.mozilla.org/en-US/firefox/addon/react-devtools/) for Firefox. If you're developing using React, we highly recommend installing these devtools.\n\nIf you already have the Chrome extension installed, it should autoupdate within the next week. You can also head to `chrome://extensions` and click \"Update extensions now\" if you'd like to get the new version today. If you installed the devtools beta, please remove it and switch back to the version from the store to make sure you always get the latest updates and bug fixes.\n\nIf you run into any issues, please post them on our [react-devtools GitHub repo](https://github.com/facebook/react-devtools).\n",
        "type": "MarkdownRemark",
        "contentDigest": "08532b29ee9fa688e11186c01a6da0a5",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "New React Developer Tools",
        "layout": "post",
        "author": [
          "sophiebits"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-09-02-new-react-developer-tools.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-09-02-new-react-developer-tools.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-09-02-new-react-developer-tools.md",
      "fields": {
        "date": "2015-09-01T16:00:00.000Z",
        "slug": "/blog/2015/09/02/new-react-developer-tools.html",
        "path": "blog/2015-09-02-new-react-developer-tools.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-10-01-react-render-and-top-level-api.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-10-01-react-render-and-top-level-api.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-10-01-react-render-and-top-level-api.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"ReactDOM.render and the Top Level React API\"\nauthor: [\"jimfb\", \"sebmarkbage\"]\n---\n\n\nWhen you're in React's world you are just building components that fit into other components. Everything is a component. Unfortunately not everything around you is built using React. At the root of your tree you still have to write some plumbing code to connect the outer world into React.\n\nThe primary API for rendering into the DOM looks like this:\n\n```js\nReactDOM.render(reactElement, domContainerNode)\n```\n\nTo update the properties of an existing component, you call render again with a new element.\n\nIf you are rendering React components within a single-page app, you may need to plug into the app's view lifecycle to ensure your app will invoke unmountComponentAtNode at the appropriate time. React will not automatically clean up a tree. You need to manually call:\n\n```js\nReactDOM.unmountComponentAtNode(domContainerNode)\n```\n\nThis is important and often forgotten. Forgetting to call `unmountComponentAtNode` will cause your app to leak memory. There is no way for us to automatically detect when it is appropriate to do this work. Every system is different.\n\nIt is not unique to the DOM. If you want to insert a React Native view in the middle of an existing iOS app you will hit similar issues.\n\n## Helpers\n\nIf you have multiple React roots, or a single root that gets deleted over time, we recommend that you always create your own wrapper API. These will all look slightly different depending on what your outer system looks like. For example, at Facebook we have a system that automatically ties into our page transition router to automatically call `unmountComponentAtNode`.\n\nRather than calling `ReactDOM.render()` directly everywhere, consider writing/using a library that will manage mounting and unmounting within your application.\n\nIn your environment you may want to always configure internationalization, routers, user data etc. If you have many different React roots it can be a pain to set up configuration nodes all over the place. By creating your own wrapper you can unify that configuration into one place.\n\n## Object Oriented Updates\n\nIf you call `ReactDOM.render` a second time to update properties, all your props are completely replaced.\n\n```js\nReactDOM.render(<App locale=\"en-US\" userID={1} />, container);\n// props.userID == 1\n// props.locale == \"en-US\"\nReactDOM.render(<App userID={2} />, container);\n// props.userID == 2\n// props.locale == undefined ??!?\n```\n\nIn object-oriented programming, all state lives on each object instance and you apply changes incrementally by mutating that state, one piece at a time. If you are using React within an app that expects an object oriented API (for instance, if you are building a custom web component using React), it might be surprising/confusing to a user that setting a single property would wipe out all the other properties on your component.\n\nWe used to have a helper function called `setProps` which allowed you to update only a few properties at a time. Unfortunately this API lived on a component instance, required React to keep this state internally and wasn't very natural anyway. Therefore, we're deprecating it and suggest that you build it into your own wrapper instead.\n\nHere's some boilerplate to get you started. It is a 0.14 migration path for codebases using `setProps` and `replaceProps`.\n\n```js\nclass ReactComponentRenderer {\n  constructor(klass, container) {\n    this.klass = klass;\n    this.container = container;\n    this.props = {};\n    this.component = null;\n  }\n\n  replaceProps(props, callback) {\n    this.props = {};\n    this.setProps(props, callback);\n  }\n\n  setProps(partialProps, callback) {\n    if (this.klass == null) {\n      console.warn(\n        'setProps(...): Can only update a mounted or ' +\n        'mounting component. This usually means you called setProps() on ' +\n        'an unmounted component. This is a no-op.'\n      );\n      return;\n    }\n    Object.assign(this.props, partialProps);\n    var element = React.createElement(this.klass, this.props);\n    this.component = ReactDOM.render(element, this.container, callback);\n  }\n\n  unmount() {\n    ReactDOM.unmountComponentAtNode(this.container);\n    this.klass = null;\n  }\n}\n```\n\nObject-oriented APIs don't look like that though. They use setters and methods. I think we can do better. If you know more about the component API that you're rendering, you can create a more natural object-oriented API around your React component.\n\n```js\nclass ReactVideoPlayer {\n  constructor(url, container) {\n    this._container = container;\n    this._url = url;\n    this._isPlaying = false;\n    this._render();\n  }\n\n  _render() {\n    ReactDOM.render(\n      <VideoPlayer url={this._url} playing={this._isPlaying} />,\n      this._container\n    );\n  }\n\n  get url() {\n    return this._url;\n  }\n\n  set url(value) {\n    this._url = value;\n    this._render();\n  }\n\n  play() {\n    this._isPlaying = true;\n    this._render();\n  }\n\n  pause() {\n    this._isPlaying = false;\n    this._render();\n  }\n\n  destroy() {\n    ReactDOM.unmountComponentAtNode(this._container);\n  }\n}\n```\n\nThis example shows how to provide an imperative API on top of a declarative one. Similarly, the reverse can be done, and a declarative wrapper can be used when exposing a Web Component as a React component.\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "018911334c07b725b8b9a0d4f60a4880",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "ReactDOM.render and the Top Level React API",
        "author": [
          "jimfb",
          "sebmarkbage"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-10-01-react-render-and-top-level-api.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-10-01-react-render-and-top-level-api.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-10-01-react-render-and-top-level-api.md",
      "fields": {
        "date": "2015-09-30T16:00:00.000Z",
        "slug": "/blog/2015/10/01/react-render-and-top-level-api.html",
        "path": "blog/2015-10-01-react-render-and-top-level-api.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-10-19-reactiflux-is-moving-to-discord.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-10-19-reactiflux-is-moving-to-discord.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-10-19-reactiflux-is-moving-to-discord.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Reactiflux is moving to Discord\"\nauthor: [benigeri]\n---\n\nTL;DR: Slack decided that Reactiflux had too many members and disabled new invites. Reactiflux is moving to Discord. Join us: [http://join.reactiflux.com](http://join.reactiflux.com/)\n\n## What happened with Slack?\n\nA few weeks ago, Reactiflux reached 7,500 members on Slack. Shortly after, Slack decided we were too big and disabled invites. There was no way for new users to join. Many of us were sad and upset. We loved Slack.  Our community was built around it.\n\nWe reached out to Slack several times, but their decision was firm. Our large community caused performance issues. Slack wants to focus on building a great product for teams, not necessarily large open communities. Losing focus and building for too many use cases always leads to product bloat, and eventually a decrease in quality.\n\n## So… why Discord?\n\nAfter a [long and thorough debate](https://github.com/reactiflux/volunteers/issues/25), Discord quickly emerged as the most promising service. After just a few days, 400 members had joined the Discord server, and many already loved it.\n\n### Easiest to join\n\nDiscord is the easiest platform to join. New users can immediately join our conversations without having to create an account. All they need to do is provide a name. No permission granting, no password, no email confirmation.\n\nThis is critically useful for us, and will make Reactiflux even more open and accessible.\n\n### Great apps\n\nOut of all of the services we’ve tried, Discord’s apps are by far the most polished. They are well designed, easy to use, and surprisingly fast. In addition to the web app, they have mobile apps on both iOS and Android as well as desktop apps for OS X and Windows, with Linux support coming soon.\n\nTheir desktop apps are built with React and Electron, and their iOS app is built with React Native.\n\n### Moderation tools\n\nSo far, we’ve been fortunate not to have to deal with spammers and trolls. As our community continues to grow, that might change. Unsurprisingly, Discord is the only app we’ve seen with legitimate moderation tools. It was built for gaming communities, after all.\n\n### Great multiple Server support\n\nYour  Discord account works with every Discord server, which is the equivalent of a Slack team. You don’t need to create a new account every time you join a new team. You can join new servers in one click, and it’s very easy to switch between them. Discord messages also work across servers, so your personal conversations are not scoped to a single server.\n\nInstead of having one huge, crowded Reactiflux server, we can branch off closely related channels into sub-servers. Communities will start overlapping, and it will be easy to interact with non-Reactiflux channels.\n\n### It’s hosted\n\nSelf-hosted apps require maintenance. We’re all busy, and we can barely find the time to keep our landing page up to date and running smoothly. More than anything, we need a stable platform, and we don’t have the resources to guarantee that right now.\n\nIt’s a much safer bet to offload the hosting to Discord, who is already keeping the lights on for all their users.\n\n### We like the team\n\nAnd they seem to like us back. They are excited for us to join them, and they’ve been very responsive to our feedback and suggestions.\n\nThey implemented code syntax highlighting just a few days after we told them we needed it.\n\nDiscord’s team has already built a solid suite of apps, and they have shown us how much they care about their users. We’re excited to see how they will continue to improve their product.\n\n## And what’s the catch?\n\nChoosing the best chat service is subjective. There are a million reasons why Discord *might be* a terrible idea. Here are the ones that we’re most worried about:\n\n### Difficult channel management\n\nChannel management seems to be the biggest issue. There is no way to opt out of channels; you can only mute them. And you can only mute channels one by one. There is no way to star channels, and channels can only be sorted on the server level. Each user will see the list of channels in the same order.\n\nAs the number of channels grow, it will be challenging to keep things in order. Branching off sub-servers will help, and we will keep an easily accessible directory of channels across our main server and all of the sub-servers.\n\nWe can build simple tools to make channel lookup easier, and the Discord team is working on improvements that should make this more manageable.\n\n### No Search\n\nLack of search is clearly a bummer, but Discord is working on it. Search is coming!\n\n### Firewall\n\nA couple of users aren’t able to access Discord at work since other corporate filters classify it as a gaming application. This sucks, but it seems to be a  rare case. So far, it seems only to affect 0.6% of our current community (3/500).\n\nWe hope that these users can get Discord's domains whitelisted, and we’ll try to find a solution if this is a widespread issue. The Discord team is aware of the issue as well.\n\n## Is Discord going to disappear tomorrow?\n\nProbably not tomorrow. They have 14 people [full time](https://discordapp.com/company), and they’ve raised money from some of the best investors in Silicon Valley, including [Benchmark](http://www.benchmark.com/) and [Accel](http://www.accel.com/companies/).\n\nBy focusing on gaming communities, Discord has differentiated itself from the many other communication apps. Discord is well received and has a rapidly growing user base.  They plan to keep their basic offerings free for unlimited users and hope to make money with premium offerings (themes, add-ons, content, and more).\n\n## Join us!\n\nMore than 500 of us have already migrated to the new Reactiflux.  Join us, we're one click away: [http://join.reactiflux.com](http://join.reactiflux.com/)\n\n*Note: Jordan Hawker’s thorough [research](http://jhawk.co/team-chat-comparison) made our decision a lot easier.*\n",
        "type": "MarkdownRemark",
        "contentDigest": "7873360789c3dce4095db60f57354315",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Reactiflux is moving to Discord",
        "author": [
          "benigeri"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-10-19-reactiflux-is-moving-to-discord.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-10-19-reactiflux-is-moving-to-discord.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-10-19-reactiflux-is-moving-to-discord.md",
      "fields": {
        "date": "2015-10-18T16:00:00.000Z",
        "slug": "/blog/2015/10/19/reactiflux-is-moving-to-discord.html",
        "path": "blog/2015-10-19-reactiflux-is-moving-to-discord.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-10-28-react-v0.14.1.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-10-28-react-v0.14.1.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-10-28-react-v0.14.1.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v0.14.1\"\nauthor: [zpao]\n---\n\nAfter a couple weeks of having more people use v0.14, we're ready to ship a patch release addressing a few issues. Thanks to everybody who has reported issues and written patches!\n\nThe release is now available for download:\n\n* **React**  \n  Dev build with warnings: <https://fb.me/react-0.14.1.js>  \n  Minified build for production: <https://fb.me/react-0.14.1.min.js>  \n* **React with Add-Ons**  \n  Dev build with warnings: <https://fb.me/react-with-addons-0.14.1.js>  \n  Minified build for production: <https://fb.me/react-with-addons-0.14.1.min.js>  \n* **React DOM** (include React in the page before React DOM)  \n  Dev build with warnings: <https://fb.me/react-dom-0.14.1.js>  \n  Minified build for production: <https://fb.me/react-dom-0.14.1.min.js>  \n\nWe've also published version `0.14.1` of the `react`, `react-dom`, and addons packages on npm and the `react` package on bower.\n\n- - -\n\n## Changelog\n\n### React DOM\n- Fixed bug where events wouldn't fire in old browsers when using React in development mode\n- Fixed bug preventing use of `dangerouslySetInnerHTML` with Closure Compiler Advanced mode\n- Added support for `srcLang`, `default`, and `kind` attributes for `<track>` elements\n- Added support for `color` attribute\n- Ensured legacy `.props` access on DOM nodes is updated on re-renders\n\n### React TestUtils Add-on\n- Fixed `scryRenderedDOMComponentsWithClass` so it works with SVG\n\n### React CSSTransitionGroup Add-on\n- Fix bug preventing `0` to be used as a timeout value\n\n### React on Bower\n- Added `react-dom.js` to `main` to improve compatibility with tooling\n",
        "type": "MarkdownRemark",
        "contentDigest": "6a6a8cb0443139492caa1b37a8150f26",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.14.1",
        "author": [
          "zpao"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-10-28-react-v0.14.1.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-10-28-react-v0.14.1.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-10-28-react-v0.14.1.md",
      "fields": {
        "date": "2015-10-27T16:00:00.000Z",
        "slug": "/blog/2015/10/28/react-v0.14.1.html",
        "path": "blog/2015-10-28-react-v0.14.1.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-11-02-react-v0.14.2.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-11-02-react-v0.14.2.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-11-02-react-v0.14.2.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v0.14.2\"\nauthor: [zpao]\n---\n\nWe have a quick update following the release of 0.14.1 last week. It turns out we broke a couple things in the development build of React when using Internet Explorer. Luckily it was only the development build, so your production applications were unaffected. This release is mostly to address those issues. There is one notable change if consuming React from npm. For the `react-dom` package, we moved `react` from a regular dependency to a peer dependency. This will impact very few people as these two are typically installed together at the top level, but it will fix some issues with dependencies of installed components also using `react` as a peer dependency.\n\nThe release is now available for download:\n\n* **React**  \n  Dev build with warnings: <https://fb.me/react-0.14.2.js>  \n  Minified build for production: <https://fb.me/react-0.14.2.min.js>  \n* **React with Add-Ons**  \n  Dev build with warnings: <https://fb.me/react-with-addons-0.14.2.js>  \n  Minified build for production: <https://fb.me/react-with-addons-0.14.2.min.js>  \n* **React DOM** (include React in the page before React DOM)  \n  Dev build with warnings: <https://fb.me/react-dom-0.14.2.js>  \n  Minified build for production: <https://fb.me/react-dom-0.14.2.min.js>  \n\nWe've also published version `0.14.2` of the `react`, `react-dom`, and addons packages on npm and the `react` package on bower.\n\n- - -\n\n## Changelog\n\n### React DOM\n- Fixed bug with development build preventing events from firing in some versions of Internet Explorer & Edge\n- Fixed bug with development build when using es5-sham in older versions of Internet Explorer\n- Added support for `integrity` attribute\n- Fixed bug resulting in `children` prop being coerced to a string for custom elements, which was not the desired behavior.\n- Moved `react` from `dependencies` to `peerDependencies` to match expectations and align with `react-addons-*` packages\n",
        "type": "MarkdownRemark",
        "contentDigest": "646d8b698507523813e89209410b2004",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.14.2",
        "author": [
          "zpao"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-11-02-react-v0.14.2.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-11-02-react-v0.14.2.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-11-02-react-v0.14.2.md",
      "fields": {
        "date": "2015-11-01T16:00:00.000Z",
        "slug": "/blog/2015/11/02/react-v0.14.2.html",
        "path": "blog/2015-11-02-react-v0.14.2.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-11-18-react-v0.14.3.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-11-18-react-v0.14.3.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-11-18-react-v0.14.3.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v0.14.3\"\nauthor: [zpao]\n---\n\nIt's time for another installment of React patch releases! We didn't break anything in v0.14.2 but we do have a couple of other bugs we're fixing. The biggest change in this release is actually an addition of a new built file. We heard from a number of people that they still need the ability to use React to render to a string on the client. While the use cases are not common and there are other ways to achieve this, we decided that it's still valuable to support. So we're now building `react-dom-server.js`, which will be shipped to Bower and in the `dist/` directory of the `react-dom` package on npm. This file works the same way as `react-dom.js` and therefore requires that the primary React build has already been included on the page.\n\nThe release is now available for download:\n\n* **React**  \n  Dev build with warnings: <https://fb.me/react-0.14.3.js>  \n  Minified build for production: <https://fb.me/react-0.14.3.min.js>  \n* **React with Add-Ons**  \n  Dev build with warnings: <https://fb.me/react-with-addons-0.14.3.js>  \n  Minified build for production: <https://fb.me/react-with-addons-0.14.3.min.js>  \n* **React DOM** (include React in the page before React DOM)  \n  Dev build with warnings: <https://fb.me/react-dom-0.14.3.js>  \n  Minified build for production: <https://fb.me/react-dom-0.14.3.min.js>  \n* **React DOM Server** (include React in the page before React DOM Server)  \n  Dev build with warnings: <https://fb.me/react-dom-server-0.14.3.js>  \n  Minified build for production: <https://fb.me/react-dom-server-0.14.3.min.js>  \n\nWe've also published version `0.14.3` of the `react`, `react-dom`, and addons packages on npm and the `react` package on bower.\n\n- - -\n\n## Changelog\n\n### React DOM\n- Added support for `nonce` attribute for `<script>` and `<style>` elements\n- Added support for `reversed` attribute for `<ol>` elements\n\n### React TestUtils Add-on\n- Fixed bug with shallow rendering and function refs\n\n### React CSSTransitionGroup Add-on\n- Fixed bug resulting in timeouts firing incorrectly when mounting and unmounting rapidly\n\n### React on Bower\n- Added `react-dom-server.js` to expose `renderToString` and `renderToStaticMarkup` for usage in the browser\n",
        "type": "MarkdownRemark",
        "contentDigest": "afb2d90ad9a3836a5032f9c487f494a7",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.14.3",
        "author": [
          "zpao"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-11-18-react-v0.14.3.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-11-18-react-v0.14.3.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-11-18-react-v0.14.3.md",
      "fields": {
        "date": "2015-11-17T16:00:00.000Z",
        "slug": "/blog/2015/11/18/react-v0.14.3.html",
        "path": "blog/2015-11-18-react-v0.14.3.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-12-04-react-js-conf-2016-diversity-scholarship.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-12-04-react-js-conf-2016-diversity-scholarship.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-12-04-react-js-conf-2016-diversity-scholarship.md absPath of file",
      "internal": {
        "content": "---\ntitle: React.js Conf 2016 Diversity Scholarship\nauthor: [zpao]\n---\n\nI am thrilled to announced that we will be organizing another diversity scholarship program for the upcoming React.js Conf! The tech industry is suffering from a lack of diversity, but it's important to us that we have a thriving community that is made up of people with a variety of experiences and viewpoints.\n\nWhen we ran this program last year, we had *over 200* people apply for only 10 tickets. There were so many people that we wanted to bring in but we couldn't. The results were still awesome, and we had bright individuals from around the world attending who would have otherwise been unable to. These attendees took part in discussions at the conference and brought perspectives that we might not have otherwise seen there.\n\nThis year we're excited to bring back the scholarship, but we've set aside **40 tickets** because we really believe that it's important to do our best to make sure we have an even more diverse audience.\n\nThis is something I'm personally really excited to be a part of. I know the rest of the team is as well. We're really proud to have everyone at Facebook providing support and funding for this.\n\nThe details of the scholarship are provided below (or you can [go directly to the application](http://goo.gl/forms/PEmKj8oUp4)). I encourage you to apply! If you don't feel like you are eligible yourself, you can still help – send this along to friends, family, coworkers, acquaintances, or anybody who might be interested. And even if you haven't spoken before, please consider [submitting a proposal for a talk](http://conf.reactjs.com/) (either 30 minutes or just 5 minutes) - we're hoping to have a very diverse group of speakers in addition to attendees.\n\n\n- - -\n\nFacebook is excited to announce that we are now accepting applications for the React.js Conf Diversity Scholarship!\n\nBeginning today, those studying or working in computer science or a related field can apply for a partial scholarship to attend the React.js Conf in San Francisco, CA on February 22 & 23, 2016.\n\nReact opens a world of new possibilities such as server-side rendering, real-time updates, different rendering targets like SVG and canvas. React Native makes is easy to use the same concepts and technologies to build native mobile experiences on iOS and Android. Join us at React.js Conf to shape the future of client-side applications! For more information about the React.js conference, please see [the website](http://conf.reactjs.com/).\n\nAt Facebook, we believe that anyone anywhere can make a positive impact by developing products to make the world more open and connected to the people and things they care about. Given the current realities of the tech industry and the lack of representation of communities we seek to serve, applicants currently under-represented in Computer Science and related fields are strongly encouraged to apply. Facebook will make determinations on scholarship recipients in its sole discretion. Facebook complies with all equal opportunity laws.\n\nTo apply for the scholarship, please visit the application page: **<http://goo.gl/forms/PEmKj8oUp4>**\n\n## Award Includes\n\n* Paid registration fee for the React.js Conf February 22 & 23 in downtown San Francisco, CA\n* Paid lodging expenses for February 21, 22, 23\n\n## Important Dates\n\n* Sunday December 13th 2015 - 11:59 PST: Applications for the React.js Conf Scholarship must be submitted in full\n* Wednesday, December 16th, 2015: Award recipients will be notified by email of their acceptance\n* Monday & Tuesday, February 22 & 23, 2016: React.js Conf\n\n## Eligibility\n\n* Must currently be studying or working in Computer Science or a related field\n* International applicants are welcome, but you will be responsible for securing your own visa to attend the conference\n* You must be able to provide your own transportation to San Francisco\n* You must be available to attend the full duration of React.js Conf on February 22 & 23 in San Francisco, CA\n",
        "type": "MarkdownRemark",
        "contentDigest": "20574f906b1e74bada04d94c8c41ea8e",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React.js Conf 2016 Diversity Scholarship",
        "author": [
          "zpao"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-12-04-react-js-conf-2016-diversity-scholarship.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-12-04-react-js-conf-2016-diversity-scholarship.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-12-04-react-js-conf-2016-diversity-scholarship.md",
      "fields": {
        "date": "2015-12-03T16:00:00.000Z",
        "slug": "/blog/2015/12/04/react-js-conf-2016-diversity-scholarship.html",
        "path": "blog/2015-12-04-react-js-conf-2016-diversity-scholarship.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-12-16-ismounted-antipattern.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-12-16-ismounted-antipattern.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-12-16-ismounted-antipattern.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"isMounted is an Antipattern\"\nauthor: [jimfb]\n---\n\nAs we move closer to officially deprecating isMounted, it's worth understanding why the function is an antipattern, and how to write code without the isMounted function.\n\nThe primary use case for `isMounted()` is to avoid calling `setState()` after a component has unmounted, because calling `setState()` after a component has unmounted will emit a warning. The “setState warning” exists to help you catch bugs, because calling `setState()` on an unmounted component is an indication that your app/component has somehow failed to clean up properly. Specifically, calling `setState()` in an unmounted component means that your app is still holding a reference to the component after the component has been unmounted - which often indicates a memory leak!\n\nTo avoid the error message, people often add lines like this:\n\n```js\nif (this.isMounted()) { // This is bad.\n  this.setState({...});\n}\n```\n\nChecking `isMounted` before calling `setState()` does eliminate the warning, but it also defeats the purpose of the warning, since now you will never get the warning (even when you should!)\n\nOther uses of `isMounted()` are similarly erroneous; using `isMounted()` is a code smell because the only reason you would check is because you think you might be holding a reference after the component has unmounted.\n\nAn easy migration strategy for anyone upgrading their code to avoid `isMounted()` is to track the mounted status yourself.  Just set a `_isMounted` property to true in `componentDidMount` and set it to false in `componentWillUnmount`, and use this variable to check your component's status.\n\nAn optimal solution would be to find places where `setState()` might be called after a component has unmounted, and fix them. Such situations most commonly occur due to callbacks, when a component is waiting for some data and gets unmounted before the data arrives. Ideally, any callbacks should be canceled in `componentWillUnmount`, prior to unmounting.\n\nFor instance, if you are using a Flux store in your component, you must unsubscribe in `componentWillUnmount`:\n\n```javascript{9}\nclass MyComponent extends React.Component {\n  componentDidMount() {\n    mydatastore.subscribe(this);\n  }\n  render() {\n    ...\n  }\n  componentWillUnmount() {\n    mydatastore.unsubscribe(this);\n  }\n}\n```\n\nIf you use ES6 promises, you may need to wrap your promise in order to make it cancelable.\n\n```js\nconst cancelablePromise = makeCancelable(\n  new Promise(r => component.setState({...}}))\n);\n\ncancelablePromise\n  .promise\n  .then(() => console.log('resolved'))\n  .catch((reason) => console.log('isCanceled', reason.isCanceled));\n\ncancelablePromise.cancel(); // Cancel the promise\n```\n\nWhere `makeCancelable` was originally [defined by @istarkov](https://github.com/facebook/react/issues/5465#issuecomment-157888325) as:\n\n```js\nconst makeCancelable = (promise) => {\n  let hasCanceled_ = false;\n\n  const wrappedPromise = new Promise((resolve, reject) => {\n    promise.then(\n      val => hasCanceled_ ? reject({isCanceled: true}) : resolve(val),\n      error => hasCanceled_ ? reject({isCanceled: true}) : reject(error)\n    );\n  });\n\n  return {\n    promise: wrappedPromise,\n    cancel() {\n      hasCanceled_ = true;\n    },\n  };\n};\n```\n\nAs an added bonus for getting your code cleaned up early, getting rid of `isMounted()` makes it one step easier for you to upgrade to ES6 classes, where using `isMounted()` is already prohibited.  Happy coding!\n",
        "type": "MarkdownRemark",
        "contentDigest": "680b44dcdfe6fce359699ab4dde74cf6",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "isMounted is an Antipattern",
        "author": [
          "jimfb"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-12-16-ismounted-antipattern.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-12-16-ismounted-antipattern.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-12-16-ismounted-antipattern.md",
      "fields": {
        "date": "2015-12-15T16:00:00.000Z",
        "slug": "/blog/2015/12/16/ismounted-antipattern.html",
        "path": "blog/2015-12-16-ismounted-antipattern.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-12-29-react-v0.14.4.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-12-29-react-v0.14.4.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-12-29-react-v0.14.4.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v0.14.4\"\nauthor: [sophiebits]\n---\n\nHappy December! We have a minor point release today. It has just a few small bug fixes.\n\nThe release is now available for download:\n\n* **React**  \n  Dev build with warnings: <https://fb.me/react-0.14.4.js>  \n  Minified build for production: <https://fb.me/react-0.14.4.min.js>  \n* **React with Add-Ons**  \n  Dev build with warnings: <https://fb.me/react-with-addons-0.14.4.js>  \n  Minified build for production: <https://fb.me/react-with-addons-0.14.4.min.js>  \n* **React DOM** (include React in the page before React DOM)  \n  Dev build with warnings: <https://fb.me/react-dom-0.14.4.js>  \n  Minified build for production: <https://fb.me/react-dom-0.14.4.min.js>  \n* **React DOM Server** (include React in the page before React DOM Server)  \n  Dev build with warnings: <https://fb.me/react-dom-server-0.14.4.js>  \n  Minified build for production: <https://fb.me/react-dom-server-0.14.4.min.js>  \n\nWe've also published version `0.14.4` of the `react`, `react-dom`, and addons packages on npm and the `react` package on bower.\n\n- - -\n\n## Changelog\n\n### React\n- Minor internal changes for better compatibility with React Native\n\n### React DOM\n- The `autoCapitalize` and `autoCorrect` props are now set as attributes in the DOM instead of properties to improve cross-browser compatibility\n- Fixed bug with controlled `<select>` elements not handling updates properly\n\n### React Perf Add-on\n- Some DOM operation names have been updated for clarity in the output of `.printDOM()`\n",
        "type": "MarkdownRemark",
        "contentDigest": "264a76b510dca1436b78e2d73ebc759a",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.14.4",
        "author": [
          "sophiebits"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-12-29-react-v0.14.4.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-12-29-react-v0.14.4.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-12-29-react-v0.14.4.md",
      "fields": {
        "date": "2015-12-28T16:00:00.000Z",
        "slug": "/blog/2015/12/29/react-v0.14.4.html",
        "path": "blog/2015-12-29-react-v0.14.4.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2016-01-08-A-implies-B-does-not-imply-B-implies-A.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2016-01-08-A-implies-B-does-not-imply-B-implies-A.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2016-01-08-A-implies-B-does-not-imply-B-implies-A.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"(A => B) !=> (B => A)\"\nauthor: [jimfb]\n---\n\nThe documentation for `componentWillReceiveProps` states that `componentWillReceiveProps` will be invoked when the props change as the result of a rerender. Some people assume this means \"if `componentWillReceiveProps` is called, then the props must have changed\", but that conclusion is logically incorrect.\n\nThe guiding principle is one of my favorites from formal logic/mathematics:\n > A implies B does not imply B implies A\n\nExample: \"If I eat moldy food, then I will get sick\" does not imply \"if I am sick, then I must have eaten moldy food\". There are many other reasons I could be feeling sick. For instance, maybe the flu is circulating around the office. Similarly, there are many reasons that `componentWillReceiveProps` might get called, even if the props didn’t change.\n\nIf you don’t believe me, call `ReactDOM.render()` three times with the exact same props, and try to predict the number of times `componentWillReceiveProps` will get called:\n\n\n```js\nclass Component extends React.Component {\n  componentWillReceiveProps(nextProps) {\n    console.log('componentWillReceiveProps', nextProps.data.bar);\n  }\n  render() {\n    return <div>Bar {this.props.data.bar}!</div>;\n  }\n}\n\nvar container = document.getElementById('container');\n\nvar mydata = {bar: 'drinks'};\nReactDOM.render(<Component data={mydata} />, container);\nReactDOM.render(<Component data={mydata} />, container);\nReactDOM.render(<Component data={mydata} />, container);\n```\n\n\nIn this case, the answer is \"2\". React calls `componentWillReceiveProps` twice (once for each of the two updates). Both times, the value of \"drinks\" is printed (ie. the props didn’t change).\n\nTo understand why, we need to think about what *could* have happened. The data *could* have changed between the initial render and the two subsequent updates, if the code had performed a mutation like this:\n\n```js\nvar mydata = {bar: 'drinks'};\nReactDOM.render(<Component data={mydata} />, container);\nmydata.bar = 'food'\nReactDOM.render(<Component data={mydata} />, container);\nmydata.bar = 'noise'\nReactDOM.render(<Component data={mydata} />, container);\n```\n\nReact has no way of knowing that the data didn’t change. Therefore, React needs to call `componentWillReceiveProps`, because the component needs to be notified of the new props (even if the new props happen to be the same as the old props).\n\nYou might think that React could just use smarter checks for equality, but there are some issues with this idea:\n\n * The old `mydata` and the new `mydata` are actually the same physical object (only the object’s internal value changed). Since the references are triple-equals-equal, doing an equality check doesn’t tell us if the value has changed. The only possible solution would be to have created a deep copy of the data, and then later do a deep comparison - but this can be prohibitively expensive for large data structures (especially ones with cycles).\n * The `mydata` object might contain references to functions which have captured variables within closures. There is no way for React to peek into these closures, and thus no way for React to copy them and/or verify equality.\n * The `mydata` object might contain references to objects which are re-instantiated during the parent's render (ie. not triple-equals-equal) but are conceptually equal (ie. same keys and same values). A deep-compare (expensive) could detect this, except that functions present a problem again because there is no reliable way to compare two functions to see if they are semantically equivalent.\n\nGiven the language constraints, it is sometimes impossible for us to achieve meaningful equality semantics. In such cases, React will call `componentWillReceiveProps` (even though the props might not have changed) so the component has an opportunity to examine the new props and act accordingly.\n\nAs a result, your implementation of `componentWillReceiveProps` MUST NOT assume that your props have changed. If you want an operation (such as a network request) to occur only when props have changed, your `componentWillReceiveProps` code needs to check to see if the props actually changed.\n\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "8ab5dc8437af285e349d5cedbc808c04",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "(A => B) !=> (B => A)",
        "author": [
          "jimfb"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2016-01-08-A-implies-B-does-not-imply-B-implies-A.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2016-01-08-A-implies-B-does-not-imply-B-implies-A.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2016-01-08-A-implies-B-does-not-imply-B-implies-A.md",
      "fields": {
        "date": "2016-01-07T16:00:00.000Z",
        "slug": "/blog/2016/01/08/A-implies-B-does-not-imply-B-implies-A.html",
        "path": "blog/2016-01-08-A-implies-B-does-not-imply-B-implies-A.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2016-01-12-discontinuing-ie8-support.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2016-01-12-discontinuing-ie8-support.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2016-01-12-discontinuing-ie8-support.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Discontinuing IE 8 Support in React DOM\"\nauthor: [sophiebits]\n---\n\nSince its 2013 release, React has supported all popular browsers, including Internet Explorer 8 and above. We handle normalizing many quirks present in old browser versions, including event system differences, so that your app code doesn't have to worry about most browser bugs.\n\nToday, Microsoft [discontinued support for older versions of IE](https://www.microsoft.com/en-us/WindowsForBusiness/End-of-IE-support). Starting with React v15, we're discontinuing React DOM's support for IE 8. We've heard that most React DOM apps already don't support old versions of Internet Explorer, so this shouldn't affect many people. This change will help us develop faster and make React DOM even better. (We won't actively remove IE 8–related code quite yet, but we will deprioritize new bugs that are reported. If you need to support IE 8 we recommend you stay on React v0.14.)\n\nReact DOM will continue to support IE 9 and above for the foreseeable future.\n",
        "type": "MarkdownRemark",
        "contentDigest": "8edcd9fb8ed3fb04ba81b4f93290324b",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Discontinuing IE 8 Support in React DOM",
        "author": [
          "sophiebits"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2016-01-12-discontinuing-ie8-support.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2016-01-12-discontinuing-ie8-support.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2016-01-12-discontinuing-ie8-support.md",
      "fields": {
        "date": "2016-01-11T16:00:00.000Z",
        "slug": "/blog/2016/01/12/discontinuing-ie8-support.html",
        "path": "blog/2016-01-12-discontinuing-ie8-support.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2016-02-19-new-versioning-scheme.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2016-02-19-new-versioning-scheme.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2016-02-19-new-versioning-scheme.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"New Versioning Scheme\"\nauthor: [sebmarkbage]\n---\n\nToday we're announcing that we're switching to major revisions for React. The current version is 0.14.7. The next release will be: **15.0.0**\n\nThis change shouldn't materially affect most of you. Moving to major semver versions simply helps indicate our commitment to stability and gives us the flexibility to add new backwards-compatible features in minor releases. This means we can have fewer major releases and you won't have to wait as long to take advantage of improvements to React. Plus, if you're a component author, this versioning scheme gives you the flexibility to support two major versions of React at the same time so you don't need to leave anyone behind.\n\nThe core of the React API has been stable for years. Our business as well as many of yours all depend heavily on the use of React as a core piece of our infrastructure. We're committed to the stability as well as the progress of React going forward.\n\n## Bring Everyone Along\n\nReact isn't just a library but an ecosystem. We know that your applications and ours are not just isolated islands of code. It is a network of your own application code, your own open source components and third party libraries that all depend on React.\n\n<img src=\"../images/blog/versioning-1.png\" width=\"403\">\n\nTherefore it is important that we don't just upgrade our own codebases but that we bring our whole community with us. We take the upgrade path very seriously - for everyone.\n\n<img src=\"../images/blog/versioning-poll.png\" width=\"596\">\n\n## Introducing Minor Releases\n\nIdeally everyone could just depend on the latest version of React all the time.\n\n<img src=\"../images/blog/versioning-2.png\" width=\"463\">\n\nWe know that in practice that is not possible. In the future, we expect more new additive APIs rather than breakage of existing ones. By moving to major revisions in the semver scheme, we can release new versions without breaking existing ones.\n\n<img src=\"../images/blog/versioning-3.png\" width=\"503\">\n\nThat means that if one component needs a new API, there is no need for any of the other components to do any further work. They remain compatible.\n\n## What Happened to 1.0.0?\n\nPart of React's growth and popularity is that it is stable and performant in production. People have long asked what React v1.0 will look. Technically some breaking changes are important to avoid stagnating, but we still achieve stability by making it easy to upgrade. If major version numbers indicate API stability and engender trust that it can be used in production, then we got there a long time ago. There are too many preconceived notions of what v1.0 is. We're still following semver. We're just communicating stability by moving the 0 from the beginning to the end.\n\n## Breaking Changes\n\nMinor revision releases will include deprecation warnings and tips for how to upgrade an API or pattern that will be removed or changed in the future.\n\nWe will continue to release [codemods](https://www.youtube.com/watch?v=d0pOgY8__JM) for common patterns to make automatic upgrades of your codebase easier.\n\nOnce we've reached the end of life for a particular major version, we'll release a new major version where all deprecated APIs have been removed.\n\n## Avoiding The Major Cliff\n\nIf you try to upgrade your component to 16.0.0 you might find that your application no longer works if you still have other dependencies. E.g. if Ryan's and Jed's components are only compatible with 15.x.x.\n\n<img src=\"../images/blog/versioning-4.png\" width=\"498\">\n\nWorst case, you revert back to 15.1.0 for your application. Since you'll want to use your component, you might also revert that one.\n\n<img src=\"../images/blog/versioning-5.png\" width=\"493\">\n\nOf course, Ryan and Jed think the same way. If we're not careful, we can hit a cliff where nobody upgrades. This has happened to many software project ecosystems in the past.\n\nTherefore, we're committed to making it easy for most components and libraries built on top of React to be compatible with two major versions at the same time. We will do this by introducing new APIs before completely removing the old ones, thereby avoiding those cliffs.\n\n<img src=\"../images/blog/versioning-6.png\" width=\"493\">\n",
        "type": "MarkdownRemark",
        "contentDigest": "f665ede9e87ef72fa3fc198ccf45a635",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "New Versioning Scheme",
        "author": [
          "sebmarkbage"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2016-02-19-new-versioning-scheme.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2016-02-19-new-versioning-scheme.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2016-02-19-new-versioning-scheme.md",
      "fields": {
        "date": "2016-02-18T16:00:00.000Z",
        "slug": "/blog/2016/02/19/new-versioning-scheme.html",
        "path": "blog/2016-02-19-new-versioning-scheme.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2016-03-16-react-v15-rc2.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2016-03-16-react-v15-rc2.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2016-03-16-react-v15-rc2.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v15.0 Release Candidate 2\"\nauthor: [zpao]\n---\n\nToday we're releasing a second release candidate for version 15. Primarily this is to address 2 issues, but we also picked up a few small changes from new contributors, including some improvements to some of our new warnings.\n\nThe most pressing change that was made is to fix a bug in our new code that removes `<span>`s, as discussed in the original RC1 post. Specifically we have some code that takes a different path in IE11 and Edge due to the speed of some DOM operations. There was a bug in this code which didn't break out of the optimization for `DocumentFragment`s, resulting in text not appearing at all. Thanks to the several people who [reported this](https://github.com/facebook/react/issues/6246).\n\nThe other change is to our SVG code. In RC1 we had made the decision to pass through all attributes directly. This led to [some confusion with `class` vs `className`](https://github.com/facebook/react/issues/6211) and ultimately led us to reconsider our position on the approach. Passing through all attributes meant that we would have two different patterns for using React where things like hyphenated attributes would work for SVG but not HTML. In the future, we *might* change our approach to the problem for HTML as well but in the meantime, maintaining consistency is important. So we reverted the changes that allowed the attributes to be passed through and instead expanded the SVG property list to include all attributes that are in the spec. We believe we have everything now but definitely [let us know](https://github.com/facebook/react/issues/1657#issuecomment-197031403) if we missed anything. It was and still is our intent to support the full range of SVG tags and attributes in this release.\n\nThanks again to everybody who has tried the RC1 and reported issues. It has been extremely important and we wouldn't be able to do this without your help!\n\n## Installation\n\nWe recommend using React from `npm` and using a tool like browserify or webpack to build your code into a single bundle. To install the two packages:\n\n* `npm install --save react@15.0.0-rc.2 react-dom@15.0.0-rc.2`\n\nRemember that by default, React runs extra checks and provides helpful warnings in development mode. When deploying your app, set the `NODE_ENV` environment variable to `production` to use the production build of React which does not include the development warnings and runs significantly faster.\n\nIf you can’t use `npm` yet, we provide pre-built browser builds for your convenience, which are also available in the `react` package on bower.\n\n* **React**  \n  Dev build with warnings: <https://fb.me/react-15.0.0-rc.2.js>  \n  Minified build for production: <https://fb.me/react-15.0.0-rc.2.min.js>  \n* **React with Add-Ons**  \n  Dev build with warnings: <https://fb.me/react-with-addons-15.0.0-rc.2.js>  \n  Minified build for production: <https://fb.me/react-with-addons-15.0.0-rc.2.min.js>  \n* **React DOM** (include React in the page before React DOM)  \n  Dev build with warnings: <https://fb.me/react-dom-15.0.0-rc.2.js>  \n  Minified build for production: <https://fb.me/react-dom-15.0.0-rc.2.min.js>  \n",
        "type": "MarkdownRemark",
        "contentDigest": "7589438c1e428806e9dffdb24b71567a",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v15.0 Release Candidate 2",
        "author": [
          "zpao"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2016-03-16-react-v15-rc2.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2016-03-16-react-v15-rc2.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2016-03-16-react-v15-rc2.md",
      "fields": {
        "date": "2016-03-15T16:00:00.000Z",
        "slug": "/blog/2016/03/16/react-v15-rc2.html",
        "path": "blog/2016-03-16-react-v15-rc2.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2016-03-29-react-v0.14.8.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2016-03-29-react-v0.14.8.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2016-03-29-react-v0.14.8.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v0.14.8\"\nauthor: [gaearon]\n---\n\nWe have already released two release candidates for React 15, and the final version is coming soon.\n\nHowever [Ian Christian Myers](https://github.com/iancmyers) discovered a memory leak related to server rendering in React 0.14 and [contributed a fix](https://github.com/facebook/react/pull/6060). While this memory leak has already been fixed in a different way in the React 15 release candidates, we decided to cut another 0.14 release that contains just this fix.\n\nThe release is now available for download:\n\n* **React**  \n  Dev build with warnings: <https://fb.me/react-0.14.8.js>  \n  Minified build for production: <https://fb.me/react-0.14.8.min.js>  \n* **React with Add-Ons**  \n  Dev build with warnings: <https://fb.me/react-with-addons-0.14.8.js>  \n  Minified build for production: <https://fb.me/react-with-addons-0.14.8.min.js>  \n* **React DOM** (include React in the page before React DOM)  \n  Dev build with warnings: <https://fb.me/react-dom-0.14.8.js>  \n  Minified build for production: <https://fb.me/react-dom-0.14.8.min.js>  \n* **React DOM Server** (include React in the page before React DOM Server)  \n  Dev build with warnings: <https://fb.me/react-dom-server-0.14.8.js>  \n  Minified build for production: <https://fb.me/react-dom-server-0.14.8.min.js>\n\nWe've also published version `0.14.8` of the `react`, `react-dom`, and addons packages on npm and the `react` package on bower.\n\n- - -\n\n## Changelog\n\n### React\n- Fixed memory leak when rendering on the server\n",
        "type": "MarkdownRemark",
        "contentDigest": "ae6dd308d50958ff6036a2bf8616974a",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.14.8",
        "author": [
          "gaearon"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2016-03-29-react-v0.14.8.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2016-03-29-react-v0.14.8.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2016-03-29-react-v0.14.8.md",
      "fields": {
        "date": "2016-03-28T16:00:00.000Z",
        "slug": "/blog/2016/03/29/react-v0.14.8.html",
        "path": "blog/2016-03-29-react-v0.14.8.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2016-04-08-react-v15.0.1.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2016-04-08-react-v15.0.1.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2016-04-08-react-v15.0.1.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v15.0.1\"\nauthor: [zpao]\n---\n\nYesterday afternoon we shipped v15.0.0 and quickly got some feedback about a couple of issues. We apologize for these problems and we've been working since then to make sure we get fixes into your hands as quickly as possible.\n\nThe first of these issues is related to the removal of an undocumented API. This API was added to enable [JSX Spread Attributes](/docs/jsx-spread.html) in our JS compile tools (react-tools, JSXTransformer) before `Object.assign` was standard. When we stopped supporting these tools last year, we kept the API there to catch the longer tail of people using those tools. Meanwhile we moved to using Babel and encouraged others to do the same. Babel will typically compile the spread use to an `_extends` helper, which will use `Object.assign`. We did not properly research other compilation tools before deciding to remove the API in v15. Specifically, TypeScript and coffee-react are two popular packages using `React.__spread`, as well as reactify which still makes use react-tools. In order to make sure that code compiled with these tools is not broken, we will be restoring the `React.__spread` API and adding a warning. It will be removed in the future so if you maintain a project making using of it, we encourage you to compile to `Object.assign` directly or a similar helper function.\n\nThe second issue resulted in cursor position being lost in controlled inputs. We merged a pull request earlier this week to fix a separate regression from v0.14. Our goal was to target `<option>` elements but we ended up targeting all interactions with `value` properties. Unfortunately we didn't test it as thoroughly as we thought. We backed out the offending change and fixed the issue in different way which doesn't have the same problem.\n\nWe apologize if you installed 15.0.0 and have encountered these issues yourselves.\n\nAs usual, you can get install the `react` package via npm or download a browser bundle.\n\n* **React**  \n  Dev build with warnings: <https://fb.me/react-15.0.1.js>  \n  Minified build for production: <https://fb.me/react-15.0.1.min.js>  \n* **React with Add-Ons**  \n  Dev build with warnings: <https://fb.me/react-with-addons-15.0.1.js>  \n  Minified build for production: <https://fb.me/react-with-addons-15.0.1.min.js>  \n* **React DOM** (include React in the page before React DOM)  \n  Dev build with warnings: <https://fb.me/react-dom-15.0.1.js>  \n  Minified build for production: <https://fb.me/react-dom-15.0.1.min.js>  \n\n## Changelog\n\n### React\n- Restore `React.__spread` API to unbreak code compiled with some tools making use of this undocumented API. It is now officially deprecated.  \n  <small>[@zpao](https://github.com/zpao) in [#6444](https://github.com/facebook/react/pull/6444)</small>\n\n### ReactDOM\n- Fixed issue resulting in loss of cursor position in controlled inputs.  \n  <small>[@sophiebits](https://github.com/sophiebits) in [#6449](https://github.com/facebook/react/pull/6449)</small>\n",
        "type": "MarkdownRemark",
        "contentDigest": "12de03aeb6712dc66cb5154844a1a622",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v15.0.1",
        "author": [
          "zpao"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2016-04-08-react-v15.0.1.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2016-04-08-react-v15.0.1.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2016-04-08-react-v15.0.1.md",
      "fields": {
        "date": "2016-04-07T16:00:00.000Z",
        "slug": "/blog/2016/04/08/react-v15.0.1.html",
        "path": "blog/2016-04-08-react-v15.0.1.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2016-07-11-introducing-reacts-error-code-system.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2016-07-11-introducing-reacts-error-code-system.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2016-07-11-introducing-reacts-error-code-system.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Introducing React's Error Code System\"\nauthor: [keyanzhang]\n---\n\nBuilding a better developer experience has been one of the things that React deeply cares about, and a crucial part of it is to detect anti-patterns/potential errors early and provide helpful error messages when things (may) go wrong. However, most of these only exist in development mode; in production, we avoid having extra expensive assertions and sending down full error messages in order to reduce the number of bytes sent over the wire.\n\nPrior to this release, we stripped out error messages at build-time and this is why you might have seen this message in production:\n\n> Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\n\nIn order to make debugging in production easier, we're introducing an Error Code System in [15.2.0](https://github.com/facebook/react/releases/tag/v15.2.0). We developed a [gulp script](https://github.com/facebook/react/blob/master/scripts/error-codes/gulp-extract-errors.js) that collects all of our `invariant` error messages and folds them to a [JSON file](https://github.com/facebook/react/blob/master/scripts/error-codes/codes.json), and at build-time Babel uses the JSON to [rewrite](https://github.com/facebook/react/blob/master/scripts/error-codes/replace-invariant-error-codes.js) our `invariant` calls in production to reference the corresponding error IDs. Now when things go wrong in production, the error that React throws will contain a URL with an error ID and relevant information. The URL will point you to a page in our documentation where the original error message gets reassembled.\n\nWhile we hope you don't see errors often, you can see how it works [here](/docs/error-decoder.html?invariant=109&args[]=Foo). This is what the same error from above will look like:\n\n> Minified React error #109; visit https://reactjs.org/docs/error-decoder.html?invariant=109&args[]=Foo for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\n\nWe do this so that the developer experience is as good as possible, while also keeping the production bundle size as small as possible. This feature shouldn't require any changes on your side — use the `min.js` files in production or bundle your application code with `process.env.NODE_ENV === 'production'` and you should be good to go!\n",
        "type": "MarkdownRemark",
        "contentDigest": "5b6dcf8b5becdc751139e94018c95e3b",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Introducing React's Error Code System",
        "author": [
          "keyanzhang"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2016-07-11-introducing-reacts-error-code-system.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2016-07-11-introducing-reacts-error-code-system.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2016-07-11-introducing-reacts-error-code-system.md",
      "fields": {
        "date": "2016-07-10T16:00:00.000Z",
        "slug": "/blog/2016/07/11/introducing-reacts-error-code-system.html",
        "path": "blog/2016-07-11-introducing-reacts-error-code-system.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2017-06-13-react-v15.6.0.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2017-06-13-react-v15.6.0.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2017-06-13-react-v15.6.0.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v15.6.0\"\nauthor: [flarnie]\n---\n\n今天我们发布了 React 15.6.0。由于我们在准备React 16.0，因此我们修复和清理了许多东西。此次发布将继续为后续铺路。\n\n## 提升Inputs\n\n在React 15.6.0，输入框的`onChange`事件稍微可靠了点并能够处理更多边界条件，涵盖以下：\n\n* 当单选按钮被点击但未改变时事件未触发（[issue 1471](https://github.com/facebook/react/issues/1471)）\n* 用方向键（arrow keys）修改`范围（range）`类型的输入框（[issue 554](https://github.com/facebook/react/issues/554)）\n* 在IE 11复制文本到文本框中（[issue 7211](https://github.com/facebook/react/issues/7211)）\n* 在IE 11自动填充（[issue 6614](https://github.com/facebook/react/issues/6614)）\n* 在IE 11中通过'x'键或右键'删除'清空输入框（[issue 6822](https://github.com/facebook/react/issues/6822)）\n* 在IE 11中渲染输入框中已存在字符时事件未触发（[issue 2185](https://github.com/facebook/react/issues/2185)）\n\n感谢[Jason Quense](https://github.com/jquense)以及其他帮助解决上述问题和提出PR的各位。\n\n## 更少嘈杂的弃用警告\n\n我们还为之后的弃用引入了一系列新的警告。这些并不会影响大多数用户，更多细节可以查看下面的修改日志。\n\n自上次发布之后，我们从社区得到了一些有价值的反馈，弃用警告会产生噪音并使得测试失败。**在React 15.6，我们采用`console.warn`而不是`console.error`来对弃用警告进行降级处理**。我们的其他警告将仍使用`console.error`因为他们面对的可能是引发异常的棘手问题。不同于我们其他警告，弃用警告可以延期修复并且不会在发布环节对你的引用造成问题。我们认为降低弃用警告的紧急程度将会让你在下个版本的升级中更为容易。感谢参与这一问题讨论的各位。\n\n---\n\n## 安装\n\n我们推荐使用 [Yarn](https://yarnpkg.com/) 或 [npm](https://www.npmjs.com/) 来管理前端依赖。若你是初次接触包管理器，[Yarn 文档](https://yarnpkg.com/en/docs/getting-started)是一个不错的起点。\n\n通过 Yarn 安装 React，运行：\n\n```bash\nyarn add react@^15.6.0 react-dom@^15.6.0\n```\n\n通过 npm 安装 React，运行：\n\n```bash\nnpm install --save react@^15.6.0 react-dom@^15.6.0\n```\n\n我们推荐如 [webpack](https://webpack.js.org/) 或 [Browserify](http://browserify.org/) 打包器，以让你可以编写模块化代码并将其打包到一起放在一个小的包内以优化加载时间。\n\n记住默认情况下，React 在开发模式下运行会带有额外检查并提供有用的警告。当部署你的应用时，确保其[在生产模式编译](/react/docs/installation.html#development-and-production-versions)。\n\n万一你未使用打包器，我们也提供了一个预先构建好的包在npm上，你可以在你的页面中[通过script标签引入](/react/docs/installation.html#using-a-cdn)：\n\n* **React**<br/>\n  带警告的开发版本: [react/dist/react.js](https://unpkg.com/react@15.6.0/dist/react.js)<br/>\n  用于生产的压缩版本: [react/dist/react.min.js](https://unpkg.com/react@15.6.0/dist/react.min.js)<br/>\n* **React with Add-Ons**<br/>\n  带警告的开发版本: [react/dist/react-with-addons.js](https://unpkg.com/react@15.6.0/dist/react-with-addons.js)<br/>\n  用于生产的压缩版本: [react/dist/react-with-addons.min.js](https://unpkg.com/react@15.5.0/dist/react-with-addons.min.js)<br/>\n* **React DOM** (页面中在React DOM之前引入React) <br/>\n  带警告的开发版本: [react-dom/dist/react-dom.js](https://unpkg.com/react-dom@15.6.0/dist/react-dom.js)<br/>\n  用于生产的压缩版本: [react-dom/dist/react-dom.min.js](https://unpkg.com/react-dom@15.6.0/dist/react-dom.min.js)<br/>\n* **React DOM Server** (页面中在 React DOM Server 之前引入 React)<br/>\n  带警告的开发版本: [react-dom/dist/react-dom-server.js](https://unpkg.com/react-dom@15.6.0/dist/react-dom-server.js)<br/>\n  用于生产的压缩版本: [react-dom/dist/react-dom-server.min.js](https://unpkg.com/react-dom@15.6.0/dist/react-dom-server.min.js)<br/>\n\n我们还在 npm 上发布了 `react`，`react-dom` 及附件包的`15.6.0` 版本以及在bower上的 `react` 包。\n\n------------\n\n## 修改日志\n\n## 15.6.0 (June 13, 2017)\n\n### React\n\n* 采用`console.warn`而不是`console.error`来降级处理弃用警告。([@flarnie](https://github.com/flarnie) 在 [#9753](https://github.com/facebook/react/pull/9753) 的提交)\n* 为`React.createClass`增加弃用警告。将用户指向`create-react-class`。([@flarnie](https://github.com/flarnie) 在 [#9771](https://github.com/facebook/react/pull/9771) 的提交)\n* 增加弃用警告并为`React.DOM`工厂辅助方法分离为新模块。([@nhunzaker](https://github.com/nhunzaker) 在 [#8356](https://github.com/facebook/react/pull/8356) 的提交)\n* `React.createMixin`的弃用警告辅助方法将不再使用。([@aweary](https://github.com/aweary) 在 [#8853](https://github.com/facebook/react/pull/8853) 的提交)\n\n### React DOM\n\n* 在`style`属性中增加CSS变量支持。 ([@aweary](https://github.com/aweary) 在 [#9302](https://github.com/facebook/react/pull/9302) 的提交)\n* 增加CSS网格(Grid)样式属性支持。([@ericsakmar](https://github.com/ericsakmar) 在 [#9185](https://github.com/facebook/react/pull/9185) 的提交)\n* 修复输入框改变可变值类型异常。([@nhunzaker](https://github.com/mhunzaker) 在 [#9806](https://github.com/facebook/react/pull/9806) 的提交)\n* 修复在某些输入场景下`onChange`未触发的问题。([@jquense](https://github.com/jquense) 在 [#8575](https://github.com/facebook/react/pull/8575) 的提交)\n* 修复控制数字输入框错误允许期间的异常。([@nhunzaker](https://github.com/nhunzaker) 在 [#9584](https://github.com/facebook/react/pull/9584) 的提交)\n* 修复性能记录(performance entry)被清除的bug。([@chrisui](https://github.com/chrisui) 在 [#9451](https://github.com/facebook/react/pull/9451) 的提交)\n",
        "type": "MarkdownRemark",
        "contentDigest": "d50608bee409ac86ca92d04bd7d4fa6d",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v15.6.0",
        "author": [
          "flarnie"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2017-06-13-react-v15.6.0.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2017-06-13-react-v15.6.0.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2017-06-13-react-v15.6.0.md",
      "fields": {
        "date": "2017-06-12T16:00:00.000Z",
        "slug": "/blog/2017/06/13/react-v15.6.0.html",
        "path": "blog/2017-06-13-react-v15.6.0.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2017-07-26-error-handle-in-react-16.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2017-07-26-error-handle-in-react-16.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2017-07-26-error-handle-in-react-16.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Error Handle in React 16\"\nauthor: [gaearon]\n---\n\n随着React 16发布在即，我们打算介绍一些在组件内部React如何处理JavaScript错误。这些改变包含在React 16的beta版本中，并将成为React 16的一部分。\n\n**顺便一提，[你可以尝试我们刚发布了React 16的第一个测试版本！](https://github.com/facebook/react/issues/10294)**\n\n## React 15及之前的行为\n\n过去，组件内部的JavaScript异常曾经常阻断了React内部状态并导致其在下一次渲染时[触发了隐藏的错误](https://github.com/facebook/react/issues/6895)。这些错误常常是由应用程序代码中的早期错误所引起的，但React并未提供一种在组件里优雅处理的方式，也不会从异常中回复。\n\n## 错误边界介绍\n\nUI部分的JavaScript异常不应阻断整个应用。为了为React用户解决这一问题，React 16引入了“错误边界（error boundary”）”这一新概念。\n\n错误边界作为React组件，用以**捕获在子组件树种任何地方的JavaScript异常，打印这些错误，并展示备用UI**而非让组件树崩溃。错误边界会捕获渲染期间，在生命周期方法中以及在其整个树的构造函数中的异常。\n\n若定义一个称为`componentDidCatch(error, info)`的新生命周期方法，则类组件将成为错误边界：\n\n```javascript\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  componentDidCatch(error, info) {\n    // Display fallback UI\n    this.setState({ hasError: true });\n    // You can also log the error to an error reporting service\n    logErrorToMyService(error, info);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n    return this.props.children;\n  }\n}\n```\n\n而后可作为一个正常组件进行使用：\n\n```javascript\n<ErrorBoundary>\n  <MyWidget />\n</ErrorBoundary>\n```\n\n`componentDidCatch()`方法的作用类似于JavaScript的`catch {}`，但仅针对组件。仅有类组件可以成为错误边界。实际上，大多数时间你会想仅声明一次错误边界组件并在整个应用中使用。\n \n注意，**错误边界仅可以捕获树中后代的组件错误**。一个错误边界无法捕获其自身的错误。若错误边界尝试渲染错误信息失败，则该错误会传递至上方最接近的错误边界。而这也类似JavaScript中的`catch {}`块的工作方式。\n\n## Live Demo\n\n查看[在React 16测试版](https://github.com/facebook/react/issues/10294)中[关于如何声明和使用错误边界的例子](https://codepen.io/gaearon/pen/wqvxGa?editors=0010)。\n\n## 放置错误边界\n\n错误边界的粒度完全取决于你。你可能将其包装在顶层路由组件中并为用户展示“内部异常（Something went wrong）”的信息，类似于服务端框架处理崩溃。你可能也会在错误边界包装一些内部组件用以保护不会让应用的余下部分不会崩溃。\n\n## 未捕获错误的新行为\n\n这一改变有一个重要的意义。**作为React 16中不是由错误边界引起的错误将会使得整个React组件树被卸载。**\n\n我们曾争论这一决定，但在我们的经验中，将损坏的UI留在那里要比完全移除它要糟糕得多。例如，在类似Messenger这样的产品中留下可见的损坏的UI可能会导致一些人将信息发送给错误的人。类似地，对于支付应用来说显示错误的金额要比什么都不显示糟糕得多。\n\n\n这一改变意味着随着迁移至React 16，你们将会发现之前未留意过的应用程序存在的崩溃。增加错误边界能够让你在发生异常时提供更好的用户体验。\n\n例如，Facebook Messenger将边栏，信息面板，会话日志以及消息输入的内容包装到单独的错误边界中。若其中某一个组件的UI崩溃了，其余的仍能正常交互。\n\n我们也鼓励你使用JS错误报告服务（或自己构建）以让你能够了解在产品中产生的未处理的异常，并修复它们。\n\n## 组件栈追踪\n\nReact 16会打印所有在开发环节中发生在渲染过程的错误到控制台，即使应用程序意外地将他们吞了。除了错误信息和JavaScript堆栈，其还提供了组件栈追踪。闲杂你可以在组件树中精确地查看错误产生的地方：\n\n<img src=\"/react/img/blog/error-boundaries-stack-trace.png\" alt=\"Component stack traces in error message\" />\n\n你也可以在组件堆栈中查看文件名和行数。这一功能在[Create React App 项目](https://github.com/facebookincubator/create-react-app)中默认开启：\n\n<img\nsrc=\"/react/img/blog/error-boundaries-stack-trace-line-numbers.png\" alt=\"Component stack traces with line numbers in error message\" />\n\n若你不使用Create React App，你可以手动添加[该插件](https://www.npmjs.com/package/babel-plugin-transform-react-jsx-source) 到你的Babel配置中。注意其仅能在开发环境中使用并**禁止在生产环境中使用。**\n\n## 为何不使用`try` / `catch`？\n\n`try` / `catch` 很好但其仅适用于命令式的代码：\n\n```javascript\ntry {\n  showButton();\n} catch (error) {\n  // ...\n}\n```\n\n然而，React组件是声明式的，并指定了什么应该被渲染：\n\n```javascript\n<Button />\n```\n\n错误边界保留了React声明式的特性，同时其行为和你期望的一直。例如，即使一个在`componentDidUpdate`周期由组件树内部底层的`setState`导致的错误，其仍能够正确地传递到最近的错误边界。\n\n## 自React 15开始的命名变更\n\nReact 15 在不同的方法名下为错误边界包含了一个非常有限的支持：`unstable_handleError`。该方法不再生效，同时自React 16第一个测试版本发布开始，你需要在你的代码中将其修改为`componentDidCatch`。\n\n为应对这一改变，我们已提供了[一份 codemod](https://github.com/reactjs/react-codemod#error-boundaries)以用于自动地迁移你的代码。\n",
        "type": "MarkdownRemark",
        "contentDigest": "736a7d3809ae1a50212ba4b4f3f96a8c",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Error Handle in React 16",
        "author": [
          "gaearon"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2017-07-26-error-handle-in-react-16.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2017-07-26-error-handle-in-react-16.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2017-07-26-error-handle-in-react-16.md",
      "fields": {
        "date": "2017-07-25T16:00:00.000Z",
        "slug": "/blog/2017/07/26/error-handle-in-react-16.html",
        "path": "blog/2017-07-26-error-handle-in-react-16.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2017-07-26-error-handling-in-react-16.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2017-07-26-error-handling-in-react-16.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2017-07-26-error-handling-in-react-16.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Error Handling in React 16\"\nauthor: [gaearon]\n---\n\nAs React 16 release is getting closer, we would like to announce a few changes to how React handles JavaScript errors inside components. These changes are included in React 16 beta versions, and will be a part of React 16.\n\n**By the way, [we just released the first beta of React 16 for you to try!](https://github.com/facebook/react/issues/10294)**\n\n## Behavior in React 15 and Earlier\n\nIn the past, JavaScript errors inside components used to corrupt React’s internal state and cause it to [emit](https://github.com/facebook/react/issues/4026) [cryptic](https://github.com/facebook/react/issues/6895) [errors](https://github.com/facebook/react/issues/8579) on next renders. These errors were always caused by an earlier error in the application code, but React did not provide a way to handle them gracefully in components, and could not recover from them.\n\n## Introducing Error Boundaries\n\nA JavaScript error in a part of the UI shouldn’t break the whole app. To solve this problem for React users, React 16 introduces a new concept of an “error boundary”.\n\nError boundaries are React components that **catch JavaScript errors anywhere in their child component tree, log those errors, and display a fallback UI** instead of the component tree that crashed. Error boundaries catch errors during rendering, in lifecycle methods, and in constructors of the whole tree below them.\n\nA class component becomes an error boundary if it defines a new lifecycle method called `componentDidCatch(error, info)`:\n\n```js{7-12,15-18}\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  componentDidCatch(error, info) {\n    // Display fallback UI\n    this.setState({ hasError: true });\n    // You can also log the error to an error reporting service\n    logErrorToMyService(error, info);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n    return this.props.children;\n  }\n}\n```\n\nThen you can use it as a regular component:\n\n```js\n<ErrorBoundary>\n  <MyWidget />\n</ErrorBoundary>\n```\n\nThe `componentDidCatch()` method works like a JavaScript `catch {}` block, but for components. Only class components can be error boundaries. In practice, most of the time you’ll want to declare an error boundary component once and use it throughout your application.\n\nNote that **error boundaries only catch errors in the components below them in the tree**. An error boundary can’t catch an error within itself. If an error boundary fails trying to render the error message, the error will propagate to the closest error boundary above it. This, too, is similar to how `catch {}` block works in JavaScript.\n\n## Live Demo\n\nCheck out [this example of declaring and using an error boundary](https://codepen.io/gaearon/pen/wqvxGa?editors=0010) with [React 16 beta](https://github.com/facebook/react/issues/10294).\n\n## Where to Place Error Boundaries\n\nThe granularity of error boundaries is up to you. You may wrap top-level route components to display a “Something went wrong” message to the user, just like server-side frameworks often handle crashes. You may also wrap individual widgets in an error boundary to protect them from crashing the rest of the application.\n\n## New Behavior for Uncaught Errors\n\nThis change has an important implication. **As of React 16, errors that were not caught by any error boundary will result in unmounting of the whole React component tree.**\n\nWe debated this decision, but in our experience it is worse to leave corrupted UI in place than to completely remove it. For example, in a product like Messenger leaving the broken UI visible could lead to somebody sending a message to the wrong person. Similarly, it is worse for a payments app to display a wrong amount than to render nothing.\n\nThis change means that as you migrate to React 16, you will likely uncover existing crashes in your application that have been unnoticed before. Adding error boundaries lets you provide better user experience when something goes wrong.\n\nFor example, Facebook Messenger wraps content of the sidebar, the info panel, the conversation log, and the message input into separate error boundaries. If some component in one of these UI areas crashes, the rest of them remain interactive.\n\nWe also encourage you to use JS error reporting services (or build your own) so that you can learn about unhandled exceptions as they happen in production, and fix them.\n\n## Component Stack Traces\n\nReact 16 prints all errors that occurred during rendering to the console in development, even if the application accidentally swallows them. In addition to the error message and the JavaScript stack, it also provides component stack traces. Now you can see where exactly in the component tree the failure has happened:\n\n<img src=\"../img/blog/error-boundaries-stack-trace.png\" alt=\"Component stack traces in error message\" style=\"width: 100%;\">\n\nYou can also see the filenames and line numbers in the component stack trace. This works by default in [Create React App](https://github.com/facebookincubator/create-react-app) projects:\n\n<img src=\"../img/blog/error-boundaries-stack-trace-line-numbers.png\" alt=\"Component stack traces with line numbers in error message\" style=\"width: 100%;\">\n\nIf you don’t use Create React App, you can add [this plugin](https://www.npmjs.com/package/babel-plugin-transform-react-jsx-source) manually to your Babel configuration. Note that it’s intended only for development and **must be disabled in production**.\n\n## Why Not Use `try` / `catch`?\n\n`try` / `catch` is great but it only works for imperative code:\n\n```js\ntry {\n  showButton();\n} catch (error) {\n  // ...\n}\n```\n\nHowever, React components are declarative and specify *what* should be rendered:\n\n```js\n<Button />\n```\n\nError boundaries preserve the declarative nature of React, and behave as you would expect. For example, even if an error occurs in a `componentDidUpdate` hook caused by a `setState` somewhere deep in the tree, it will still correctly propagate to the closest error boundary.\n\n## Naming Changes from React 15\n\nReact 15 included a very limited support for error boundaries under a different method name: `unstable_handleError`. This method no longer works, and you will need to change it to `componentDidCatch` in your code starting from the first 16 beta release.\n\nFor this change, we’ve provided [a codemod](https://github.com/reactjs/react-codemod#error-boundaries) to automatically migrate your code.\n",
        "type": "MarkdownRemark",
        "contentDigest": "0b9d80265c9c4c7448ba84eae722777c",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Error Handling in React 16",
        "author": [
          "gaearon"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2017-07-26-error-handling-in-react-16.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2017-07-26-error-handling-in-react-16.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2017-07-26-error-handling-in-react-16.md",
      "fields": {
        "date": "2017-07-25T16:00:00.000Z",
        "slug": "/blog/2017/07/26/error-handling-in-react-16.html",
        "path": "blog/2017-07-26-error-handling-in-react-16.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2017-09-08-dom-attributes-in-react-16.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2017-09-08-dom-attributes-in-react-16.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2017-09-08-dom-attributes-in-react-16.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"DOM Attributes in React 16\"\nauthor: [gaearon]\n---\n\n过去，React 习惯于忽视未知的 DOM 属性。若你在 JSX 中写了一个 React 无法识别的元素， React 将会忽略他。例如这样：\n\n```js\n// Your code:\n<div mycustomattribute=\"something\" />\n```\n\n在 React 15 中将会在 DOM 节点中渲染一个空的 div:\n\n```js\n// React 15 output:\n<div />\n```\n\n在 React 16 中，我们做了一些改变。未知特性会在 DOM 节点的末尾：\n\n```js\n// React 16 output:\n<div mycustomattribute=\"something\" />\n```\n\n## 为何要改变？\n\nReact 为 DOM 提供了以 JavaScript 为核心的 API。由于 React 组件总是带有自定义以及 DOM 相关的 props，其使得 React 使用小驼峰命名会更易理解，类似于 DOM 的 API：\n\n```js\n<div tabIndex=\"-1\" />\n```\n\n这并未改变。然而，过去这一方式强制我们在库中维护一个合法的 DOM 元素白名单：\n\n```js\n// ...\nsummary: 'summary',\ntabIndex: 'tabindex'\ntarget: 'target',\ntitle: 'title',\n// ...\n```\n\n这一方是有两个弊端：\n\n* 你无法[传自定义属性](https://github.com/facebook/react/issues/140)。而这对于未标准化的浏览器相关的属性，尝试新的DOM API以及集成一些独特的第三方库。\n\n* 属性列表不断地增长，但 大部分 React 独有的属性命名已在 DOM 中合法。移除白名单的大部分属性能够稍微减少库的大小。\n\n随着新版本发布，这些问题都将解决。在 React 16 中，你可以传递自定义属性给所有的 HTML 和 SVG 元素，同时 React 也不必在将所有的属性白名单包含进生产版本里。\n\n**注意，对于已知属性，你仍需要使用规范的 React 命名。**\n\n```js\n// Yes, please\n<div tabIndex=\"-1\" />\n\n// Warning: Invalid DOM property `tabindex`. Did you mean `tabIndex`?\n<div tabindex=\"-1\" />\n```\n\n换句话说，你在 React 中使用 DOM 组件的方式并没有改变，但现在你有了新方式。\n\n## 应该在属性中存储数据？\n\n不。我们不鼓励奖数据存放在 DOM 属性中。即使你不得不，使用 `data-`\n可能会是更好的方式，但大多数情况下数据应被保存在 React 组件状态或额外存储。\n\n然而，若你需要使用非标准化的或是新的 DOM 属性那新特性将会十分方便，或若你需要与依赖这些新特性的第三方库进行整合。\n\n## Data 和 ARIA 属性\n\n和之前一样，React 能够让你随意地传递 `data-` 和 `aria-`：\n\n```js\n<div data-foo=\"42\" />\n<button aria-label=\"Close\" onClick={onClose} />\n```\n\n这并没有改变。\n\n[可访问性](/react/docs/accessibility.html) 非常重要，因此即使 React 16 能够传递任何属性，其仍然会在开发模式下验证 `aria-` props 是否正确命名，就像之前 React 15 一样。\n\n## 迁移路径\n\n自一年多前的 [React 15.2.0](https://github.com/facebook/react/releases/tag/v15.2.0) 发布，我们已将[关于未知属性的一个警告](/react/warnings/unknown-prop.html) 包含在内。大量的第三方库也已进行代码升级。若你的应用在 React 15.2.0 或更高版本中并未产生警告，那么这一改变并不需要修改你应用中的代码。\n\n若你仍意外地传递非 DOM props 到 DOM 组件中，在 React 16 你将会在 DOM 中开始看到这些特性，例如：\n\n```js\n<div myData='[Object object]' />\n```\n\n这在一定程度上是安全的（浏览器将会忽略他们）但当你看到他们时，我们建议你修复这些问题。一个潜在的问题是若你传递一个实现了自定义的 `toString()` 或 `valueOf()` 方法的对象将会抛出异常。另一个可能的问题是合法的 HTML 元素如 `align` 和 `valign` 现在会被传递给 DOM。它们过去则是被忽略，因为React 并不支持它们。\n\n为避免这些问题，在升级到 React 16 之前，我们建议你修复你在 React 15中看到的这些警告。\n\n## 变更细节\n\n我们已做了一些其他调整已让行为能够更加可预测并能致力于让你不犯错。我们无法预期这些改变可能会破坏实际应用。\n\n**这些变更仅影响 DOM 组件 如 `<div>`，而不会影响你自己的组件。**\n\n下列是变更的细节。\n\n* **带有字符，数字或对象值得未知属性：**\n  \n    ```js\n    <div mycustomattribute=\"value\" />\n    <div mycustomattribute={42} />\n    <div mycustomattribute={myObject} />\n    ```\n\n    React 15：警告并忽略。\n    React 16：将值转换成字符串并传递给组件。\n\n    *注意：以 `on` 开始的特性并不会被传递而是抛出异常因为这可能是一个潜在的安全漏洞。*\n\n* **带有不同规范的 React 命名的已知属性：**\n  \n    ```js\n    <div tabindex=\"-1\" />\n    <div class=\"hi\" />\n    ```\n\n    React 15：警告并忽略。\n    React 16：警告但会将其转换为字符串并传递给组件。\n\n    *注意：永远对支持的特性使用规范的 React 命名规则。*\n\n* **带有布尔值的非布尔值特性：**\n\n    ```js\n    <div className={false} />\n    ```\n\n    React 15：将布尔值转换为字符串并传递给组件\n    React 16：警告并忽略。\n\n* **带有函数的非事件特性：**\n\n    ```js\n    <div className={function() {}} />\n    ```\n\n    React 15：将函数转换为字符串并传递给组件。\n    React 16：警告并忽略。\n\n* **带有 Symbol 的属性：**\n\n    ```js\n    <div className={Symbol('foo')} />\n    ```\n\n    React 15：崩溃。\n    React 16：警告并忽略。\n\n* **带有 `NaN` 值的属性：**\n\n    ```js\n    <div tabIndex={0 / 0} />\n    ```\n\n    React 15：将 `NaN` 转换为字符串并传递给组件。\n    React 16：警告并忽略。\n\n随这一测试版的发布，我们也为所有已知元素[创建一个自动生成的表单](https://github.com/facebook/react/blob/master/fixtures/attribute-behavior/AttributeTableSnapshot.md)以追踪潜在的问题。\n\n## 试一试\n\n你可以在 [CodePen](https://codepen.io/gaearon/pen/gxNVdP?editors=0010) 尝试这些变更。其使用 React 16 RC 版本，你也可以 [在你的项目中帮助我们测试 RC](https://github.com/facebook/react/issues/10294)。\n\n## 感谢\n\n这一努力大部分由一位 [Nathan Hunzaker](https://github.com/nhunzaker) 所推动， [其是一位高产的 React 外部贡献者](https://github.com/facebook/react/pulls?q=is%3Apr+author%3Anhunzaker+is%3Aclosed)。\n\n你可以在过去一年的历程里在下列几个 PR 的这个问题上发现他的工作：\n[#6459](https://github.com/facebook/react/pull/6459)、[#7311](https://github.com/facebook/react/pull/7311)、[#10229](https://github.com/facebook/react/pull/10229)、[#10397](https://github.com/facebook/react/pull/10397)、[#10385](https://github.com/facebook/react/pull/10385) 和 [#10470](https://github.com/facebook/react/pull/10470)。\n\n在一个受欢迎的项目中核心的调整需要花费大量时间和研究。Nathan 展示了坚定的决心并承诺完成这一调整，我们非常感谢他的这一工作及其他的贡献。\n\n我们也想要感谢 [Brandon Dail](https://github.com/aweary) 和 [Jason Quense](https://github.com/jquense) 在这一年中无私地帮助维护 React 项目。\n\n## 未来计划\n\n我们还未调整 [自定义元素](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Custom_Elements) 如何在 React 16 中工作，但关于设置属性而非特性已经有了一些[讨论](https://github.com/facebook/react/issues/7249)，我们可能在 React 17 中在回过头来看看。若你愿意提供帮助，随时都可以来提。\n",
        "type": "MarkdownRemark",
        "contentDigest": "76749cd603a045486dc2011cc637f11e",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "DOM Attributes in React 16",
        "author": [
          "gaearon"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2017-09-08-dom-attributes-in-react-16.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2017-09-08-dom-attributes-in-react-16.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2017-09-08-dom-attributes-in-react-16.md",
      "fields": {
        "date": "2017-09-07T16:00:00.000Z",
        "slug": "/blog/2017/09/08/dom-attributes-in-react-16.html",
        "path": "blog/2017-09-08-dom-attributes-in-react-16.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2017-09-25-react-v15.6.2.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2017-09-25-react-v15.6.2.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2017-09-25-react-v15.6.2.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v15.6.2\"\nauthor: [nhunzaker]\n---\n\n今天我们发布了 React 15.6.2。在 15.6.1，我们为产生的一些意外结果的变更事件和输入进行了修复。这些问题已经被消除，同时我们也包含了一些用于提高 React 跨浏览器稳定性的补丁。\n\n此外，15.6.2 增加了 [`controlList`](https://developers.google.com/web/updates/2017/03/chrome-58-media-updates#controlslist) 特性，以及 CSS columns 不再需要添加 `px` 后缀。\n\n## 安装\n\n我们推荐使用 [Yarn](https://yarnpkg.com/)或 [npm](https://www.npmjs.com/)来管理前端依赖。若你是初次接触包管理器，[Yarn 文档](https://yarnpkg.com/en/docs/getting-started)是一个不错的起点。\n\n通过Yarn安装React，运行：\n\n```bash\nyarn add react@^15.6.0 react-dom@^15.6.0\n```\n\n通过npm安装React，运行：\n\n```bash\nnpm install --save react@^15.6.0 react-dom@^15.6.0\n```\n\n我们推荐如 [webpack](https://webpack.js.org/) 或 [Browserify](http://browserify.org/) 打包器，以让你可以编写模块化代码并将其打包到一起放在一个小的包内以优化加载时间。\n\n记住默认情况下，React 在开发模式下运行会带有额外检查并提供有用的警告。当部署你的应用时，确保其[在生产模式编译](/react/docs/installation.html#development-and-production-versions)。\n\n万一你未使用打包器，我们也提供了一个预先构建好的包在npm上，你可以在你的页面中[通过script标签引入](/react/docs/installation.html#using-a-cdn)：\n\n* **React**<br/>\n  带警告的开发版本: [react/dist/react.js](https://unpkg.com/react@15.6.2/dist/react.js)<br/>\n  用于生产的压缩版本: [react/dist/react.min.js](https://unpkg.com/react@15.6.2/dist/react.min.js)<br/>\n* **React with Add-Ons**<br/>\n  带警告的开发版本: [react/dist/react-with-addons.js](https://unpkg.com/react@15.6.2/dist/react-with-addons.js)<br/>\n  用于生产的压缩版本: [react/dist/react-with-addons.min.js](https://unpkg.com/react@15.5.2/dist/react-with-addons.min.js)<br/>\n* **React DOM** (页面中在React DOM之前引入React) <br/>\n  带警告的开发版本: [react-dom/dist/react-dom.js](https://unpkg.com/react-dom@15.6.2/dist/react-dom.js)<br/>\n  用于生产的压缩版本: [react-dom/dist/react-dom.min.js](https://unpkg.com/react-dom@15.6.2/dist/react-dom.min.js)<br/>\n* **React DOM Server** (页面中在 React DOM Server 之前引入 React)<br/>\n  带警告的开发版本: [react-dom/dist/react-dom-server.js](https://unpkg.com/react-dom@15.6.2/dist/react-dom-server.js)<br/>\n  用于生产的压缩版本: [react-dom/dist/react-dom-server.min.js](https://unpkg.com/react-dom@15.6.2/dist/react-dom-server.min.js)<br/>\n\n我们还在 npm 上发布了 `react`，`react-dom` 及附件包的`15.6.2` 版本以及在bower上发布了 `react` 包。\n\n---\n\n## Changelog\n\n## 15.6.2 (September 25, 2017)\n\n### 所有包\n\n* 从 BSD + Patents 切换到 MIT 协议\n\n### React DOM\n\n* 修复了当 `document.documentMode` 被修改时，在其他浏览器触发了 IE检测而中断了变更事件的 bug。（[@aweary](https://github.com/aweary) 在 [#10032](https://github.com/facebook/react/pull/10032) 提及）\n* CSS Columns 会被认为是无单位的数字。（[@aweary](https://github.com/aweary) 在 [#10115](https://github.com/facebook/react/pull/10115) 提及）\n* Fix bug in QtWebKit when wrapping synthetic events in proxies. ([@walrusfruitcake](https://github.com/walrusfruitcake) in [#10115](https://github.com/facebook/react/pull/10011))\n* 修复了在 QtWebKit下合成事件包装在 proxies 的 bug。（[@walrusfruitcake](https://github.com/walrusfruitcake) 在 [#10115](https://github.com/facebook/react/pull/10011) 提及）\n* 在开发环境下阻止事件处理器接受额外参数。（[@aweary](https://github.com/aweary) 在 [#10115](https://github.com/facebook/react/pull/8363) 提及）\n* 修复带有 `defaultChecked` 单选框（radio）不触发 `onChange` 的情况。（[@jquense](https://github.com/jquense) 在 [#10156](https://github.com/facebook/react/pull/10156) 提及）\n* 将 `controlList` 添加到 DOM 特性白名单（[@nhunzaker](https://github.com/nhunzaker) 在 [#9940](https://github.com/facebook/react/pull/9940) 提及）\n* 修复了开发环境下当在构造函数里创建带有 ref 的元素并未抛出异常。（[@iansu](https://github.com/iansu) 在 [#10025](https://github.com/facebook/react/pull/10025) 提及）\n",
        "type": "MarkdownRemark",
        "contentDigest": "55702cd394ab67d15c5a1fc84282bbe3",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v15.6.2",
        "author": [
          "nhunzaker"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2017-09-25-react-v15.6.2.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2017-09-25-react-v15.6.2.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2017-09-25-react-v15.6.2.md",
      "fields": {
        "date": "2017-09-24T16:00:00.000Z",
        "slug": "/blog/2017/09/25/react-v15.6.2.html",
        "path": "blog/2017-09-25-react-v15.6.2.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2017-12-07-introducing-the-react-rfc-process.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2017-12-07-introducing-the-react-rfc-process.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2017-12-07-introducing-the-react-rfc-process.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Introducing the React RFC Process\"\nauthor: [acdlite]\n---\n\n我们正在采用一个 RFC（“征求意见（request for comments）”）  的流程为 React 提供意见。\n\n受到  [Yarn](https://github.com/yarnpkg/rfcs)、 [Ember](https://github.com/emberjs/rfcs) 和 [Rust](https://github.com/rust-lang/rfcs) 社区的激励，目标是能够让 React 核心团队成员和社区成员共同来设计新特性。这也是打算为参加这一项目的成员提供一个明确的路径：\n\n- 创建一个 RFC 文档详细描述你的建议。\n- 提交一个 PR 到 [RFC 仓库](https://github.com/reactjs/rfcs)。\n- 将反馈合并到提案中。\n- 在经过讨论之后，核心团队可能会或可能不会采纳该 RFC。\n- 若该 RFC 被采纳，则 PR 会被合并。\n\n当 RFC 被同意在 React 中实现时则会被采纳。关于这一流程更为全面的描述可以查看该仓库的 [README](https://github.com/reactjs/rfcs/blob/master/README.md)。具体细节可能会在之后有所改善。\n\n## 谁能提交 RFC？\n\n任何人！没有必须要求了解 React 的内部机制，也不期望你自己来实现这个提案。\n\n和我们其他的仓库一样，我们会在接受你的 PR 前要求你完成[贡献者许可协议（Contributor License Agreement）](https://github.com/reactjs/rfcs#contributor-license-agreement-cla)。\n\n## 什么类型的改变应作为 RFC 提交?\n\n通常来讲，在实现前任何额外的评审或设计对于 RFC 来说都是不错的选择。根据过往经验，这意味着任何增加、改变，或移除一个 React API 类型的提案都可以。\n\n并不是每个变更都必须经过 RFC 的流程。Bug 修复或性能提升等不会修改 API 的提案将会直接被提交到主代码库中。\n\n我们现在有几个你可以参与为 React 贡献的仓库：\n\n- **问题，bug 修复和代码变更提交到主仓库** : [facebook/react](https://github.com/facebook/react)\n- **官网及文档**：[reactjs/reactjs.org](https://github.com/reactjs/reactjs.org)\n- **需要在实现前进行额外评审的想法**：[reactjs/rfcs](https://github.com/reactjs/rfcs)\n\n## 关于新 API 的 RFC\n\n结合我们刚发布的 RFC 流程，我们已经提交了一份[关于新版本背景的提案](https://github.com/reactjs/rfcs/pull/2)。该提案已受到了许多来自社区的有价值的反馈，我们已将这些意见采纳到新设计的 API 中。\n\n该提案是一个如何组织 RFC 的好例子。我们期待收到你的提案！\n",
        "type": "MarkdownRemark",
        "contentDigest": "4a2a4a166cb64e04cfd7cd9b14dda4cf",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Introducing the React RFC Process",
        "author": [
          "acdlite"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2017-12-07-introducing-the-react-rfc-process.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2017-12-07-introducing-the-react-rfc-process.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2017-12-07-introducing-the-react-rfc-process.md",
      "fields": {
        "date": "2017-12-06T16:00:00.000Z",
        "slug": "/blog/2017/12/07/introducing-the-react-rfc-process.html",
        "path": "blog/2017-12-07-introducing-the-react-rfc-process.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2018-03-01-sneak-peek-beyond-react-16.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2018-03-01-sneak-peek-beyond-react-16.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2018-03-01-sneak-peek-beyond-react-16.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Sneak Peek: Beyond React 16\"\nauthor: [sophiebits]\n---\n\n我们团队成员 [Dan Abramov](https://twitter.com/dan_abramov) 刚刚在 [JSConf Iceland 2018](https://2018.jsconf.is/)，就我们正在着手做的一些 React 新的功能特性发表了演讲。这次演讲以一个问题开场：\"在计算能力和网速存在巨大差异的背景下，我们怎样才能给每个人带来最好的用户体验？\"\n\n这是 JSConf Iceland 提供的[视频](https://www.youtube.com/watch?v=v6iR3Zk4oDY)。若果你现在停下本文的阅读去看视频，我觉得你一定会更加喜欢这个演讲视频。但是如果你没有时间观看，下面是对这次演讲的一个（非常）简要的总结。\n\n## 关于两个演示\n\n第一个演示中，Dan 说道： \"我们已经构建了一种通用的方法来确保高优先级的更新不会被低优先级更新所阻塞，这种技术叫时间分片。如果我的设备足够快，感觉就像是同步的；如果我的设备很慢，我们仍然能感觉到应用在积极响应我们的操作。这多亏了 [requestIdleCallback API](https://developers.google.com/web/updates/2015/08/using-requestidlecallback) 使得应用可以适应不同配置的设备。需要注意的是只有最终状态被渲染出来了，屏幕的渲染始终保持一致，并没有让我们感觉到渲染速度很慢，从而导致用户体验不佳。\"\n\n在第二个演示中，Dan解释说：\"我们已经构建了一种通用的方法，让组件在加载异步数据时暂停渲染，这就是我们所说的 **suspense**。你可以暂停任何状态更新，直到数据准备就绪，并且可以将异步加载添加到组件树中的任何组件，而无需通过应用管理所有属性和状态，避免增加逻辑复杂度。在网速很快的情况下，更新显示非常流畅且瞬时，不会让我们看着一堆恼人的加载图标转来转去最后消失。当网速慢的时候，你可以专门设计一下用户应该看到哪些加载状态，以及它们应该呈现的粒度，而不是根据你写的代码的来决定显示什么 spinner。让程序始终保持响应。\"\n\n\"重要的是，这仍然是你了解的那个 React。这仍然是那个声明式的组件化的你喜欢的 React。\"\n\n我们已经迫不及待地想在在今年晚些时候发布这些新的异步渲染功能。请在 Twitter 上关注 [@reactjs](https://twitter.com/reactjs) 以获取更新。\n",
        "type": "MarkdownRemark",
        "contentDigest": "240f80a7e9f05ac5dae4494839623e84",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Sneak Peek: Beyond React 16",
        "author": [
          "sophiebits"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2018-03-01-sneak-peek-beyond-react-16.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2018-03-01-sneak-peek-beyond-react-16.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2018-03-01-sneak-peek-beyond-react-16.md",
      "fields": {
        "date": "2018-02-28T16:00:00.000Z",
        "slug": "/blog/2018/03/01/sneak-peek-beyond-react-16.html",
        "path": "blog/2018-03-01-sneak-peek-beyond-react-16.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2018-03-29-react-v-16-3.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2018-03-29-react-v-16-3.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2018-03-29-react-v-16-3.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v16.3.0: New lifecycles and context API\"\nauthor: [bvaughn]\n---\n\nA few days ago, we [wrote a post about upcoming changes to our legacy lifecycle methods](/blog/2018/03/27/update-on-async-rendering.html), including gradual migration strategies. In React 16.3.0, we are adding a few new lifecycle methods to assist with that migration. We are also introducing new APIs for long requested features: an official context API, a ref forwarding API, and an ergonomic ref API.\n\nRead on to learn more about the release.\n\n## Official Context API\n\nFor many years, React has offered an experimental API for context. Although it was a powerful tool, its use was discouraged because of inherent problems in the API, and because we always intended to replace the experimental API with a better one.\n\nVersion 16.3 introduces a new context API that is more efficient and supports both static type checking and deep updates.\n\n> **Note**\n>\n> The old context API will keep working for all React 16.x releases, so you will have time to migrate.\n\nHere is an example illustrating how you might inject a \"theme\" using the new context API:\n`embed:16-3-release-blog-post/context-example.js`\n\n[Learn more about the new context API here.](/docs/context.html)\n\n## `createRef` API\n\nPreviously, React provided two ways of managing refs: the legacy string ref API and the callback API. Although the string ref API was the more convenient of the two, it had [several downsides](https://github.com/facebook/react/issues/1373) and so our official recommendation was to use the callback form instead.\n\nVersion 16.3 adds a new option for managing refs that offers the convenience of a string ref without any of the downsides:\n`embed:16-3-release-blog-post/create-ref-example.js`\n\n> **Note:**\n>\n> Callback refs will continue to be supported in addition to the new `createRef` API.\n>\n> You don't need to replace callback refs in your components. They are slightly more flexible, so they will remain as an advanced feature.\n\n[Learn more about the new `createRef` API here.](/docs/refs-and-the-dom.html)\n\n## `forwardRef` API\n\n[Higher-order components](/docs/higher-order-components.html) (or HOCs) are a common way to reuse code between components. Building on the theme context example from above, we might create an HOC that injects the current \"theme\" as a prop:\n\n`embed:16-3-release-blog-post/hoc-theme-example.js`\n\nWe can use the above HOC to wire components up to the theme context without having to use `ThemeContext` directly. For example:\n\n`embed:16-3-release-blog-post/fancy-button-example.js`\n\nHOCs typically [pass props through](/docs/higher-order-components.html#convention-pass-unrelated-props-through-to-the-wrapped-component) to the components they wrap. Unfortunately, [refs are not passed through](/docs/higher-order-components.html#refs-arent-passed-through). This means that we can't attach a ref to `FancyButton` if we use `FancyThemedButton`— so there's no way for us to call `focus()`.\n\nThe new `forwardRef` API solves this problem by providing a way for us to intercept a `ref` and forward it as a normal prop:\n`embed:16-3-release-blog-post/forward-ref-example.js`\n\n## Component Lifecycle Changes\n\nReact's class component API has been around for years with little change. However, as we add support for more advanced features (such as [error boundaries](/docs/react-component.html#componentdidcatch) and the upcoming [async rendering mode](/blog/2018/03/01/sneak-peek-beyond-react-16.html)) we stretch this model in ways that it was not originally intended.\n\nFor example, with the current API, it is too easy to block the initial render with non-essential logic. In part this is because there are too many ways to accomplish a given task, and it can be unclear which is best. We've observed that the interrupting behavior of error handling is often not taken into consideration and can result in memory leaks (something that will also impact the upcoming async rendering mode). The current class component API also complicates other efforts, like our work on [prototyping a React compiler](https://twitter.com/trueadm/status/944908776896978946).\n\nMany of these issues are exacerbated by a subset of the component lifecycles (`componentWillMount`, `componentWillReceiveProps`, and `componentWillUpdate`). These also happen to be the lifecycles that cause the most confusion within the React community. For these reasons, we are going to deprecate those methods in favor of better alternatives.\n\nWe recognize that this change will impact many existing components. Because of this, the migration path will be as gradual as possible, and will provide escape hatches. (At Facebook, we maintain more than 50,000 React components. We depend on a gradual release cycle too!)\n\n> **Note:**\n>\n> Deprecation warnings will be enabled with a future 16.x release, **but the legacy lifecycles will continue to work until version 17**.\n>\n> Even in version 17, it will still be possible to use them, but they will be aliased with an \"UNSAFE_\" prefix to indicate that they might cause issues. We have also prepared an [automated script to rename them](https://github.com/reactjs/react-codemod#rename-unsafe-lifecycles) in existing code.\n\nIn addition to deprecating unsafe lifecycles, we are also adding a couple of new lifecyles:\n* [`getDerivedStateFromProps`](/docs/react-component.html#static-getderivedstatefromprops) is being added as a safer alternative to the legacy `componentWillReceiveProps`.\n* [`getSnapshotBeforeUpdate`](/docs/react-component.html#getsnapshotbeforeupdate) is being added to support safely reading properties from e.g. the DOM before updates are made.\n\n[Learn more about these lifecycle changes here.](/blog/2018/03/27/update-on-async-rendering.html)\n\n## `StrictMode` Component\n\n`StrictMode` is a tool for highlighting potential problems in an application. Like `Fragment`, `StrictMode` does not render any visible UI. It activates additional checks and warnings for its descendants.\n\n> **Note:**\n>\n> `StrictMode` checks are run in development mode only; _they do not impact the production build_.\n\nAlthough it is not possible for strict mode to catch all problems (e.g. certain types of mutation), it can help with many. If you see warnings in strict mode, those things will likely cause bugs for async rendering.\n\nIn version 16.3, `StrictMode` helps with:\n* Identifying components with unsafe lifecycles\n* Warning about legacy string ref API usage\n* Detecting unexpected side effects\n\nAdditional functionality will be added with future releases of React.\n\n[Learn more about the `StrictMode` component here.](/docs/strict-mode.html)\n",
        "type": "MarkdownRemark",
        "contentDigest": "4b9df81d37b9259a80965934ba2cd0b8",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v16.3.0: New lifecycles and context API",
        "author": [
          "bvaughn"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2018-03-29-react-v-16-3.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2018-03-29-react-v-16-3.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2018-03-29-react-v-16-3.md",
      "fields": {
        "date": "2018-03-28T16:00:00.000Z",
        "slug": "/blog/2018/03/29/react-v-16-3.html",
        "path": "blog/2018-03-29-react-v-16-3.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2018-08-01-react-v-16-4-2.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2018-08-01-react-v-16-4-2.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2018-08-01-react-v-16-4-2.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v16.4.2: Server-side vulnerability fix\"\nauthor: [gaearon]\n---\n\nWe discovered a minor vulnerability that might affect some apps using ReactDOMServer. We are releasing a patch version for every affected React minor release so that you can upgrade with no friction. Read on for more details.\n\n## 概述\n\nToday, we are releasing a fix for a vulnerability we discovered in the `react-dom/server` implementation. It was introduced with the version 16.0.0 and has existed in all subsequent releases until today.\n\nThis vulnerability **can only affect some server-rendered React apps.** Purely client-rendered apps are **not** affected. Additionally, we expect that most server-rendered apps don't contain the vulnerable pattern described below. Nevertheless, we recommend to follow the mitigation instructions at the earliest opportunity.\n\nWhile we were investigating this vulnerability, we found similar vulnerabilities in a few other popular front-end libraries. We have coordinated this release together with [Vue](https://github.com/vuejs/vue/releases/tag/v2.5.17) and [Preact](https://github.com/developit/preact-render-to-string/releases/tag/3.7.1) releases fixing the same issue. The tracking number for this vulnerability is `CVE-2018-6341`.\n\n## Mitigation\n\n**We have prepared a patch release with a fix for every affected minor version.**\n\n### 16.0.x\n\n如果你在这个版本中使用 `react-dom/server` ：\n\n- `react-dom@16.0.0`\n\n升级到下面的版本来替换之前的版本。\n\n- `react-dom@16.0.1` **(contains the mitigation)**\n\n### 16.1.x\n\n如果你在下面的任何一个版本中使用 `react-dom/server`\n\n- `react-dom@16.1.0`\n- `react-dom@16.1.1`\n\n升级到下面的版本来替换之前的版本。\n\n- `react-dom@16.1.2` **(contains the mitigation)**\n\n### 16.2.x\n\n如果你在下面的版本中使用 `react-dom/server`：\n\n- `react-dom@16.2.0`\n\n升级到下面的版本来替换之前的版本。\n\n- `react-dom@16.2.1` **(contains the mitigation)**\n\n### 16.3.x\n\n如果你在下面的任何一个版本中使用 `react-dom/server`：\n\n- `react-dom@16.3.0`\n- `react-dom@16.3.1`\n- `react-dom@16.3.2`\n\n升级到下面的版本来替换之前的版本。\n\n- `react-dom@16.3.3` **(contains the mitigation)**\n\n### 16.4.x\n\n如果你在下面的任何一个版本中使用 `react-dom/server`：\n\n- `react-dom@16.4.0`\n- `react-dom@16.4.1`\n\n升级到下面的版本来替换之前的版本。\n\n- `react-dom@16.4.2` **(contains the mitigation)**\n\nIf you're using a newer version of `react-dom`, no action is required.\n\nNote that only the `react-dom` package needs to be updated.\n\n## 细节描述\n\n只有当这两个条件都为真时，您的应用程序才会受到这个漏洞的影响：\n\n* 您的应用程序正在使用HTML呈现 [ReactDOMServer API](/docs/react-dom-server.html), 并且\n* 您的应用程序在**HTML标记中包含用户提供的属性名**。\n\n具体说，脆弱模式就像下面的代码：\n\n```js{2}\nlet props = {};\nprops[userProvidedData] = \"hello\";\nlet element = <div {...props} />;\nlet html = ReactDOMServer.renderToString(element);\n```\n\n为了利用这个脆弱模式，攻击者需要创建一个触发 XSS 漏洞的特殊属性名。例如：\n\n```js\nlet userProvidedData = '></div><script>alert(\"hi\")</script>';\n```\n\nIn the vulnerable versions of `react-dom/server`, the output would let the attacker inject arbitrary markup:\n\n```html\n<div ></div><script>alert(\"hi\")</script>\n```\n\nIn the versions after the vulnerability was [fixed](https://github.com/facebook/react/pull/13302) (and before it was introduced), attributes with invalid names are skipped:\n\n```html\n<div></div>\n```\n\nYou would also see a warning about an invalid attribute name.\n\nNote that **we expect attribute names based on user input to be very rare in practice.** It doesn't serve any common practical use case, and has other potential security implications that React can't guard against.\n\n## 安装\n\nReact 16.4.2 版本可以在 npm 上获取。\n\n使用 Yarn 安装 React 16 版本，运行下面的命令：\n\n```bash\nyarn add react@^16.4.2 react-dom@^16.4.2\n```\n\n使用 npm 安装 React 16 版本，运行下面的命令：\n\n```bash\nnpm install --save react@^16.4.2 react-dom@^16.4.2\n```\n\n我们也提供了通过 CDN 的方式 UMD 建立React的方法：\n\n```html\n<script crossorigin src=\"https://unpkg.com/react@16/umd/react.production.min.js\"></script>\n<script crossorigin src=\"https://unpkg.com/react-dom@16/umd/react-dom.production.min.js\"></script>\n```\n\n点击链接获取 [更详细的安装教程](/docs/installation.html).\n\n## 更新日志\n\n### React DOM 服务器\n\n* Fix a potential XSS vulnerability when the attacker controls an attribute name (`CVE-2018-6341`). This fix is available in the latest `react-dom@16.4.2`, as well as in previous affected minor versions: `react-dom@16.0.1`, `react-dom@16.1.2`, `react-dom@16.2.1`, and `react-dom@16.3.3`. ([@gaearon](https://github.com/gaearon) in [#13302](https://github.com/facebook/react/pull/13302))\n\n* Fix a crash in the server renderer when an attribute is called `hasOwnProperty`. This fix is only available in `react-dom@16.4.2`. ([@gaearon](https://github.com/gaearon) in [#13303](https://github.com/facebook/react/pull/13303))\n",
        "type": "MarkdownRemark",
        "contentDigest": "c3fe19fb55735bd71e036d02249489a4",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v16.4.2: Server-side vulnerability fix",
        "author": [
          "gaearon"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2018-08-01-react-v-16-4-2.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2018-08-01-react-v-16-4-2.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2018-08-01-react-v-16-4-2.md",
      "fields": {
        "date": "2018-07-31T16:00:00.000Z",
        "slug": "/blog/2018/08/01/react-v-16-4-2.html",
        "path": "blog/2018-08-01-react-v-16-4-2.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2018-11-13-react-conf-recap.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2018-11-13-react-conf-recap.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2018-11-13-react-conf-recap.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React Conf recap: Hooks, Suspense, and Concurrent Rendering\"\nauthor: [tomocchino]\n---\n\nThis year’s [React Conf](https://conf.reactjs.org/) took place on October 25 and 26 in Henderson, Nevada, where more than 600 attendees gathered to discuss the latest in UI engineering.\n\n<br>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/V-QO-KO90iQ\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\nSophie Alpert and Dan Abramov kicked off Day 1 with their keynote, React Today and Tomorrow. In the talk, they introduced [Hooks](/docs/hooks-intro.html), which are a new proposal that adds the ability to access features such as state without writing a JavaScript class. Hooks promise to dramatically simplify the code required for React components and are currently available in a React alpha release.\n\n<br>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/ByBPyMBTzM0\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\nOn the morning of Day 2, Andrew Clark and Brian Vaughn presented Concurrent Rendering in React. Andrew covered the recently announced [React.lazy API for code splitting](/blog/2018/10/23/react-v-16-6.html) and previewed two upcoming features: concurrent mode and Suspense. Brian demonstrated how to use [React’s new profiler](/blog/2018/09/10/introducing-the-react-profiler.html) tooling to make apps built in React run faster.\n\n<br>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/UcqRXTriUVI\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\nIn the afternoon, Parashuram N spoke in detail about React Native’s New Architecture, a long-term project that the React Native team has been working on over the past year and [announced in June](https://facebook.github.io/react-native/blog/2018/06/14/state-of-react-native-2018). We’re really excited about the potential of this project to improve performance, simplify interoperability with other libraries, and set a strong foundation for the future of React Native.\n\nNow that the conference is over, all 28 conference talks are [available to stream online](https://www.youtube.com/playlist?list=PLPxbbTqCLbGE5AihOSExAa4wUM-P42EIJ). There are tons of great ones from both days. We can’t wait until next year!\n",
        "type": "MarkdownRemark",
        "contentDigest": "072cec6ea8e4206433cffb9b8edf78a8",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React Conf recap: Hooks, Suspense, and Concurrent Rendering",
        "author": [
          "tomocchino"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2018-11-13-react-conf-recap.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2018-11-13-react-conf-recap.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2018-11-13-react-conf-recap.md",
      "fields": {
        "date": "2018-11-12T16:00:00.000Z",
        "slug": "/blog/2018/11/13/react-conf-recap.html",
        "path": "blog/2018-11-13-react-conf-recap.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2018-12-19-react-v-16-7.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2018-12-19-react-v-16-7.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2018-12-19-react-v-16-7.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v16.7: No, This Is Not the One With Hooks\"\nauthor: [acdlite]\n---\n\nOur latest release includes an important performance bugfix for `React.lazy`. Although there are no API changes, we're releasing it as a minor instead of a patch.\n\n## Why Is This Bugfix a Minor Instead of a Patch?\n\nReact follows [semantic versioning](/docs/faq-versioning.html). Typically, this means that we use patch versions for bugfixes, and minors for new (non-breaking) features. However, we reserve the option to release minor versions even if they do not include new features. The motivation is to reserve patches for changes that have a very low chance of breaking. Patches are the most important type of release because they sometimes contain critical bugfixes. That means patch releases have a higher bar for reliability. It's unacceptable for a patch to introduce additional bugs, because if people come to distrust patches, it compromises our ability to fix critical bugs when they arise — for example, to fix a security vulnerability.\n\nWe never intend to ship bugs. React has a hard-earned reputation for stability, and we intend to keep it that way. We thoroughly test every version of React before releasing. This includes unit tests, generative (fuzzy) tests, integration tests, and internal dogfooding across tens of thousands of components. However, sometimes we make mistakes. That's why, going forward, our policy will be that if a release contains non-trivial changes, we will bump the minor version, even if the external behavior is the same. We'll also bump the minor when changing `unstable_`-prefixed APIs.\n\n## Can I Use Hooks Yet?\n\nNot yet, but soon!\n\nAt React Conf, we said that 16.7 would be the first release to include Hooks. This was a mistake. We shouldn't have attached a specific version number to an unreleased feature. We'll avoid this in the future.\n\nAlthough 16.7 does not include Hooks, please do not infer anything about the timeline of the Hooks launch. Our plans for Hooks are unchanged:\n\n- The [Hooks proposal](https://github.com/reactjs/rfcs/pull/68) was accepted ([with minor planned changes in response to feedback](https://github.com/reactjs/rfcs/pull/68#issuecomment-439314884)).\n- The [implementation](https://github.com/facebook/react/commit/7bee9fbdd49aa5b9365a94b0ddf6db04bc1bf51c) was merged into the React repo (behind a feature flag).\n- We're currently in the testing phase, and you can expect a public release within a few months.\n\nWe've heard from many people who want to start using Hooks in their apps. We also can't wait to ship them! But because Hooks changes how we write React components, we are taking extra time to get the details right. We appreciate your patience as we prepare this exciting new feature for widespread, ahem, *use*.\n\nLearn more about [our roadmap](/blog/2018/11/27/react-16-roadmap.html) in our previous post.\n\n\n## Installation\n\nReact v16.7.0 is available on the npm registry.\n\nTo install React 16 with Yarn, run:\n\n```bash\nyarn add react@^16.7.0 react-dom@^16.7.0\n```\n\nTo install React 16 with npm, run:\n\n```bash\nnpm install --save react@^16.7.0 react-dom@^16.7.0\n```\n\nWe also provide UMD builds of React via a CDN:\n\n```html\n<script crossorigin src=\"https://unpkg.com/react@16/umd/react.production.min.js\"></script>\n<script crossorigin src=\"https://unpkg.com/react-dom@16/umd/react-dom.production.min.js\"></script>\n```\n\nRefer to the documentation for [detailed installation instructions](/docs/installation.html).\n\n## Changelog\n\n### React DOM\n\n* Fix performance of `React.lazy` for large numbers of lazily-loaded components. ([@acdlite](http://github.com/acdlite) in [#14429](https://github.com/facebook/react/pull/14429))\n* Clear fields on unmount to avoid memory leaks. ([@trueadm](http://github.com/trueadm) in [#14276](https://github.com/facebook/react/pull/14276))\n* Fix bug with SSR and context when mixing `react-dom/server@16.6` and `react@<16.6`. ([@gaearon](http://github.com/gaearon) in [#14291](https://github.com/facebook/react/pull/14291))\n* Fix a performance regression in profiling mode. ([@bvaughn](http://github.com/bvaughn) in [#14383](https://github.com/facebook/react/pull/14383))\n\n### Scheduler (Experimental)\n\n* Post to MessageChannel instead of window. ([@acdlite](http://github.com/acdlite) in [#14234](https://github.com/facebook/react/pull/14234))\n* Reduce serialization overhead. ([@developit](http://github.com/developit) in [#14249](https://github.com/facebook/react/pull/14249))\n* Fix fallback to `setTimeout` in testing environments. ([@bvaughn](http://github.com/bvaughn) in [#14358](https://github.com/facebook/react/pull/14358))\n* Add methods for debugging. ([@mrkev](http://github.com/mrkev) in [#14053](https://github.com/facebook/react/pull/14053))\n",
        "type": "MarkdownRemark",
        "contentDigest": "67f9d42f5afe682313e54774e0b263d7",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v16.7: No, This Is Not the One With Hooks",
        "author": [
          "acdlite"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2018-12-19-react-v-16-7.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2018-12-19-react-v-16-7.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2018-12-19-react-v-16-7.md",
      "fields": {
        "date": "2018-12-18T16:00:00.000Z",
        "slug": "/blog/2018/12/19/react-v-16-7.html",
        "path": "blog/2018-12-19-react-v-16-7.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/home/examples/a-component-using-external-plugins.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/home/examples/a-component-using-external-plugins.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/home/examples/a-component-using-external-plugins.md absPath of file",
      "internal": {
        "content": "---\ntitle: 在组件中使用第三方库\norder: 3\n---\n\nReact 的使用非常灵活，并且提供了可以调用其他第三方框架或库的接口。下面这个示例就使用了一个用来渲染 markdown 语法，名为 **remarkable** 的库。它可以实时转换渲染 `<textarea>` 里的内容。\n\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "1c72f34262da2dc2fdff424eea9cc8d3",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "在组件中使用第三方库",
        "order": 3,
        "_PARENT": "/Users/yubolun/Desktop/react/content/home/examples/a-component-using-external-plugins.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/home/examples/a-component-using-external-plugins.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/home/examples/a-component-using-external-plugins.md",
      "fields": {
        "slug": "/home/examples/a-component-using-external-plugins.html",
        "path": "home/examples/a-component-using-external-plugins.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/home/examples/a-simple-component.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/home/examples/a-simple-component.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/home/examples/a-simple-component.md absPath of file",
      "internal": {
        "content": "---\ntitle: 组件\norder: 0\n---\n\nReact 组件使用一个名为 `render()` 的方法， 接收数据作为输入，输出页面中对应展示的内容。 下面这个示例中类似XML的写法被称为JSX. 输入的数据通过 `this.props` 传入 `render()` 方法。\n\n**使用 React 的时候也可以不使用 JSX 语法** 你可以在 [Babel REPL](https://babeljs.io/repl/#?presets=react&code_lz=MYewdgzgLgBApgGzgWzmWBeGAeAFgRgD4AJRBEAGhgHcQAnBAEwEJsB6AwgbgChRJY_KAEMAlmDh0YWRiGABXVOgB0AczhQAokiVQAQgE8AkowAUPGDADkdECChWeASl4AlOMOBQAIgHkAssp0aIySpogoaFBUQmISdC48QA) 查看 JSX 是如何被渲染成原生 JavaScript 代码的。\n\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "64a6bc7e1392a99c8aa8cc6c5d09f143",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "组件",
        "order": 0,
        "_PARENT": "/Users/yubolun/Desktop/react/content/home/examples/a-simple-component.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/home/examples/a-simple-component.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/home/examples/a-simple-component.md",
      "fields": {
        "slug": "/home/examples/a-simple-component.html",
        "path": "home/examples/a-simple-component.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/home/examples/a-stateful-component.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/home/examples/a-stateful-component.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/home/examples/a-stateful-component.md absPath of file",
      "internal": {
        "content": "---\ntitle: 有状态组件\norder: 1\n---\n\n除了使用外部传入的数据以外 (通过 `this.props` 访问传入数据), 组件还可以拥有其内部的状态数据 (通过 `this.state` 访问状态数据)。 当组件的状态数据改变时， 组件会调用 `render()` 方法重新渲染。\n\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "7fd3f964b08dd1ab6b0dd74b20f71d3b",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "有状态组件",
        "order": 1,
        "_PARENT": "/Users/yubolun/Desktop/react/content/home/examples/a-stateful-component.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/home/examples/a-stateful-component.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/home/examples/a-stateful-component.md",
      "fields": {
        "slug": "/home/examples/a-stateful-component.html",
        "path": "home/examples/a-stateful-component.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/home/examples/an-application.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/home/examples/an-application.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/home/examples/an-application.md absPath of file",
      "internal": {
        "content": "---\ntitle: 应用\norder: 2\n---\n\n使用 `props` 和 `state`, 我们可以创建一个简易的 Todo 应用。 下面这个示例中，我们使用 `state` 来保存现有的待办事项列表及用户的输入。 与此同时，我们也使用了内联的方法添加了事件处理函数，它们将通过事件代理被收集和调用。\n",
        "type": "MarkdownRemark",
        "contentDigest": "63f86a35b12b5871774df2d2923260df",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "应用",
        "order": 2,
        "_PARENT": "/Users/yubolun/Desktop/react/content/home/examples/an-application.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/home/examples/an-application.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/home/examples/an-application.md",
      "fields": {
        "slug": "/home/examples/an-application.html",
        "path": "home/examples/an-application.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/home/marketing/component-based.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/home/marketing/component-based.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/home/marketing/component-based.md absPath of file",
      "internal": {
        "content": "---\ntitle: 组件化\norder: 1\n---\n\n创建好拥有各自状态的组件，再由组件构成更加复杂的界面。\n\n无需再用模版代码，通过使用JavaScript编写的组件你可以更好地传递数据，将应用状态和DOM拆分开来。\n\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "cb58c5e62f0018ca3d614b7e0ec28e29",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "组件化",
        "order": 1,
        "_PARENT": "/Users/yubolun/Desktop/react/content/home/marketing/component-based.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/home/marketing/component-based.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/home/marketing/component-based.md",
      "fields": {
        "slug": "/home/marketing/component-based.html",
        "path": "home/marketing/component-based.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/home/marketing/declarative.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/home/marketing/declarative.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/home/marketing/declarative.md absPath of file",
      "internal": {
        "content": "---\ntitle: 声明式\norder: 0\n---\n\nReact 可以非常轻松地创建用户交互界面。为你应用的每一个状态设计简洁的视图，在数据改变时 React 也可以高效地更新渲染界面。\n\n以声明式编写UI，可以让你的代码更加可靠，且方便调试。\n\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "1d1482826f098c6ef6e85d31ad155a4c",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "声明式",
        "order": 0,
        "_PARENT": "/Users/yubolun/Desktop/react/content/home/marketing/declarative.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/home/marketing/declarative.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/home/marketing/declarative.md",
      "fields": {
        "slug": "/home/marketing/declarative.html",
        "path": "home/marketing/declarative.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/home/marketing/learn-once-write-anywhere.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/home/marketing/learn-once-write-anywhere.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/home/marketing/learn-once-write-anywhere.md absPath of file",
      "internal": {
        "content": "---\ntitle: 一次学习，随处编写\norder: 2\n---\n\n无论你现在正在使用什么技术栈，你都可以随时引入 React 开发新特性。\n\nReact 也可以用作开发原生应用的框架 [React Native](https://facebook.github.io/react-native/).\n\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "357ab3b37d944f357ef5fb91798e4209",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "一次学习，随处编写",
        "order": 2,
        "_PARENT": "/Users/yubolun/Desktop/react/content/home/marketing/learn-once-write-anywhere.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/home/marketing/learn-once-write-anywhere.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/home/marketing/learn-once-write-anywhere.md",
      "fields": {
        "slug": "/home/marketing/learn-once-write-anywhere.html",
        "path": "home/marketing/learn-once-write-anywhere.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/community/conferences.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/community/conferences.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/community/conferences.md absPath of file",
      "internal": {
        "content": "---\nid: conferences\ntitle: Conferences\nlayout: community\nsectionid: community\npermalink: community/conferences.html\nredirect_from:\n  - \"docs/conferences.html\"\n---\n\nDo you know of a local React.js conference? Add it here! (Please keep the list chronological)\n\n## Upcoming Conferences\n\n### React Rally\nAugust 16-17 in Salt Lake City, Utah USA\n\n[Website](http://www.reactrally.com) - [Twitter](https://twitter.com/reactrally)\n\n### React DEV Conf China\nAugust 18 in Guangzhou, China\n\n[Website](https://react.w3ctech.com)\n\n### ReactFoo Delhi \nAugust 18 in Delhi, India\n\n[Website](https://reactfoo.in/2018-delhi/) - [Twitter](https://twitter.com/reactfoo) - [Past talks](https://hasgeek.tv)\n\n### Byteconf React 2018\nAugust 31 streamed online, via Twitch\n\n[Website](https://byteconf.com) - [Twitch](https://twitch.tv/byteconf) - [Twitter](https://twitter.com/byteconf)\n\n### React Native EU 2018\nSeptember 5-6 in Wrocław, Poland\n\n[Website](https://react-native.eu) - [Twitter](https://twitter.com/react_native_eu) - [Facebook](https://www.facebook.com/reactnativeeu)\n\n### React Alicante 2018\nSeptember 13-15 in Alicante, Spain\n\n[Website](http://reactalicante.es) - [Twitter](https://twitter.com/ReactAlicante)\n\n### React Boston 2018\nSeptember 29-30 in Boston, Massachusetts USA\n\n[Website](http://www.reactboston.com/) - [Twitter](https://twitter.com/ReactBoston)\n\n### ReactJS Day 2018\nOctober 5 in Verona, Italy\n\n[Website](http://2018.reactjsday.it) - [Twitter](https://twitter.com/reactjsday)\n\n### React Conf Brasil 2018\nOctober 20 in Sao Paulo, Brazil\n\n[Website](http://reactconfbr.com.br) - [Twitter](https://twitter.com/reactconfbr) - [Facebook](https://www.facebook.com/reactconf)\n\n### React Conf 2018\nOctober 25-26 in Henderson, Nevada USA\n\n[Website](https://conf.reactjs.org/)\n\n### ReactNext 2018\nNovember 4 in Tel Aviv, Israel\n\n[Website](https://react-next.com) - [Twitter](https://twitter.com/ReactNext) - [Facebook](https://facebook.com/ReactNext2016)\n\n### React Day Berlin 2018\nNovember 30, Berlin, Germany\n\n[Website](https://reactday.berlin) - [Twitter](https://twitter.com/reactdayberlin) - [Facebook](https://www.facebook.com/reactdayberlin/) - [Videos](https://www.youtube.com/channel/UC1EYHmQYBUJjkmL6OtK4rlw)\n\n## Past Conferences\n\n### React.js Conf 2015\nJanuary 28 & 29 in Facebook HQ, CA\n\n[Website](http://conf2015.reactjs.org/) - [Schedule](http://conf2015.reactjs.org/schedule.html) - [Videos](https://www.youtube.com/playlist?list=PLb0IAmt7-GS1cbw4qonlQztYV1TAW0sCr)\n\n<iframe title=\"React.js Conf 2015 Keynote\" width=\"650\" height=\"315\" src=\"//www.youtube-nocookie.com/embed/KVZ-P-ZI6W4?list=PLb0IAmt7-GS1cbw4qonlQztYV1TAW0sCr\" frameborder=\"0\" allowfullscreen></iframe>\n\n### ReactEurope 2015\nJuly 2 & 3 in Paris, France\n\n[Website](http://www.react-europe.org/) - [Schedule](http://www.react-europe.org/#schedule) - [Videos](https://www.youtube.com/channel/UCorlLn2oZfgOJ-FUcF2eZ1A/playlists)\n\n### Reactive 2015\nNovember 2-4 in Bratislava, Slovakia\n\n[Website](https://reactive2015.com/) - [Schedule](https://reactive2015.com/schedule_speakers.html#schedule)\n\n### React.js Conf 2016\nFebruary 22 & 23 in San Francisco, CA\n\n[Website](http://conf.reactjs.com/) - [Schedule](http://conf.reactjs.com/schedule.html) - [Videos](https://www.youtube.com/playlist?list=PLb0IAmt7-GS0M8Q95RIc2lOM6nc77q1IY)\n\n### React Amsterdam 2016\nApril 16 in Amsterdam, The Netherlands\n\n[Website](https://react.amsterdam/2016) - [Videos](https://youtu.be/sXDZBxbRRag?list=PLNBNS7NRGKMG3uLrm5fgY02hJ87Wzb4IU)\n\n### ReactEurope 2016\nJune 2 & 3 in Paris, France\n\n[Website](http://www.react-europe.org/) - [Schedule](http://www.react-europe.org/#schedule) - [Videos](https://www.youtube.com/channel/UCorlLn2oZfgOJ-FUcF2eZ1A/playlists)\n\n### ReactRally 2016\nAugust 25-26 in Salt Lake City, UT\n\n[Website](http://www.reactrally.com/) - [Schedule](http://www.reactrally.com/#/schedule) - [Videos](https://www.youtube.com/playlist?list=PLUD4kD-wL_zYSfU3tIYsb4WqfFQzO_EjQ)\n\n### ReactNext 2016\nSeptember 15 in Tel Aviv, Israel\n\n[Website](http://react-next.com/) - [Schedule](http://react-next.com/#schedule) - [Videos](https://www.youtube.com/channel/UC3BT8hh3yTTYxbLQy_wbk2w)\n\n### ReactNL 2016\nOctober 13 in Amsterdam, The Netherlands - [Schedule](http://reactnl.org/#program)\n\n[Website](http://reactnl.org/)\n\n### Reactive 2016\nOctober 26-28 in Bratislava, Slovakia\n\n[Website](https://reactiveconf.com/)\n\n### React Remote Conf 2016\nOctober 26-28 online\n\n[Website](https://allremoteconfs.com/react-2016) - [Schedule](https://allremoteconfs.com/react-2016#schedule)\n\n### Agent Conference 2017\nJanuary 20-21 in Dornbirn, Austria\n\n[Website](http://agent.sh/)\n\n### React Conf 2017\nMarch 13-14 in Santa Clara, CA\n\n[Website](http://conf.reactjs.org/) - [Videos](https://www.youtube.com/watch?v=7HSd1sk07uU&list=PLb0IAmt7-GS3fZ46IGFirdqKTIxlws7e0)\n\n### React London 2017\nMarch 28th at the [QEII Centre, London](http://qeiicentre.london/)\n\n[Website](http://react.london/) - [Videos](https://www.youtube.com/watch?v=2j9rSur_mnk&list=PLW6ORi0XZU0CFjdoYeC0f5QReBG-NeNKJ)\n\n### React Amsterdam 2017\nApril 21st in Amsterdam, The Netherlands\n\n[Website](https://react.amsterdam) - [Twitter](https://twitter.com/reactamsterdam) - [Videos](https://www.youtube.com/watch?v=NQyL-Dm7Kig&list=PLNBNS7NRGKMHxfm0CcYNuINLdRw7r4a9M)\n\n### ReactEurope 2017\nMay 18th & 19th in Paris, France\n\n[Website](http://www.react-europe.org/) - [Schedule](http://www.react-europe.org/#schedule) - [Videos](https://www.youtube.com/channel/UCorlLn2oZfgOJ-FUcF2eZ1A/playlists)\n\n### Chain React 2017\nJuly 10-11 in Portland, Oregon USA\n\n[Website](https://infinite.red/ChainReactConf) - [Twitter](https://twitter.com/chainreactconf) - [Videos](https://www.youtube.com/watch?v=cz5BzwgATpc&list=PLFHvL21g9bk3RxJ1Ut5nR_uTZFVOxu522)\n\n### React Rally 2017\nAugust 24-25 in Salt Lake City, Utah USA\n\n[Website](http://www.reactrally.com) - [Twitter](https://twitter.com/reactrally) - [Videos](https://www.youtube.com/watch?v=f4KnHNCZcH4&list=PLUD4kD-wL_zZUhvAIHJjueJDPr6qHvkni)\n\n### React Native EU 2017\nSeptember 6-7 in Wroclaw, Poland\n\n[Website](http://react-native.eu/) - [Videos](https://www.youtube.com/watch?v=453oKJAqfy0&list=PLzUKC1ci01h_hkn7_KoFA-Au0DXLAQZR7)\n\n### ReactNext 2017\nSeptember 8-10 in Tel Aviv, Israel\n\n[Website](http://react-next.com/) - [Twitter](https://twitter.com/ReactNext) - [Videos (Hall A)](https://www.youtube.com/watch?v=eKXQw5kR86c&list=PLMYVq3z1QxSqq6D7jxVdqttOX7H_Brq8Z), [Videos (Hall B)](https://www.youtube.com/watch?v=1InokWxYGnE&list=PLMYVq3z1QxSqCZmaqgTXLsrcJ8mZmBF7T)\n\n### ReactFoo 2017\nSeptember 14 in Bangalore, India\n\n[Website](https://reactfoo.in/2017/) - [Videos](https://www.youtube.com/watch?v=3G6tMg29Wnw&list=PL279M8GbNsespKKm1L0NAzYLO6gU5LvfH)\n\n### React Boston 2017\nSeptember 23-24 in Boston, Massachusetts USA\n\n[Website](http://www.reactboston.com/) - [Twitter](https://twitter.com/ReactBoston) - [Videos](https://www.youtube.com/watch?v=2iPE5l3cl_s&list=PL-fCkV3wv4ub8zJMIhmrrLcQqSR5XPlIT)\n\n### React Alicante 2017\nSeptember 28-30 in Alicante, Spain\n\n[Website](http://reactalicante.es) - [Twitter](https://twitter.com/ReactAlicante) - [Videos](https://www.youtube.com/watch?v=UMZvRCWo6Dw&list=PLd7nkr8mN0sWvBH_s0foCE6eZTX8BmLUM)\n\n### ReactJS Day 2017\nOctober 6 in Verona, Italy\n\n[Website](http://2017.reactjsday.it) - [Twitter](https://twitter.com/reactjsday) - [Videos](https://www.youtube.com/watch?v=bUqqJPIgjNU&list=PLWK9j6ps_unl293VhhN4RYMCISxye3xH9)\n\n### React Conf Brasil 2017\nOctober 7 in Sao Paulo, Brazil\n\n[Website](http://reactconfbr.com.br) - [Twitter](https://twitter.com/reactconfbr) - [Facebook](https://www.facebook.com/reactconf/)\n\n### State.js Conference 2017\nOctober 13 in Stockholm, Sweden\n\n[Website](https://statejs.com/)\n\n### React Summit 2017\nOctober 21 in Lagos, Nigeria\n\n[Website](https://reactsummit2017.splashthat.com/) - [Twitter](https://twitter.com/DevCircleLagos/) - [Facebook](https://www.facebook.com/groups/DevCLagos/)\n\n### ReactiveConf 2017\nOctober 25–27, Bratislava, Slovakia\n\n[Website](https://reactiveconf.com) - [Videos](https://www.youtube.com/watch?v=BOKxSFB2hOE&list=PLa2ZZ09WYepMB-I7AiDjDYR8TjO8uoNjs)\n\n### React Seoul 2017\nNovember 4 in Seoul, South Korea\n\n[Website](http://seoul.reactjs.kr/en)\n\n### React Day Berlin 2017\nDecember 2, Berlin, Germany\n\n[Website](https://reactday.berlin) - [Twitter](https://twitter.com/reactdayberlin) - [Facebook](https://www.facebook.com/reactdayberlin/) - [Videos](https://www.youtube.com/watch?v=UnNLJvHKfSY&list=PL-3BrJ5CiIx5GoXci54-VsrO6GwLhSHEK)\n\n### ReactFoo Pune\nJanuary 19-20, Pune, India\n\n[Website](https://reactfoo.in/2018-pune/) - [Twitter](https://twitter.com/ReactFoo)\n\n### AgentConf 2018\nJanuary 25-28 in Dornbirn, Austria\n\n[Website](http://agent.sh/)\n\n### ReactFest 2018\nMarch 8-9 in London, UK\n\n[Website](https://reactfest.uk/) - [Twitter](https://twitter.com/ReactFest) - [Videos](https://www.youtube.com/watch?v=YOCrJ5vRCnw&list=PLRgweB8YtNRt-Sf-A0y446wTJNUaAAmle)\n\n### Reactathon 2018\nMarch 20-22 in San Francisco, USA\n\n[Website](https://www.reactathon.com/) - [Twitter](https://twitter.com/reactathon) - [Videos (fundamentals)](https://www.youtube.com/watch?v=knn364bssQU&list=PLRvKvw42Rc7OWK5s-YGGFSmByDzzgC0HP), [Videos (advanced day1)](https://www.youtube.com/watch?v=57hmk4GvJpk&list=PLRvKvw42Rc7N0QpX2Rc5CdrqGuxzwD_0H), [Videos (advanced day2)](https://www.youtube.com/watch?v=1hvQ8p8q0a0&list=PLRvKvw42Rc7Ne46QAjWNWFo1Jf0mQdnIW)\n\n### React Native Camp UA 2018\nMarch 31 in Kiev, Ukraine\n\n[Website](http://reactnative.com.ua/) - [Twitter](https://twitter.com/reactnativecamp) - [Facebook](https://www.facebook.com/reactnativecamp/)\n\n### React Amsterdam 2018\nApril 13 in Amsterdam, The Netherlands\n\n[Website](https://react.amsterdam) - [Twitter](https://twitter.com/reactamsterdam) - [Facebook](https://www.facebook.com/reactamsterdam)\n\n### React Finland 2018\nApril 24-26 in Helsinki, Finland\n\n[Website](https://react-finland.fi/) - [Twitter](https://twitter.com/ReactFinland)\n\n### <React.NotAConf /> 2018\nApril 28 in Sofia, Bulgaria\n\n[Website](http://react-not-a-conf.com/) - [Twitter](https://twitter.com/reactnotaconf) - [Facebook](https://www.facebook.com/groups/1614950305478021/)\n\n### ReactEurope 2018\nMay 17-18 in Paris, France\n\n[Website](https://www.react-europe.org) - [Twitter](https://twitter.com/ReactEurope) - [Facebook](https://www.facebook.com/ReactEurope)\n\n### ReactFoo Mumbai\nMay 26 in Mumbai, India\n\n[Website](https://reactfoo.in/2018-mumbai/) - [Twitter](https://twitter.com/reactfoo) - [Past talks](https://hasgeek.tv)\n\n### Chain React 2018\nJuly 11-13 in Portland, Oregon USA\n\n[Website](https://infinite.red/ChainReactConf) - [Twitter](https://twitter.com/chainreactconf)\n\n##\n",
        "type": "MarkdownRemark",
        "contentDigest": "a7a6c18a845a54a7477c2d0d661a64c0",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Conferences",
        "id": "conferences",
        "layout": "community",
        "sectionid": "community",
        "permalink": "community/conferences.html",
        "redirect_from": [
          "docs/conferences.html"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/community/conferences.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/community/conferences.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/community/conferences.md",
      "fields": {
        "slug": "community/conferences.html",
        "path": "community/conferences.md",
        "redirect": "[\"docs/conferences.html\"]"
      }
    },
    "/Users/yubolun/Desktop/react/content/community/tools-ui-components.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/community/tools-ui-components.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/community/tools-ui-components.md absPath of file",
      "internal": {
        "content": "---\nid: ui-components\ntitle: UI Components\nlayout: community\npermalink: community/ui-components.html\n---\n\n## Free Components\n* **[Amaze UI React](https://github.com/amazeui/amazeui-react) (in Chinese):** [Amaze UI](https://github.com/allmobilize/amazeui) components built with React.\n* **[Ant Design of React](http://github.com/ant-design/ant-design)** An enterprise-class UI design language and React-based implementation.\n* **[Belle](https://github.com/nikgraf/belle/):** Configurable React Components with great UX.\n* **[chartify](https://github.com/kirillstepkin/chartify)**: Ultra lightweight and customizable React.js chart component.\n* **[Elemental UI](http://elemental-ui.com):** A UI toolkit for React websites and apps, themeable and composed of individually packaged components\n* **[Grommet](http://grommet.io)** The most advanced open source UX framework for enterprise applications.\n* **[Halogen](http://madscript.com/halogen):** A collection of highly customizable loading spinner animations with React.\n* **[Khan Academy's component library](http://khan.github.io/react-components/)**\n* **[markdown-to-jsx](https://www.npmjs.com/package/markdown-to-jsx)**: compiles markdown into safe React JSX without using dangerous escape hatches.\n* **[material-ui](http://material-ui.com)** A set of React Components that implement Google's Material Design.\n* **[Onsen UI React Components](https://onsen.io/v2/react.html):** UI components for hybrid mobile apps with both Material Design for Android and flat design for iOS.\n* **[React Amazing Grid](https://github.com/Amazing-Space-Invader/react-amazing-grid)** Flex grid with inline styles.\n* **[React Mdl](https://github.com/tleunen/react-mdl)** React Components for Material Design Lite.\n* **[React Web](https://github.com/taobaofed/react-web)** A framework for building web apps with React.\n* **[react-amiga-guru-meditation](https://github.com/gfazioli/react-amiga-guru-meditation):** React JS Class to display a Amiga Guru Meditation Tribute\n* **[react-autosuggest](https://github.com/moroshko/react-autosuggest)** WAI-ARIA compliant React autosuggest component\n* **[react-bootstrap](https://github.com/stevoland/react-bootstrap):** Bootstrap 3 components built with React.\n* **[react-bootstrap-dialog](https://github.com/akiroom/react-bootstrap-dialog):** React Dialog component for react-bootstrap, instead of `window.alert` or `window.confirm`\n* **[react-bootstrap-table](https://github.com/AllenFang/react-bootstrap-table):** It's a react table for Bootstrap.\n* **[react-component](https://github.com/react-component/):** A collection of react components maintained by Alibaba/Alipay employee.\n* **[react-data-menu](https://github.com/dkozar/react-data-menu):** Smart data-driven menu rendered in an overlay. Hints-based aligning with custom renderers and factories. Never clipped by other components or screen edges.\n* **[react-date-picker](https://github.com/Hacker0x01/react-datepicker):** A simple and reusable datepicker component for React.\n* **[react-dates](https://github.com/OpusCapita/react-dates):** Date-inputs + date-picker\n* **[react-dnd](https://github.com/gaearon/react-dnd)** Flexible HTML5 drag-and-drop mixin for React with full DOM control\n* **[react-document-title](https://github.com/gaearon/react-document-title)** Declarative, nested, stateful, isomorphic document.title for React\n* **[react-dropzone](https://github.com/felixrieseberg/React-Dropzone):** React Dropzone for File-Uploads\n* **[react-forms](http://prometheusresearch.github.io/react-forms/):** Form rendering and validation for React\n* **[react-highlight](https://github.com/akiran/react-highlight):** React component for syntax highlighting\n* **[react-image](https://github.com/mbrevda/react-image):** Like `<img />` and Enhanced Image Component for React.\n* **[react-input-autosize](https://github.com/JedWatson/react-input-autosize):** Like `<input />` but resizes automatically to fit all its content.\n* **[react-intense](https://github.com/brycedorn/react-intense):** A component for viewing large images up close\n* **[react-joyride](https://github.com/gilbarbara/react-joyride):** Create walkthroughs and guided tours for your ReactJS apps.\n* **[react-ladda](https://github.com/jsdir/react-ladda):** React wrapper for Ladda buttons.\n* **[react-lorem-component](https://github.com/martinandert/react-lorem-component):** Lorem Ipsum placeholder component.\n* **[react-notification](https://github.com/pburtchaell/react-notification):** Snackbar style notifications\n* **[react-select](https://github.com/JedWatson/react-select):** Native React Select / Multiselect input field, similar to Selectize / Chosen / Select2\n* **[react-selectize](https://furqanzafar.github.io/react-selectize/):** A stateless & flexible Select component, designed as a drop in replacement for React.DOM.Select, inspired by Selectize\n* **[react-sigma](https://www.npmjs.com/package/react-sigma)**: Lightweight but powerful library for drawing network graphs\n* **[react-slick](https://github.com/akiran/react-slick):** Carousel component built with React\n* **[react-sparklines](https://borisyankov.github.io/react-sparklines/):** Beautiful and expressive sparklines component\n* **[react-spreadsheet](https://github.com/felixrieseberg/React-Spreadsheet-Component):** React Spreadsheets / Editable tables with Excel-Style keyboard input and navigation\n* **[react-switch-button](https://github.com/gfazioli/react-switch-button):** Beautiful React Switch button component\n* **[react-tappable](https://github.com/JedWatson/react-tappable)** A Tappable React Component that provides native-feeling onTap events for mobile React apps\n* **[react-textarea-autosize](https://github.com/andreypopp/react-textarea-autosize):** Like `<textarea />` but resizes automatically to fit all its content.\n* **[react-toastify](https://github.com/fkhadra/react-toastify):** React notification made easy\n* **[React-TimeAgo](https://www.npmjs.org/package/react-timeago)** A minimal live updating Time Ago component that smartly converts any time to a 'ago' or 'from now' format and keeps it updated.\n* **[react-translate-component](https://github.com/martinandert/react-translate-component):** React component for i18n.\n* **[react-treeview](https://github.com/chenglou/react-treeview):** Easy, light, flexible tree view.\n* **[react-uwp](https://www.react-uwp.com)** A set of React Components that Implement Microsoft's UWP Design & Fluent Design..\n* **[react-validate-framework](https://github.com/MinJieLiu/react-validate-framework)**: A lightweight and extensible React validation component.\n* **[reactstrap](https://reactstrap.github.io/):** Simple Bootstrap 4 components built with [tether](http://tether.io/)\n* **[recharts](https://github.com/recharts/recharts)**: A composable charting library built on React components.\n* **[Selectivity](https://arendjr.github.io/selectivity/):** Modular and light-weight selection library.\n* **[Semantic-ui](http://react.semantic-ui.com/)**: The official Semantic-UI-React integration, Advanced components and declarative UI.\n* **[storybook-addon-material-ui](https://github.com/sm-react/storybook-addon-material-ui)** A storybook addon for material-ui.\n* **[tcomb-form](https://github.com/gcanti/tcomb-form):** Automatically generate form markup, automatic labels and inline validation from a domain model.\n* **[valuelink](https://github.com/Volicon/valuelink):** Full-featured two-way data binding and forms validation with extended React links.\n* **[video-react](https://github.com/video-react/video-react)**: A web video player built for the HTML5 world using React library.\n* **[Winterfell](https://github.com/andrewhathaway/Winterfell):** Generate complex, validated and extendable JSON-based forms in React\n* **[Mobiscroll Lite for React](https://mobiscroll.com/forms/react)** A collection of 15 free UI components ranging from inputs, selects, sliders, alerts to rating.\n\n## Fee Based Components\n\n* **[ag-Grid](https://www.ag-grid.com)** Advanced data grid / data table for React.\n* **[ExtReact components](https://www.sencha.com/products/extreact//)**: 115+ Ready-to-Use UI Components.\n* **[Grapecity Wijmo UI Components for React](https://www.grapecity.com/en/react/)**: Expand your React UI options with Wijmo’s complete collection of JavaScript components.\n* **[jQWidgets React components](http://www.jqwidgets.com/react/)**: Enterprise Ready 70+ UI Components.\n* **[Mobiscroll React UI Components](https://mobiscroll.com/react)** Mobile UI Controls for the Productive React Developer.\n",
        "type": "MarkdownRemark",
        "contentDigest": "ed56335dc3a24c5d7d9ea51c412bd285",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "UI Components",
        "id": "ui-components",
        "layout": "community",
        "permalink": "community/ui-components.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/community/tools-ui-components.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/community/tools-ui-components.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/community/tools-ui-components.md",
      "fields": {
        "slug": "community/ui-components.html",
        "path": "community/tools-ui-components.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/community/videos.it-IT.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/community/videos.it-IT.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/community/videos.it-IT.md absPath of file",
      "internal": {
        "content": "---\nid: videos-it-IT\ntitle: Video\npermalink: docs/videos-it-IT.html\nprev: conferences-it-IT.html\nnext: complementary-tools-it-IT.html\n---\n\n### Riconsiderare le best practice - JSConf.eu\n\n<iframe width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/x7cQ3mrcKaY\" frameborder=\"0\" allowfullscreen></iframe>\n\n\"A Facebook e Instagram, con React stiamo provando a spingerci oltre i limiti di ciò che è possibile realizzare sul web. Il mio talk comincerà con una breve introduzione al framework, e poi approfondirà tre argomenti controversi: Gettare via la nozione dei template e costruire le viste con JavaScript, effettuare il “ri-rendering” dell'intera applicazione quando i dati cambiano, e un'implementazione leggera del DOM e degli eventi.\" -- [Pete Hunt](http://www.petehunt.net/)\n\n* * *\n\n### Pensare in react - tagtree.tv\n\nUn video di [tagtree.tv](http://tagtree.tv/) che espone i principi di [Pensare in React](/docs/thinking-in-react.html) mentre costruisci una semplice applicazione\n<figure><a href=\"http://tagtree.tv/thinking-in-react\"><img src=\"../images/docs/thinking-in-react-tagtree.png\"></a></figure>\n\n* * *\n\n### I Segreti del DOM Virtuale - MtnWest JS\n\n<iframe width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/h3KksH8gfcQ\" frameborder=\"0\" allowfullscreen></iframe>\n\n\"In questo talk discuterò perché abbiamo costruito un DOM virtuale, i vantaggi rispetto ad altri sistemi, e la sua rilevanza per il futuro della tecnologia dei browser.\" -- [Pete Hunt](http://www.petehunt.net/)\n\n* * *\n\n### Pensare in grande con React\n\n\"Sulla carta, tutti questi framework JS sembrano promettenti: implementazioni pulite, design veloce del codice, esecuzione perfetta. Ma che succede quando metti JavaScript sotto stress? Che succede se gli dài in pasto 6 megabyte di codice? In questo talk investigheremo come si comporta React in situazioni di stress elevato, e come ha aiutato il nostro team a costruire codice sicuro ad una scala enorme.\"\n<figure><a href=\"https://skillsmatter.com/skillscasts/5429-going-big-with-react#video\"><img src=\"https://i.vimeocdn.com/video/481670116_650.jpg\"></a></figure>\n\n* * *\n\n### CodeWinds\n\n[Pete Hunt](http://www.petehunt.net/) ha parlato con [Jeff Barczewski](http://jeff.barczewski.com/) a proposito di React nell'Episodio 4 di CodeWinds.\n<figure><a href=\"http://codewinds.com/4\"><img src=\"../images/docs/codewinds-004.png\"></a></figure>\n\n<table width=\"100%\"><tr><td>\n02:08 - Cos'è React e perché usarlo?<br />\n03:08 - La relazione simbiotica di ClojureScript e React<br />\n04:54 - La storia di React e il perché è stato creato<br />\n09:43 - Aggiornare una pagina web con React senza usare data binding<br />\n13:11 - Usare il DOM virtuale per cambiare il DOM del browser<br />\n13:57 - Programmare con React, rendering in HTML, canvas, ed altro<br />\n16:45 - Lavorare con i designer. Paragone con Ember ed AngularJS<br />\n21:45 - Il Compilatore JSX che unisce HTML e il javascript di React<br />\n23:50 - Autobuilding JSX e strumenti nel browser per React<br />\n24:50 - Trucchi e suggerimenti per lavorare con React, primi passi<br />\n</td><td>\n27:17 - Rendering HTML lato server con Node.js. Rendering backend<br />\n29:20 - React evoluto tramite sopravvivenza del più adatto a Facebook<br />\n30:15 - Idee per avere lo stato sul server e il client, usando web sockets.<br />\n32:05 - React-multiutente - stato mutevole distribuito usando Firebase<br />\n33:03 - Miglior debug con React usando le transizioni di stato, ripetere eventi<br />\n34:08 - Differenze con i Web Components<br />\n34:25 - Compagnie rilevanti che usano React<br />\n35:16 - Si può creare un plugin backend di React per generare PDF?<br />\n36:30 - Futuro di React, cosa viene dopo?<br />\n39:38 - Contribuire e ricevere aiuto<br />\n</td></tr></table>\n\n[Leggi le note dell'episodio](http://codewinds.com/4)\n\n* * *\n\n### JavaScript Jabber\n\n[Pete Hunt](http://www.petehunt.net/) e [Jordan Walke](https://github.com/jordwalke) hanno parlato di React in JavaScript Jabber 73.\n<figure><a href=\"http://javascriptjabber.com/073-jsj-react-with-pete-hunt-and-jordan-walke/#content\"><img src=\"../images/docs/javascript-jabber.png\"></a></figure>\n\n<table width=\"100%\"><tr><td>\n01:34 – Introduzione di Pete Hunt<br />\n02:45 – Introduzione di Jordan Walke<br />\n04:15 – React<br />\n06:38 – 60 Frame Al Secondo<br />\n09:34 – Data Binding<br />\n12:31 – Performance<br />\n17:39 – Algoritmo di Differenza<br />\n19:36 – Manipolazione del DOM\n</td><td>\n23:06 – Supporto per node.js<br />\n24:03 – rendr<br />\n26:02 – JSX<br />\n30:31 – requestAnimationFrame<br />\n34:15 – React e le Applicazioni<br />\n38:12 – Utenti React Khan Academy<br />\n39:53 – Farlo funzionare\n</td></tr></table>\n\n[Leggi la trascrizione completa](http://javascriptjabber.com/073-jsj-react-with-pete-hunt-and-jordan-walke/)\n\n* * *\n\n### Introduzione a React.js - Facebook Seattle\n\n<iframe width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/XxVg_s8xAms\" frameborder=\"0\" allowfullscreen></iframe>\n\nDi [Tom Occhino](http://tomocchino.com/) e [Jordan Walke](https://github.com/jordwalke)\n\n* * *\n\n### Backbone + React + Middleman Screencast\n<iframe width=\"650\" height=\"488\" src=\"https://www.youtube-nocookie.com/embed/iul1fWHVU6A\" frameborder=\"0\" allowfullscreen></iframe>\n\nBackbone è una grande maniera di interfacciare una API REST con React. Questo screencast mostra come integrare i due usando [Backbone-React-Component](https://github.com/magalhas/backbone-react-component). Middleman è il framework utilizzato in questo esempio, ma può essere facilmente sostituito con altri framework. Si può trovare un template supportato per questo esempio [qui](https://github.com/jbhatab/middleman-backbone-react-template). -- [Open Minded Innovations](http://www.openmindedinnovations.com/)\n\n* * *\n\n### Sviluppare Interfacce Utente Con React - Super VanJS\n\n<iframe width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/1OeXsL5mr4g\" frameborder=\"0\" allowfullscreen></iframe>\n\nDi [Steven Luscher](https://github.com/steveluscher)\n\n* * *\n\n### Introduzione a React - LAWebSpeed meetup\n\n<iframe width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/SMMRJif5QW0\" frameborder=\"0\" allowfullscreen></iframe>\n\nDi [Stoyan Stefanov](http://www.phpied.com/)\n\n* * *\n\n### React, o come rendere la vita più semplice - FrontEnd Dev Conf '14\n\n<iframe width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/YJNUK0EA_Jo\" frameborder=\"0\" allowfullscreen></iframe>\n\n**In Russo** di [Alexander Solovyov](http://solovyov.net/)\n\n* * *\n\n### \"Programmazione funzionale del DOM\" - Meteor DevShop 11\n\n<iframe width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/qqVbr_LaCIo\" frameborder=\"0\" allowfullscreen></iframe>\n\n* * *\n\n### \"Ripensare lo Sviluppo di Applicazioni Web a Facebook\" - Facebook F8 Conference 2014\n\n<iframe width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/nYkdrAPrdcw\" frameborder=\"0\" allowfullscreen></iframe>\n\n* * *\n\n### React e Flux: Costruire Applicazioni con un Flusso Dati Unidirezionale - Forward JS 2014\n\n<iframe width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/i__969noyAM\" frameborder=\"0\" allowfullscreen></iframe>\n\nGli ingegneri di Facebook [Bill Fisher](https://twitter.com/fisherwebdev) e [Jing Chen](https://twitter.com/jingc) parlano di Flux e React, e di come usare un'architettura dell'applicazione con un flusso di dati unidirezionale rende gran parte del loro codice più pulito.\n\n* * *\n\n### Rendering Lato Server di Applicazioni Isomorfiche a SoundCloud\n\n<iframe src=\"https://player.vimeo.com/video/108488724\" width=\"100%\" height=\"365\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>\n\n[Andres Suarez](https://github.com/zertosh) ci accompagna alla scoperta di come [SoundCloud](https://developers.soundcloud.com/blog/) usa React e Flux per il rendering lato server.\n\n[Slide e codice d'esempio](https://github.com/zertosh/ssr-demo-kit)\n\n* * *\n\n### Introduzione a React Native (+Playlist) - React.js Conf 2015\n\n<iframe width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/KVZ-P-ZI6W4?list=PLb0IAmt7-GS1cbw4qonlQztYV1TAW0sCr\" frameborder=\"0\" allowfullscreen></iframe>\n\n[Tom Occhino](https://twitter.com/tomocchino) ripercorre il passato e il presente di React nel 2015, e ci mostra dove è diretto nell'immediato futuro.\n",
        "type": "MarkdownRemark",
        "contentDigest": "2d81faadb25b79bf4bba113a26042dc0",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Video",
        "id": "videos-it-IT",
        "permalink": "docs/videos-it-IT.html",
        "prev": "conferences-it-IT.html",
        "next": "complementary-tools-it-IT.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/community/videos.it-IT.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/community/videos.it-IT.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/community/videos.it-IT.md",
      "fields": {
        "slug": "docs/videos-it-IT.html",
        "path": "community/videos.it-IT.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/community/videos.ko-KR.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/community/videos.ko-KR.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/community/videos.ko-KR.md absPath of file",
      "internal": {
        "content": "---\nid: videos-ko-KR\ntitle: 비디오들\npermalink: docs/videos-ko-KR.html\nprev: conferences-ko-KR.html\nnext: complementary-tools-ko-KR.html\n---\n\n### Rethinking best practices - JSConf.eu\n\n<iframe width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/x7cQ3mrcKaY\" frameborder=\"0\" allowfullscreen></iframe>\n\n\"페이스북과 인스타그램에서, 우리는 React 를 이용해 웹에서 벌어질 수 있는 한계를 뛰어넘으려 노력하고 있습니다. 저는 프레임워크에 대한 짤막한 소개로 시작해서, 논쟁이 벌어질 수 있는 다음의 세가지 주제로 넘어갈겁니다. 템플릿의 개념을 버리고 JavaScript 를 이용해 View 를 구축하기, 자료가 변할때 전체 어플리케이션을 다시 그리기(“re-rendering”), 그리고 DOM과 events의 경량화된 구현 입니다.\" -- [Pete Hunt](http://www.petehunt.net/)\n\n* * *\n\n### Thinking in react - tagtree.tv\n\n[tagtree.tv](http://tagtree.tv/)의 비디오는 간단한 어플리케이션을 구성하면서 [Thinking in React](/docs/thinking-in-react-ko-KR.html)의 원리들을 전달합니다.\n<figure><a href=\"http://tagtree.tv/thinking-in-react\"><img src=\"../images/docs/thinking-in-react-tagtree.png\"></a></figure>\n\n* * *\n\n### Secrets of the Virtual DOM - MtnWest JS\n\n<iframe width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/h3KksH8gfcQ\" frameborder=\"0\" allowfullscreen></iframe>\n\n\"이번에는 왜 우리가 virtual DOM을 만들었는지, 이것이 다른 시스템들과는 어떻게 다른지, 그리고 브라우져 기술들의 미래와 어떻게 관련이 있는지에 대해서 이야기 해 볼 겁니다.\" -- [Pete Hunt](http://www.petehunt.net/)\n\n* * *\n\n### Going big with React\n\n\"이 발표에서, 이 모든 JS 프레임워크가 다음을 약속하는것처럼 보입니다: 깨끗한 구현들, 빠른 코드 디자인, 완전한 수행. 그런데 당신이 JavaScript 스트레스 테스트를 할때, 어떤 일이 발생합니까? 혹은 6MB의 코드를 던지면 무슨일이 발생합니까? 이번에는 높은 스트레스 환경에서 React가 어떻게 작동하는지, 그리고 이것이 우리 팀이 방대한 크기의 코드를 안전하게 구성하는데 어떻게 도움이 되어줄지를 조사해 볼겁니다.\"\n[![](https://i.vimeocdn.com/video/481670116_650.jpg)](https://skillsmatter.com/skillscasts/5429-going-big-with-react#video)\n\n* * *\n\n### CodeWinds\n\nCodeWinds Episode 4 에서 [Pete Hunt](http://www.petehunt.net/)와 [Jeff Barczewski](http://jeff.barczewski.com/)가 React에 대해서 이야기 합니다.\n\n<figure><a href=\"http://codewinds.com/4\"><img src=\"../images/docs/codewinds-004.png\"></a></figure>\n\n<table width=\"100%\"><tr><td>\n02:08 - What is React and why use it?<br />\n03:08 - The symbiotic relationship of ClojureScript and React<br />\n04:54 - The history of React and why it was created<br />\n09:43 - Updating web page with React without using data binding<br />\n13:11 - Using the virtual DOM to change the browser DOM<br />\n13:57 - Programming with React, render targets HTML, canvas, other<br />\n16:45 - Working with designers. Contrasted with Ember and AngularJS<br />\n21:45 - JSX Compiler bridging HTML and React javascript<br />\n23:50 - Autobuilding JSX and in browser tools for React<br />\n24:50 - Tips and tricks to working with React, getting started<br />\n</td><td>\n27:17 - Rendering HTML on the server with Node.js. Rendering backends<br />\n29:20 - React evolved through survival of the fittest at Facebook<br />\n30:15 - Ideas for having state on server and client, using web sockets.<br />\n32:05 - React-multiuser - distributed shared mutable state using Firebase<br />\n33:03 - Better debugging with React using the state transitions, replaying events<br />\n34:08 - Differences from Web Components<br />\n34:25 - Notable companies using React<br />\n35:16 - Could a React backend plugin be created to target PDF?<br />\n36:30 - Future of React, what's next?<br />\n39:38 - Contributing and getting help<br />\n</td></tr></table>\n\n[방송 자료 읽어보기](http://codewinds.com/4)\n\n* * *\n\n### JavaScript Jabber\n\nJavaScript Jabber 73에서 [Pete Hunt](http://www.petehunt.net/)와 [Jordan Walke](https://github.com/jordwalke)가 React에 대해서 이야기했습니다.\n\n<figure><a href=\"http://javascriptjabber.com/073-jsj-react-with-pete-hunt-and-jordan-walke/#content\"><img src=\"../images/docs/javascript-jabber.png\"></a></figure>\n\n<table width=\"100%\"><tr><td>\n01:34 – Pete Hunt Introduction<br />\n02:45 – Jordan Walke Introduction<br />\n04:15 – React<br />\n06:38 – 60 Frames Per Second<br />\n09:34 – Data Binding<br />\n12:31 – Performance<br />\n17:39 – Diffing Algorithm<br />\n19:36 – DOM Manipulation\n</td><td>\n23:06 – Supporting node.js<br />\n24:03 – rendr<br />\n26:02 – JSX<br />\n30:31 – requestAnimationFrame<br />\n34:15 – React and Applications<br />\n38:12 – React Users Khan Academy<br />\n39:53 – Making it work\n</td></tr></table>\n\n[전체 기록 읽어보기](http://javascriptjabber.com/073-jsj-react-with-pete-hunt-and-jordan-walke/)\n\n* * *\n\n### Introduction to React.js - Facebook Seattle\n\n<iframe width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/XxVg_s8xAms\" frameborder=\"0\" allowfullscreen></iframe>\n\nBy [Tom Occhino](http://tomocchino.com/), [Jordan Walke](https://github.com/jordwalke)\n\n* * *\n\n### Backbone + React + Middleman Screencast\n<iframe width=\"650\" height=\"488\" src=\"https://www.youtube-nocookie.com/embed/iul1fWHVU6A\" frameborder=\"0\" allowfullscreen></iframe>\n\nBackbone은 React로 REST API를 제공하기 위한 아주 좋은 방법입니다. 이 화면중개는 [Backbone-React-Component](https://github.com/magalhas/backbone-react-component)을 이용해서 어떻게 이 두가지를 연동하는지 보여줍니다. Middleman은 이 예제에서 사용되는 프레임워크이지만, 쉽게 다른 프레임워크로 대체하실 수 있습니다. 지원되는 템플릿은 [이곳](https://github.com/jbhatab/middleman-backbone-react-template)에서 찾으실 수 있습니다. -- [열린 마음의 혁명들](http://www.openmindedinnovations.com/)\n\n* * *\n\n### Developing User Interfaces With React - Super VanJS\n\n<iframe width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/1OeXsL5mr4g\" frameborder=\"0\" allowfullscreen></iframe>\n\nBy [Steven Luscher](https://github.com/steveluscher)\n\n* * *\n\n### Introduction to React - LAWebSpeed meetup\n\n<iframe width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/SMMRJif5QW0\" frameborder=\"0\" allowfullscreen></iframe>\n\nby [Stoyan Stefanov](http://www.phpied.com/)\n\n* * *\n\n### React, or how to make life simpler - FrontEnd Dev Conf '14\n\n<iframe width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/YJNUK0EA_Jo\" frameborder=\"0\" allowfullscreen></iframe>\n\n**러시아어** by [Alexander Solovyov](http://solovyov.net/)\n\n* * *\n\n### \"Functional DOM programming\" - Meteor DevShop 11\n\n<iframe width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/qqVbr_LaCIo\" frameborder=\"0\" allowfullscreen></iframe>\n\n* * *\n\n### \"Rethinking Web App Development at Facebook\" - Facebook F8 Conference 2014\n\n<iframe width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/nYkdrAPrdcw\" frameborder=\"0\" allowfullscreen></iframe>\n\n* * *\n\n### React and Flux: Building Applications with a Unidirectional Data Flow - Forward JS 2014\n\n<iframe width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/embed/i__969noyAM\" frameborder=\"0\" allowfullscreen></iframe>\n\nFacebook 개발자 [Bill Fisher](https://twitter.com/fisherwebdev)와 [Jing Chen](https://twitter.com/jingc)가 Flux 와 React 에 대해서 이야기합니다. 그리고 어떻게 단일 방향의 자료흐름을 사용하는 어플리케이션 구조가 방대한 코드를 정리하는지에 대해서 이야기합니다.\"\n\n* * *\n\n### Server-Side Rendering of Isomorphic Apps at SoundCloud\n\n<iframe src=\"https://player.vimeo.com/video/108488724\" width=\"100%\" height=\"365\" frameborder=\"0\" allowfullscreen></iframe>\n\nServer-side rendering을 위해 [SoundCloud](https://developers.soundcloud.com/blog/)가 React 와 Flux를 사용하는지 by [Andres Suarez](https://github.com/zertosh)\n[발표 자료와 예제 코드](https://github.com/zertosh/ssr-demo-kit)\n\n* * *\n\n### Introducing React Native (+Playlist) - React.js Conf 2015\n\n<iframe width=\"650\" height=\"366\" src=\"https://www.youtube-nocookie.com/v/KVZ-P-ZI6W4&index=1&list=PLb0IAmt7-GS1cbw4qonlQztYV1TAW0sCr\" frameborder=\"0\" allowfullscreen></iframe>\n\n2015년에 [Tom Occhino](https://twitter.com/tomocchino)님이 React의 과거와 현재를 리뷰하고 나아갈 방향을 제시했습니다.\n",
        "type": "MarkdownRemark",
        "contentDigest": "16f78c119e64e72ba169ee3dcd8726db",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "비디오들",
        "id": "videos-ko-KR",
        "permalink": "docs/videos-ko-KR.html",
        "prev": "conferences-ko-KR.html",
        "next": "complementary-tools-ko-KR.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/community/videos.ko-KR.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/community/videos.ko-KR.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/community/videos.ko-KR.md",
      "fields": {
        "slug": "docs/videos-ko-KR.html",
        "path": "community/videos.ko-KR.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/accessibility.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/accessibility.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/accessibility.md absPath of file",
      "internal": {
        "content": "---\nid: accessibility\ntitle: Accessibility\npermalink: docs/accessibility.html\n---\n\n## 为何要需要可访问性？\n\nWeb可访问性（也被称为 [**a11y**](https://en.wiktionary.org/wiki/a11y)）是让网站对所有人群可用的的设计和发明。通过辅助技术来与页面交互对于可访问性支持是必要的。\n\nReact完全支持构建可访问性的页面， 通常通过使用标准的 HTML 技术。\n\n## 标准和指导\n\n### WCAG\n\n[网络内容可访问性指南](https://www.w3.org/WAI/intro/wcag) 为创建可访问性站点提供了指导。\n\n下列的WCAG列表提供了概览：\n\n- [WCAG checklist from Wuhcag](https://www.wuhcag.com/wcag-checklist/)\n- [WCAG checklist from WebAIM](http://webaim.org/standards/wcag/checklist)\n- [Checklist from The A11Y Project](http://a11yproject.com/checklist.html)\n\n### WAI-ARIA\n\n[网络可访问倡议 - 可访问性富网络应用](https://www.w3.org/WAI/intro/aria) 文档涵盖了构建完整的可访问JavaScript工具技术。\n\n注意JSX完全支持所有的`aria-*` HTML属性。然而，在React中大部分DOM属性和特性采用小驼峰命名规则，这些特性应该采用小写：\n\n```javascript{3,4}\n<input\n  type=\"text\" \n  aria-label={labelText}\n  aria-required=\"true\"\n  onChange={onchangeHandler}\n  value={inputValue}\n  name=\"name\"\n/>\n```\n\n## 可访问表单\n\n### 标签\n\n每个HTML表单控件，例如`<input>` 和 `<textarea>`，都需要被标记上的可访问的标签。我们需要提供描述性的标签同时也展示给屏幕阅读器。\n\n下列资源展示了如何使用标签：\n\n- [W3C关于如何标记元素的说明](https://www.w3.org/WAI/tutorials/forms/labels/)\n- [WebAIM关于如何标记元素的说明](http://webaim.org/techniques/forms/controls)\n- [Paciello小组关于可访问性名称的说明](https://www.paciellogroup.com/blog/2017/04/what-is-an-accessible-name/)\n\n尽管这些标准的HTML实践可以直接用于React，但需要注意在JSX中，`for`特性被写作`htmlFor`:\n\n```javascript{1}\n<label htmlFor=\"namedInput\">Name:</label>\n<input id=\"namedInput\" type=\"text\" name=\"name\"/>\n```\n\n### 告知用户异常\n\n异常环境需要所有用户理解。下列链接也说明了如何显示错误文案给屏幕阅读器：\n\n- [W3C演示用户提醒](https://www.w3.org/WAI/tutorials/forms/notifications/)\n- [WebAIM检查表单验证](http://webaim.org/techniques/formvalidation/)\n\n## 焦点控件\n\n确保你的网络应用可以完全仅通过键盘来操作：\n\n- [WebAIM 关于键盘可访问性的演讲](http://webaim.org/techniques/keyboard/)\n\n### 键盘焦点和焦点边框\n\n键盘焦点涉及DOM中被键盘选中用于接受输入的当前元素。我们可以在每一处地方看见如下图所示的类似的焦点边框：\n\n<img src=\"/images/docs/keyboard-focus.png\" alt=\"Blue keyboard focus outline around a selected link.\" />\n\n仅能使用CSS来移除这一边框，若你要用其他边框来替换他，例如可以设置`outline: 0`。\n\n### 定位到期望内容的机制\n\n在应用中提供一种机制用以允许用户跳过之前的导航部分来帮助和加速键盘导航。\n\nSkiplinks 或 Skip Navigation Links 隐藏在导航链接中，仅当用户用键盘与页面进行交互时可见。他们非常容易通过页面内部锚点和一些样式来实现：\n\n- [WebAIM - Skip Navigation Links](http://webaim.org/techniques/skipnav/)\n\n也可使用路标元素和角色作为辅助技术，例如`<main>` 和 `<aside>`，来将页面划分区域以允许用户快速导航到这些部分。\n\n阅读更多了解关于使用这些元素以提高可访问性：\n\n- [Deque University - HTML 5 and ARIA Landmarks](https://dequeuniversity.com/assets/html/jquery-summit/html5/slides/landmarks.html)\n\n### 编程式地管理焦点\n\n我们的React应用会在运行期间持续地修改HTML DOM元素，有时会导致键盘焦点丢失或定位到未知元素上。为修复该问题，我们需要用代码微调键盘焦点到正确的方向。例如，重设键盘焦点到一个打开模态窗口的按钮上，在模态窗口关闭之后。\n\nMozilla开发者网络可以查看并描述了我们如何构建[键盘导航的JavaScript工具](https://developer.mozilla.org/en-US/docs/Web/Accessibility/Keyboard-navigable_JavaScript_widgets)。\n\n为在React中设置焦点，我们可使用[Refs to Components](refs-and-the-dom.html)。\n\n为使用它，我们先在组件类的JSX中创建一个元素的ref：\n\n```javascript{2-3,7}\nrender() {\n  // Use the `ref` callback to store a reference to the text input DOM\n  // element in an instance field (for example, this.textInput).\n  return (\n    <input\n      type=\"text\"\n      ref={(input) => { this.textInput = input; }} />\n  );\n}\n```\n\n而后，当需要时，我们可以在我们组件的其他地方设置焦点：\n\n ```javascript\n focus() {\n   // Explicitly focus the text input using the raw DOM API\n   this.textInput.focus();\n }\n ```\n\n一个不错的焦点管理的例子是[react-aria-modal](https://github.com/davidtheclark/react-aria-modal)。这是个相对罕见的完全可访问的模态窗口的例子。不仅将初始焦点设在取消按钮（阻止用户意外地激活成功操作）和在模态对话框内记录键盘焦点，其还重置焦点回到最初触发对话框的元素上。\n\n>注意：\n\n> 尽管这对于可访问性特性非常重要，其也应该审慎地应用。当被中断时使用其来修复键盘的焦点，而不是尝试和期望用户如何使用应用。\n\n## 更为复杂的工具\n\n更为复杂的用户体验并不意味着更少的可访问性特性。反之，可访问性能够通过将其尽可能编码到HTML中而非常容易实现，即使最为复杂的工具也能够进行可访问性编码。\n\n这里我们要求具备 [ARIA 角色](https://www.w3.org/TR/wai-aria/roles) 以及 [ARIA 声明和属性](https://www.w3.org/TR/wai-aria/states_and_properties)的相关知识。这些工具箱涵盖了所有JSX支持的同时能够支持构建完整的可访问性高阶函数式的React组件的HTML特性。\n\n每一类型的工具都具有特定的设计模式，并由用户和用户代理以某些方式生效：\n\n- [WAI-ARIA 开发实践 - 设计模式和工具](https://www.w3.org/TR/wai-aria-practices/#aria_ex)\n- [Heydon Pickering - ARIA 例子](http://heydonworks.com/practical_aria_examples/)\n- [包含性组件](https://inclusive-components.design/)\n\n## 其他要点的考量\n\n### 设置语言\n\n在页面中声明语言类型以让屏幕阅读器软件能够使用其来选择正确的发音设置：\n\n- [WebAIM - 文档语言](http://webaim.org/techniques/screenreader/#language)\n\n### 设置文档标题\n\n我们可以在React中使用[React文档标题组件](https://github.com/gaearon/react-document-title)来进行设置。\n\n### 颜色对比\n\n确保页面上所有可读的文本都有丰富的颜色对比以让低视力用户能够最大程度的可读：\n\n- [WCAG - 理解必要的颜色对比](https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html)\n- [关于颜色对比以及为何需要重新思考它](https://www.smashingmagazine.com/2014/10/color-contrast-tips-and-tools-for-accessibility/)\n- [A11yProject - 什么是颜色对比](http://a11yproject.com/posts/what-is-color-contrast/)\n\n手动地计算页面上所有合适的颜色组合十分无趣，替代地，你可以[通过Colorable来计算整个可访问性颜色](http://jxnblk.com/colorable/)。\n\n之前提到的aXe和WAVE也包含了颜色对比测试并会报告颜色对比错误。\n\n若你想扩展你的对比测试能力，可以使用如下工具：\n\n- [WebAIM - Color Contrast Checker](http://webaim.org/resources/contrastchecker/)\n\n- [The Paciello Group - Color Contrast Analyzer](https://www.paciellogroup.com/resources/contrastanalyser/)\n\n## 开发及测试工具\n\n在创建可访问性网路应用时，有大量工具可以协助我们完成该工作。\n\n### 键盘\n\n目前最简单也是最重要的检查是通过键盘来整个页面是否达标和使用。做法如下：\n\n1. 拔掉鼠标。\n2. 使用`Tab`和`Shift+Tab`切换到浏览器。\n3. 使用`Enter`激活元素。\n4. 当满足要求后，使用键盘的方向键与一些元素进行交互，例如菜单和下拉列表。\n\n### 开发助手\n\n我们可以在JSX代码里直接查看一些可访问性特性。通常在一些识别JSX语法的集成开发环境中（IDE）已经提供了为ARIA用户（roles），声明和属性的智能检查。我们也可采用如下工具：\n\n#### eslint-plugin-jsx-a11y\n\n 基于ESLint的[eslint-plugin-jsx-a11y](https://github.com/evcohen/eslint-plugin-jsx-a11y) 插件提供了在JSX代码中关于可访问性问题的抽象语法树检查反馈。大部分IDE能够直接在代码分析和源码窗口中直接集成这些发现。\n\n[Create React App](https://github.com/facebookincubator/create-react-app)包含了带有部分激活规则的这一插件。若想要支持更多的可访问性规则，你可以在项目的根目录下创建一个`.eslintrc`文件并包含如下内容：\n\n  ```json\n  {\n    \"extends\": [\"react-app\", \"plugin:jsx-a11y/recommended\"],\n    \"plugins\": [\"jsx-a11y\"]\n  }\n  ```\n\n### 浏览器的可访问性测试\n\n在浏览器里已有大量工具能够在页面上运行可访问性审计。可以结合之前提到过的其他可访问性检查工具来使用他们，因为他们仅可以测试HTML中技术上的可访问性。\n\n#### aXe, aXe-core and react-axe\n\n双端系统为应用提供了自动化和端到端的可访问性测试[aXe-core](https://www.deque.com/products/axe-core/) 。这一模块包含了Selenium的集成。\n\n[可访问性Engine](https://www.deque.com/products/axe/) 或 aXe，是一款基于`aXe-core`构建的可访问性检测器的浏览器插件。\n\n你也可以在开发和调试环节，使用[react-axe](https://github.com/dylanb/react-axe)模块在控制台中直接报告可访问性问题。\n\n#### WebAIM WAVE\n\n[Web Accessibility Evaluation Tool](http://wave.webaim.org/extension/) 是另外一个可访问性浏览器插件。\n\n#### Accessibility inspectors and the Accessibility Tree\n\n[可访问树（The Accessibility Tree）](https://www.paciellogroup.com/blog/2015/01/the-browser-accessibility-tree/) 是一个DOM结构的子集，其包含每个应暴露给辅助性工具，如屏幕阅读器等DOM元素的可访问性对象。\n\n在一些浏览器我们可以在可访问树中轻松地访问每个元素的可访问性信息：\n\n- [在Chrome浏览器下激活Accessibility Inspector](https://gist.github.com/marcysutton/0a42f815878c159517a55e6652e3b23a)\n- [在OS X系统下的Safari浏览器使用Accessibility Inspector](https://developer.apple.com/library/content/documentation/Accessibility/Conceptual/AccessibilityMacOSX/OSXAXTestingApps.html)\n\n### 屏幕阅读器\n\n结合屏幕阅读器进行测试应构成可访问性测试的一部分。\n\n注意浏览器 / 屏幕阅读器的结合。建议在浏览器中选择最适合的屏幕阅读器测试应用程序。\n\n#### FireFox下的NVDA\n\n[NonVisual Desktop Access](https://www.nvaccess.org/) 或 NVDA是一款广泛使用的开源的窗口屏幕阅读器。\n\n关于如何更好使用NVDA参考如下指南:\n\n- [WebAIM - 使用 NVDA来计算可访问性](http://webaim.org/articles/nvda/)\n- [Deque - NVDA 快捷键介绍](https://dequeuniversity.com/screenreaders/nvda-keyboard-shortcuts)\n\n#### Safari下的VoiceOver\n\nVoiceOver是一款集成在苹果设备的屏幕阅读器。\n\n参考以下指南了解关于如何集合和使用VoiceOver：\n\n- [WebAIM - 使用 VoiceOver 计算可访问性](http://webaim.org/articles/voiceover/)\n- [Deque - OSX 上的VoiceOver 快捷键操作](https://dequeuniversity.com/screenreaders/voiceover-keyboard-shortcuts)\n- [Deque - iOS上的VoiceOver快捷键操作](https://dequeuniversity.com/screenreaders/voiceover-ios-shortcuts)\n\n#### Internet Explorer下的JAWS\n\n[Job Access With Speech](http://www.freedomscientific.com/Products/Blindness/JAWS) or JAWS，是一款在Windows平台广泛使用的屏幕阅读器。\n\n参考以下链接了解关于更好使用JAWS\n\n- [WebAIM - 使用 JAWS 计算可访问性](http://webaim.org/articles/jaws/)\n- [Deque - JAWS 快捷键操作](https://dequeuniversity.com/screenreaders/jaws-keyboard-shortcuts)\n",
        "type": "MarkdownRemark",
        "contentDigest": "7c1c4b3bc208c6624d970f1535945264",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Accessibility",
        "id": "accessibility",
        "permalink": "docs/accessibility.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/accessibility.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/accessibility.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/accessibility.md",
      "fields": {
        "slug": "docs/accessibility.html",
        "path": "docs/accessibility.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/addons-animation.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/addons-animation.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/addons-animation.md absPath of file",
      "internal": {
        "content": "---\nid: animation\ntitle: Animation Add-Ons\npermalink: docs/animation.html\nlayout: docs\ncategory: Add-Ons\nredirect_from:\n  - \"docs/animation-ja-JP.html\"\n  - \"docs/animation-ko-KR.html\"\n  - \"docs/animation-zh-CN.html\"\n---\n\n> Note:\n>\n> `ReactTransitionGroup` and `ReactCSSTransitionGroup` have been moved to the [`react-transition-group`](https://github.com/reactjs/react-transition-group/tree/v1-stable) package that is maintained by the community. Its 1.x branch is completely API-compatible with the existing addons. Please file bugs and feature requests in the [new repository](https://github.com/reactjs/react-transition-group/tree/v1-stable).\n\nThe [`ReactTransitionGroup`](#low-level-api-reacttransitiongroup) add-on component is a low-level API for animation, and [`ReactCSSTransitionGroup`](#high-level-api-reactcsstransitiongroup) is an add-on component for easily implementing basic CSS animations and transitions.\n\n## High-level API: ReactCSSTransitionGroup\n\n`ReactCSSTransitionGroup` is a high-level API based on [`ReactTransitionGroup`](#low-level-api-reacttransitiongroup) and is an easy way to perform CSS transitions and animations when a React component enters or leaves the DOM. It's inspired by the excellent [ng-animate](https://docs.angularjs.org/api/ngAnimate) library.\n\n**Importing**\n\n```javascript\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'; // ES6\nvar ReactCSSTransitionGroup = require('react-addons-css-transition-group'); // ES5 with npm\n```\n\n```javascript{31-36}\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {items: ['hello', 'world', 'click', 'me']};\n    this.handleAdd = this.handleAdd.bind(this);\n  }\n\n  handleAdd() {\n    const newItems = this.state.items.concat([\n      prompt('Enter some text')\n    ]);\n    this.setState({items: newItems});\n  }\n\n  handleRemove(i) {\n    let newItems = this.state.items.slice();\n    newItems.splice(i, 1);\n    this.setState({items: newItems});\n  }\n\n  render() {\n    const items = this.state.items.map((item, i) => (\n      <div key={item} onClick={() => this.handleRemove(i)}>\n        {item}\n      </div>\n    ));\n\n    return (\n      <div>\n        <button onClick={this.handleAdd}>Add Item</button>\n        <ReactCSSTransitionGroup\n          transitionName=\"example\"\n          transitionEnterTimeout={500}\n          transitionLeaveTimeout={300}>\n          {items}\n        </ReactCSSTransitionGroup>\n      </div>\n    );\n  }\n}\n```\n\n> Note:\n>\n> You must provide [the `key` attribute](/docs/multiple-components.html#dynamic-children) for all children of `ReactCSSTransitionGroup`, even when only rendering a single item. This is how React will determine which children have entered, left, or stayed.\n\nIn this component, when a new item is added to `ReactCSSTransitionGroup` it will get the `example-enter` CSS class and the `example-enter-active` CSS class added in the next tick. This is a convention based on the `transitionName` prop.\n\nYou can use these classes to trigger a CSS animation or transition. For example, try adding this CSS and adding a new list item:\n\n```css\n.example-enter {\n  opacity: 0.01;\n}\n\n.example-enter.example-enter-active {\n  opacity: 1;\n  transition: opacity 500ms ease-in;\n}\n\n.example-leave {\n  opacity: 1;\n}\n\n.example-leave.example-leave-active {\n  opacity: 0.01;\n  transition: opacity 300ms ease-in;\n}\n```\n\nYou'll notice that animation durations need to be specified in both the CSS and the render method; this tells React when to remove the animation classes from the element and -- if it's leaving -- when to remove the element from the DOM.\n\n### Animate Initial Mounting\n\n`ReactCSSTransitionGroup` provides the optional prop `transitionAppear`, to add an extra transition phase at the initial mount of the component. There is generally no transition phase at the initial mount as the default value of `transitionAppear` is `false`. The following is an example which passes the prop `transitionAppear` with the value `true`.\n\n```javascript{5-6}\nrender() {\n  return (\n    <ReactCSSTransitionGroup\n      transitionName=\"example\"\n      transitionAppear={true}\n      transitionAppearTimeout={500}\n      transitionEnter={false}\n      transitionLeave={false}>\n      <h1>Fading at Initial Mount</h1>\n    </ReactCSSTransitionGroup>\n  );\n}\n```\n\nDuring the initial mount `ReactCSSTransitionGroup` will get the `example-appear` CSS class and the `example-appear-active` CSS class added in the next tick.\n\n```css\n.example-appear {\n  opacity: 0.01;\n}\n\n.example-appear.example-appear-active {\n  opacity: 1;\n  transition: opacity .5s ease-in;\n}\n```\n\nAt the initial mount, all children of the `ReactCSSTransitionGroup` will `appear` but not `enter`. However, all children later added to an existing `ReactCSSTransitionGroup` will `enter` but not `appear`.\n\n> Note:\n>\n> The prop `transitionAppear` was added to `ReactCSSTransitionGroup` in version `0.13`. To maintain backwards compatibility, the default value is set to `false`.\n>\n> However, the default values of `transitionEnter` and `transitionLeave` are `true` so you must specify `transitionEnterTimeout` and `transitionLeaveTimeout` by default. If you don't need either enter or leave animations, pass `transitionEnter={false}` or `transitionLeave={false}`.\n\n### Custom Classes\n\nIt is also possible to use custom class names for each of the steps in your transitions. Instead of passing a string into transitionName you can pass an object containing either the `enter` and `leave` class names, or an object containing the `enter`, `enter-active`, `leave-active`, and `leave` class names. If only the enter and leave classes are provided, the enter-active and leave-active classes will be determined by appending '-active' to the end of the class name. Here are two examples using custom classes:\n\n```javascript\n// ...\n<ReactCSSTransitionGroup\n  transitionName={ {\n    enter: 'enter',\n    enterActive: 'enterActive',\n    leave: 'leave',\n    leaveActive: 'leaveActive',\n    appear: 'appear',\n    appearActive: 'appearActive'\n  } }>\n  {item}\n</ReactCSSTransitionGroup>\n\n<ReactCSSTransitionGroup\n  transitionName={ {\n    enter: 'enter',\n    leave: 'leave',\n    appear: 'appear'\n  } }>\n  {item2}\n</ReactCSSTransitionGroup>\n// ...\n```\n\n### Animation Group Must Be Mounted To Work\n\nIn order for it to apply transitions to its children, the `ReactCSSTransitionGroup` must already be mounted in the DOM or the prop `transitionAppear` must be set to `true`.\n\nThe example below would **not** work, because the `ReactCSSTransitionGroup` is being mounted along with the new item, instead of the new item being mounted within it. Compare this to the [Getting Started](#getting-started) section above to see the difference.\n\n```javascript{4,6,13}\nrender() {\n  const items = this.state.items.map((item, i) => (\n    <div key={item} onClick={() => this.handleRemove(i)}>\n      <ReactCSSTransitionGroup transitionName=\"example\">\n        {item}\n      </ReactCSSTransitionGroup>\n    </div>\n  ));\n\n  return (\n    <div>\n      <button onClick={this.handleAdd}>Add Item</button>\n      {items}\n    </div>\n  );\n}\n```\n\n### Animating One or Zero Items\n\nIn the example above, we rendered a list of items into `ReactCSSTransitionGroup`. However, the children of `ReactCSSTransitionGroup` can also be one or zero items. This makes it possible to animate a single element entering or leaving. Similarly, you can animate a new element replacing the current element. For example, we can implement a simple image carousel like this:\n\n```javascript{10}\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n\nfunction ImageCarousel(props) {\n  return (\n    <div>\n      <ReactCSSTransitionGroup\n        transitionName=\"carousel\"\n        transitionEnterTimeout={300}\n        transitionLeaveTimeout={300}>\n        <img src={props.imageSrc} key={props.imageSrc} />\n      </ReactCSSTransitionGroup>\n    </div>\n  );\n}\n```\n\n### Disabling Animations\n\nYou can disable animating `enter` or `leave` animations if you want. For example, sometimes you may want an `enter` animation and no `leave` animation, but `ReactCSSTransitionGroup` waits for an animation to complete before removing your DOM node. You can add `transitionEnter={false}` or `transitionLeave={false}` props to `ReactCSSTransitionGroup` to disable these animations.\n\n> Note:\n>\n> When using `ReactCSSTransitionGroup`, there's no way for your components to be notified when a transition has ended or to perform any more complex logic around animation. If you want more fine-grained control, you can use the lower-level `ReactTransitionGroup` API which provides the hooks you need to do custom transitions.\n\n* * *\n\n## Low-level API: ReactTransitionGroup\n\n**Importing**\n\n```javascript\nimport ReactTransitionGroup from 'react-addons-transition-group' // ES6\nvar ReactTransitionGroup = require('react-addons-transition-group') // ES5 with npm\n```\n\n`ReactTransitionGroup` is the basis for animations. When children are declaratively added or removed from it (as in the [example above](#getting-started)), special lifecycle hooks are called on them.\n\n - [`componentWillAppear()`](#componentwillappear)\n - [`componentDidAppear()`](#componentdidappear)\n - [`componentWillEnter()`](#componentwillenter)\n - [`componentDidEnter()`](#componentdidenter)\n - [`componentWillLeave()`](#componentwillleave)\n - [`componentDidLeave()`](#componentdidleave)\n\n#### Rendering a Different Component\n\n`ReactTransitionGroup` renders as a `span` by default. You can change this behavior by providing a `component` prop. For example, here's how you would render a `<ul>`:\n\n```javascript{1}\n<ReactTransitionGroup component=\"ul\">\n  {/* ... */}\n</ReactTransitionGroup>\n```\n\nAny additional, user-defined, properties will become properties of the rendered component. For example, here's how you would render a `<ul>` with CSS class:\n\n```javascript{1}\n<ReactTransitionGroup component=\"ul\" className=\"animated-list\">\n  {/* ... */}\n</ReactTransitionGroup>\n```\n\nEvery DOM component that React can render is available for use. However, `component` does not need to be a DOM component. It can be any React component you want; even ones you've written yourself! Just write `component={List}` and your component will receive `this.props.children`.\n\n#### Rendering a Single Child\n\nPeople often use `ReactTransitionGroup` to animate mounting and unmounting of a single child such as a collapsible panel. Normally `ReactTransitionGroup` wraps all its children in a `span` (or a custom `component` as described above). This is because any React component has to return a single root element, and `ReactTransitionGroup` is no exception to this rule.\n\nHowever if you only need to render a single child inside `ReactTransitionGroup`, you can completely avoid wrapping it in a `<span>` or any other DOM component. To do this, create a custom component that renders the first child passed to it directly:\n\n```javascript\nfunction FirstChild(props) {\n  const childrenArray = React.Children.toArray(props.children);\n  return childrenArray[0] || null;\n}\n```\n\nNow you can specify `FirstChild` as the `component` prop in `<ReactTransitionGroup>` props and avoid any wrappers in the result DOM:\n\n```javascript\n<ReactTransitionGroup component={FirstChild}>\n  {someCondition ? <MyComponent /> : null}\n</ReactTransitionGroup>\n```\n\nThis only works when you are animating a single child in and out, such as a collapsible panel. This approach wouldn't work when animating multiple children or replacing the single child with another child, such as an image carousel. For an image carousel, while the current image is animating out, another image will animate in, so `<ReactTransitionGroup>` needs to give them a common DOM parent. You can't avoid the wrapper for multiple children, but you can customize the wrapper with the `component` prop as described above.\n\n* * *\n\n## Reference\n\n### `componentWillAppear()`\n\n```javascript\ncomponentWillAppear(callback)\n```\n\nThis is called at the same time as `componentDidMount()` for components that are initially mounted in a `TransitionGroup`. It will block other animations from occurring until `callback` is called. It is only called on the initial render of a `TransitionGroup`.\n\n* * *\n\n### `componentDidAppear()`\n\n```javascript\ncomponentDidAppear()\n```\n\nThis is called after the `callback` function that was passed to `componentWillAppear` is called.\n\n* * *\n\n### `componentWillEnter()`\n\n```javascript\ncomponentWillEnter(callback)\n```\n\nThis is called at the same time as `componentDidMount()` for components added to an existing `TransitionGroup`. It will block other animations from occurring until `callback` is called. It will not be called on the initial render of a `TransitionGroup`.\n\n* * *\n\n### `componentDidEnter()`\n\n```javascript\ncomponentDidEnter()\n```\n\nThis is called after the `callback` function that was passed to [`componentWillEnter()`](#componentwillenter) is called.\n\n* * *\n\n### `componentWillLeave()`\n\n```javascript\ncomponentWillLeave(callback)\n```\n\nThis is called when the child has been removed from the `ReactTransitionGroup`. Though the child has been removed, `ReactTransitionGroup` will keep it in the DOM until `callback` is called.\n\n* * *\n\n### `componentDidLeave()`\n\n```javascript\ncomponentDidLeave()\n```\n\nThis is called when the `willLeave` `callback` is called (at the same time as `componentWillUnmount()`).\n",
        "type": "MarkdownRemark",
        "contentDigest": "8388a7675939b40dce1008eb6831b423",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Animation Add-Ons",
        "id": "animation",
        "permalink": "docs/animation.html",
        "layout": "docs",
        "category": "Add-Ons",
        "redirect_from": [
          "docs/animation-ja-JP.html",
          "docs/animation-ko-KR.html",
          "docs/animation-zh-CN.html"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/addons-animation.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/addons-animation.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/addons-animation.md",
      "fields": {
        "slug": "docs/animation.html",
        "path": "docs/addons-animation.md",
        "redirect": "[\"docs/animation-ja-JP.html\",\"docs/animation-ko-KR.html\",\"docs/animation-zh-CN.html\"]"
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/error-boundaries.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/error-boundaries.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/error-boundaries.md absPath of file",
      "internal": {
        "content": "---\nid: error-boundaries\ntitle: Error Boundaries\npermalink: docs/error-boundaries.html\n---\n\n过去，组件内的 JavaScript 错误常常会破坏 React 内部状态并在下一次渲染时[产生](https://github.com/facebook/react/issues/4026) [加密的](https://github.com/facebook/react/issues/6895) [错误信息](https://github.com/facebook/react/issues/8579)。这些错误总会在应用代码的早期触发，但 React 并没有提供一种方式能够在组件内部优雅地来处理，也不能从错误中恢复。\n\n\n## 错误边界介绍\n\n部分 UI 的异常不应该破坏了整个应用。为了解决 React 用户的这一问题，React 16 引入了一种称为 “错误边界” 的新概念。\n\n错误边界是**用于捕获其子组件树 JavaScript 异常，记录错误并展示一个回退的 UI** 的 React 组件，而不是整个组件树的异常。错误边界在渲染期间、生命周期方法内、以及整个组件树构造函数内捕获错误。\n\n> **注意**\n>\n> 错误边界**无法**捕获如下错误:\n> * 事件处理 （[了解更多](https://reactjs.org/docs/error-boundaries.html#how-about-event-handlers)）\n> * 异步代码 （例如 `setTimeout` 或 `requestAnimationFrame` 回调函数）\n> * 服务端渲染\n> * 错误边界自身抛出来的错误 （而不是其子组件）\n\n一个类组件变成一个错误边界。如果它定义了生命周期方法 [`static getDerivedStateFromError()`](https://reactjs.org/docs/react-component.html#static-getderivedstatefromerror)或者[`componentDidCatch()`](https://reactjs.org/docs/react-component.html#componentdidcatch)中的任意一个或两个。当一个错误被扔出后，使用`static getDerivedStateFromError()`渲染一个退路UI。使用`componentDidCatch()`去记录错误信息。\n\n```js{6-14,17-20}\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n    logErrorToMyService(error, info);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n\n    return this.props.children; \n  }\n}\n```\n\n而后你可以像一个普通的组件一样使用：\n\n```js\n<ErrorBoundary>\n  <MyWidget />\n</ErrorBoundary>\n```\n\n错误边界工作机制类似于JavaScript `catch {}`，只是应用于组件。仅有类组件可以成为错误边界。实践中，大多数时间，你希望定义一个错误边界组件一次并将它贯穿你的整个应用。\n\n注意**错误边界仅可以捕获组件在树中比他低的组件的错误**。错误边界无法捕获其自身的错误。如果一个错误边界无法渲染错误信息，则错误会向上冒泡至最接近的错误边界。这也类似于 JavaScript 中 `catch {}` 的工作机制。\n\n## 在线演示\n\n检出[this example of declaring and using an error boundary](https://codepen.io/gaearon/pen/wqvxGa?editors=0010) 使用[React 16](https://reactjs.org/blog/2017/09/26/react-v16.0.html).\n\n\n## 错误边界放到哪里\n\n错误边界的粒度是由你决定。你可以将其包装在最顶层的路由组件显示给用户\"有东西出错\"消息，就像服务端框架经常处理崩溃一样。你也可以将单独的插件包装在错误边界内以保护应用其他部分不崩溃。\n\n## 未捕获错误的新行为\n\n这个改变有一个重要的暗示。**从React 16起，任何未被错误边界捕获的错误将导致卸载整个 React 组件树。**\n\n我们对这一决定饱含争论，但在我们的经验中放置下一个腐败的UI比完全移除它要更糟糕。例如，在类似 Messenger 的产品中留下一个异常的可见 UI 可能会导致用户将信息发错给别人。类似的，对于支付类的应用来说，什么都不展示也比显示一堆错误更好。\n\n这一改变意味着随着你迁入到 React 16，你将可能会发现一些已存在你应用中但未曾注意到的崩溃。增加错误边界能够让你在发生异常时提供更好的用户体验。\n\n例如，Facebook Messenger 将侧边栏、信息面板，对话框以及信息输入框包装在单独的错误边界中。如果其中的某些 UI 组件崩溃，其余部分仍然能够交互。\n\n我们也鼓励使用 JS 错误报告服务（或自行构建）这样你能够掌握在生产环境中发生的未捕获的异常，并将其修复。\n\n\n## 组件栈追踪\n\nReact 16 会将渲染期间所有在开发环境下的发生的错误打印到控制台，即使应用程序意外的将其掩盖。除了错误信息和 JavaScript 栈外，其还提供了组件栈追踪。现在你可以准确地查看发生在组件树内的错误信息：\n\n<img src=\"https://raw.githubusercontent.com/discountry/react/master/content/images/docs/error-boundaries-stack-trace.png\" alt=\"Error caught by Error Boundary component\" />\n\n你也可以在组件追踪堆栈中查看文件名和行号。这一功能在 [Create React App 项目](https://github.com/facebookincubator/create-react-app)中默认开启：\n\n<img src=\"https://raw.githubusercontent.com/discountry/react/master/content/images/docs/error-boundaries-stack-trace-line-numbers.png\" alt=\"Error caught by Error Boundary component with line numbers\" />\n\n若你不使用 Create React App，你可以手动添加该[插件](https://www.npmjs.com/package/babel-plugin-transform-react-jsx-source)到你的 Babel 配置中。注意其仅能在开发环境中使用并且**在生产环境中必须关闭**。\n\n> 注意\n>\n> 组件名称在栈追踪中的显示依赖于[`Function.name`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name)属性。 If you support older browsers and devices which may not yet provide this natively (e.g. IE 11), consider including a `Function.name` polyfill in your bundled application, such as [`function.name-polyfill`](https://github.com/JamesMGreene/Function.name). 另一种方法, 你可以明确地在所有组件上设置[`displayName`](https://reactjs.org/docs/react-component.html#displayname)属性。\n\n## 关于try/catch\n\n`try` / `catch` 非常棒，但其仅能用在命令式代码下：\n\n```js\ntry {\n  showButton();\n} catch (error) {\n  // ...\n}\n```\n\n然而，React 组件是声明式的并且具体指出什么需要被渲染：\n\n```js\n<Button />\n```\n\n错误边界保留了 React 的声明式的本质，其行为符合你的预期。例如，即使错误发生在 `componentDidUpdate` 方法中，由树中深藏在某处的 `setState` 引起，其仍然能够传播到最近的错误边界。\n\n## 关于事件处理器\n\n错误边界**无法**捕获事件处理器内部的错误。\n\nReact 不需要错误边界恢复位于事件处理器内的错误。不像渲染方法或生命周期钩子，不同于render方法和生命周期方法，事件处理器不是在渲染时发生。因此若他们抛出异常，React 仍然能够知道需要在屏幕上显示什么。\n\n如果你需要在事件处理器内部捕获错误，使用普通的 JavaScript `try` / `catch` 语句：\n\n```js\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    try {\n      // Do something that could throw\n    } catch (error) {\n      this.setState({ error });\n    }\n  }\n\n  render() {\n    if (this.state.error) {\n      return <h1>Caught an error.</h1>\n    }\n    return <div onClick={this.handleClick}>Click Me</div>\n  }\n}\n```\n\n注意上述例子仅是说明普通的 JavaScript 行为而并未使用错误边界。\n\n## 自 React 15 的名称变更\n\nReact 15 在一个不同的方法名下：`unstable_handleError` 包含了一个支持有限的错误边界。这一方法不再能用，同时自 React 16 beta 发布起你需要在代码中将其修改为 `componentDidCatch`。\n\n为这一改变，我们已提供了一个 [codemod](https://github.com/reactjs/react-codemod#error-boundaries) 来帮助你自动迁移你的代码。\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "740f304fa06ce48bbc2ed040b0ccbe4e",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Error Boundaries",
        "id": "error-boundaries",
        "permalink": "docs/error-boundaries.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/error-boundaries.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/error-boundaries.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/error-boundaries.md",
      "fields": {
        "slug": "docs/error-boundaries.html",
        "path": "docs/error-boundaries.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/faq-functions.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/faq-functions.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/faq-functions.md absPath of file",
      "internal": {
        "content": "---\nid: faq-functions\ntitle: 传递函数给组件\npermalink: docs/faq-functions.html\nlayout: docs\ncategory: FAQ\n---\n\n### 如何将事件处理器（比如onClick）传递给组件？\n可以将事件处理器和其他函数作为props传递给子组件：\n\n```jsx\n<button onClick={this.handleClick}>\n```\n\n如果需要在事件处理器中访问父组件，还需要把该函数绑定到组件实例（参见下文）。\n\n### 如何绑定一个函数到一个组件实例？\n\n有以下几种方式可以确保函数可以访问组件属性，比如像`this.props`和`this.state`，取决于使用的语法和构建步骤。\n\n#### 在构造函数中绑定（ES2015）\n\n```jsx\nclass Foo extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick() {\n    console.log('Click happened');\n  }\n  render() {\n    return <button onClick={this.handleClick}>Click Me</button>;\n  }\n}\n```\n#### 类属性（第三阶段提案）\n\n```jsx\nclass Foo extends Component {\n  // Note: this syntax is experimental and not standardized yet.\n  handleClick = () => {\n    console.log('Click happened');\n  }\n  render() {\n    return <button onClick={this.handleClick}>Click Me</button>;\n  }\n}\n```\n#### 在Render中的绑定\n\n```jsx\nclass Foo extends Component {\n  handleClick() {\n    console.log('Click happened');\n  }\n  render() {\n    return <button onClick={this.handleClick.bind(this)}>Click Me</button>;\n  }\n}\n```\n>**注意：**\n>\n>在render方法中使用`Function.prototype.bind`会在每次组件渲染时创建一个新的函数，可能会影响性能（参见下文）。\n\n#### 在Render中的箭头函数\n\n```jsx\nclass Foo extends Component {\n  handleClick() {\n    console.log('Click happened');\n  }\n  render() {\n    return <button onClick={() => this.handleClick()}>Click Me</button>;\n  }\n}\n```\n\n>**注意：**\n>\n>在render方法中使用箭头函数也会在每次组件渲染时创建一个新的函数，可能会影响性能（参见下文）。\n\n### 可以在render方法中使用箭头函数吗？\n\n一般来说是可以的，并且直接箭头函数是向回调函数传递参数的最简单的办法。\n\n但是如果遇到了性能问题，一定要进行优化！\n\n### 为什么绑定是必要的？\n在JavaScript中，以下两种写法是**不**等价的：\n\n```js\nobj.method();\n```\n\n```js\nvar method = obj.method;\nmethod();\n```\n`bind`方法确保了第二种写法与第一种写法相同。\n\n使用React，通常只需要绑定*传递*给其他组件的方法。例如，`<button onClick={this.handleClick}>`是在传递`this.handleClick`，所以需要绑定它。但是，没有必要绑定`render`方法或生命周期方法：我们并没有将它们传递给其他的组件。\n\n[This post by Yehuda Katz](http://yehudakatz.com/2011/08/11/understanding-javascript-function-invocation-and-this/)详细解释了什么是绑定，和函数在JavaScript中怎么起作用。\n\n### 为什么我的函数每次组件渲染时都会被调用？\n\n确保你_没有调用函数_，在你传递函数给组件时：\n\n```jsx\nrender() {\n  // Wrong: handleClick is called instead of passed as a reference!\n  return <button onClick={this.handleClick()}>Click Me</button>\n}\n```\n\n正确做法是，*传递函数本身*（不带括号）：\n\n```jsx\nrender() {\n  // Correct: handleClick is passed as a reference!\n  return <button onClick={this.handleClick}>Click Me</button>\n}\n```\n\n### 如何传递参数给事件处理器或回调？\n\n可以使用箭头函数包裹事件处理器，并传递参数：\n\n```jsx\n<button onClick={() => this.handleClick(id)} />\n```\n\n以上代码和调用`.bind`是等价的：\n\n```jsx\n<button onClick={this.handleClick.bind(this, id)} />\n```\n\n#### 示例：通过箭头函数传递参数\n\n```jsx\nconst A = 65 // ASCII character code\n\nclass Alphabet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      justClicked: null,\n      letters: Array.from({length: 26}, (_, i) => String.fromCharCode(A + i)).\n    };\n  }\n  handleClick(letter) {\n    this.setState({ justClicked: letter });\n  }\n  render() {\n    return (\n      <div>\n        Just clicked: {this.state.justClicked}\n        <ul>\n          {this.state.letters.map(letter =>\n            <li key={letter} onClick={() => this.handleClick(letter)}>\n              {letter}\n            </li>\n          )}\n        </ul>\n      </div>\n    )\n  }\n}\n```\n\n#### 示例：通过data-属性传递参数\n\n同样的，也可以使用DOM API来存储事件处理器需要的数据。如果需要优化大量元素或使用依赖于`React.PureComponent`相等性检查的渲染树，请考虑使用此方法。\n\n```jsx\nconst A = 65 // ASCII character code\n\nclass Alphabet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      justClicked: null,\n      letters: Array.from({length: 26}, (_, i) => String.fromCharCode(A + i))\n    };\n  }\n\n  handleClick(e) {\n    this.setState({\n      justClicked: e.target.dataset.letter\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        Just clicked: {this.state.justClicked}\n        <ul>\n          {this.state.letters.map(letter =>\n            <li key={letter} data-letter={letter} onClick={this.handleClick}>\n              {letter}\n            </li>\n          )}\n        </ul>\n      </div>\n    )\n  }\n}\n```\n\n### 怎样阻止函数被调用太快或者太多次？\n\n如果你有一个`onClick`或者`onScroll`这样的事件处理器，想要阻止回调被触发的太快，那么可以限制执行回调的速度，可以通过以下几种方式做到这点：\n\n- **节流**：基于时间的频率来进行抽样更改 (例如 [`_.throttle`](https://lodash.com/docs#throttle))\n- **防抖**：一段时间的不活动之后发布更改 (例如  [`_.debounce`](https://lodash.com/docs#debounce))\n- **`requestAnimationFrame`节流**:基于[`requestAnimationFrame`](https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame)的抽样更改 (例如 [`raf-schd`](https://github.com/alexreardon/raf-schd))\n\n可以看这个比较`throttle`和`debounce`的[可视化页面](http://demo.nimius.net/debounce_throttle/)\n\n> 注意：\n>\n> `_.debounce` , `_.throttle`和`raf-schd` 都提供了一个 `cancel`方法来取消延迟回调。 所以要么调用`componentWillUnmount`，否则需要对代码进行检查来保证在延迟函数有效期间内组件始终挂载。\n\n#### 节流\n\n节流阻止函数在给定时间窗口内被调不能超过一次。下面这个例子会节流“click”事件处理器每秒钟的只能调用一次。\n\n```jsx\nimport throttle from 'lodash.throttle';\n\nclass LoadMoreButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClickThrottled = throttle(this.handleClick, 1000);\n  }\n\n  componentWillUnmount() {\n    this.handleClickThrottled.cancel();\n  }\n\n  render() {\n    return <button onClick={this.handleClickThrottled}>Load More</button>;\n  }\n\n  handleClick() {\n    this.props.loadMore();\n  }\n}\n```\n\n#### 防抖\n\n防抖确保函数不会在上一次被调用之后一定量的时间内被执行。当必须进行一些昂贵的计算来响应快速派发的事件时（比如鼠标滚动或键盘事件时），防抖是非常有用的。下面这个例子以250ms的延迟来改变文本输入。\n\n```jsx\nimport debounce from 'lodash.debounce';\n\nclass Searchbox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.emitChangeDebounced = debounce(this.emitChange, 250);\n  }\n\n  componentWillUnmount() {\n    this.emitChangeDebounced.cancel();\n  }\n\n  render() {\n    return (\n      <input\n        type=\"text\"\n        onChange={this.handleChange}\n        placeholder=\"Search...\"\n        defaultValue={this.props.value}\n      />\n    );\n  }\n\n  handleChange(e) {\n    // React pools events, so we read the value before debounce.\n    // Alternately we could call `event.persist()` and pass the entire event.\n    // For more info see reactjs.org/docs/events.html#event-pooling\n    this.emitChangeDebounced(e.target.value);\n  }\n\n  emitChange(value) {\n    this.props.onChange(value);\n  }\n}\n```\n\n#### `requestAnimationFrame`节流\n`requestAnimationFrame`是在浏览器中排队等待执行的一种方法，它可以在呈现性能的最佳时间执行。一个函数被`requestAnimationFrame`放入队列后将会在下一帧触发。浏览器会努力确保每秒60帧（60fps）。然而，如果浏览器无法确保，那么自然会限制每秒的帧数。例如，某个设备可能只能处理每秒30帧，所以每秒只能得到30帧。使用`requestAnimationFrame`来节流是一种有用的技术，它可以防止在一秒中进行60帧以上的更新。如果要求一秒钟内完成100次更新，则会为浏览器创建额外的负担，而用户无法看到这些工作（不能区别每秒100帧和60帧的区别）。\n\n>**注意：**\n>\n> 使用这个方法时只能获取帧中最后发布的值。也可以在[`MDN`](https://developer.mozilla.org/en-US/docs/Web/Events/scroll)中看优化的示例。\n\n```jsx\nimport rafSchedule from 'raf-schd';\n\nclass ScrollListener extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleScroll = this.handleScroll.bind(this);\n\n    // Create a new function to schedule updates.\n    this.scheduleUpdate = rafSchedule(\n      point => this.props.onScroll(point)\n    );\n  }\n\n  handleScroll(e) {\n    // When we receive a scroll event, schedule an update.\n    // If we receive many updates within a frame, we'll only publish the latest value.\n    this.scheduleUpdate({ x: e.clientX, y: e.clientY });\n  }\n\n  componentWillUnmount() {\n    // Cancel any pending updates since we're unmounting.\n    this.scheduleUpdate.cancel();\n  }\n\n  render() {\n    return (\n      <div\n        style={{ overflow: 'scroll' }}\n        onScroll={this.handleScroll}\n      >\n        <img src=\"/my-huge-image.jpg\" />\n      </div>\n    );\n  }\n}\n```\n\n#### 测试速率限制\n\n在测试速率限制的代码是否正确工作的时候，如果可以（对动画或操作）进行快进将会很有帮助。如果正在使用[`jest`](https://facebook.github.io/jest/)，那么可以使用[`mock timers`](https://facebook.github.io/jest/docs/en/timer-mocks.html)来快进。如果正在使用`requestAnimationFrame`节流，那么就会发现[`raf-stub`](https://github.com/alexreardon/raf-stub)是一个控制动画帧的十分有用的工具。\n",
        "type": "MarkdownRemark",
        "contentDigest": "14063791456d0b2120968b579dffbbad",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "传递函数给组件",
        "id": "faq-functions",
        "permalink": "docs/faq-functions.html",
        "layout": "docs",
        "category": "FAQ",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/faq-functions.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/faq-functions.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/faq-functions.md",
      "fields": {
        "slug": "docs/faq-functions.html",
        "path": "docs/faq-functions.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/forms.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/forms.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/forms.md absPath of file",
      "internal": {
        "content": "---\nid: forms\ntitle: 表单\npermalink: docs/forms.html\nprev: state-and-lifecycle.html\nnext: lifting-state-up.html\nredirect_from:\n  - \"tips/controlled-input-null-value.html\"\n  - \"docs/forms-zh-CN.html\"\n---\n\nHTML表单元素与React中的其他DOM元素有所不同,因为表单元素生来就保留一些内部状态。例如，下面这个表单只接受一个唯一的name。\n\n```html\n<form>\n  <label>\n    Name:\n    <input type=\"text\" name=\"name\" />\n  </label>\n  <input type=\"submit\" value=\"Submit\" />\n</form>\n```\n\n当用户提交表单时，HTML的默认行为会使这个表单跳转到一个新页面。在React中亦是如此。但大多数情况下，我们都会构造一个处理提交表单并可访问用户输入表单数据的函数。实现这一点的标准方法是使用一种称为“受控组件”的技术。\n\n## 受控组件\n\n在HTML当中，像`<input>`,`<textarea>`, 和 `<select>`这类表单元素会维持自身状态，并根据用户输入进行更新。但在React中，可变的状态通常保存在组件的状态属性中，并且只能用 [`setState()`](/docs/react-component.html#setstate) 方法进行更新。\n\n我们通过使react变成一种单一数据源的状态来结合二者。React负责渲染表单的组件仍然控制用户后续输入时所发生的变化。相应的，其值由React控制的输入表单元素称为“受控组件”。\n\n例如，我们想要使上个例子中在提交表单时输出name,我们可以写成“受控组件”的形式:\n\n```javascript{4,10-12,24}\nclass NameForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: ''};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    alert('A name was submitted: ' + this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name:\n          <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n```\n\n[在 CodePen 上尝试。](https://codepen.io/gaearon/pen/VmmPgp?editors=0010)\n\n由于 `value` 属性是在我们的表单元素上设置的，因此显示的值将始终为 React数据源上`this.state.value` 的值。由于每次按键都会触发 `handleChange` 来更新当前React的state，所展示的值也会随着不同用户的输入而更新。\n\n\n使用\"受控组件\",每个状态的改变都有一个与之相关的处理函数。这样就可以直接修改或验证用户输入。例如，我们如果想限制输入全部是大写字母，我们可以将`handleChange` 写为如下：\n\n```javascript{2}\nhandleChange(event) {\n  this.setState({value: event.target.value.toUpperCase()});\n}\n```\n\n## textarea 标签\n\n在HTML当中，`<textarea>` 元素通过子节点来定义它的文本内容\n\n```html\n<textarea>\n  Hello there, this is some text in a text area\n</textarea>\n```\n\n在React中，`<textarea>`会用`value`属性来代替。这样的话，表单中的`<textarea>` 非常类似于使用单行输入的表单：\n\n```javascript{4-6,12-14,26}\nclass EssayForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 'Please write an essay about your favorite DOM element.'\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    alert('An essay was submitted: ' + this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name:\n          <textarea value={this.state.value} onChange={this.handleChange} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n```\n\n注意`this.state.value`是在构造函数中初始化，这样文本区域就能获取到其中的文本。\n\n## select 标签\n\n在HTML当中，`<select>`会创建一个下拉列表。例如这个HTML就创建了一个下拉列表的原型。\n\n```html\n<select>\n  <option value=\"grapefruit\">Grapefruit</option>\n  <option value=\"lime\">Lime</option>\n  <option selected value=\"coconut\">Coconut</option>\n  <option value=\"mango\">Mango</option>\n</select>\n```\n\n请注意，Coconut选项最初由于`selected`属性是被选中的。在React中，并不使用之前的`selected`属性，而在根`select`标签上用`value`属性来表示选中项。这在受控组件中更为方便，因为你只需要在一个地方来更新组件。例如：\n\n```javascript{4,10-12,24}\nclass FlavorForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: 'coconut'};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    alert('Your favorite flavor is: ' + this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Pick your favorite La Croix flavor:\n          <select value={this.state.value} onChange={this.handleChange}>\n            <option value=\"grapefruit\">Grapefruit</option>\n            <option value=\"lime\">Lime</option>\n            <option value=\"coconut\">Coconut</option>\n            <option value=\"mango\">Mango</option>\n          </select>\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n```\n\n[在 CodePen 上尝试。](https://codepen.io/gaearon/pen/JbbEzX?editors=0010)\n\n总之，`<input type=\"text\">`, `<textarea>`, 和 `<select>` 都十分类似 - 他们都通过传入一个`value`属性来实现对组件的控制。\n\n## file input 标签\n\n在HTML当中，`<input type=\"file\">` 允许用户从他们的存储设备中选择一个或多个文件以提交表单的方式上传到服务器上, 或者通过 Javascript 的  [File API](https://developer.mozilla.org/en-US/docs/Web/API/File/Using_files_from_web_applications)  对文件进行操作 。\n\n```\n<input type=\"file\" />\n```\n\n由于该标签的  `value` 属性是只读的， 所以它是 React 中的一个**非受控组件**。我们会把它和其他非受控组件一起在[后面的章节](https://reactjs.org/docs/uncontrolled-components.html#the-file-input-tag)进行详细的介绍。\n\n## 多个输入的解决方法\n\n当你有处理多个受控的`input`元素时，你可以通过给每个元素添加一个`name`属性，来让处理函数根据 `event.target.name`的值来选择做什么。\n\n例如:\n\n```javascript{15,18,28,37}\nclass Reservation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isGoing: true,\n      numberOfGuests: 2\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return (\n      <form>\n        <label>\n          Is going:\n          <input\n            name=\"isGoing\"\n            type=\"checkbox\"\n            checked={this.state.isGoing}\n            onChange={this.handleInputChange} />\n        </label>\n        <br />\n        <label>\n          Number of guests:\n          <input\n            name=\"numberOfGuests\"\n            type=\"number\"\n            value={this.state.numberOfGuests}\n            onChange={this.handleInputChange} />\n        </label>\n      </form>\n    );\n  }\n}\n```\n\n[在 CodePen 上尝试。](https://codepen.io/gaearon/pen/wgedvV?editors=0010)\n\n注意我们如何使用ES6当中的[计算属性名](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Object_initializer#Computed_property_names)语法来更新与给定输入名称相对应的状态键：\n\n```js{2}\nthis.setState({\n  [name]: value\n});\n```\n\n相当于如下ES5语法\n\n```js{2}\nvar partialState = {};\npartialState[name] = value;\nthis.setState(partialState);\n```\n\n同样由于 `setState()` 自动[将部分状态合并到当前状态](/docs/state-and-lifecycle.html#状态更新合并)，因此我们只需要使用发生变化的部分调用它。\n\n## 受控组件的替代方法\n\n有时使用受控组件可能很繁琐，因为您要为数据可能发生变化的每一种方式都编写一个事件处理程序，并通过一个组件来管理全部的状态。当您将预先存在的代码库转换为React或将React应用程序与非React库集成时，这可能变得特别烦人。在以上情况下，你或许应该看看[非受控组件](/docs/uncontrolled-components.html)，这是一种表单的替代技术。\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "67a48ee6b419a2fe330eb5902e93f389",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "表单",
        "id": "forms",
        "permalink": "docs/forms.html",
        "prev": "state-and-lifecycle.html",
        "next": "lifting-state-up.html",
        "redirect_from": [
          "tips/controlled-input-null-value.html",
          "docs/forms-zh-CN.html"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/forms.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/forms.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/forms.md",
      "fields": {
        "slug": "docs/forms.html",
        "path": "docs/forms.md",
        "redirect": "[\"tips/controlled-input-null-value.html\",\"docs/forms-zh-CN.html\"]"
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/hooks-custom.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/hooks-custom.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/hooks-custom.md absPath of file",
      "internal": {
        "content": "---\nid: hooks-custom\ntitle: Building Your Own Hooks\npermalink: docs/hooks-custom.html\nnext: hooks-reference.html\nprev: hooks-rules.html\n---\n\n*Hooks* are a new feature proposal that lets you use state and other React features without writing a class. They're currently in React v16.7.0-alpha and being discussed in [an open RFC](https://github.com/reactjs/rfcs/pull/68).\n\nBuilding your own Hooks lets you extract component logic into reusable functions.\n\nWhen we were learning about [using the Effect Hook](/docs/hooks-effect.html#example-using-hooks-1), we saw this component from a chat application that displays a message indicating whether a friend is online or offline:\n\n```js{4-15}\nimport { useState, useEffect } from 'react';\n\nfunction FriendStatus(props) {\n  const [isOnline, setIsOnline] = useState(null);\n\n  function handleStatusChange(status) {\n    setIsOnline(status.isOnline);\n  }\n\n  useEffect(() => {\n    ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange);\n    return () => {\n      ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange);\n    };\n  });\n\n  if (isOnline === null) {\n    return 'Loading...';\n  }\n  return isOnline ? 'Online' : 'Offline';\n}\n```\n\nNow let's say that our chat application also has a contact list, and we want to render names of online users with a green color. We could copy and paste similar logic above into our `FriendListItem` component but it wouldn't be ideal:\n\n```js{4-15}\nimport { useState, useEffect } from 'react';\n\nfunction FriendListItem(props) {\n  const [isOnline, setIsOnline] = useState(null);\n\n  function handleStatusChange(status) {\n    setIsOnline(status.isOnline);\n  }\n\n  useEffect(() => {\n    ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange);\n    return () => {\n      ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange);\n    };\n  });\n\n  return (\n    <li style={{ color: isOnline ? 'green' : 'black' }}>\n      {props.friend.name}\n    </li>\n  );\n}\n```\n\nInstead, we'd like to share this logic between `FriendStatus` and `FriendListItem`.\n\nTraditionally in React, we've had two popular ways to share stateful logic between components: [render props](/docs/render-props.html) and [higher-order components](/docs/higher-order-components.html). We will now look at how Hooks solve many of the same problems without forcing you to add more components to the tree.\n\n## Extracting a Custom Hook\n\nWhen we want to share logic between two JavaScript functions, we extract it to a third function. Both components and Hooks are functions, so this works for them too!\n\n**A custom Hook is a JavaScript function whose name starts with \"`use`\" and that may call other Hooks.** For example, `useFriendStatus` below is our first custom Hook:\n\n```js{3}\nimport { useState, useEffect } from 'react';\n\nfunction useFriendStatus(friendID) {\n  const [isOnline, setIsOnline] = useState(null);\n\n  function handleStatusChange(status) {\n    setIsOnline(status.isOnline);\n  }\n\n  useEffect(() => {\n    ChatAPI.subscribeToFriendStatus(friendID, handleStatusChange);\n    return () => {\n      ChatAPI.unsubscribeFromFriendStatus(friendID, handleStatusChange);\n    };\n  });\n\n  return isOnline;\n}\n```\n\nThere's nothing new inside of it -- the logic is copied from the components above. Just like in a component, make sure to only call other Hooks unconditionally at the top level of your custom Hook.\n\nUnlike a React component, a custom Hook doesn't need to have a specific signature. We can decide what it takes as arguments, and what, if anything, it should return. In other words, it's just like a normal function. Its name should always start with `use` so that you can tell at a glance that the [rules of Hooks](/docs/hooks-rules.html) apply to it.\n\nThe purpose of our `useFriendStatus` Hook is to subscribe us to a friend's status. This is why it takes `friendID` as an argument, and returns whether this friend is online:\n\n```js\nfunction useFriendStatus(friendID) {\n  const [isOnline, setIsOnline] = useState(null);\n  \n  // ...\n\n  return isOnline;\n}\n```\n\nNow let's see how we can use our custom Hook.\n\n## Using a Custom Hook\n\nIn the beginning, our stated goal was to remove the duplicated logic from the `FriendStatus` and `FriendListItem` components. Both of them want to know whether a friend is online.\n\nNow that we've extracted this logic to a `useFriendStatus` hook, we can *just use it:*\n\n```js{2}\nfunction FriendStatus(props) {\n  const isOnline = useFriendStatus(props.friend.id);\n\n  if (isOnline === null) {\n    return 'Loading...';\n  }\n  return isOnline ? 'Online' : 'Offline';\n}\n```\n\n```js{2}\nfunction FriendListItem(props) {\n  const isOnline = useFriendStatus(props.friend.id);\n\n  return (\n    <li style={{ color: isOnline ? 'green' : 'black' }}>\n      {props.friend.name}\n    </li>\n  );\n}\n```\n\n**Is this code equivalent to the original examples?** Yes, it works in exactly the same way. If you look closely, you'll notice we didn't make any changes to the behavior. All we did was to extract some common code between two functions into a separate function. **Custom Hooks are a convention that naturally follows from the design of Hooks, rather than a React feature.**\n\n**Do I have to name my custom Hooks starting with “`use`”?** Please do. This convention is very important. Without it, we wouldn't be able to automatically check for violations of [rules of Hooks](/docs/hooks-rules.html) because we couldn't tell if a certain function contains calls to Hooks inside of it.\n\n**Do two components using the same Hook share state?** No. Custom Hooks are a mechanism to reuse *stateful logic* (such as setting up a subscription and remembering the current value), but every time you use a custom Hook, all state and effects inside of it are fully isolated.\n\n**How does a custom Hook get isolated state?** Each *call* to a Hook gets isolated state. Because we call `useFriendStatus` directly, from React's point of view our component just calls `useState` and `useEffect`. And as we [learned](/docs/hooks-state.html#tip-using-multiple-state-variables) [earlier](/docs/hooks-effect.html#tip-use-multiple-effects-to-separate-concerns), we can call `useState` and `useEffect` many times in one component, and they will be completely independent.\n\n### Tip: Pass Information Between Hooks\n\nSince Hooks are functions, we can pass information between them.\n\nTo illustrate this, we'll use another component from our hypothetical chat example. This is a chat message recipient picker that displays whether the currently selected friend is online:\n\n```js{8-9,13}\nconst friendList = [\n  { id: 1, name: 'Phoebe' },\n  { id: 2, name: 'Rachel' },\n  { id: 3, name: 'Ross' },\n];\n\nfunction ChatRecipientPicker() {\n  const [recipientID, setRecipientID] = useState(1);\n  const isRecipientOnline = useFriendStatus(recipientID);\n\n  return (\n    <>\n      <Circle color={isRecipientOnline ? 'green' : 'red'} />\n      <select\n        value={recipientID}\n        onChange={e => setRecipientID(Number(e.target.value))}\n      >\n        {friendList.map(friend => (\n          <option key={friend.id} value={friend.id}>\n            {friend.name}\n          </option>\n        ))}\n      </select>\n    </>\n  );\n}\n```\n\nWe keep the currently chosen friend ID in the `recipientID` state variable, and update it if the user chooses a different friend in the `<select>` picker.\n\nBecause the `useState` Hook call gives us the latest value of the `recipientID` state variable, we can pass it to our custom `useFriendStatus` Hook as an argument:\n\n```js\n  const [recipientID, setRecipientID] = useState(1);\n  const isRecipientOnline = useFriendStatus(recipientID);\n```\n\nThis lets us know whether the *currently selected* friend is online. If we pick a different friend and update the `recipientID` state variable, our `useFriendStatus` Hook will unsubscribe from the previously selected friend, and subscribe to the status of the newly selected one.\n\n## `useYourImagination()`\n\nCustom Hooks offer the flexibility of sharing logic that wasn't possible in React components before. You can write custom Hooks that cover a wide range of use cases like form handling, animation, declarative subscriptions, timers, and probably many more we haven't considered. What's more, you can build Hooks that are just as easy to use as React's built-in features.\n\nTry to resist adding abstraction too early. Now that function components can do more, it's likely that the average function component in your codebase will become longer. This is normal -- don't feel like you *have to* immediately split it into Hooks. But we also encourage you to start spotting cases where a custom Hook could hide complex logic behind a simple interface, or help untangle a messy component.\n\nFor example, maybe you have a complex component that contains a lot of local state that is managed in an ad-hoc way. `useState` doesn't make centralizing the update logic any easier so might you prefer to write it as a [Redux](https://redux.js.org/) reducer:\n\n```js\nfunction todosReducer(state, action) {\n  switch (action.type) {\n    case 'add':\n      return [...state, {\n        text: action.text,\n        completed: false\n      }];\n    // ... other actions ...\n    default:\n      return state;\n  }\n}\n```\n\nReducers are very convenient to test in isolation, and scale to express complex update logic. You can further break them apart into smaller reducers if necessary. However, you might also enjoy the benefits of using React local state, or might not want to install another library.\n\nSo what if we could write a `useReducer` Hook that lets us manage the *local* state of our component with a reducer? A simplified version of it might look like this:\n\n```js\nfunction useReducer(reducer, initialState) {\n  const [state, setState] = useState(initialState);\n\n  function dispatch(action) {\n    const nextState = reducer(state, action);\n    setState(nextState);\n  }\n\n  return [state, dispatch];\n}\n```\n\nNow we could use it in our component, and let the reducer drive its state management:\n\n```js{2}\nfunction Todos() {\n  const [todos, dispatch] = useReducer(todosReducer, []);\n\n  function handleAddClick(text) {\n    dispatch({ type: 'add', text });\n  }\n\n  // ...\n}\n```\n\nThe need to manage local state with a reducer in a complex component is common enough that we've built the `useReducer` Hook right into React. You'll find it together with other built-in Hooks in the [Hooks API reference](/docs/hooks-reference.html).\n",
        "type": "MarkdownRemark",
        "contentDigest": "e62785829e1225d48952f7d7da12c587",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Building Your Own Hooks",
        "id": "hooks-custom",
        "permalink": "docs/hooks-custom.html",
        "next": "hooks-reference.html",
        "prev": "hooks-rules.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/hooks-custom.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/hooks-custom.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/hooks-custom.md",
      "fields": {
        "slug": "docs/hooks-custom.html",
        "path": "docs/hooks-custom.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/hooks-intro.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/hooks-intro.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/hooks-intro.md absPath of file",
      "internal": {
        "content": "---\nid: hooks-intro\ntitle: Introducing Hooks\npermalink: docs/hooks-intro.html\nnext: hooks-overview.html\n---\n\n*Hooks*是React v16.7.0-alpha中加入的新特性。它可以让你在class以外使用state和其他React特性。你可以在[这里](https://github.com/reactjs/rfcs/pull/68)看到关于它的一些讨论。\n\n```js{4,5}\nimport { useState } from 'react';\n\nfunction Example() {\n  // Declare a new state variable, which we'll call \"count\"\n  const [count, setCount] = useState(0);\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>\n        Click me\n      </button>\n    </div>\n  );\n}\n```\n\n`useState`这个方法是我们接触到的第一个\"hook\"。我们用它完成了一个最简单的组件，接下来我们会看到更多有趣的应用。\n\n**你可以立即跳到[下一页](/docs/hooks-overview.html)开始学习Hooks。** 在这一页，我们将继续解释为什么我们要在React中引入Hooks，以及它们将如何帮助你写出超棒的React应用。\n\n## 视频介绍\n\n在React Conf 2018，Sophie Alpert 和 Dan Abramov介绍了Hooks，然后Ryan Florence演示了如何用它们重构我们的应用。你可以在这里看到这个视频：\n\n<br>\n\n<iframe width=\"650\" height=\"366\" src=\"//www.youtube.com/embed/dpw9EHDh2bM\" frameborder=\"0\" allowfullscreen></iframe>\n\n## No Breaking Changes\n\n在我们继续学习之前，你需要注意：\n\n* **完全可选** 如果你喜欢Hooks，你可以立即在一些组件和已经存在的代码中使用它们。不过如果你不喜欢也不要紧，你完全没必要学习或者使用它们。\n* **100% 向后兼容** Hooks不包含任何爆炸性的更新。\n* **立即可用** Hooks现在已经包含在alpha版本中。而且我们期望在接受社区反馈后把他们加入到React 16.7版本中。\n\n**classes不会被移除** 你可以在这一页的[最后一节](#gradual-adoption-strategy)读到更多关于Hooks的渐进策略。\n\n**Hooks不会影响你对React的理解** 恰恰相反，Hooks为React的这些概念提供了更直接的API。之后你将会看到，有了Hooks，你可以以一种更加强大的方式将props, state, context, refs 和生命周期整合起来。\n\n**如果你只是想要学学Hooks如何使用，你可以直接跳到[下一页](/docs/hooks-overview.html)。** 当然你也可以继续读这一页。你将会在这里了解到更多我们引入Hooks的原因，以及要如何在已有的代码上使用Hooks重构我们的应用。\n\n## 动机\n\nHooks解决了我们在React发布至今的五年来遇到的一系列看似不相关的问题。不论你是刚刚开始学习React，或是一直在用它，甚至你只是在使用与React具有相似组件模型的框架，你一定或多或少注意到这些问题。\n\n### 跨组件复用stateful logic(包含状态的逻辑)十分困难\n\nReact没有提供一种将可复用的行为“attach”到组件上的方式（比如redux的connect方法）。如果你已经使用了一段时间的React，你可能对[render props](/docs/render-props.html) 和 [高阶组件](/docs/higher-order-components.html)有一定的了解，它们的出现就是为了解决逻辑复用的问题。但是这些模式都要求你重新构造你的组件，这可能会非常麻烦。在很多典型的React组件中，你可以在React DevTool里看到我们的组件被层层叠叠的providers, consumers, 高阶组件, render props, 和其他抽象层包裹。当然你可以通过[筛选功能](https://github.com/facebook/react-devtools/pull/503)把它们全部都过滤掉，但是这种现象也指出了一些更深层次的问题：React需要一些更好的底层元素来复用stateful logic.\n\n使用Hooks，你可以在将含有state的逻辑从组件中抽象出来，这将可以让这些逻辑容易被测试。同时，**Hooks可以帮助你在不重写组件结构的情况下复用这些逻辑。** 这样这些逻辑就可以跨组件复用，甚至你可以将他们分享到社区中。\n\n我们将在[自定义Hooks](/docs/hooks-custom.html)中继续这一部分的讨论。\n\n### 复杂的组件难以理解\n\n我们在刚开始构建我们的组件时它们往往很简单，然而随着开发的进展它们会变得越来越大、越来越混乱，各种逻辑在组件中散落的到处都是。每个生命周期钩子中都包含了一堆互不相关的逻辑。比如我们常常在`componentDidMount` 和 `componentDidUpdate` 中拉取数据，同时`compnentDidMount` 方法可能又包含一些不相干的逻辑，比如设置事件监听（之后需要在 `componentWillUnmount` 中清除）。最终的结果是强相关的代码被分离，反而是不相关的代码被组合在了一起。这显然会导致大量错误。\n\n在许多情况下，我们也不太可能将这些组件分解成更小的组件，因为stateful logic到处都是。测试它们也很困难。这是许多人喜欢将React与单独的状态管理库结合使用的原因之一。然而，这通常会引入太多的抽象，需要在不同的文件之间跳转，并且使得重用组件更加困难。\n\n为了解决这个问题，**Hooks允许您根据相关部分(例如设置订阅或获取数据)将一个组件分割成更小的函数**，而不是强制基于生命周期方法进行分割。您还可以选择使用一个reducer来管理组件的本地状态，以使其更加可预测。\n\n我们将在[使用Effect Hook](/docs/hooks-effect.html#tip-use-multiple-effects-to-separate-concerns)中继续这一部分的讨论。\n\n### 不止是用户，机器也对Classes难以理解\n\n据我们观察，classes是学习React的最大障碍。您必须了解`this`如何在JavaScript中工作，这与它在大多数语言中的工作方式非常不同。必须记住绑定事件处理程序。没有稳定的[语法提案](https://babeljs.io/docs/en/babel-plugin-transform-class-properties/)，代码非常冗长。尽管人们可以很好地理解props、state和自顶向下的数据流，但仍然要与类做斗争。React中功能和类组件的区别以及何时使用每种组件都会导致有经验的React开发人员之间的分歧。\n\n除此以外，React已经发布了五年，我们还想在未来的五年让他保持稳定。就像在[Svelte](https://svelte.technology/), [Angular](https://angular.io/), [Glimmer](https://glimmerjs.com/)和其他框架中展示的那样，组件的提前编译潜力巨大。尤其是在它不局限于模板的时候。最近我们在测试使用[Prepack](https://prepack.io/)来进行[component folding](https://github.com/facebook/react/issues/7323)，而且我们已经初步看到了成果。然而我们发现class组件可能会导致一些让我们做的这些优化白费的编码模式。类也为今天的工具带来了不少的issue。比如，classes不能很好的被minify，同时他们也造成了太多不必要的组件更新。我们想要提供一种便于优化的API。\n\n为了解决这些问题，**Hooks让你可以在classes之外使用更多React的新特性。** 从概念上讲，React组件也是更接近于函数的。Hooks基于函数，但是并不会修改React的基本概念。Hooks在不需要您学习复杂的函数式编程的情况下，为您提供了逃离这些问题的途径。\n\n>Examples\n>\n>您可以从[Hooks概览](/docs/hooks-overview.html)开始，快速地学习Hooks。\n\n## 渐进策略\n\n>**太长不看版: 我们完全没有把classes从React中移除的打算。**\n\n我们知道React开发者都非常忙。你们可能没有时间去研究我们一个发布的新API。Hooks还非常新，也许你可以等待出现了更多关于它们的示例和教程之后再来学习。\n\n我们也理解添加新的底层API的门槛非常的高。对于感到好奇的读者，我们准备了一份[详细的RFC](https://github.com/reactjs/rfcs/pull/68)来提供更多我们设计Hook的细节和动机，我们设计Hooks时的独特视角，以及更多细节。\n\n**最重要的是，Hooks与现有的代码可以同时工作，所以你完全可以逐步采用它们。** 我们正在分享这个API，以便得到那些对React的未来感兴趣的人们的反馈——我们将在开放的基础上开发Hooks。\n\n最后，您没有必要着急迁移到Hooks。我们建议避免任何“大范围重构”，尤其是对已有的、复杂的class组件。“Thinking in Hooks”需要您进行一些思想上的切换。在我们的经验中，最佳实践是先在新的、非关键性的代码中试用Hooks，并且保证团队里的所有人都喜欢它们。在你试用过Hooks之后，请一定要来[这里](https://github.com/facebook/react/issues/new)给我们提供建议或是意见，我们都非常欢迎。\n\n我们打算用钩子（Hook）覆盖类的所有现有用例，但是在可预见的将来，我们将继续支持类组件。**在Facebook，我们有成千上万的组件被写成类，我们绝对没有重写它们的计划。相反，我们开始在新代码中与类一起使用钩子（Hook）。**\n\n## 下一步\n\n在这一页的结尾，你应该对Hooks解决了什么样的问题有了一个初步的了解，但是许多细节你可能还不那么清楚。不过不要担心！**让我们去到[下一页](/docs/hooks-overview.html)。在那里我们将会学到更多关于Hooks的例子。** \n",
        "type": "MarkdownRemark",
        "contentDigest": "975359fc5350819e9c073ba21944fa83",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Introducing Hooks",
        "id": "hooks-intro",
        "permalink": "docs/hooks-intro.html",
        "next": "hooks-overview.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/hooks-intro.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/hooks-intro.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/hooks-intro.md",
      "fields": {
        "slug": "docs/hooks-intro.html",
        "path": "docs/hooks-intro.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/hooks-overview.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/hooks-overview.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/hooks-overview.md absPath of file",
      "internal": {
        "content": "---\nid: hooks-overview\ntitle: Hooks at a Glance\npermalink: docs/hooks-overview.html\nnext: hooks-state.html\nprev: hooks-intro.html\n---\n\n*Hooks*是React v16.7.0-alpha中加入的新特性。它可以让你在class以外使用state和其他React特性。你可以在[这里](https://github.com/reactjs/rfcs/pull/68)看到关于它的一些讨论。\n\nHooks[向后兼容](/docs/hooks-intro.html#no-breaking-changes)。这个页面为有经验的React用户提供了Hooks的概览。\n\n这是一个快节奏的概览。当你感到困惑时，请搜寻下面这样的黄色盒子：\n\n>详细解释\n>\n>阅读[动机](/docs/hooks-intro.html#motivation)以了解我们为什么要在React中引入Hooks。\n\n**↑↑↑ 每一部分的结尾都会有一个这样的黄色盒子** 它们链接到详细的解释。\n\n## 📌 状态钩子（State Hook）\n\n这个例子渲染了一个计数器。当你点击按钮时，页面中的值会随之增加：\n\n```js{1,4,5}\nimport { useState } from 'react';\n\nfunction Example() {\n  // 声明一个名为“count”的新状态变量\n  const [count, setCount] = useState(0);\n\n  return (\n    <div>\n      <p>你点击了{count}次</p>\n      <button onClick={() => setCount(count + 1)}>\n        点我\n      </button>\n    </div>\n  );\n}\n```\n\n在这里, `useState`是一个*钩子（Hook）* （稍后我们将会谈及它的含义）。我们在一个函数式组件中调用它，为这个组件增加一些内部的状态。React将会在下一次渲染前保存此状态。 `useState`返回一对值：*当前*的状态（state value）和一个可以更新状态的函数。你可以在事件处理程序（event handler）中或其他地方调用这个函数。 它与类组件中的`this.setState`类似，但不能将新旧状态进行合并。（我们在[使用状态钩子](/docs/hooks-state.html)中展示了一个将`useState`和`this.state`进行对比的例子。）\n\n`useState`唯一的参数就是初始状态（initial state）。在上面的例子中,因为我们的计数器从零开始所以它是`0`。这里的状态与`this.state`不同，它不必是一个对象-- 如果你想这么做，当然也可以。初始状态参数只在第一次渲染中被使用。\n\n#### 声明多个状态变量\n\n你可以在一个组件中多次使用状态钩子:\n\n```js\nfunction ExampleWithManyStates() {\n  // 声明多个状态变量！\n  const [age, setAge] = useState(42);\n  const [fruit, setFruit] = useState('banana');\n  const [todos, setTodos] = useState([{ text: 'Learn Hooks' }]);\n  // ...\n}\n```\n\n通过调用`useState`我们声明了一些状态变量，我们可以使用[数组解构](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment#Array_destructuring)语法赋予这些状态变量不同的名字。这些名字不是`useState` API的一部分。 相反，当你多次调用`useState`时，React假定你在每一次渲染中以相同的顺序调用它们。我们会在之后再来解释为什么这样可以运行以及在什么时候起作用。\n\n#### 但是什么是钩子（Hook）？\n\n钩子是可以让你与React状态以及函数式组件的生命周期特性“挂钩”的函数。钩子是为了让你抛弃类使用React的，所以它不能在类中运行。（我们[不推荐](/docs/hooks-intro.html#gradual-adoption-strategy)你立即重写已经存在的组件，但是如果你喜欢的话可以在新的组件中开始使用钩子。）\n\nReact提供了少量内置的钩子，如`useState`。你也可以创建自己的钩子在不同的组件之间复用有状态的行为。我们先来看一下内置的钩子。\n\n>详细解释\n>\n>你可以在这个页面上了解到更多关于状态钩子的信息: [使用状态钩子](/docs/hooks-state.html)。\n\n## ⚡️ 副作用钩子（Effect Hook）\n\n你可能之前已经在React中执行过获取数据，订阅或者手动改变DOM。我们称这些操作为“副作用（side effects）”（或者简称为“作用（effects）”），因为它们可以影响其他的组件并且不能在渲染中完成。\n\n副作用钩子, `useEffect`, 为函数式组件带来执行副作用的能力。它与类组件中的`componentDidMount` ，`componentDidUpdate`和 `componentWillUnmount`具有相同的用途，但是被统一为一个API。（我们在[使用副作用钩子](/docs/hooks-effect.html)中展示了一个将`useEffect`和这些方法进行对比的例子。）\n\n举个例子，这个组件在React更新DOM之后设置文档的标题：\n\n```js{1,6-10}\nimport { useState, useEffect } from 'react';\n\nfunction Example() {\n  const [count, setCount] = useState(0);\n\n  // 类似于 componentDidMount 和 componentDidUpdate:\n  useEffect(() => {\n    // 使用浏览器API更新文档标题\n    document.title = `You clicked ${count} times`;\n  });\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>\n        Click me\n      </button>\n    </div>\n  );\n}\n```\n\n当你调用`useEffect`,就是告诉React在刷新DOM之后运行你的副作用函数。副作用函数在组件中声明，所以可以使用组件的状态（state）和属性（props）。React默认在每一次渲染后运行副作用函数——*包括*第一次渲染。(与类组件的生命周期函数的对比请看[使用副作用钩子](/docs/hooks-effect.html)。)\n\n副作用函数可以通过返回一个函数来指定如何“回收”它们。举个例子，这个组件使用了一个副作用函数来订阅一个朋友的在线状态，通过取消订阅来回收：\n\n```js{10-16}\nimport { useState, useEffect } from 'react';\n\nfunction FriendStatus(props) {\n  const [isOnline, setIsOnline] = useState(null);\n\n  function handleStatusChange(status) {\n    setIsOnline(status.isOnline);\n  }\n\n  useEffect(() => {\n    ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange);\n\n    return () => {\n      ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange);\n    };\n  });\n\n  if (isOnline === null) {\n    return 'Loading...';\n  }\n  return isOnline ? 'Online' : 'Offline';\n}\n```\n\n在这个例子中，当组件被卸载时，React会在由随后的渲染引起的副作用函数运行之前取消对`ChatAPI`的订阅。（如果有需要的话，可以用这个方法[告诉React跳过重订阅](/docs/hooks-effect.html#tip-optimizing-performance-by-skipping-effects)当传给`ChatAPI`的`props.friend.id`没有改变时。）\n\n像使用`useState`一样,你可以在一个组件中使用多个副作用：\n\n```js{3,8}\nfunction FriendStatusWithCounter(props) {\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    document.title = `You clicked ${count} times`;\n  });\n\n  const [isOnline, setIsOnline] = useState(null);\n  useEffect(() => {\n    ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange);\n    return () => {\n      ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange);\n    };\n  });\n\n  function handleStatusChange(status) {\n    setIsOnline(status.isOnline);\n  }\n  // ...\n```\n\n有了钩子，你可以在组件中按照代码块的相关性组织副作用，而不是基于生命周期方法强制进行切分。\n\n>详细解释\n>\n>你可以在这个页面上了解到更多关于`useEffect`的信息: [使用副作用钩子](/docs/hooks-effect.html)。\n\n## ✌️ 钩子的使用规则\n\n钩子就是强制实现了两条额外规则的Javascript函数：\n\n* 只能在*顶层*调用钩子。不要在循环，控制流和嵌套的函数中调用钩子。\n* 只能*从React的函数式组件中*调用钩子。不要在常规的JavaScript函数中调用钩子。（此外，你也可以在你的自定义钩子中调用钩子。我们马上就会讲到它。）\n\n我们提供了一个[语法检查插件](https://www.npmjs.com/package/eslint-plugin-react-hooks)以自动执行这些规则。我们能够理解开发者在一开始可能会对这些规则感到困惑或束手束脚，但它们正是保证钩子正确运行的基石。\n\n>详细解释\n>\n>你可以在这个页面上了解到更多关于这些规则的信息: [钩子的使用规则](/docs/hooks-rules.html)。\n\n## 💡 构建你自己的钩子\n\n有时你希望在组件之间复用一些状态逻辑。在之前有两种流行的解决方案：[高阶组件](/docs/higher-order-components.html) and [渲染属性](/docs/render-props.html)。现在你可以利用自定义钩子做到这些而不用在你的组件树中添加更多的组件。\n\n在此之前，我们展示了一个`FriendStatus` 组件，它可以调用`useState`和`useEffect`钩子来订阅一个朋友的在线状态。假设我们想要在其他的组件中复用这个订阅逻辑。\n\n首先，我们要把这个逻辑抽取到名为`useFriendStatus`的自定义钩子中：\n\n```js{3}\nimport { useState, useEffect } from 'react';\n\nfunction useFriendStatus(friendID) {\n  const [isOnline, setIsOnline] = useState(null);\n\n  function handleStatusChange(status) {\n    setIsOnline(status.isOnline);\n  }\n\n  useEffect(() => {\n    ChatAPI.subscribeToFriendStatus(friendID, handleStatusChange);\n    return () => {\n      ChatAPI.unsubscribeFromFriendStatus(friendID, handleStatusChange);\n    };\n  });\n\n  return isOnline;\n}\n```\n\n这个钩子需要一个`friendID`作为参数，返回你的朋友是否在线。\n\n现在，我们可以同时在两个组件中使用它：\n\n\n```js{2}\nfunction FriendStatus(props) {\n  const isOnline = useFriendStatus(props.friend.id);\n\n  if (isOnline === null) {\n    return 'Loading...';\n  }\n  return isOnline ? 'Online' : 'Offline';\n}\n```\n\n```js{2}\nfunction FriendListItem(props) {\n  const isOnline = useFriendStatus(props.friend.id);\n\n  return (\n    <li style={{ color: isOnline ? 'green' : 'black' }}>\n      {props.friend.name}\n    </li>\n  );\n}\n```\n\n两个组件中的状态是完全独立的。钩子只复用状态逻辑而不是状态本身。事实上，每一次调用钩子都会得到一个完全孤立的状态——所以你甚至可以在同一个组件中使用两次相同的自定义钩子。\n\n自定义钩子更多的是一个约定而不是特性。如果一个函数的名字以 \"`use`\" 开头并且调用了其他的钩子，我们就称它为自定义钩子。`useSomething`的命名约定方便语法检查插件找到代码中钩子的错误使用。\n\n自定义钩子可以覆盖非常多的用例，像表单处理，动画，声明式订阅，定时器，还有很多我们还没有考虑到的。我们非常激动能够看到React社区提出的自定义钩子。\n\n>详细解释\n>\n>你可以在专门的页面上了解到更多关于自定义钩子的信息:[构建你自己的钩子](/docs/hooks-custom.html)。\n\n## 🔌 其他钩子\n\n还有一些不太常用的内置钩子，也许你会觉得非常有用。使用[`useContext`](/docs/hooks-reference.html#usecontext)可以订阅React context而不用引入嵌套：\n\n```js{2,3}\nfunction Example() {\n  const locale = useContext(LocaleContext);\n  const theme = useContext(ThemeContext);\n  // ...\n}\n```\n\n[`useReducer`](/docs/hooks-reference.html#usereducer)则允许你使用一个reducer来管理一个复杂组件的局部状态（local state）：\n\n```js{2}\nfunction Todos() {\n  const [todos, dispatch] = useReducer(todosReducer);\n  // ...\n```\n\n>详细解释\n>\n>你可以在这个页面上了解到所有的内置钩子: [钩子API参考](/docs/hooks-reference.html)。\n\n## 下一步\n\n噢，太快了！如果有些地方没有讲清楚或者你想了解更多细节，你可以阅读下一页，从[状态钩子](/docs/hooks-state.html)这篇文档开始。\n\n你也可以查看[钩子API参考](/docs/hooks-reference.html)和[钩子常见问题](/docs/hooks-faq.html)。\n\n最后，不要错过[介绍页面](/docs/hooks-intro.html)，这里解释了为什么我们要引入钩子以及我们如何同时使用类和钩子，而无需重写我们的应用。\n",
        "type": "MarkdownRemark",
        "contentDigest": "97c0e5e13a30632c73486ebc6ce85c88",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Hooks at a Glance",
        "id": "hooks-overview",
        "permalink": "docs/hooks-overview.html",
        "next": "hooks-state.html",
        "prev": "hooks-intro.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/hooks-overview.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/hooks-overview.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/hooks-overview.md",
      "fields": {
        "slug": "docs/hooks-overview.html",
        "path": "docs/hooks-overview.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/hooks-reference.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/hooks-reference.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/hooks-reference.md absPath of file",
      "internal": {
        "content": "---\nid: hooks-reference\ntitle: Hooks API Reference\npermalink: docs/hooks-reference.html\nprev: hooks-custom.html\nnext: hooks-faq.html\n---\n\n*Hooks* are a new feature proposal that lets you use state and other React features without writing a class. They're currently in React v16.7.0-alpha and being discussed in [an open RFC](https://github.com/reactjs/rfcs/pull/68).\n\nThis page describes the APIs for the built-in Hooks in React.\n\nIf you're new to Hooks, you might want to check out [the overview](/docs/hooks-overview.html) first. You may also find useful information in the [frequently asked questions](/docs/hooks-faq.html) section.\n\n- [Basic Hooks](#basic-hooks)\n  - [`useState`](#usestate)\n  - [`useEffect`](#useeffect)\n  - [`useContext`](#usecontext)\n- [Additional Hooks](#additional-hooks)\n  - [`useReducer`](#usereducer)\n  - [`useCallback`](#usecallback)\n  - [`useMemo`](#usememo)\n  - [`useRef`](#useref)\n  - [`useImperativeMethods`](#useimperativemethods)\n  - [`useMutationEffect`](#usemutationeffect)\n  - [`useLayoutEffect`](#uselayouteffect)\n\n## Basic Hooks\n\n### `useState`\n\n```js\nconst [state, setState] = useState(initialState);\n```\n\nReturns a stateful value, and a function to update it.\n\nDuring the initial render, the returned state (`state`) is the same as the value passed as the first argument (`initialState`).\n\nThe `setState` function is used to update the state. It accepts a new state value and enqueues a re-render of the component.\n\n```js\nsetState(newState);\n```\n\nDuring subsequent re-renders, the first value returned by `useState` will always be the most recent state after applying updates.\n\n#### Functional updates\n\nIf the new state is computed using the previous state, you can pass a function to `setState`. The function will receive the previous value, and return an updated value. Here's an example of a counter component that uses both forms of `setState`:\n\n```js\nfunction Counter({initialCount}) {\n  const [count, setCount] = useState(initialCount);\n  return (\n    <>\n      Count: {count}\n      <button onClick={() => setCount(0)}>Reset</button>\n      <button onClick={() => setCount(prevCount => prevCount + 1)}>+</button>\n      <button onClick={() => setCount(prevCount => prevCount - 1)}>-</button>\n    </>\n  );\n}\n```\n\nThe \"+\" and \"-\" buttons use the functional form, because the updated value is based on the previous value. But the \"Reset\" button uses the normal form, because it always sets the count back to 0.\n\n> Note\n>\n> Unlike the `setState` method found in class components, `useState` does not automatically merge update objects. You can replicate this behavior by combining the function updater form with object spread syntax:\n>\n> ```js\n> setState(prevState => {\n>   // Object.assign would also work\n>   return {...prevState, ...updatedValues};\n> });\n> ```\n>\n> Another option is `useReducer`, which is more suited for managing state objects that contain multiple sub-values.\n\n#### Lazy initialization\n\nThe `initialState` argument is the state used during the initial render. In subsequent renders, it is disregarded. If the initial state is the result of an expensive computation, you may provide a function instead, which will be executed only on the initial render:\n\n```js\nconst [state, setState] = useState(() => {\n  const initialState = someExpensiveComputation(props);\n  return initialState;\n});\n```\n\n### `useEffect`\n\n```js\nuseEffect(didUpdate);\n```\n\nAccepts a function that contains imperative, possibly effectful code.\n\nMutations, subscriptions, timers, logging, and other side effects are not allowed inside the main body of a function component (referred to as React's _render phase_). Doing so will lead to confusing bugs and inconsistencies in the UI.\n\nInstead, use `useEffect`. The function passed to `useEffect` will run after the render is committed to the screen. Think of effects as an escape hatch from React's purely functional world into the imperative world.\n\nBy default, effects run after every completed render, but you can choose to fire it [only when certain values have changed](#conditionally-firing-an-effect).\n\n#### Cleaning up an effect\n\nOften, effects create resources that need to be cleaned up before the component leaves the screen, such as a subscription or timer ID. To do this, the function passed to `useEffect` may return a clean-up function. For example, to create a subscription:\n\n```js\nuseEffect(() => {\n  const subscription = props.source.subscribe();\n  return () => {\n    // Clean up the subscription\n    subscription.unsubscribe();\n  };\n});\n```\n\nThe clean-up function runs before the component is removed from the UI to prevent memory leaks. Additionally, if a component renders multiple times (as they typically do), the **previous effect is cleaned up before executing the next effect**. In our example, this means a new subscription is created on every update. To avoid firing an effect on every update, refer to the next section.\n\n#### Timing of effects\n\nUnlike `componentDidMount` and `componentDidUpdate`, the function passed to `useEffect` fires **after** layout and paint, during a deferred event. This makes it suitable for the many common side effects, like setting up subscriptions and event handlers, because most types of work shouldn't block the browser from updating the screen.\n\nHowever, not all effects can be deferred. For example, a DOM mutation that is visible to the user must fire synchronously before the next paint so that the user does not perceive a visual inconsistency. (The distinction is conceptually similar to passive versus active event listeners.) For these types of effects, React provides two additional Hooks: [`useMutationEffect`](#usemutationeffect) and [`useLayoutEffect`](#uselayouteffect). These Hooks have the same signature as `useEffect`, and only differ in when they are fired.\n\nAlthough `useEffect` is deferred until after the browser has painted, it's guaranteed to fire before any new renders. React will always flush a previous render's effects before starting a new update.\n\n#### Conditionally firing an effect\n\nThe default behavior for effects is to fire the effect after every completed render. That way an effect is always recreated if one of its inputs changes.\n\nHowever, this may be overkill in some cases, like the subscription example from the previous section. We don't need to create a new subscription on every update, only if the `source` props has changed.\n\nTo implement this, pass a second argument to `useEffect` that is the array of values that the effect depends on. Our updated example now looks like this:\n\n```js\nuseEffect(\n  () => {\n    const subscription = props.source.subscribe();\n    return () => {\n      subscription.unsubscribe();\n    };\n  },\n  [props.source],\n);\n```\n\nNow the subscription will only be recreated when `props.source` changes.\n\nPassing in an empty array `[]` of inputs tells React that your effect doesn't depend on any values from the component, so that effect would run only on mount and clean up on unmount; it won't run on updates.\n\n> Note\n>\n> The array of inputs is not passed as arguments to the effect function. Conceptually, though, that's what they represent: every value referenced inside the effect function should also appear in the inputs array. In the future, a sufficiently advanced compiler could create this array automatically.\n\n### `useContext`\n\n```js\nconst context = useContext(Context);\n```\n\nAccepts a context object (the value returned from `React.createContext`) and returns the current context value, as given by the nearest context provider for the given context.\n\nWhen the provider updates, this Hook will trigger a rerender with the latest context value.\n\n## Additional Hooks\n\nThe following Hooks are either variants of the basic ones from the previous section, or only needed for specific edge cases. Don't stress about learning them up front.\n\n### `useReducer`\n\n```js\nconst [state, dispatch] = useReducer(reducer, initialState);\n```\n\nAn alternative to [`useState`](#usestate). Accepts a reducer of type `(state, action) => newState`, and returns the current state paired with a `dispatch` method. (If you're familiar with Redux, you already know how this works.)\n\nHere's the counter example from the [`useState`](#usestate) section, rewritten to use a reducer:\n\n```js\nconst initialState = {count: 0};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'reset':\n      return initialState;\n    case 'increment':\n      return {count: state.count + 1};\n    case 'decrement':\n      return {count: state.count - 1};\n  }\n}\n\nfunction Counter({initialCount}) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <>\n      Count: {state.count}\n      <button onClick={() => dispatch({type: 'reset'})}>\n        Reset\n      </button>\n      <button onClick={() => dispatch({type: 'increment'})}>+</button>\n      <button onClick={() => dispatch({type: 'decrement'})}>-</button>\n    </>\n  );\n}\n```\n\n#### Lazy initialization\n\n`useReducer` accepts an optional third argument, `initialAction`. If provided, the initial action is applied during the initial render. This is useful for computing an initial state that includes values passed via props:\n\n```js\nconst initialState = {count: 0};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'reset':\n      return {count: action.payload};\n    case 'increment':\n      return {count: state.count + 1};\n    case 'decrement':\n      return {count: state.count - 1};\n  }\n}\n\nfunction Counter({initialCount}) {\n  const [state, dispatch] = useReducer(\n    reducer,\n    initialState,\n    {type: 'reset', payload: initialCount},\n  );\n\n  return (\n    <>\n      Count: {state.count}\n      <button\n        onClick={() => dispatch({type: 'reset', payload: initialCount})}>\n        Reset\n      </button>\n      <button onClick={() => dispatch({type: 'increment'})}>+</button>\n      <button onClick={() => dispatch({type: 'decrement'})}>-</button>\n    </>\n  );\n}\n```\n\n`useReducer` is usually preferable to `useState` when you have complex state logic that involves multiple sub-values. It also lets you optimize performance for components that trigger deep updates because [you can pass `dispatch` down instead of callbacks](/docs/hooks-faq.html#how-to-avoid-passing-callbacks-down).\n\n### `useCallback`\n\n```js\nconst memoizedCallback = useCallback(\n  () => {\n    doSomething(a, b);\n  },\n  [a, b],\n);\n```\n\nReturns a [memoized](https://en.wikipedia.org/wiki/Memoization) callback.\n\nPass an inline callback and an array of inputs. `useCallback` will return a memoized version of the callback that only changes if one of the inputs has changed. This is useful when passing callbacks to optimized child components that rely on reference equality to prevent unnecessary renders (e.g. `shouldComponentUpdate`).\n\n`useCallback(fn, inputs)` is equivalent to `useMemo(() => fn, inputs)`.\n\n> Note\n>\n> The array of inputs is not passed as arguments to the callback. Conceptually, though, that's what they represent: every value referenced inside the callback should also appear in the inputs array. In the future, a sufficiently advanced compiler could create this array automatically.\n\n### `useMemo`\n\n```js\nconst memoizedValue = useMemo(() => computeExpensiveValue(a, b), [a, b]);\n```\n\nReturns a [memoized](https://en.wikipedia.org/wiki/Memoization) value.\n\nPass a \"create\" function and an array of inputs. `useMemo` will only recompute the memoized value when one of the inputs has changed. This optimization helps to avoid expensive calculations on every render.\n\nIf no array is provided, a new value will be computed whenever a new function instance is passed as the first argument. (With an inline function, on every render.)\n\n> Note\n>\n> The array of inputs is not passed as arguments to the function. Conceptually, though, that's what they represent: every value referenced inside the function should also appear in the inputs array. In the future, a sufficiently advanced compiler could create this array automatically.\n\n### `useRef`\n\n```js\nconst refContainer = useRef(initialValue);\n```\n\n`useRef` returns a mutable ref object whose `.current` property is initialized to the passed argument (`initialValue`). The returned object will persist for the full lifetime of the component.\n\nA common use case is to access a child imperatively:\n\n```js\nfunction TextInputWithFocusButton() {\n  const inputEl = useRef(null);\n  const onButtonClick = () => {\n    // `current` points to the mounted text input element\n    inputEl.current.focus();\n  };\n  return (\n    <>\n      <input ref={inputEl} type=\"text\" />\n      <button onClick={onButtonClick}>Focus the input</button>\n    </>\n  );\n}\n```\n\nNote that `useRef()` is useful for more than the `ref` attribute. It's [handy for keeping any mutable value around](/docs/hooks-faq.html#is-there-something-like-instance-variables) similar to how you'd use instance fields in classes.\n\n### `useImperativeMethods`\n\n```js\nuseImperativeMethods(ref, createInstance, [inputs])\n```\n\n`useImperativeMethods` customizes the instance value that is exposed to parent components when using `ref`. As always, imperative code using refs should be avoided in most cases. `useImperativeMethods` should be used with `forwardRef`:\n\n```js\nfunction FancyInput(props, ref) {\n  const inputRef = useRef();\n  useImperativeMethods(ref, () => ({\n    focus: () => {\n      inputRef.current.focus();\n    }\n  }));\n  return <input ref={inputRef} ... />;\n}\nFancyInput = forwardRef(FancyInput);\n```\n\nIn this example, a parent component that renders `<FancyInput ref={fancyInputRef} />` would be able to call `fancyInputRef.current.focus()`.\n\n### `useMutationEffect`\n\nThe signature is identical to `useEffect`, but it fires synchronously during the same phase that React performs its DOM mutations, before sibling components have been updated. Use this to perform custom DOM mutations.\n\nPrefer the standard `useEffect` when possible to avoid blocking visual updates.\n\n>Note\n>\n>Avoid reading from the DOM in `useMutationEffect`. If you do, you can cause performance problems by introducing [layout thrash](https://developers.google.com/web/fundamentals/performance/rendering/avoid-large-complex-layouts-and-layout-thrashing). When reading computed styles or layout information, `useLayoutEffect` is more appropriate.\n\n### `useLayoutEffect`\n\nThe signature is identical to `useEffect`, but it fires synchronously *after* all DOM mutations. Use this to read layout from the DOM and synchronously re-render. Updates scheduled inside `useLayoutEffect` will be flushed synchronously, before the browser has a chance to paint.\n\nPrefer the standard `useEffect` when possible to avoid blocking visual updates.\n\n> Tip\n>\n> If you're migrating code from a class component, `useLayoutEffect` fires in the same phase as `componentDidMount` and `componentDidUpdate`, so if you're unsure of which effect Hook to use, it's probably the least risky.\n",
        "type": "MarkdownRemark",
        "contentDigest": "26808332330db7e06d80f188a682167a",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Hooks API Reference",
        "id": "hooks-reference",
        "permalink": "docs/hooks-reference.html",
        "prev": "hooks-custom.html",
        "next": "hooks-faq.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/hooks-reference.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/hooks-reference.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/hooks-reference.md",
      "fields": {
        "slug": "docs/hooks-reference.html",
        "path": "docs/hooks-reference.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/how-to-contribute.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/how-to-contribute.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/how-to-contribute.md absPath of file",
      "internal": {
        "content": "---\nid: how-to-contribute\ntitle: How to Contribute\nlayout: contributing\npermalink: docs/how-to-contribute.html\nnext: codebase-overview.html\nredirect_from:\n  - \"contributing/how-to-contribute.html\"\n  - \"tips/introduction.html\"\n---\n\nReact is one of Facebook's first open source projects that is both under very active development and is also being used to ship code to everybody on [facebook.com](https://www.facebook.com). We're still working out the kinks to make contributing to this project as easy and transparent as possible, but we're not quite there yet. Hopefully this document makes the process for contributing clear and answers some questions that you may have.\n\n### [Code of Conduct](https://code.facebook.com/codeofconduct)\n\nFacebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read [the full text](https://code.facebook.com/codeofconduct) so that you can understand what actions will and will not be tolerated.\n\n### Open Development\n\nAll work on React happens directly on [GitHub](https://github.com/facebook/react). Both core team members and external contributors send pull requests which go through the same review process.\n\n### Branch Organization\n\nWe will do our best to keep the [`master` branch](https://github.com/facebook/react/tree/master) in good shape, with tests passing at all times. But in order to move fast, we will make API changes that your application might not be compatible with. We recommend that you use [the latest stable version of React](/downloads.html).\n\nIf you send a pull request, please do it against the `master` branch. We maintain stable branches for major versions separately but we don't accept pull requests to them directly. Instead, we cherry-pick non-breaking changes from master to the latest stable major version.\n\n### Semantic Versioning\n\nReact follows [semantic versioning](http://semver.org/). We release patch versions for bugfixes, minor versions for new features, and major versions for any breaking changes. When we make breaking changes, we also introduce deprecation warnings in a minor version so that our users learn about the upcoming changes and migrate their code in advance.\n\nWe tag every pull request with a label marking whether the change should go in the next [patch](https://github.com/facebook/react/pulls?q=is:open+is:pr+label:semver-patch), [minor](https://github.com/facebook/react/pulls?q=is:open+is:pr+label:semver-minor), or a [major](https://github.com/facebook/react/pulls?q=is:open+is:pr+label:semver-major) version. We release new patch versions every few weeks, minor versions every few months, and major versions one or two times a year.\n\nEvery significant change is documented in the [changelog file](https://github.com/facebook/react/blob/master/CHANGELOG.md).\n\n### Bugs\n\n#### Where to Find Known Issues\n\nWe are using [GitHub Issues](https://github.com/facebook/react/issues) for our public bugs. We keep a close eye on this and try to make it clear when we have an internal fix in progress. Before filing a new task, try to make sure your problem doesn't already exist.\n\n#### Reporting New Issues\n\nThe best way to get your bug fixed is to provide a reduced test case. This [JSFiddle template](https://jsfiddle.net/84v837e9/) is a great starting point.\n\n#### Security Bugs\n\nFacebook has a [bounty program](https://www.facebook.com/whitehat/) for the safe disclosure of security bugs. With that in mind, please do not file public issues; go through the process outlined on that page.\n\n### How to Get in Touch\n\n* IRC: [#reactjs on freenode](https://webchat.freenode.net/?channels=reactjs)\n* Discussion forum: [discuss.reactjs.org](https://discuss.reactjs.org/)\n\nThere is also [an active community of React users on the Discord chat platform](http://www.reactiflux.com/) in case you need help with React.\n\n### Proposing a Change\n\nIf you intend to change the public API, or make any non-trivial changes to the implementation, we recommend [filing an issue](https://github.com/facebook/react/issues/new). This lets us reach an agreement on your proposal before you put significant effort into it.\n\nIf you're only fixing a bug, it's fine to submit a pull request right away but we still recommend to file an issue detailing what you're fixing. This is helpful in case we don't accept that specific fix but want to keep track of the issue.\n\n### Your First Pull Request\n\nWorking on your first Pull Request? You can learn how from this free video series:\n\n**[How to Contribute to an Open Source Project on GitHub](https://egghead.io/series/how-to-contribute-to-an-open-source-project-on-github)**\n\nTo help you get your feet wet and get you familiar with our contribution process, we have a list of **[beginner friendly issues](https://github.com/facebook/react/issues?q=is:open+is:issue+label:\"Difficulty:+beginner\")** that contain bugs which are fairly easy to fix. This is a great place to get started.\n\nIf you decide to fix an issue, please be sure to check the comment thread in case somebody is already working on a fix. If nobody is working on it at the moment, please leave a comment stating that you intend to work on it so other people don't accidentally duplicate your effort.\n\nIf somebody claims an issue but doesn't follow up for more than two weeks, it's fine to take over it but you should still leave a comment.\n\n### Sending a Pull Request\n\nThe core team is monitoring for pull requests. We will review your pull request and either merge it, request changes to it, or close it with an explanation. For API changes we may need to fix our internal uses at Facebook.com, which could cause some delay. We'll do our best to provide updates and feedback throughout the process.\n\n**Before submitting a pull request,** please make sure the following is done:\n\n1. Fork [the repository](https://github.com/facebook/react) and create your branch from `master`.\n2. If you've added code that should be tested, add tests!\n3. If you've changed APIs, update the documentation.\n4. Ensure the test suite passes (`npm test`).\n5. Format your code with [prettier](https://github.com/prettier/prettier) (`npm run prettier`).\n6. Make sure your code lints (`npm run lint`).\n7. Run the [Flow](https://flowtype.org/) typechecks (`npm run flow`).\n8. If you haven't already, complete the CLA.\n\n### Contributor License Agreement (CLA)\n\nIn order to accept your pull request, we need you to submit a CLA. You only need to do this once, so if you've done this for another Facebook open source project, you're good to go. If you are submitting a pull request for the first time, just let us know that you have completed the CLA and we can cross-check with your GitHub username.\n\n**[Complete your CLA here.](https://code.facebook.com/cla)**\n\n### Contribution Prerequisites\n\n* You have `node` installed at v6.0.0+ and `npm` at v3.0.0+.\n* You have `gcc` installed or are comfortable installing a compiler if needed. Some of our `npm` dependencies may require a compilation step. On OS X, the Xcode Command Line Tools will cover this. On Ubuntu, `apt-get install build-essential` will install the required packages. Similar commands should work on other Linux distros. Windows will require some additional steps, see the [`node-gyp` installation instructions](https://github.com/nodejs/node-gyp#installation) for details.\n* You are familiar with `npm` and know whether or not you need to use `sudo` when installing packages globally.\n* You are familiar with `git`.\n\n### Development Workflow\n\nAfter cloning React, run `npm install` to fetch its dependencies.\nThen, you can run several commands:\n\n* `npm run lint` checks the code style.\n* `npm test` runs the complete test suite.\n* `npm test -- --watch` runs an interactive test watcher.\n* `npm test <pattern>` runs tests with matching filenames.\n* `npm run flow` runs the [Flow](https://flowtype.org/) typechecks.\n* `npm run build` creates a `build` folder with all the packages.\n\nWe recommend running `npm test` (or its variations above) to make sure you don't introduce any regressions as you work on your change. However it can be handy to try your build of React in a real project.\n\nFirst, run `npm run build`. This will produce pre-built bundles in `build` folder, as well as prepare npm packages inside `build/packages`.\n\nThe easiest way to try your changes is to run `npm run build` and then open `fixtures/packaging/babel-standalone/dev.html`. This file already uses `react.js` from the `build` folder so it will pick up your changes.\n\nIf you want to try your changes in your existing React project, you may copy `build/dist/react.development.js`, `build/dist/react-dom.development.js`, or any other build products into your app and use them instead of the stable version. If your project uses React from npm, you may delete `react` and `react-dom` in its dependencies and use `npm link` to point them to your local `build` folder:\n\n```sh\ncd your_project\nnpm link ~/path_to_your_react_clone/build/packages/react\nnpm link ~/path_to_your_react_clone/build/packages/react-dom\n```\n\nEvery time you run `npm run build` in the React folder, the updated versions will appear in your project's `node_modules`. You can then rebuild your project to try your changes.\n\nWe still require that your pull request contains unit tests for any new functionality. This way we can ensure that we don't break your code in the future.\n\n### Style Guide\n\nOur linter will catch most styling issues that may exist in your code.\nYou can check the status of your code styling by simply running `npm run lint`.\n\nHowever, there are still some styles that the linter cannot pick up. If you are unsure about something, looking at [Airbnb's Style Guide](https://github.com/airbnb/javascript) will guide you in the right direction.\n\n### Code Conventions\n\n* Use semicolons `;`\n* Commas last `,`\n* 2 spaces for indentation (no tabs)\n* Prefer `'` over `\"`\n* `'use strict';`\n* 120 character line length (**except documentation**)\n* Write \"attractive\" code\n* Do not use the optional parameters of `setTimeout` and `setInterval`\n\n### Introductory Video\n\nYou may be interested in watching [this short video](https://www.youtube.com/watch?v=wUpPsEcGsg8) (26 mins) which gives an introduction on how to contribute to React.\n\n### Meeting Notes\n\nReact team meets once a week to discuss the development of React, future plans, and priorities. You can find the meeting notes in a [dedicated repository](https://github.com/reactjs/core-notes/).\n\n### License\n\nBy contributing to React, you agree that your contributions will be licensed under its MIT license.\n\n### What Next?\n\nRead the [next section](/docs/codebase-overview.html) to learn how the codebase is organized.\n",
        "type": "MarkdownRemark",
        "contentDigest": "6d2aec3bfb31ae4dbaa67b1f6905e816",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "How to Contribute",
        "id": "how-to-contribute",
        "layout": "contributing",
        "permalink": "docs/how-to-contribute.html",
        "next": "codebase-overview.html",
        "redirect_from": [
          "contributing/how-to-contribute.html",
          "tips/introduction.html"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/how-to-contribute.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/how-to-contribute.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/how-to-contribute.md",
      "fields": {
        "slug": "docs/how-to-contribute.html",
        "path": "docs/how-to-contribute.md",
        "redirect": "[\"contributing/how-to-contribute.html\",\"tips/introduction.html\"]"
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/jsx-in-depth.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/jsx-in-depth.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/jsx-in-depth.md absPath of file",
      "internal": {
        "content": "---\nid: jsx-in-depth\ntitle: 深入 JSX\npermalink: docs/jsx-in-depth.html\nredirect_from:\n  - \"docs/jsx-spread.html\"\n  - \"docs/jsx-gotchas.html\"\n  - \"tips/if-else-in-JSX.html\"\n  - \"tips/self-closing-tag.html\"\n  - \"tips/maximum-number-of-jsx-root-nodes.html\"\n  - \"tips/children-props-type.html\"\n  - \"docs/jsx-in-depth-zh-CN.html\"\n  - \"docs/jsx-in-depth-ko-KR.html\"\n---\n\n本质上来讲，JSX 只是为 `React.createElement(component, props, ...children) ` 方法提供的语法糖。比如下面的代码：\n\n```jsx\n<MyButton color=\"blue\" shadowSize={2}>\n  Click Me\n</MyButton>\n```\n\n编译为：\n\n```jsx\nReact.createElement(\n  MyButton,\n  {color: 'blue', shadowSize: 2},\n  'Click Me'\n)\n```\n\n如果没有子代，你还可以使用自闭合标签，比如：\n\n```jsx\n<div className=\"sidebar\" />\n```\n\n编译为：\n\n```jsx\nReact.createElement(\n  'div',\n  {className: 'sidebar'},\n  null\n)\n```\n\n如果你想彻底验证 JSX 是如何转换为 JavaScript 的，你可以尝试 [在线 Babel 编译器](https://babeljs.io/repl/#?babili=false&evaluate=true&lineWrap=false&presets=es2015%2Creact%2Cstage-0&code=function%20hello()%20%7B%0A%20%20return%20%3Cdiv%3EHello%20world!%3C%2Fdiv%3E%3B%0A%7D).\n\n## 指定 React 元素类型\n\nJSX 的标签的第一部分决定了 React 元素的类型。\n\n首字母大写的类型表示 JSX 标签引用到一个 React 组件。这些标签将会被编译为直接引用同名变量，所以如果你使用了 `<Foo />` JSX 表达式，则 `Foo` 必须在作用域中。\n\n### React 必须在作用域中\n\n由于 JSX 编译成`React.createElement`方法的调用，所以在你的 JSX 代码中，`React`库必须也始终在作用域中。\n\n比如，下面两个导入都是必须的，尽管 `React` 和 `CustomButton` 都没有在代码中被直接调用。\n\n```jsx{1,2,5}\nimport React from 'react';\nimport CustomButton from './CustomButton';\n\nfunction WarningButton() {\n  // return React.createElement(CustomButton, {color: 'red'}, null);\n  return <CustomButton color=\"red\" />;\n}\n```\n\n如果你没有使用JavaScript 打捆机，而是从`<script>`标签加载React，它已经在作用域中，以`React`全局变量的形式。\n\n### 点表示法用于JSX类型\n\n你还可以使用 JSX 中的点表示法来引用 React 组件。你可以方便地从一个模块中导出许多 React 组件。例如，有一个名为 `MyComponents.DatePicker` 的组件，你可以直接在 JSX 中使用它：\n\n```jsx{10}\nimport React from 'react';\n\nconst MyComponents = {\n  DatePicker: function DatePicker(props) {\n    return <div>Imagine a {props.color} datepicker here.</div>;\n  }\n}\n\nfunction BlueDatePicker() {\n  return <MyComponents.DatePicker color=\"blue\" />;\n}\n```\n\n### 用户定义组件必须首字母大写\n\n当元素类型以小写字母开头时，它表示一个内置的组件，如 `<div>` 或 `<span>`，将导致字符串 `'div'` 或 `'span'` 传递给 `React.createElement`。 以大写字母开头的类型，如 `<Foo />` 编译为 `React.createElement(Foo)`，并且它正对应于你在 JavaScript 文件中定义或导入的组件。\n\n我们建议用大写开头命名组件。如果你的组件以小写字母开头，请在 JSX 中使用之前其赋值给大写开头的变量。\n\n例如，下面的代码将无法按预期运行：\n\n```jsx{3,4,10,11}\nimport React from 'react';\n\n// 错误！组件名应该首字母大写:\nfunction hello(props) {\n  // 正确！div 是有效的 HTML 标签:\n  return <div>Hello {props.toWhat}</div>;\n}\n\nfunction HelloWorld() {\n  // 错误！React 会将小写开头的标签名认为是 HTML 原生标签:\n  return <hello toWhat=\"World\" />;\n}\n```\n\n为了解决这个问题，我们将 `hello` 重命名为 `Hello`，然后使用 `<Hello />` 引用：\n\n```jsx{3,4,10,11}\nimport React from 'react';\n\n// 正确！组件名应该首字母大写:\nfunction Hello(props) {\n  // 正确！div 是有效的 HTML 标签:\n  return <div>Hello {props.toWhat}</div>;\n}\n\nfunction HelloWorld() {\n  // 正确！React 能够将大写开头的标签名认为是 React 组件。\n  return <Hello toWhat=\"World\" />;\n}\n```\n\n### 在运行时选择类型\n\n你不能使用一个通用的表达式来作为 React 元素的标签。如果你的确想使用一个通用的表达式来确定 React 元素的类型，请先将其赋值给大写开头的变量。这种情况一般发生于当你想基于属性值渲染不同的组件时：\n\n```jsx{10,11}\nimport React from 'react';\nimport { PhotoStory, VideoStory } from './stories';\n\nconst components = {\n  photo: PhotoStory,\n  video: VideoStory\n};\n\nfunction Story(props) {\n  // 错误！JSX 标签名不能为一个表达式。\n  return <components[props.storyType] story={props.story} />;\n}\n```\n\n要解决这个问题，我们需要先将类型赋值给大写开头的变量。\n\n```jsx{10-12}\nimport React from 'react';\nimport { PhotoStory, VideoStory } from './stories';\n\nconst components = {\n  photo: PhotoStory,\n  video: VideoStory\n};\n\nfunction Story(props) {\n  // 正确！JSX 标签名可以为大写开头的变量。\n  const SpecificStory = components[props.storyType];\n  return <SpecificStory story={props.story} />;\n}\n```\n\n## JSX的属性(Props)\n\n在 JSX 中有几种不同的方式来指定属性。\n\n### 使用 JavaScript 表达式作为属性\n\n你可以传递JavaScript 表达式作为一个属性，再用大括号`{}`括起来。例如，在这个 JSX 中：\n\n```jsx\n<MyComponent foo={1 + 2 + 3 + 4} />\n```\n\n对于 `MyComponent`来说， `props.foo` 的值为 10，这是 `1 + 2 + 3 + 4` 表达式计算得出的。\n\n`if` 语句和 `for` 循环在 JavaScript 中不是表达式，因此它们不能直接在 JSX 中使用，但是你可以将它们放在周围的代码中。例如：\n\n```jsx{3-7}\nfunction NumberDescriber(props) {\n  let description;\n  if (props.number % 2 == 0) {\n    description = <strong>even</strong>;\n  } else {\n    description = <i>odd</i>;\n  }\n  return <div>{props.number} is an {description} number</div>;\n}\n```\n\n你可以在相关部分中了解有关 [条件渲染](/docs/conditional-rendering.html) 和 [循环](/docs/lists-and-keys.html) 的更多信息。\n\n### 字符串常量\n\n你可以将字符串常量作为属性值传递。下面这两个 JSX 表达式是等价的：\n\n```jsx\n<MyComponent message=\"hello world\" />\n\n<MyComponent message={'hello world'} />\n```\n\n当传递一个字符串常量时，该值为HTML非转义的，所以下面两个 JSX 表达式是相同的：\n\n```jsx\n<MyComponent message=\"&lt;3\" />\n\n<MyComponent message={'<3'} />\n```\n\n这种行为通常是无意义的，提到它只是为了完整性。\n\n### 属性默认为“True”\n\n如果你没有给属性传值，它默认为 `true`。因此下面两个 JSX 是等价的：\n\n```jsx\n<MyTextBox autocomplete />\n\n<MyTextBox autocomplete={true} />\n```\n\n一般情况下，我们不建议这样使用，因为它会与 [ES6 对象简洁表示法](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Object_initializer#New_notations_in_ECMAScript_2015) 混淆。比如 `{foo}` 是 `{foo: foo}` 的简写，而不是 `{foo: true}`。这里能这样用，是因为它符合 HTML 的做法。\n\n### 展开属性\n\n如果你已经有了个 `props` 对象，并且想在 JSX 中传递它，你可以使用 `...` 作为“展开(spread)”操作符来传递整个属性对象。下面两个组件是等效的：\n\n```jsx{7}\nfunction App1() {\n  return <Greeting firstName=\"Ben\" lastName=\"Hector\" />;\n}\n\nfunction App2() {\n  const props = {firstName: 'Ben', lastName: 'Hector'};\n  return <Greeting {...props} />;\n}\n```\n\n你也可以选取特定属性对象来被组件使用，同时使用“展开(spread)”操作符将其他属性传递下去。\n\n```jsx\nconst Button = props => {\n  const { kind, ...other } = props;\n  const className = kind === \"primary\" ? \"PrimaryButton\" : \"SecondaryButton\";\n  return <button className={className} {...other} />;\n};\n\nconst App = () => {\n  return (\n    <div>\n      <Button kind=\"primary\" onClick={() => console.log(\"clicked!\")}>\n        Hello World!\n      </Button>\n    </div>\n  );\n};\n```\n\n在上述例子中，`kind` 属性被安全地使用，不会传递到DOM中的 `<button>` 元素。其他的属性通过 `...other` 传递，使得组件变得非常灵活。你可以观察到 `onClick` and `children ` 属性都被传递了下去。\n\n展开属性非常有用。但是他们也容易传递不必要的属性给组件，而组件并不需要这些多余属性。或者传递无效的HTML属性给DOM。我们建议你谨慎使用此语法。\n\n## JSX中的子代\n\n在既包含开始标签又包含结束标签的 JSX 表达式中，这两个标签之间的内容被传递为专门的属性：`props.children`。有几种不同的方法来传递子代：\n\n### 字符串字面量\n\n你可以在开始和结束标签之间放入一个字符串，则 `props.children` 就是那个字符串。这对于许多内置 HTML 元素很有用。例如：\n\n```jsx\n<MyComponent>Hello world!</MyComponent>\n```\n\n这是有效的 JSX，并且 `MyComponent` 的 `props.children` 值将会直接是 `\"hello world!\"`。因为 HTML 未转义，所以你可以像写 HTML 一样写 JSX：\n\n```html\n<div>This is valid HTML &amp; JSX at the same time.</div>\n```\n\nJSX 会移除空行和开始与结尾处的空格。标签邻近的新行也会被移除，字符串常量内部的换行会被压缩成一个空格，所以下面这些都等价：\n\n```jsx\n<div>Hello World</div>\n\n<div>\n  Hello World\n</div>\n\n<div>\n  Hello\n  World\n</div>\n\n<div>\n\n  Hello World\n</div>\n```\n\n### JSX子代\n\n你可以提供更多个 JSX 元素作为子代，这对于嵌套显示组件非常有用：\n\n```jsx\n<MyContainer>\n  <MyFirstComponent />\n  <MySecondComponent />\n</MyContainer>\n```\n\n你可以混合不同类型的子代，同时使用字符串字面量和 JSX子代，这是 JSX 类似 HTML 的另一种形式，这在 JSX 和 HTML 中都是有效的：\n\n```html\n<div>\n  Here is a list:\n  <ul>\n    <li>Item 1</li>\n    <li>Item 2</li>\n  </ul>\n</div>\n```\n\nReact 组件也可以返回包含多个元素的一个数组：\n\n```jsx\nrender() {\n  // 不需要使用额外的元素包裹数组中的元素！\n  return [\n    // 不要忘记 key :)\n    <li key=\"A\">First item</li>,\n    <li key=\"B\">Second item</li>,\n    <li key=\"C\">Third item</li>,\n  ];\n}\n```\n\n### JavaScript 表达式作为子代\n\n你可以将任何 `{}` 包裹的 JavaScript 表达式作为子代传递。例如，下面这些表达式是等价的：\n\n```jsx\n<MyComponent>foo</MyComponent>\n\n<MyComponent>{'foo'}</MyComponent>\n```\n\n这对于渲染任意长度的 JSX 表达式的列表很有用。例如，下面将会渲染一个 HTML 列表：\n\n```jsx{2,9}\nfunction Item(props) {\n  return <li>{props.message}</li>;\n}\n\nfunction TodoList() {\n  const todos = ['finish doc', 'submit pr', 'nag dan to review'];\n  return (\n    <ul>\n      {todos.map((message) => <Item key={message} message={message} />)}\n    </ul>\n  );\n}\n```\n\nJavaScript 表达式可以与其他类型的子代混合使用。这通常对于字符串模板非常有用：\n\n```jsx{2}\nfunction Hello(props) {\n  return <div>Hello {props.addressee}!</div>;\n}\n```\n\n### 函数作为子代\n\n通常情况下，插入 JSX 中的 JavaScript 表达式将被认作字符串、React 元素或这些的一个列表。然而，`props.children` 可以像其它属性一样传递任何种类的数据，而不仅仅是 React 知道如何去渲染的数据种类。例如，如果你有一个自定义组件，你能使其取一个回调作为`props.children`：\n\n```jsx{4,13}\n// Calls the children callback numTimes to produce a repeated component\nfunction Repeat(props) {\n  let items = [];\n  for (let i = 0; i < props.numTimes; i++) {\n    items.push(props.children(i));\n  }\n  return <div>{items}</div>;\n}\n\nfunction ListOfTenThings() {\n  return (\n    <Repeat numTimes={10}>\n      {(index) => <div key={index}>This is item {index} in the list</div>}\n    </Repeat>\n  );\n}\n```\n\n传递给自定义组件的子代可以是任何东西，只要该组件在 React 渲染前将其转换成 React 能够理解的东西。这个用法并不常见，但当你想扩展 JSX 时可以使用。\n\n### 布尔值、Null 和 Undefined 被忽略\n\n`false`、`null`、`undefined` 和 `true` 都是有效的子代，只是它们不会被渲染。下面的JSX表达式将渲染为相同的东西：\n\n```jsx\n<div />\n\n<div></div>\n\n<div>{false}</div>\n\n<div>{null}</div>\n\n<div>{undefined}</div>\n\n<div>{true}</div>\n```\n\n这在根据条件来确定是否渲染React元素时非常有用。以下的JSX只会在`showHeader`为`true`时渲染`<Header />`组件。\n\n```jsx{2}\n<div>\n  {showHeader && <Header />}\n  <Content />\n</div>\n```\n\n一个告诫是JavaScript中的一些 [\"falsy\" 值](https://developer.mozilla.org/en-US/docs/Glossary/Falsy)(比如数字`0`)，它们依然会被React渲染。例如，下面的代码不会像你预期的那样运行，因为当 `props.message` 为空数组时，它会打印`0`:\n\n```jsx{2}\n<div>\n  {props.messages.length &&\n    <MessageList messages={props.messages} />\n  }\n</div>\n```\n\n要解决这个问题，请确保 `&&` 前面的表达式始终为布尔值：\n\n```jsx{2}\n<div>\n  {props.messages.length > 0 &&\n    <MessageList messages={props.messages} />\n  }\n</div>\n```\n\n相反，如果你想让类似 `false`、`true`、`null` 或 `undefined` 出现在输出中，你必须先把它[转换成字符串](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String#String_conversion) :\n\n```jsx{2}\n<div>\n  My JavaScript variable is {String(myVariable)}.\n</div>\n```\n",
        "type": "MarkdownRemark",
        "contentDigest": "e8b1c24857082ef1cd94da648852676f",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "深入 JSX",
        "id": "jsx-in-depth",
        "permalink": "docs/jsx-in-depth.html",
        "redirect_from": [
          "docs/jsx-spread.html",
          "docs/jsx-gotchas.html",
          "tips/if-else-in-JSX.html",
          "tips/self-closing-tag.html",
          "tips/maximum-number-of-jsx-root-nodes.html",
          "tips/children-props-type.html",
          "docs/jsx-in-depth-zh-CN.html",
          "docs/jsx-in-depth-ko-KR.html"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/jsx-in-depth.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/jsx-in-depth.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/jsx-in-depth.md",
      "fields": {
        "slug": "docs/jsx-in-depth.html",
        "path": "docs/jsx-in-depth.md",
        "redirect": "[\"docs/jsx-spread.html\",\"docs/jsx-gotchas.html\",\"tips/if-else-in-JSX.html\",\"tips/self-closing-tag.html\",\"tips/maximum-number-of-jsx-root-nodes.html\",\"tips/children-props-type.html\",\"docs/jsx-in-depth-zh-CN.html\",\"docs/jsx-in-depth-ko-KR.html\"]"
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/lifting-state-up.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/lifting-state-up.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/lifting-state-up.md absPath of file",
      "internal": {
        "content": "---\nid: lifting-state-up\ntitle: 状态提升\npermalink: docs/lifting-state-up.html\nprev: state-and-lifecycle.html\nnext: composition-vs-inheritance.html\nredirect_from:\n  - \"docs/flux-overview.html\"\n  - \"docs/flux-todo-list.html\"\n---\n\n使用 react 经常会遇到几个组件需要共用状态数据的情况。这种情况下，我们最好将这部分共享的状态提升至他们最近的父组件当中进行管理。我们来看一下具体如何操作吧。\n\n这部分内容当中，我们会创建一个温度计算器来计算水是否会在给定的温度下烧开。\n\n开始呢，我们先创建一个名为 `BoilingVerdict` 的组件。它会接受 `celsius` 这个温度变量作为它的 props 属性，最后根据温度判断返回内容：\n\n```js{3,5}\nfunction BoilingVerdict(props) {\n  if (props.celsius >= 100) {\n    return <p>水会烧开</p>;\n  }\n  return <p>水不会烧开</p>;\n}\n```\n\n接下来，我们写一个名为 `Calculator` 的组件。它会渲染一个 `<input>` 来接受用户输入，然后将输入的温度值保存在 `this.state.temperature` 当中。\n\n之后呢，它会根据输入的值渲染出 `BoilingVerdict` 组件。\n\n```js{5,9,13,17-21}\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {temperature: ''};\n  }\n\n  handleChange(e) {\n    this.setState({temperature: e.target.value});\n  }\n\n  render() {\n    const temperature = this.state.temperature;\n    return (\n      <fieldset>\n        <legend>输入一个摄氏温度</legend>\n        <input\n          value={temperature}\n          onChange={this.handleChange} />\n        <BoilingVerdict\n          celsius={parseFloat(temperature)} />\n      </fieldset>\n    );\n  }\n}\n```\n\n[在 CodePen 上试试。](http://codepen.io/valscion/pen/VpZJRZ?editors=0010)\n\n## 添加第二个输入框\n\n现在我们有了一个新的需求，在提供摄氏度输入的基础之上，再提供一个华氏温度输入，并且它们能保持同步。\n\n我们可以通过从 `Calculator` 组件中抽离一个 `TemperatureInput` 组件出来。我们也会给它添加一个值为 `c` 或 `f` 的表示温度单位的 `scale` 属性。\n\n```js{1-4,19,22}\nconst scaleNames = {\n  c: 'Celsius',\n  f: 'Fahrenheit'\n};\n\nclass TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {temperature: ''};\n  }\n\n  handleChange(e) {\n    this.setState({temperature: e.target.value});\n  }\n\n  render() {\n    const temperature = this.state.temperature;\n    const scale = this.props.scale;\n    return (\n      <fieldset>\n        <legend>Enter temperature in {scaleNames[scale]}:</legend>\n        <input value={temperature}\n               onChange={this.handleChange} />\n      </fieldset>\n    );\n  }\n}\n```\n\n我们现在可以对`Calculator`稍作修改，来渲染两个不同的温度输入框。\n\n```js{5,6}\nclass Calculator extends React.Component {\n  render() {\n    return (\n      <div>\n        <TemperatureInput scale=\"c\" />\n        <TemperatureInput scale=\"f\" />\n      </div>\n    );\n  }\n}\n```\n\n[在 CodePen 上试试。](http://codepen.io/valscion/pen/GWKbao?editors=0010)\n\n\n我们现在有了两个输入框，但是当你在其中一个输入时，另一个并不会更新。这显然是不符合我们的需求的。\n\n另外，我们此时也不能从 `Calculator` 组件中展示 `BoilingVerdict` 的渲染结果。因为现在表示温度的状态数据只存在于 `TemperatureInput` 组件当中。\n\n## 写出转换函数\n\n首先，我们写两个可以将摄氏度和华氏度互相转换的函数。\n\n```js\nfunction toCelsius(fahrenheit) {\n  return (fahrenheit - 32) * 5 / 9;\n}\n\nfunction toFahrenheit(celsius) {\n  return (celsius * 9 / 5) + 32;\n}\n```\n\n这两个函数只是单纯转换数字。我们还需要另外一个函数，它接受两个参数，第一个接受字符串 `temperature` 变量，第二个参数则是上面编写的单位转换函数。最后会返回一个字符串。我们会使用它来根据一个输入框的输入计算出另一个输入框的值。\n\n我们最后取到输出的小数点后三位，而 `temperature` 输入不合法的时候，这个函数则会返回空字符串。\n\n```js\nfunction tryConvert(temperature, convert) {\n  const input = parseFloat(temperature);\n  if (Number.isNaN(input)) {\n    return '';\n  }\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\n```\n\n举两个例子，`tryConvert('abc', toCelsius)` 会返回空字符串，而 `tryConvert('10.22', toFahrenheit)` 会返回 `'50.396'`。\n\n## 状态提升\n\n到这一步为止，两个`TemperatureInput`组件都是在自己的 state 中独立保存数据。\n\n```js{5,9,13}\nclass TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {temperature: ''};\n  }\n\n  handleChange(e) {\n    this.setState({temperature: e.target.value});\n  }\n\n  render() {\n    const temperature = this.state.temperature;\n    // ...  \n```\n\n但是，我们想要的是这两个输入能保持同步。当我们更新摄氏输入（Celsius）时，华氏度（Fahrenheit ）这个框应该能显示转换后的的温度数值，反之亦然。\n\n在React中，状态分享是通过将state数据提升至离需要这些数据的组件最近的父组件来完成的。这就是所谓的**状态提升**。我们会将 `TemperatureInput` 组件自身保存的 state 移到 `Calculator` 中。\n\n如果 `Calculator` 组件拥有了提升上来共享的状态数据，那它就会成为两个温度输入组件的“数据源”。它会传递给下面温度输入组件一致的数据。由于两个 `TemperatureInput` 温度组件的props属性都是来源于共同的父组件 `Calculator`，它们的数据也会保持同步。\n\n让我们一步一步来分析如何操作。\n\n首先，我们在 `TemperatureInput` 组件中将 `this.state.temperature` 替换为 `this.props.temperature` 。现在，先假定 `this.props.temperature` 值已经存在，将来我们需要从 `Calculator` 组件中传入。\n\n```js{3}\n  render() {\n    // 之前的代码: const temperature = this.state.temperature;\n    const temperature = this.props.temperature;\n    // ...\n```\n\n我们首先知道[props是只读的](/docs/components-and-props.html#props-are-read-only)\n这么一个事实。而之前`temperature`变量是被保存在其自身的 state 中的，`TemperatureInput` 组件只需要调用 `this.setState()` 就能改变它。但现在，`temperature` 是作为 prop 从父组件传递下来的，`TemperatureInput` 组件是没有控制权的。\n\n在React中，这个问题通常是通过让组件“受控”来解决。就像 `<input>` 能够接受 `value` 和 `onChange` 这两个prop属性值，自定义组件 `TemperatureInput` 也能接受来自 `Calculator` 父组件的 `temperature` 变量和 `onTemperatureChange` 方法作为props属性值。\n\n做完这些，当 `TemperatureInput` 组件希望更新温度时，就会调用 `this.props.onTemperatureChange`。\n\n```js{3}\n  handleChange(e) {\n    // 之前的代码: this.setState({temperature: e.target.value});\n    this.props.onTemperatureChange(e.target.value);\n    // ...\n```\n\n> 注意：\n> \n> `temperature` 和 `onTemperatureChange` 这些prop属性的命名没有特殊含义，我们也可以起个其他任何的名字，像是`value`和`onChange`这些只是命名习惯罢了。\n\n`onTemperatureChange`加上`temperature`一起的两个属性（prop）由父组件`Calculator`提供。父组件处理变化只需通过改变其自身的状态，从而使用新的值来重新渲染两个输入框组件。很快我们将重新改写`Calculator`。\n\n在我们改写`Calculator`组件之前，我们先花点时间总结下`TemperatureInput`组件的变化。我们将其自身的 state 从组件中移除，使用 `this.props.temperature` 替代 `this.state.temperature`。当我们想要响应数据改变时，现在是调用由`Calculator`提供的`this.props.onTemperatureChange()` 而不是`this.setState()`：\n\n```js{8,12}\nclass TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onTemperatureChange(e.target.value);\n  }\n\n  render() {\n    const temperature = this.props.temperature;\n    const scale = this.props.scale;\n    return (\n      <fieldset>\n        <legend>在{scaleNames[scale]}:中输入温度数值</legend>\n        <input value={temperature}\n               onChange={this.handleChange} />\n      </fieldset>\n    );\n  }\n}\n```\n\n现在让我们来转向 `Calculator` 组件。\n\n我们将会保存当前输入的`temperature`和`scale`值到它的局部状态（state）中，这是从输入框组件状态中“提升”上来的，它将会用作两个输入框共同的的“数据源”。这是我们为了渲染两个输入框组件需要知道的所有数据最精简表达。\n\n举个例子，假如我们在摄氏度输入框中输入37，那么 `Calculator` 的 state 就是：\n\n```js\n{\n  temperature: '37',\n  scale: 'c'\n}\n```\n\n如果我们之后在华氏度输入框输入212，那么 `Calculator` 的状态数据就会是：\n\n```js\n{\n  temperature: '212',\n  scale: 'f'\n}\n```\n\n我们可以一起保存两个输入的值，但这么做似乎没有必要。保存最新输入的温度和温度单位就足够了。我们可以只需基于当前的 `temperature` 和 `scale` 计算出另一个输入框中的值。\n\n现在这两个输入框中的值能保持同步了，因为它们使用的是通过同一个 state 计算出来的值。\n\n```js{6,10,14,18-21,27-28,31-32,34}\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n    this.state = {temperature: '', scale: 'c'};\n  }\n\n  handleCelsiusChange(temperature) {\n    this.setState({scale: 'c', temperature});\n  }\n\n  handleFahrenheitChange(temperature) {\n    this.setState({scale: 'f', temperature});\n  }\n\n  render() {\n    const scale = this.state.scale;\n    const temperature = this.state.temperature;\n    const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\n    const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n\n    return (\n      <div>\n        <TemperatureInput\n          scale=\"c\"\n          temperature={celsius}\n          onTemperatureChange={this.handleCelsiusChange} />\n        <TemperatureInput\n          scale=\"f\"\n          temperature={fahrenheit}\n          onTemperatureChange={this.handleFahrenheitChange} />\n        <BoilingVerdict\n          celsius={parseFloat(celsius)} />\n      </div>\n    );\n  }\n}\n```\n\n[在 Codepen 上试试。](http://codepen.io/valscion/pen/jBNjja?editors=0010)\n\n现在，无论你编辑哪一个输入框，`Calculator` 组件中 `this.state.temperature` 和 `this.state.scale` 都会更新。向其中一个输入框输入值，另一个输入框总是基于这个值显示计算结果。\n\n让我们梳理下编辑输入框时所发生的一系列活动：\n\n* React在DOM的`<input>`上调用被指定为`onChange`的函数。在本例中，是`TemperatureInput`组件上的`handleChange`函数。\n* `TemperatureInput`组件的`handleChange`函数会用新输入值调用`this.props.onTemperatureChange()`函数。输入框组件的属性，包括`onTemperatureChange`都是由父组件`Calculator`提供的。\n* 当最开始渲染时，`Calculator`组件的`handleCelsiusChange`方法被指定给摄氏温度输入组件`TemperatureInput`的`onTemperatureChange`方法，同时把`handleFahrenheitChange`方法指定给华氏输入组件`TemperatureInput`的`onTemperatureChange`方法。所以`Calculator`组件的两个方法都会在相应输入框被编辑时被调用。\n* 在这些方法内部，`Calculator`组件会使用编辑输入的新值和当前输入框的温度单位来让React调用`this.setState()`方法来重渲染自身。\n* React调用`Calculator`组件的`render`方法来识别UI界面的样子。基于当前值和激活的温度单位，两个输入框的值会被重新计算。温度转换就是在这里被执行的。\n* React使用由`Calculator`指定的新props来调用各个`TemperatureInput`组件的`render`方法，React也会识别出子组件的UI界面。\n* React调用`BoilingVerdict`组件的`render`方法，传递摄氏温度作为它的属性。\n* React DOM 会用沸腾裁决更新DOM来匹配渴望的输入值。我们编辑的输入框获取新值，而另一个输入框则用经过转换的温度值进行更新。\n\n一切更新都是经过同样的步骤，因而输入框能保持同步的。\n\n## 经验教训\n\n在React应用中，对应任何可变数据理应只有一个单一“数据源”。通常，状态都是首先添加在需要渲染数据的组件中。然后，如果另一个组件也需要这些数据，你可以将数据提升至离它们最近的共同祖先中。你应该依赖 [自上而下的数据流](/docs/state-and-lifecycle.html#数据自顶向下流动)，而不是尝试在不同组件中同步状态。\n\n状态提升要写更多的“炉墙代码”，比起双向绑定方式，但带来的好处是，你也可以花更少的工作量找到和隔离bug。因为任何*生活*在某些组件中的状态数据，也只有该组件它自己能够操作这些数据，发生bug的表面积就被大大地减小了。此外，你也可以使用自定义逻辑来拒绝（reject）或转换（transform）用户的输入。\n\n如果某些数据可以由props或者state推导出来，那么它很有可能不应该在state中出现。举个例子，我们没有同时保存 `celsiusValue` 和 `fahrenheitValue`，而只是保存最新编辑的`temperature`和它的`scale`值。另一个输入框中的值总是可以在 `render()` 函数中由这些保存的数据计算出来。这样我们在不损失任何用户输入精度的情况下，可以对另一字段清除或应用四舍五入。\n\n当你在开发UI界面遇到问题时，你可以使用 [React 开发者工具](https://github.com/facebook/react-devtools)来检查props属性，并且可以点击查看组件树，直到你找到负责目前状态更新的组件。这能让你到追踪到产生 bug 的源头。\n\n<img src=\"https://reactjs.org/react-devtools-state-ef94afc3447d75cdc245c77efb0d63be.gif\" alt=\"Monitoring State in React DevTools\" width=\"100%\">\n",
        "type": "MarkdownRemark",
        "contentDigest": "20a5eca6a08e3e24d1dd7b0c0c4b7e66",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "状态提升",
        "id": "lifting-state-up",
        "permalink": "docs/lifting-state-up.html",
        "prev": "state-and-lifecycle.html",
        "next": "composition-vs-inheritance.html",
        "redirect_from": [
          "docs/flux-overview.html",
          "docs/flux-todo-list.html"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/lifting-state-up.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/lifting-state-up.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/lifting-state-up.md",
      "fields": {
        "slug": "docs/lifting-state-up.html",
        "path": "docs/lifting-state-up.md",
        "redirect": "[\"docs/flux-overview.html\",\"docs/flux-todo-list.html\"]"
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/lists-and-keys.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/lists-and-keys.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/lists-and-keys.md absPath of file",
      "internal": {
        "content": "---\nid: lists-and-keys\ntitle: 列表 & Keys\npermalink: docs/lists-and-keys.html\nprev: conditional-rendering.html\nnext: forms.html\n---\n\n首先，让我们看下在Javascript中如何转化列表\n\n如下代码，我们使用[`map()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)函数让数组中的每一项翻倍,我们得到了一个新的数列`doubled`\n\n```javascript{2}\nconst numbers = [1, 2, 3, 4, 5];\nconst doubled = numbers.map((number) => number * 2);\nconsole.log(doubled);\n```\n\n代码打印出`[2, 4, 6, 8, 10]`\n\n在React中，把数组转化为数列[元素](/docs/rendering-elements.html)的过程是相似的\n\n### 渲染多个组件\n\n你可以通过使用`{}`在JSX内构建一个[元素集合](/docs/introducing-jsx.html#JSX嵌套)\n\n下面，我们使用Javascript中的[`map()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)方法遍历`numbers`数组。对数组中的每个元素返回`<li>`标签，最后我们得到一个数组`listItems`\n\n```javascript{2-4}\nconst numbers = [1, 2, 3, 4, 5];\nconst listItems = numbers.map((number) =>\n  <li>{number}</li>\n);\n```\n\n我们把整个`listItems`插入到`ul`元素中，然后[渲染进DOM](/docs/rendering-elements.html#将元素渲染到DOM中):\n\n```javascript{2}\nReactDOM.render(\n  <ul>{listItems}</ul>,\n  document.getElementById('root')\n);\n```\n\n[在 CodePen 上试试。](https://codepen.io/gaearon/pen/GjPyQr?editors=0011)\n\n这段代码生成了一个1到5的数字列表\n\n### 基础列表组件\n\n通常你需要渲染一个列表到[组件](/docs/components-and-props.html)中\n\n我们可以把前面的例子重构成一个组件。这个组件接收`numbers`数组作为参数，输出一个无序列表。\n\n\n```javascript{3-5,7,13}\nfunction NumberList(props) {\n  const numbers = props.numbers;\n  const listItems = numbers.map((number) =>\n    <li>{number}</li>\n  );\n  return (\n    <ul>{listItems}</ul>\n  );\n}\n\nconst numbers = [1, 2, 3, 4, 5];\nReactDOM.render(\n  <NumberList numbers={numbers} />,\n  document.getElementById('root')\n);\n```\n\n当我们运行这段代码，将会看到一个警告 `a key should be provided for list items` ，意思是当你创建一个元素时，必须包括一个特殊的 `key` 属性。我们将在下一节讨论这是为什么。\n\n让我们来给每个列表元素分配一个 `key` 来解决上面的那个警告：\n\n```javascript{4}\nfunction NumberList(props) {\n  const numbers = props.numbers;\n  const listItems = numbers.map((number) =>\n    <li key={number.toString()}>\n      {number}\n    </li>\n  );\n  return (\n    <ul>{listItems}</ul>\n  );\n}\n\nconst numbers = [1, 2, 3, 4, 5];\nReactDOM.render(\n  <NumberList numbers={numbers} />,\n  document.getElementById('root')\n);\n```\n\n[在 CodePen 上试试。](https://codepen.io/gaearon/pen/jrXYRR?editors=0011)\n\n## Keys\n\nKeys可以在DOM中的某些元素被增加或删除的时候帮助React识别哪些元素发生了变化。因此你应当给数组中的每一个元素赋予一个确定的标识。\n\n```js{3}\nconst numbers = [1, 2, 3, 4, 5];\nconst listItems = numbers.map((number) =>\n  <li key={number.toString()}>\n    {number}\n  </li>\n);\n```\n一个元素的key最好是这个元素在列表中拥有的一个独一无二的字符串。通常，我们使用来自数据的id作为元素的key:\n\n```js{2}\nconst todoItems = todos.map((todo) =>\n  <li key={todo.id}>\n    {todo.text}\n  </li>\n);\n```\n\n当元素没有确定的id时，你可以使用他的序列号索引index作为key\n\n```js{2,3}\nconst todoItems = todos.map((todo, index) =>\n  // Only do this if items have no stable IDs\n  <li key={index}>\n    {todo.text}\n  </li>\n);\n```\n\n\n如果列表项目的顺序可能会变化，我们不建议使用索引来用作键值，因为这样做会导致性能的负面影响，还可能引起组件状态问题。如果你想要了解更多，请点击[深度解析key的必要性](/docs/reconciliation.html#递归子节点)。如果你选择不指定显式的键值，那么React将默认使用索引用作为列表项目的键值。\n\n这里有一篇文章 [in-depth explanation about why keys are necessary](https://reactjs.org/docs/reconciliation.html#recursing-on-children) ，要是你有兴趣了解更多的话。\n\n### 用keys提取组件\n\n元素的key只有放在其环绕数组的上下文中才有意义。\n\n比方说，如果你提取出一个`ListItem`组件，你应该把key保存在数组中的这个`<ListItem />`元素上，而不是放在`ListItem`组件中的`<li>`元素上。\n\n**示范：不正确的使用键的方式**\n\n```javascript{4,5,14,15}\nfunction ListItem(props) {\n  const value = props.value;\n  return (\n    // 错啦！你不需要在这里指定key:\n    <li key={value.toString()}>\n      {value}\n    </li>\n  );\n}\n\nfunction NumberList(props) {\n  const numbers = props.numbers;\n  const listItems = numbers.map((number) =>\n    //错啦！元素的key应该在这里指定：\n    <ListItem value={number} />\n  );\n  return (\n    <ul>\n      {listItems}\n    </ul>\n  );\n}\n\nconst numbers = [1, 2, 3, 4, 5];\nReactDOM.render(\n  <NumberList numbers={numbers} />,\n  document.getElementById('root')\n);\n```\n\n\n**示范：正确的使用键的方式**\n\n```javascript{2,3,9,10}\nfunction ListItem(props) {\n  // 对啦！这里不需要指定key:\n  return <li>{props.value}</li>;\n}\n\nfunction NumberList(props) {\n  const numbers = props.numbers;\n  const listItems = numbers.map((number) =>\n    // 又对啦！key应该在数组的上下文中被指定\n    <ListItem key={number.toString()}\n              value={number} />\n  );\n  return (\n    <ul>\n      {listItems}\n    </ul>\n  );\n}\n\nconst numbers = [1, 2, 3, 4, 5];\nReactDOM.render(\n  <NumberList numbers={numbers} />,\n  document.getElementById('root')\n);\n```\n\n[在 CodePen 上试试。](https://codepen.io/rthor/pen/QKzJKG?editors=0010)\n\n一个好的大拇指法则：元素位于`map()`方法内时需要设置键属性。\n\n### 键（key）只是在兄弟之间必须唯一\n\n数组元素中使用的key在其兄弟之间应该是独一无二的。然而，它们不需要是全局唯一的。当我们生成两个不同的数组时，我们可以使用相同的键\n\n```js{2,5,11,12,19,21}\nfunction Blog(props) {\n  const sidebar = (\n    <ul>\n      {props.posts.map((post) =>\n        <li key={post.id}>\n          {post.title}\n        </li>\n      )}\n    </ul>\n  );\n  const content = props.posts.map((post) =>\n    <div key={post.id}>\n      <h3>{post.title}</h3>\n      <p>{post.content}</p>\n    </div>\n  );\n  return (\n    <div>\n      {sidebar}\n      <hr />\n      {content}\n    </div>\n  );\n}\n\nconst posts = [\n  {id: 1, title: 'Hello World', content: 'Welcome to learning React!'},\n  {id: 2, title: 'Installation', content: 'You can install React from npm.'}\n];\nReactDOM.render(\n  <Blog posts={posts} />,\n  document.getElementById('root')\n);\n```\n\n[在 CodePen 上试试。](https://codepen.io/gaearon/pen/NRZYGN?editors=0010)\n\nkey会作为给React的提示，但不会传递给你的组件。如果您的组件中需要使用和`key`相同的值，请用其他属性名显式传递这个值：\n\n```js{3,4}\nconst content = posts.map((post) =>\n  <Post\n    key={post.id}\n    id={post.id}\n    title={post.title} />\n);\n```\n\n上面例子中，`Post`组件可以读出`props.id`，但是不能读出`props.key`\n\n### 在jsx中嵌入map()\n\n在上面的例子中，我们声明了一个单独的`listItems`变量并将其包含在JSX中\n\n```js{3-6}\nfunction NumberList(props) {\n  const numbers = props.numbers;\n  const listItems = numbers.map((number) =>\n    <ListItem key={number.toString()}\n              value={number} />\n  );\n  return (\n    <ul>\n      {listItems}\n    </ul>\n  );\n}\n```\n\nJSX允许在大括号中[嵌入任何表达式](/docs/introduction-jsx.html＃JSX嵌套)，所以我们可以在`map()`中这样使用：\n\n```js{5-8}\nfunction NumberList(props) {\n  const numbers = props.numbers;\n  return (\n    <ul>\n      {numbers.map((number) =>\n        <ListItem key={number.toString()}\n                  value={number} />\n      )}\n    </ul>\n  );\n}\n```\n\n[在 CodePen 上试试。](https://codepen.io/gaearon/pen/BLvYrB?editors=0010)\n\n这么做有时可以使你的代码更清晰，但有时这种风格也会被滥用。就像在JavaScript中一样，何时需要为了可读性提取出一个变量，这完全取决于你。但请记住，如果一个`map()`嵌套了太多层级，那可能就是你[提取出组件](/docs/components-and-props.html#提取组件)的一个好时机。\n",
        "type": "MarkdownRemark",
        "contentDigest": "b52d45b62b6137690c42a2ba4d7e0f9f",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "列表 & Keys",
        "id": "lists-and-keys",
        "permalink": "docs/lists-and-keys.html",
        "prev": "conditional-rendering.html",
        "next": "forms.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/lists-and-keys.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/lists-and-keys.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/lists-and-keys.md",
      "fields": {
        "slug": "docs/lists-and-keys.html",
        "path": "docs/lists-and-keys.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/reference-dom-elements.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/reference-dom-elements.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/reference-dom-elements.md absPath of file",
      "internal": {
        "content": "---\nid: dom-elements\ntitle: DOM Elements\nlayout: docs\ncategory: Reference\npermalink: docs/dom-elements.html\nredirect_from:\n  - \"docs/tags-and-attributes.html\"\n  - \"docs/dom-differences.html\"\n  - \"docs/special-non-dom-attributes.html\"\n  - \"docs/class-name-manipulation.html\"\n  - \"tips/inline-styles.html\"\n  - \"tips/style-props-value-px.html\"\n  - \"tips/dangerously-set-inner-html.html\"\n---\n\nReact实现了一套与浏览器无关的DOM系统，兼顾了性能和跨浏览器的兼容性。借此机会，我们清理了浏览器DOM实现中一些粗糙的棱角。\n\n在React中，所有的DOM特性和属性（包括事件处理函数）都应该是小驼峰命名法命名。比如说，与HTML中的`tabindex`属性对应的React的属性是`tabIndex`。`aria-*`和`data-*`属性是例外的，一律使用小写字母命名。For example, you can keep `aria-label` as `aria-label`.\n\n## 属性的不同\n\n在React和Html之间有许多属性的行为是不同的：\n\n### checked\n\n`checked`属性受类型为`checkbox`或`radio`的`<input>`组件的支持。你可以用它来设定是否组件是被选中的。这对于构建受控组件很有用。与之相对`defaultChecked`这是非受控组件的属性，用来设定对应组件首次装载时是否选中状态。\n\n### className\n\n使用`className`属性指定一个CSS类。这个特性适用于所有的常规DOM节点和SVG元素，比如`<div>`，`<a>`和其它的元素。\n\n如果你在React中使用Web组件（这是一种不常见的使用方式），请使用`class`属性来代替。\n\n### dangerouslySetInnerHTML\n\n`dangerouslySetInnerHTML`是React提供的替换浏览器DOM中的`innerHTML`接口的一个函数。一般而言，使用JS代码设置HTML文档的内容是危险的，因为这样很容易把你的用户信息暴露给[跨站脚本](https://en.wikipedia.org/wiki/Cross-site_scripting)攻击.所以，你虽然可以直接在React中设置html的内容，但你要使用 `dangerouslySetInnerHTML` 并向该函数传递一个含有`__html`键的对象，用来提醒你自己这样做很危险。例如：\n\n```js\nfunction createMarkup() {\n  return {__html: 'First &middot; Second'};\n}\n\nfunction MyComponent() {\n  return <div dangerouslySetInnerHTML={createMarkup()} />;\n}\n```\n\n### htmlFor\n\n因为`for`是在javascript中的一个保留字，React元素使用 `htmlFor`代替。\n\n### onChange\n\n`onChange`事件的行为正如你所期望的：无论一个表单字段何时发生变化，这个事件都会被触发。我们故意不使用浏览器已有的默认行为，因为`onChange`在浏览器中的行为和名字不相称，React依靠这个事件实时处理用户输入。\n\n### selected\n\n`selected`属性被`<option>`组件支持。你可以使用该属性设定组件是否被选择。这对构建受控组件很有用。\n\n### style\n\n>Note\n>\n>Some examples in the documentation use `style` for convenience, but **使用`style` 属性作为样式化元素的主要手段一般是不推荐的。**In most cases, [`className`](#classname) should be used to reference classes defined in an external CSS stylesheet. `style` is most often used in React applications to add dynamically-computed styles at render time. See also [FAQ: Styling and CSS](/docs/faq-styling.html).\n\n`style`属性接受一个JavaScript对象，其属性用小驼峰命名法命名，而不是接受CSS字符串。这和DOM中`style` JavaScript 属性是一致性的，是更高效的，而且能够防止XSS的安全漏洞。例如：\n\n```js\nconst divStyle = {\n  color: 'blue',\n  backgroundImage: 'url(' + imgUrl + ')',\n};\n\nfunction HelloWorldComponent() {\n  return <div style={divStyle}>Hello World!</div>;\n}\n```\n\n注意样式不会自动补齐前缀。为了支持旧的浏览器，你需要手动提供相关的样式属性：\n\n```js\nconst divStyle = {\n  WebkitTransition: 'all', // note the capital 'W' here\n  msTransition: 'all' // 'ms' is the only lowercase vendor prefix\n};\n\nfunction ComponentWithTransition() {\n  return <div style={divStyle}>This should work cross-browser</div>;\n}\n```\n\n样式key使用小驼峰命名法是为了从JS中访问DOM节点的属性保持一致性（例如 `node.style.backgroundImage`）。供应商前缀[除了`ms`](http://www.andismith.com/blog/2012/02/modernizr-prefixed/)，都应该以大写字母开头。这就是为什么`WebkitTransition`有一个大写字母`W`。\n\nReact将自动添加一个\"px\"后缀到某些数字内联样式属性。如果你希望使用不同于\"px\"的其他单位，指定值为带渴望单位的字符串。例如：\n\n```js\n// Result style: '10px'\n<div style={{ height: 10 }}>\n  Hello World!\n</div>\n\n// Result style: '10%'\n<div style={{ height: '10%' }}>\n  Hello World!\n</div>\n```\n\n不是所有样式属性被转化为像素字符串，尽管如此。某些个保持无单位(例如 `zoom`, `order`, `flex`)。A complete list of 无单位属性 can be seen [here](https://github.com/facebook/react/blob/4131af3e4bf52f3a003537ec95a1655147c81270/src/renderers/dom/shared/CSSProperty.js#L15-L59).\n\n### suppressContentEditableWarning\n\n一般来说，当一个拥有子节点的元素被标记为`contentEditable`时，React会发出一个警告信息，因为此时`contentEditable`是无效的。这个属性会触发这样的警告信息。一般不要使用这个属性，除非你要构建一个类似[Draft.js](https://facebook.github.io/draft-js/)这样需要手动处理`contentEditable`属性的库。\n\n### value\n\n`value`属性受到`<input>` 和 `<textarea>` 组件的支持。你可以使用它设置组件的值。这对构建受控组件非常有用。`defaultValue`属性对应的是非受控组件的属性，用来设置组件第一次装载时的值。\n\n## 所有受支持的HTML属性\n\nAs of React 16, 任何标准的[或自定义的](/blog/2017/09/08/dom-attributes-in-react-16.html) DOM属性都被充分支持。\n\nReact 总是提供一个以 JavaScript为中心的API给DOM。因为React组件对于自定义和DOM相关的属性都经常采用。React使用小驼峰约定，正如DOM API：\n\n```js\n<div tabIndex=\"-1\" />      // Just like node.tabIndex DOM API\n<div className=\"Button\" /> // Just like node.className DOM API\n<input readOnly={true} />  // Just like node.readOnly DOM API\n```\n\n这些属性的工作类似于对应的HTML属性，除了上述文档的特例。\n\nSome of the DOM attributes supported by React include:\n\n```\naccept acceptCharset accessKey action allowFullScreen alt async autoComplete\nautoFocus autoPlay capture cellPadding cellSpacing challenge charSet checked\ncite classID className colSpan cols content contentEditable contextMenu controls\ncontrolsList coords crossOrigin data dateTime default defer dir disabled\ndownload draggable encType form formAction formEncType formMethod formNoValidate\nformTarget frameBorder headers height hidden high href hrefLang htmlFor\nhttpEquiv icon id inputMode integrity is keyParams keyType kind label lang list\nloop low manifest marginHeight marginWidth max maxLength media mediaGroup method\nmin minLength multiple muted name noValidate nonce open optimum pattern\nplaceholder poster preload profile radioGroup readOnly rel required reversed\nrole rowSpan rows sandbox scope scoped scrolling seamless selected shape size\nsizes span spellCheck src srcDoc srcLang srcSet start step style summary\ntabIndex target title type useMap value width wmode wrap\n```\n\nSimilarly, all SVG attributes are fully supported:\n\n```\naccentHeight accumulate additive alignmentBaseline allowReorder alphabetic\namplitude arabicForm ascent attributeName attributeType autoReverse azimuth\nbaseFrequency baseProfile baselineShift bbox begin bias by calcMode capHeight\nclip clipPath clipPathUnits clipRule colorInterpolation\ncolorInterpolationFilters colorProfile colorRendering contentScriptType\ncontentStyleType cursor cx cy d decelerate descent diffuseConstant direction\ndisplay divisor dominantBaseline dur dx dy edgeMode elevation enableBackground\nend exponent externalResourcesRequired fill fillOpacity fillRule filter\nfilterRes filterUnits floodColor floodOpacity focusable fontFamily fontSize\nfontSizeAdjust fontStretch fontStyle fontVariant fontWeight format from fx fy\ng1 g2 glyphName glyphOrientationHorizontal glyphOrientationVertical glyphRef\ngradientTransform gradientUnits hanging horizAdvX horizOriginX ideographic\nimageRendering in in2 intercept k k1 k2 k3 k4 kernelMatrix kernelUnitLength\nkerning keyPoints keySplines keyTimes lengthAdjust letterSpacing lightingColor\nlimitingConeAngle local markerEnd markerHeight markerMid markerStart\nmarkerUnits markerWidth mask maskContentUnits maskUnits mathematical mode\nnumOctaves offset opacity operator order orient orientation origin overflow\noverlinePosition overlineThickness paintOrder panose1 pathLength\npatternContentUnits patternTransform patternUnits pointerEvents points\npointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits\nr radius refX refY renderingIntent repeatCount repeatDur requiredExtensions\nrequiredFeatures restart result rotate rx ry scale seed shapeRendering slope\nspacing specularConstant specularExponent speed spreadMethod startOffset\nstdDeviation stemh stemv stitchTiles stopColor stopOpacity\nstrikethroughPosition strikethroughThickness string stroke strokeDasharray\nstrokeDashoffset strokeLinecap strokeLinejoin strokeMiterlimit strokeOpacity\nstrokeWidth surfaceScale systemLanguage tableValues targetX targetY textAnchor\ntextDecoration textLength textRendering to transform u1 u2 underlinePosition\nunderlineThickness unicode unicodeBidi unicodeRange unitsPerEm vAlphabetic\nvHanging vIdeographic vMathematical values vectorEffect version vertAdvY\nvertOriginX vertOriginY viewBox viewTarget visibility widths wordSpacing\nwritingMode x x1 x2 xChannelSelector xHeight xlinkActuate xlinkArcrole\nxlinkHref xlinkRole xlinkShow xlinkTitle xlinkType xmlns xmlnsXlink xmlBase\nxmlLang xmlSpace y y1 y2 yChannelSelector z zoomAndPan\n```\n\nYou may also use custom attributes as long as they're fully lowercase.\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "deaa4158071952f0545b8453e2967158",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "DOM Elements",
        "id": "dom-elements",
        "layout": "docs",
        "category": "Reference",
        "permalink": "docs/dom-elements.html",
        "redirect_from": [
          "docs/tags-and-attributes.html",
          "docs/dom-differences.html",
          "docs/special-non-dom-attributes.html",
          "docs/class-name-manipulation.html",
          "tips/inline-styles.html",
          "tips/style-props-value-px.html",
          "tips/dangerously-set-inner-html.html"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/reference-dom-elements.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/reference-dom-elements.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/reference-dom-elements.md",
      "fields": {
        "slug": "docs/dom-elements.html",
        "path": "docs/reference-dom-elements.md",
        "redirect": "[\"docs/tags-and-attributes.html\",\"docs/dom-differences.html\",\"docs/special-non-dom-attributes.html\",\"docs/class-name-manipulation.html\",\"tips/inline-styles.html\",\"tips/style-props-value-px.html\",\"tips/dangerously-set-inner-html.html\"]"
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/reference-glossary.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/reference-glossary.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/reference-glossary.md absPath of file",
      "internal": {
        "content": "---\nid: glossary\ntitle: React 术语表\nlayout: docs\ncategory: Reference\npermalink: docs/glossary.html\n\n---\n\n## 单页面应用 Single-page Application\n\n单页面应用，第一次会加载应用程序运行所需的单个的HTML页面和所有必需的资源（如JavaScript和CSS）。 之后任何与页面或后续页面的交互都不需要再往返于服务器，即页面不会再被重新加载。\n\n尽管你可以通过React构建一个单页面应用，但单页面应用对于React而言并不是必需的。 React也可以只用于现有网站中的一小部分以增加交互性。 用React编写的代码可以和服务端渲染标记（如PHP）或其他客户端库完美兼容。 事实上，React在Facebook中也是这样使用的。\n\n## ES6, ES2015, ES2016等\n\n这些缩略词都是指最新版本的ECMAScript语言规范标准，而JavaScript语言是它们的一个实现。ES6版本（也被称为ES2015）包括许多新特性，如：箭头函数、类(class)、模板字面量、`let` 和 `const` 变量声明等。你可以在[这里](https://en.wikipedia.org/wiki/ECMAScript#Versions)了解更多版本新特性。\n\n## 编译器 Compilers\n\nJavaScript编译器用于转换JavaScript代码，并用其它格式返回JavaScript代码。最常见的用例是采用ES6语法编写代码并将其转换为旧版浏览器能够识别的语法。 React最常用的编译器是[Babel](https://babeljs.io/)。\n\n## 打包工具 Bundlers\n\n开发中将JavaScript和CSS代码编写为单独的模块（通常为数百个），打包工具会针对浏览器将它们组合并优化为几个文件。[Webpack](https://webpack.js.org/)和[Browserify](http://browserify.org/)是在React应用程序中常用的打包工具。\n\n## 包管理工具 Package Managers\n\n包管理工具允许你通过依赖项来管理项目。[npm](https://www.npmjs.com/) 和 [Yarn](http://yarnpkg.com/)是React应用程序中常用的包管理工具。它们都是使用相同npm包注册表的客户端。\n\n## CDN\n\nCDN即内容分发网络。 CDN从全球各地的服务器网络提供静态内容的缓存。\n\n## JSX\n\nJSX是一种JavaScript的语法扩展。JSX与模板语言相似，但它具有JavaScript的全部功能。JSX会被编译为`React.createElement()`方法调用，将返回名为“React elements”的普通JavaScript对象。JSX的基本教程参见[这里](/docs/introducing-jsx.html)，更多高级指引参见[这里](/docs/jsx-in-depth.html)。\n\nReact DOM使用属性名称使用驼峰法代替HTML属性名称。例如，`tabindex`在JSX中写作`tabIndex`。由于`class`是JavaScript中的保留字，`class`属性用`className`替代：\n\n```js\nconst name = 'Clementine';\nReactDOM.render(\n  <h1 className=\"hello\">My name is {name}!</h1>,\n  document.getElementById('root')\n);\n```\n\n## 元素 [Elements](/docs/rendering-elements.html)\n\nReact元素是React应用程序的构建块。有人可能分不清元素和更广泛被知道“组件”的概念。元素用来描述你希望在屏幕上看到什么。 React元素是不可变的。\n\n```js\nconst element = <h1>Hello, world</h1>;\n```\n\n通常不直接使用元素，而是从组件中返回它。\n\n## 组件 [Components](/docs/components-and-props.html)\n\nReact组件是小的，可复用的代码片段，它返回一个React元素用于渲染页面。 React组件的最简单版本是一个普通JavaScript函数，它返回一个React元素：\n\n```js\nfunction Welcome(props) {\n  return <h1>Hello, {props.name}</h1>;\n}\n```\n\n你也可以使用 ES6 类来定义一个组件:\n\n```js\nclass Welcome extends React.Component {\n  render() {\n    return <h1>Hello, {this.props.name}</h1>;\n  }\n}\n```\n\n组件可以分解到不同的功能块中，并在其他组件中使用。组件可以返回其他组件，数组，字符串或数字。一个好的拇指规则是，如果你的UI中有一部分使用了好几次（Button、Panel、Avatar），或者其自身就足够复杂（App、FeedStory、Comment），类似这些都是可复用组件的绝佳选择。组件名称应始终首字母大写 (`<Wrapper/>` **而不是** `<wrapper/>`)。参见 [这里](/docs/components-and-props.html#rendering-a-component)获取更多有关渲染组件的信息。\n\n### [`props`](/docs/components-and-props.html)\n\n`props`是React组件的输入。 它们是从父组件向下传递给子组件的数据。\n\n请记住，`props` 是只读的。 不应该以任何方式修改它们：\n\n```js\n// 错误!\nprops.number = 42;\n```\n\n如果你需要修改某些值以响应用户输入或网络响应，请使用`state`来代替。\n\n### `props.children`\n\n`props.children`在每个组件上都可用。 它会包含组件的开始和结束标记之间的内容。 例如：\n\n```js\n<Welcome>Hello world!</Welcome>\n```\n\n字符串`Hello world！`，在`Welcome`组件中可以从`props.children`中获取：\n\n```js\nfunction Welcome(props) {\n  return <p>{props.children}</p>;\n}\n```\n\n定义成类组件时，使用`this.props.children`：\n\n```js\nclass Welcome extends React.Component {\n  render() {\n    return <p>{this.props.children}</p>;\n  }\n}\n```\n\n### 状态 [`state`](/docs/state-and-lifecycle.html#adding-local-state-to-a-class)\n\n当一个组件与其关联的某些数据随时间而改变时，需要使用`state`。例如，`Checkbox`组件的可能需要`isChecked`在它的状态中，或者`NewsFeed` 组件可能希望追踪`fetchedPosts`在它的状态中。\n\n`state`和`props`之间最重要的区别是`props`是从父组件传递的，而`state`是由组件本身管理的。组件不能改变自己的`props`，但可以改变自己的`state`。 要改变状态，组件必须调用`this.setState()`。 只有定义为类的组件才可以具有状态。\n\n对于特定的每一个变化的数据，应该只有一个组件“拥有”它在状态中。不要尝试同步两个不同组件的状态。代替，[状态提升](/docs/lifting-state-up.html)至它们最近的共享的祖先，然后作为`props`向下传递状态给他们两个。\n\n## 生命周期方法 [Lifecycle Methods](/docs/state-and-lifecycle.html#adding-lifecycle-methods-to-a-class)\n\n生命周期方法是在组件的不同阶段来执行的自定义功能。当组件被创建并插入到DOM中时，生命周期方法可用在以下的时候：([装载](/docs/react-component.html#mounting))时，组件更新时，以及从DOM卸载或移除组件时。\n\n ## 受控 & 非受控组件 [Controlled](/docs/forms.html#controlled-components) vs. [Uncontrolled Components](/docs/uncontrolled-components.html)\n\nReact有两种不同的方法来处理表单输入。\n\n输入表单元素，它的值由React控制的称为*受控组件*。当用户将数据输入到受控组件中时，会触发一个改变事件处理器，并且你的代码将决定输入是否有效（使用更新的值重新渲染）。如果你不重新渲染，那么表单元素将保持不变。\n\n*非受控制组件*的表单元素在React之外工作。当用户将数据输入到表单域（输入框，下拉菜单等）时，不需要React做任何事情，更新的数据就会被呈现出来。这也意味着你不能强迫表单域都有一个确定的值。\n\n在大多数情况下，你应该使用受控组件。\n\n## 键 [Keys](/docs/lists-and-keys.html) \n\n一个“键”是一个特殊的字符串属性，当创建元素的数组时，你需要包括键。键可以帮助React识别哪些项目被更改，添加或删除。键应该放到数组内部的元素中，以使得元素有一个稳定的标识。\n\nKeys only need to be unique among sibling elements in the same array. They don't need to be unique across the whole application or even a single component.\n\n不要把类似由`Math.random()`生成的值赋给键值。键有一个跨重新渲染的“稳定的标识”是很重要的，这样React才可以确定何时添加，删除或重新排序项目。在理想情况下，键值应该对应于来自于你的数据的唯一且稳定的标识符，例如`post.id`。\n\n## [Refs](/docs/refs-and-the-dom.html)\n\nReact支持一个可以附加到任何组件的特殊属性`ref`。`ref`属性可以是一个字符串或一个回调函数。当`ref`属性是一个回调函数时，函数接收底层DOM元素或类实例（取决于元素的类型）作为参数。这使你可以直接访问DOM元素或组件实例。\n\n不要过度使用 Refs。如果你发现自己经常在应用程序中使用refs来“搞事情”，请考虑使用[状态提升](/docs/lifting-state-up.html)。\n\n## 事件 [Events](/docs/handling-events.html) \n\nReact元素的事件处理有一些语法上的不同：\n\n* React事件处理器采用小驼峰命名法，而不是小写。\n* 用JSX你需要传入一个函数作为事件处理器，而不是一个字符串。\n\n## 协调 [Reconciliation](/docs/reconciliation.html)\n\n当一个组件的props或状态发生变化时，React通过比较新返回的元素和先前渲染的元素来决定是否需要实际的DOM更新。当它们不相等时，React将更新DOM。 这个过程被称为“协调”。\n",
        "type": "MarkdownRemark",
        "contentDigest": "84446a99197e77ff5ce1b054929faa5a",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React 术语表",
        "id": "glossary",
        "layout": "docs",
        "category": "Reference",
        "permalink": "docs/glossary.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/reference-glossary.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/reference-glossary.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/reference-glossary.md",
      "fields": {
        "slug": "docs/glossary.html",
        "path": "docs/reference-glossary.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/reference-react.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/reference-react.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/reference-react.md absPath of file",
      "internal": {
        "content": "---\nid: react-api\ntitle: React 顶层 API\nlayout: docs\ncategory: Reference\npermalink: docs/react-api.html\nredirect_from:\n  - \"docs/reference.html\"\n  - \"docs/clone-with-props.html\"\n  - \"docs/top-level-api.html\"\n  - \"docs/top-level-api-ja-JP.html\"\n  - \"docs/top-level-api-ko-KR.html\"\n  - \"docs/top-level-api-zh-CN.html\"\n---\n\n`react` 是React库的入口点。如果你通过 `<script>` 标签加载React，这些顶层API可用于 `React` 全局。如果你使用ES6，你可以使用 `import React from 'react'`。如果你使用ES5，你可以使用 `var React = require('react')` 。\n\n## 概览\n\n### Components\n\nReact 组件可以让你把UI分割为独立、可复用的片段，并将每一片段视为相互独立的部分。React组件可以通过继承 `React.Component` 或 `React.PureComponent` 来定义。\n\n - [`React.Component`](#react.component)\n - [`React.PureComponent`](#react.purecomponent)\n\n如果不用ES6类，你可以使用 `create-react-class` 模块。参阅 [Using React without JSX](/docs/react-without-es6.html) 了解更多信息。\n\nReact components can also be defined as functions which can be wrapped:\n\n- [`React.memo`](https://reactjs.org/docs/react-api.html#reactmemo)\n\n### Creating React Elements\n\n推荐 [使用JSX](/docs/introducing-jsx.html) 描述你的UI外观。每个JSX元素仅是调用 [`React.createElement`](#createelement) 的语法糖。如果使用了JSX，你通常不会直接调用以下方法。\n\n- [`createElement()`](#createelement)\n- [`createFactory()`](#createfactory)\n\n参阅 [Using React without JSX](/docs/react-without-jsx.html) 了解更多。\n\n### Transforming Elements\n\n`React` 提供了几个API用于操纵元素：\n\n- [`cloneElement()`](#cloneelement)\n- [`isValidElement()`](#isvalidelement)\n- [`React.Children`](#react.children)\n\n### Fragments\n\n`React` also provides a component for rendering multiple elements without a wrapper.\n\n- [`React.Fragment`](#reactfragment)\n\n### Refs\n\n- [`React.createRef`](https://reactjs.org/docs/react-api.html#reactcreateref)\n- [`React.forwardRef`](https://reactjs.org/docs/react-api.html#reactforwardref)\n\n### Suspense\n\nSuspense lets components “wait” for something before rendering. Today, Suspense only supports one use case: [loading components dynamically with `React.lazy`](https://reactjs.org/docs/code-splitting.html#reactlazy). In the future, it will support other use cases like data fetching.\n\n- [`React.lazy`](https://reactjs.org/docs/react-api.html#reactlazy)\n- [`React.Suspense`](https://reactjs.org/docs/react-api.html#reactsuspense)\n\n* * *\n\n## Reference\n\n### `React.Component`\n\n用 [ES6 类](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes) 定义时，`React.Component`是React组件的基类。\n\n```javascript\nclass Greeting extends React.Component {\n  render() {\n    return <h1>Hello, {this.props.name}</h1>;\n  }\n}\n```\n\n有关基类 `React.Component` 的方法和属性列表，请参阅 [`React.Component API Reference`](/docs/react-component.html)。\n\n* * *\n\n### `React.PureComponent`\n\n`React.PureComponent` 类似于 [`React.Component`](#react.component)。它们的不同之处在于[`React.Component`](https://reactjs.org/docs/react-api.html#reactcomponent) 没有实现 [`shouldComponentUpdate()`](https://reactjs.org/docs/react-component.html#shouldcomponentupdate)，但是 `React.PureComponent`实现了它。采用对属性和状态用浅比较的方式。\n\n如果React组件的 `render()` 函数在给定相同的props和state下渲染为相同的结果，在某些场景下你可以使用 `React.PureComponent` 来提升性能。\n\n> 注意\n> \n> `React.PureComponent` 的 `shouldComponentUpdate()` 只会对对象进行浅对比。如果对象包含复杂的数据结构，它可能会因深层的数据不同而产生漏报判断。仅当你知道拥有的是简单的属性和状态时，才去继承 `PureComponent`，或者在你知道深层的数据结构已经发生改变时使用 [`forceUpate()`](/docs/react-component.html#forceupdate)。或者，考虑使用 [不可变对象](https://facebook.github.io/immutable-js/) 来促进嵌套数据的快速比较。\n>\n> 此外,`React.PureComponent` 的 `shouldComponentUpdate()` 会略过为整个组件的子树更新属性。请确保所有的子级组件也是\"纯\"的。\n\n* * *\n\n### `React.memo`\n\n```js\nconst MyComponent = React.memo(function MyComponent(props) {\n  /* render using props */\n});\n```\n\n`React.memo` is a [higher order component](https://reactjs.org/docs/higher-order-components.html). It’s similar to [`React.PureComponent`](https://reactjs.org/docs/react-api.html#reactpurecomponent) but for function components instead of classes.\n\nIf your function component renders the same result given the same props, you can wrap it in a call to `React.memo` for a performance boost in some cases by memoizing the result. This means that React will skip rendering the component, and reuse the last rendered result.\n\nBy default it will only shallowly compare complex objects in the props object. If you want control over the comparison, you can also provide a custom comparison function as the second argument.\n\n```js\nfunction MyComponent(props) {\n  /* render using props */\n}\nfunction areEqual(prevProps, nextProps) {\n  /*\n  return true if passing nextProps to render would return\n  the same result as passing prevProps to render,\n  otherwise return false\n  */\n}\nexport default React.memo(MyComponent, areEqual);\n```\n\nThis method only exists as a **performance optimization.** Do not rely on it to “prevent” a render, as this can lead to bugs.\n\n> Note\n>\n> Unlike the [`shouldComponentUpdate()`](https://reactjs.org/docs/react-component.html#shouldcomponentupdate) method on class components, the `areEqual` function returns `true` if the props are equal and `false` if the props are not equal. This is the inverse from `shouldComponentUpdate`.\n\n* * *\n\n### `createElement()`\n\n```javascript\nReact.createElement(\n  type,\n  [props],\n  [...children]\n)\n```\n\n创建并返回给定类型的新 [`React element`](/docs/rendering-elements.html) 。参数type既可以是一个标签名称字符串(例如`'div'` 或 `'span'` )，也可以是一个 [`React component`](/docs/components-and-props.html) 类型(一个类或一个函数)，或者一个[React fragment](https://reactjs.org/docs/react-api.html#reactfragment) 类型。\n\n`React.DOM` 提供了DOM组件的 `React.createElement()` 的便捷包装。举个例子，`React.DOM.a(...)` 是 `React.createELement('a', ...)` 的一个便捷包装。这个用法被认为是过时的，我们推荐您使用JSX，或者直接使用 `React.createElement()` 。\n\n用 [`JSX`](/docs/introducing-jsx.html) 编写的代码会被转换成用 `React.createElement()` 实现。如果使用了JSX，你通常不会直接调用 `React.createElement()`。参阅 [`React Without JSX`](/docs/react-without-jsx.html) 了解更多。\n\n* * *\n\n### `cloneElement()`\n\n```js\nReact.cloneElement(\n  element,\n  [props],\n  [...children]\n)\n```\n\n克隆并返回一个新的React元素(React Element)，使用 `element` 作为起点。生成的元素将会拥有原始元素props与新props的浅合并。新的子级会替换现有的子级。来自原始元素的 `key` 和 `ref` 将会保留。\n\n`React.cloneElement()` 几乎相当于：\n\n```js\n<element.type {...element.props} {...props}>{children}</element.type>\n```\n\n然而，它也保留了全部的 `ref`。这意味着，如果你通过 `ref` 获取到孩子时，不会偶然从祖先组件里窃取了它。你将获得同一个`ref`附着到你的新元素。\n\n引入这个API用来替换已弃用的 `React.addons.cloneWithProps()`。\n\n* * *\n\n### `createFactory()`\n\n```javascript\nReact.createFactory(type)\n```\n\n返回一个函数，此函数创建给定类型的React元素。类似 [`React.createElement`](#createElement)，类型参数既可以是一个标签名称字符串(such as `'div'` or `'span'`)，也可以是一个 [`React component`](/docs/components-and-props.html) 类型(一个类或一个函数)，或者一个[React fragment](https://reactjs.org/docs/react-api.html#reactfragment)类型。\n\n这个方法被认为是遗留的，我们鼓励你使用JSX或直接使用 `React.createElement()` 来替代它。\n\n如果使用了JSX，你通常不会直接调用`React.createFactory()` 。参阅 [`React Without JSX`](/docs/react-without-jsx.html)了解更多 。\n\n* * *\n\n### `isValidElement()`\n\n```javascript\nReact.isValidElement(object)\n```\n\n验证对象是否是一个React元素。返回 `true` 或 `false` 。\n\n* * *\n\n### `React.Children`\n\n`React.Children` 提供了处理 `this.props.children` 这个不透明数据结构的工具。\n\n#### `React.Children.map`\n\n```javascript\nReact.Children.map(children, function[(thisArg)])\n```\n\n在包含在 `children` 里的每个直接孩子上调用一个函数，并且`this` 设置为 `thisArg` 。如果 `children` 是一个数组它将被遍历，函数将被调用为每个数组中的孩子。如果 `children` 是 `null` 或 `undefined` ，这个方法将返回 `null` 或 `undefined` 而不是一个数组。\n\n> 注意\n>\n> 如果 `children` 是一个 `Fragment`，它将被当作单独一个孩子，不会被遍历。\n\n#### `React.Children.forEach`\n\n```javascript\nReact.Children.forEach(children, function[(thisArg)])\n```\n\n类似 [`React.Children.map()`](#react.children.map) ，但是不返回数组。\n\n#### `React.Children.count`\n\n```javascript\nReact.Children.count(children)\n```\n\n返回 `children` 中的组件总数，等于传给 `map` 或 `forEach` 的回调函数被调用的次数。\n\n#### `React.Children.only`\n\n```javascript\nReact.Children.only(children)\n```\n\n验证`children`只有唯一一个孩子（React元素）并返回它。否则这个方法扔抛出一个错误。\n\n> 注意\n>\n> `React.Children.only()` 不接受 the return value of [`React.Children.map()`](https://reactjs.org/docs/react-api.html#reactchildrenmap) 因为它是一个数组而不是一个React元素。\n\n#### `React.Children.toArray`\n\n```javascript\nReact.Children.toArray(children)\n```\n\n返回`children` 不透明的数据结构作为一个扁平数组，并将键赋给每个孩子。一个用途是当你打算在渲染方法里操纵子代集合时，特别是你想在 `this.props.children` 传下它之前对它重新排序或切片。\n\n> 注意\n>\n> 当扁平化子代列表时，`React.Children.toArray()` 改变key来保留嵌套数组的语义。也就是说，`toArray` 会给被返回的数组中的每个键加上前缀。这样每个元素的键会应用作用域到它的输入数组。\n\n* * *\n\n### `React.Fragment`\n\n`React.Fragment` 组件让你在一个`render()` 方法中返回多个元素，而不用创造一个额外的 DOM 元素：\n\n```js\nrender() {\n  return (\n    <React.Fragment>\n      Some text.\n      <h2>A heading</h2>\n    </React.Fragment>\n  );\n}\n```\n\nYou can also use it with the shorthand `<></>` syntax. For more information, see [React v16.2.0: Improved Support for Fragments](/blog/2017/11/28/react-v16.2.0-fragment-support.html).\n\n### `React.createRef`\n\n`React.createRef` creates a [ref](/docs/refs-and-the-dom.html) that can be attached to React elements via the ref attribute.\n`embed:16-3-release-blog-post/create-ref-example.js`\n\n### `React.forwardRef`\n\n`React.forwardRef` creates a React component that forwards the [ref](/docs/refs-and-the-dom.html) attribute it receives to another component below in the tree. This technique is not very common but is particularly useful in two scenarios:\n\n* [Forwarding refs to DOM components](/docs/forwarding-refs.html#forwarding-refs-to-dom-components)\n* [Forwarding refs in higher-order-components](/docs/forwarding-refs.html#forwarding-refs-in-higher-order-components)\n\n`React.forwardRef` accepts a rendering function as an argument. React will call this function with `props` and `ref` as two arguments. This function should return a React node.\n\n`embed:reference-react-forward-ref.js`\n\nIn the above example, React passes a `ref` given to `<FancyButton ref={ref}>` element as a second argument to the rendering function inside the `React.forwardRef` call. This rendering function passes the `ref` to the `<button ref={ref}>` element.\n\nAs a result, after React attaches the ref, `ref.current` will point directly to the `<button>` DOM element instance.\n\nFor more information, see [forwarding refs](/docs/forwarding-refs.html).\n\n### `React.lazy`\n\n`React.lazy()` lets you define a component that is loaded dynamically. This helps reduce the bundle size to delay loading components that aren't used during the initial render.\n\nYou can learn how to use it from our [code splitting documentation](/docs/code-splitting.html#reactlazy). You might also want to check out [this article](https://medium.com/@pomber/lazy-loading-and-preloading-components-in-react-16-6-804de091c82d) explaining how to use it in more detail.\n\n```js\n// This component is loaded dynamically\nconst SomeComponent = React.lazy(() => import('./SomeComponent'));\n```\n\nNote that rendering `lazy` components requires that there's a `<React.Suspense>` component higher in the rendering tree. This is how you specify a loading indicator.\n\n> **Note**\n>\n> Using `React.lazy`with dynamic import requires Promises to be available in the JS environment. This requires a polyfill on IE11 and below.\n\n### `React.Suspense`\n\n`React.Suspense` let you specify the loading indicator in case some components in the tree below it are not yet ready to render. Today, lazy loading components is the **only** use case supported by `<React.Suspense>`:\n\n```js\n// This component is loaded dynamically\nconst OtherComponent = React.lazy(() => import('./OtherComponent'));\n\nfunction MyComponent() {\n  return (\n    // Displays <Spinner> until OtherComponent loads\n    <React.Suspense fallback={<Spinner />}>\n      <div>\n        <OtherComponent />\n      </div>\n    </React.Suspense>\n  );\n}\n```\n\nIt is documented in our [code splitting guide](/docs/code-splitting.html#reactlazy). Note that `lazy` components can be deep inside the `Suspense` tree -- it doesn't have to wrap every one of them. The best practice is to place `<Suspense>` where you want to see a loading indicator, but to use `lazy()` wherever you want to do code splitting.\n\nWhile this is not supported today, in the future we plan to let `Suspense` handle more scenarios such as data fetching. You can read about this in [our roadmap](/blog/2018/11/27/react-16-roadmap.html).\n\n>Note:\n>\n>`React.lazy()` and `<React.Suspense>` are not yet supported by `ReactDOMServer`. This is a known limitation that will be resolved in the future.\n",
        "type": "MarkdownRemark",
        "contentDigest": "6dff971849da58e3f7b98b55d7727773",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React 顶层 API",
        "id": "react-api",
        "layout": "docs",
        "category": "Reference",
        "permalink": "docs/react-api.html",
        "redirect_from": [
          "docs/reference.html",
          "docs/clone-with-props.html",
          "docs/top-level-api.html",
          "docs/top-level-api-ja-JP.html",
          "docs/top-level-api-ko-KR.html",
          "docs/top-level-api-zh-CN.html"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/reference-react.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/reference-react.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/reference-react.md",
      "fields": {
        "slug": "docs/react-api.html",
        "path": "docs/reference-react.md",
        "redirect": "[\"docs/reference.html\",\"docs/clone-with-props.html\",\"docs/top-level-api.html\",\"docs/top-level-api-ja-JP.html\",\"docs/top-level-api-ko-KR.html\",\"docs/top-level-api-zh-CN.html\"]"
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/refs-and-the-dom.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/refs-and-the-dom.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/refs-and-the-dom.md absPath of file",
      "internal": {
        "content": "---\nid: refs-and-the-dom\ntitle: Refs & DOM\nredirect_from:\n  - \"docs/working-with-the-browser.html\"\n  - \"docs/more-about-refs.html\"\n  - \"docs/more-about-refs-ko-KR.html\"\n  - \"docs/more-about-refs-zh-CN.html\"\n  - \"tips/expose-component-functions.html\"\n  - \"tips/children-undefined.html\"\npermalink: docs/refs-and-the-dom.html\n---\n\nRefs 提供了一种方式，用于访问在 render 方法中创建的 DOM 节点或 React 元素。\n\n在典型的 React 数据流中, [属性（props）](/docs/components-and-props.html)是父组件与子组件交互的唯一方式。要修改子组件，你需要使用新的 props 重新渲染它。但是，某些情况下你需要在典型数据流外强制修改子组件。要修改的子组件可以是 React 组件的实例，也可以是 DOM 元素。对于这两种情况，React 提供了解决办法。\n\n### 何时使用 Refs\n\n下面是几个适合使用 refs 的情况：\n\n* 处理焦点、文本选择或媒体控制。\n* 触发强制动画。\n* 集成第三方 DOM 库\n\n如果可以通过声明式实现，则尽量避免使用 refs。\n\n例如，不要在 `Dialog` 组件上直接暴露 `open()` 和 `close()` 方法，最好传递 `isOpen` 属性。\n\n### 不要过度使用 Refs\n\n你可能首先会想到在你的应用程序中使用 refs 来更新组件。如果是这种情况，请花一点时间，重新思考一下 state 属性在组件层中位置。通常你会想明白，提升 state 所在的组件层级会是更合适的做法。有关示例，请参考[状态提升](/docs/lifting-state-up.html).\n\n> Note\n>\n> 下面的例子已经用 React v16.3 引入的 `React.createRef()` API 更新。如果你正在使用 React 更早的发布版，我们推荐使用[回调形式的 refs](#callback-refs)。\n\n### 创建 Refs\n\n使用 `React.createRef()` 创建 refs，通过 `ref` 属性来获得 React 元素。当构造组件时，refs 通常被赋值给实例的一个属性，这样你可以在组件中任意一处使用它们.\n\n```javascript{4,7}\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n  }\n  render() {\n    return <div ref={this.myRef} />;\n  }\n}\n```\n\n### 访问 Refs\n\n当一个 ref 属性被传递给一个 `render` 函数中的元素时，可以使用 ref 中的 `current` 属性对节点的引用进行访问。\n\n```javascript\nconst node = this.myRef.current;\n```\n\nref的值取决于节点的类型:\n\n- 当 `ref` 属性被用于一个普通的 HTML 元素时，`React.createRef()` 将接收底层 DOM 元素作为它的 `current` 属性以创建 `ref` 。\n- 当 `ref` 属性被用于一个自定义类组件时，`ref` 对象将接收该组件已挂载的实例作为它的 `current` 。\n- **你不能在函数式组件上使用 `ref` 属性**，因为它们没有实例。\n\n下面的例子说明了这些差异。\n\n#### 为 DOM 元素添加 Ref\n\n以下代码使用 `ref` 存储对 DOM 节点的引用：\n\n```javascript{8,9,19}\nclass CustomTextInput extends React.Component {\n  constructor(props) {\n    super(props);\n    // 创建 ref 存储 textInput DOM 元素\n    this.textInput = React.createRef();\n    this.focusTextInput = this.focusTextInput.bind(this);\n  }\n\n  focusTextInput() {\n    // 直接使用原生 API 使 text 输入框获得焦点\n    // 注意：通过 \"current\" 取得 DOM 节点\n    this.textInput.current.focus();\n  }\n\n  render() {\n    // 告诉 React 我们想把 <input> ref 关联到构造器里创建的 `textInput` 上\n    return (\n      <div>\n        <input\n          type=\"text\"\n          ref={this.textInput} />\n          \n        <input\n          type=\"button\"\n          value=\"Focus the text input\"\n          onClick={this.focusTextInput}\n        />\n      </div>\n    );\n  }\n}\n```\n\nReact 会在组件加载时将 DOM 元素传入 `current` 属性，在卸载时则会改回 `null`。`ref` 的更新会发生在`componentDidMount` 或 `componentDidUpdate` 生命周期钩子之前。\n\n#### 为类组件添加 Ref\n\n如果我们想要包装上面的 `CustomTextInput` ，来模拟挂载之后立即被点击的话，我们可以使用 ref 来访问自定义输入，并手动调用它的 `focusTextInput` 方法：\n\n```javascript{4,8,13}\nclass AutoFocusTextInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.textInput = React.createRef();\n  }\n\n  componentDidMount() {\n    this.textInput.current.focusTextInput();\n  }\n\n  render() {\n    return (\n      <CustomTextInput ref={this.textInput} />\n    );\n  }\n}\n```\n\n需要注意的是，这种方法仅对 `class` 声明的 `CustomTextInput` 有效：\n\n```js{1}\nclass CustomTextInput extends React.Component {\n  // ...\n}\n```\n\n#### Refs 与函数式组件\n\n**你不能在函数式组件上使用 `ref` 属性**，因为它们没有实例：\n\n```javascript{1,8,13}\nfunction MyFunctionalComponent() {\n  return <input />;\n}\n\nclass Parent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.textInput = React.createRef();\n  }\n  render() {\n    // 这将 *不会* 工作！\n    return (\n      <MyFunctionalComponent ref={this.textInput} />\n    );\n  }\n}\n```\n\n如果你想使用 `ref`，就像你想使用生命周期方法或者 state 一样，应该将其转换为 `class` 组件。\n\n但是，你可以在函数式组件内部使用 `ref`，只要它指向一个 DOM 元素或者 class 组件：\n\n```javascript{2,3,6,13}\nfunction CustomTextInput(props) {\n  // 这里必须声明 textInput，这样 ref 回调才可以引用它\n  let textInput = null;\n\n  function handleClick() {\n    textInput.focus();\n  }\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        ref={(input) => { textInput = input; }} />\n      <input\n        type=\"button\"\n        value=\"Focus the text input\"\n        onClick={handleClick}\n      />\n    </div>\n  );  \n}\n```\n\n### 对父组件暴露 DOM 节点\n\n在极少数情况下，你可能希望从父组件访问子节点的 DOM 节点。通常不建议这样做，因为它会破坏组件的封装，但偶尔也可用于触发焦点或测量子 DOM 节点的大小或位置。\n\n虽然你可以[向子组件添加 ref](#adding-a-ref-to-a-class-component)，但这不是一个理想的解决方案，因为你只能获取组件实例而不是 DOM 节点。并且，它还在函数式组件上无效。\n\n如果你使用 React 16.3 或更高, 这种情况下我们推荐使用 [ref 转发](/docs/forwarding-refs.html)。 **Ref 转发使组件可以像暴露自己的 ref 一样暴露子组件的 ref**。关于怎样对父组件暴露子组件的 DOM 节点，[在 ref 转发文档](/docs/forwarding-refs.html#forwarding-refs-to-dom-components) 中有一个详细的例子。\n\n如果你使用 React 16.2 或更低，或者你需要比 ref 转发更高的灵活性，你可以使用 [这个替代方案](https://gist.github.com/gaearon/1a018a023347fe1c2476073330cc5509) 将 ref 作为特殊名字的 prop 直接传递。\n\n可能的话，我们不建议暴露 DOM 节点，但有时候它会成为救命稻草。注意这些方案需要你在子组件中增加一些代码。如果你对子组件的实现没有控制权的话，你剩下的选择是使用 [`findDOMNode()`](/docs/react-dom.html#finddomnode)，但是不推荐。\n\n### 回调 Refs\n\nReact 也支持另一种设置 ref 的方式，称为“回调 ref”，更加细致地控制何时 ref 被设置和解除。\n\n不同于传递 `createRef()` 创建的 `ref` 属性，你会传递一个函数。这个函数接受 React 组件的实例或 HTML DOM 元素作为参数，以存储它们并使它们能被其他地方访问。\n\n下面的例子描述了一种通用的范例：使用 `ref` 回调函数，在实例的属性中存储对 DOM 节点的引用。\n\n```javascript{5,7-9,11-14,19,29,34}\nclass CustomTextInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.textInput = null;\n\n    this.setTextInputRef = element => {\n      this.textInput = element;\n    };\n\n    this.focusTextInput = () => {\n      // 直接使用原生 API 使 text 输入框获得焦点\n      if (this.textInput) this.textInput.focus();\n    };\n  }\n\n  componentDidMount() {\n    // 渲染后文本框自动获得焦点\n    this.focusTextInput();\n  }\n\n  render() {\n    // 使用 `ref` 的回调将 text 输入框的 DOM 节点存储到 React\n    // 实例上（比如 this.textInput）\n    return (\n      <div>\n        <input\n          type=\"text\"\n          ref={this.setTextInputRef}\n        />\n        <input\n          type=\"button\"\n          value=\"Focus the text input\"\n          onClick={this.focusTextInput}\n        />\n      </div>\n    );\n  }\n}\n```\n\nReact 将在组件挂载时将 DOM 元素传入`ref` 回调函数并调用，当卸载时传入 `null` 并调用它。`ref` 回调函数会在 `componentDidMount` 和 `componentDidUpdate` 生命周期函数前被调用\n\n你可以在组件间传递回调形式的 refs，就像你可以传递通过 `React.createRef()` 创建的对象 refs 一样。\n\n```javascript{4,13}\nfunction CustomTextInput(props) {\n  return (\n    <div>\n      <input ref={props.inputRef} />\n    </div>\n  );\n}\n\nclass Parent extends React.Component {\n  render() {\n    return (\n      <CustomTextInput\n        inputRef={el => this.inputElement = el}\n      />\n    );\n  }\n}\n```\n\n在上面的例子中，`Parent` 传递给它的 ref 回调函数作为 `inputRef` 传递给 `CustomTextInput`，然后 `CustomTextInput` 通过 `ref`属性将其传递给 `<input>`。最终，`Parent` 中的 `this.inputElement` 将被设置为与 `CustomTextIput` 中的 `<input>` 元素相对应的 DOM 节点\n\n### 旧版 API：String 类型的 Refs\n\n如果你之前使用过 React ，你可能了解过之前的API中的 string 类型的 ref 属性，比如 \"textInput\" ，你可以通过 this.refs.textInput 访问DOM节点。我们不建议使用它，因为 String 类型的 refs [存在问题](https://github.com/facebook/react/pull/8333#issuecomment-271648615)。它已过时并**可能会在未来的版本被移除**。如果你目前还在使用 this.refs.textInput 这种方式访问 refs ，我们建议用回调函数的方式代替。\n\n### 注意\n\n如果 ref 回调以内联函数的方式定义，在更新期间它会被调用两次，第一次参数是 null ，之后参数是 DOM 元素。这是因为在每次渲染中都会创建一个新的函数实例。因此，React 需要清理旧的 ref 并且设置新的。通过将 ref 的回调函数定义成类的绑定函数的方式可以避免上述问题，但是大多数情况下无关紧要。\n",
        "type": "MarkdownRemark",
        "contentDigest": "b8b1c5e68e657d2a4f46df4901b698ac",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Refs & DOM",
        "id": "refs-and-the-dom",
        "redirect_from": [
          "docs/working-with-the-browser.html",
          "docs/more-about-refs.html",
          "docs/more-about-refs-ko-KR.html",
          "docs/more-about-refs-zh-CN.html",
          "tips/expose-component-functions.html",
          "tips/children-undefined.html"
        ],
        "permalink": "docs/refs-and-the-dom.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/refs-and-the-dom.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/refs-and-the-dom.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/refs-and-the-dom.md",
      "fields": {
        "slug": "docs/refs-and-the-dom.html",
        "path": "docs/refs-and-the-dom.md",
        "redirect": "[\"docs/working-with-the-browser.html\",\"docs/more-about-refs.html\",\"docs/more-about-refs-ko-KR.html\",\"docs/more-about-refs-zh-CN.html\",\"tips/expose-component-functions.html\",\"tips/children-undefined.html\"]"
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/render-props.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/render-props.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/render-props.md absPath of file",
      "internal": {
        "content": "---\nid: render-props\ntitle: Render Props\npermalink: docs/render-props.html\n---\n\n术语 [\"render prop\"](https://cdb.reacttraining.com/use-a-render-prop-50de598f11ce) 是指一种在 React 组件之间使用一个值为函数的 prop 在 React 组件间共享代码的简单技术。\n\n带有 render prop 的组件带有一个返回一个 React 元素的函数并调用该函数而不是实现自己的渲染逻辑。\n\n```jsx\n<DataProvider render={data => (\n  <h1>Hello {data.target}</h1>\n)}/>\n```\n\n使用 render props 的库包括 [React Router](https://reacttraining.com/react-router/web/api/Route/Route-render-methods) 和 [Downshift](https://github.com/paypal/downshift)。\n\n本篇文档，我们将讨论为何 render props 有用，并且如何写一个自己 render props 的组件。\n\n## 在交叉关注点（Cross-Cutting Concerns）使用 render props\n\n组件在 React 是主要的代码复用单元，但如何共享状态或一个组件的行为封装到其他需要相同状态的组件中并不是很明了。\n\n例如，下面的组件在 web 应用追踪鼠标位置：\n\n```js\nclass MouseTracker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.state = { x: 0, y: 0 };\n  }\n\n  handleMouseMove(event) {\n    this.setState({\n      x: event.clientX,\n      y: event.clientY\n    });\n  }\n\n  render() {\n    return (\n      <div style={{ height: '100%' }} onMouseMove={this.handleMouseMove}>\n        <h1>Move the mouse around!</h1>\n        <p>The current mouse position is ({this.state.x}, {this.state.y})</p>\n      </div>\n    );\n  }\n}\n```\n\n随着鼠标在屏幕上移动，在一个 `<p>` 的组件上显示它的 (x, y) 坐标。\n\n现在的问题是：我们如何在另一个组件中重用行为？换句话说，若另一组件需要知道鼠标位置，我们能否封装这一行为以让能够容易在组件间共享？\n\n由于组件是 React 中最基础的代码重用单元，现在尝试重构一部分代码能够在`<Mouse>` 组件中封装我们需要在其他地方的行为。\n\n```js\n// The <Mouse> component encapsulates the behavior we need...\nclass Mouse extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.state = { x: 0, y: 0 };\n  }\n\n  handleMouseMove(event) {\n    this.setState({\n      x: event.clientX,\n      y: event.clientY\n    });\n  }\n\n  render() {\n    return (\n      <div style={{ height: '100%' }} onMouseMove={this.handleMouseMove}>\n\n        {/* ...but how do we render something other than a <p>? */}\n        <p>The current mouse position is ({this.state.x}, {this.state.y})</p>\n      </div>\n    );\n  }\n}\n\nclass MouseTracker extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>Move the mouse around!</h1>\n        <Mouse />\n      </div>\n    );\n  }\n}\n```\n\n现在 `<Mouse>` 组件封装了所有关于监听 `mousemove` 事件和存储鼠标 (x, y) 位置的行为，但其仍不是真正的可重用。\n\n例如，假设我们现在有一个在屏幕上跟随鼠标渲染一张猫的图片的 `<Cat>` 组件。我们可能使用 `<Cat mouse={{ x, y }}` prop 来告诉组件鼠标的坐标以让它知道图片应该在屏幕哪个位置。\n\n首先，你可能会像这样，尝试在 *`<Mouse>` 的内部的渲染方法*渲染 `<Cat>` 组件：\n\n```js\nclass Cat extends React.Component {\n  render() {\n    const mouse = this.props.mouse\n    return (\n      <img src=\"/cat.jpg\" style={{ position: 'absolute', left: mouse.x, top: mouse.y }} />\n    );\n  }\n}\n\nclass MouseWithCat extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.state = { x: 0, y: 0 };\n  }\n\n  handleMouseMove(event) {\n    this.setState({\n      x: event.clientX,\n      y: event.clientY\n    });\n  }\n\n  render() {\n    return (\n      <div style={{ height: '100%' }} onMouseMove={this.handleMouseMove}>\n\n        {/*\n          We could just swap out the <p> for a <Cat> here ... but then\n          we would need to create a separate <MouseWithSomethingElse>\n          component every time we need to use it, so <MouseWithCat>\n          isn't really reusable yet.\n        */}\n        <Cat mouse={this.state} />\n      </div>\n    );\n  }\n}\n\nclass MouseTracker extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>Move the mouse around!</h1>\n        <MouseWithCat />\n      </div>\n    );\n  }\n}\n```\n\n这一方法对我们的具体用例来说能够生效，但我们却没法实现真正的将行为封装成可重用的方式的目标。现在，每次我们在不同的用例中想要使用鼠标的位置，我们就不得不创建一个新的针对那一用例渲染不同内容的组件 (如另一个关键的 `<MouseWithCat>`)。\n\n这也是 render prop 的来历：我们可以提供一个带有函数 prop 的 `<Mouse>` 组件，它能够动态决定什么需要渲染的，而不是将 `<Cat>` 硬编码到 `<Mouse>` 组件里，并有效地改变它的渲染结果。\n\n```js\nclass Cat extends React.Component {\n  render() {\n    const mouse = this.props.mouse;\n    return (\n      <img src=\"/cat.jpg\" style={{ position: 'absolute', left: mouse.x, top: mouse.y }} />\n    );\n  }\n}\n\nclass Mouse extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.state = { x: 0, y: 0 };\n  }\n\n  handleMouseMove(event) {\n    this.setState({\n      x: event.clientX,\n      y: event.clientY\n    });\n  }\n\n  render() {\n    return (\n      <div style={{ height: '100%' }} onMouseMove={this.handleMouseMove}>\n\n        {/*\n          Instead of providing a static representation of what <Mouse> renders,\n          use the `render` prop to dynamically determine what to render.\n        */}\n        {this.props.render(this.state)}\n      </div>\n    );\n  }\n}\n\nclass MouseTracker extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>Move the mouse around!</h1>\n        <Mouse render={mouse => (\n          <Cat mouse={mouse} />\n        )}/>\n      </div>\n    );\n  }\n}\n```\n\n现在，我们提供了一个 `render` prop 以让 `<Mouse>` 能够动态决定什么需要渲染，而不是克隆 `<Mouse>` 组件并硬编码来解决特定的用例。\n\n更具体地说，**render prop 是一个组件用来了解要渲染什么内容的函数 prop。**\n\n这一技术使得共享代码间变得相当便利。为了实现这一行为，渲染一个带有 `render` prop 的 `<Mouse>` 组件能够告诉它当前鼠标坐标 (x, y) 要渲染什么。\n\n关于 render props 一个有趣的事情是你可以使用一个带有 render props 的常规组件来实现大量的 [高阶组件](/docs/higher-order-components.html) (HOC)。例如，如果你更偏向于使用一个 `withMouse` 的高阶组件而不是一个 `<Mouse>` 组件，你可以轻松的创建一个带有 render prop 的常规  `<Mouse>` 组件的高阶组件。\n\n```js\n// If you really want a HOC for some reason, you can easily\n// create one using a regular component with a render prop!\nfunction withMouse(Component) {\n  return class extends React.Component {\n    render() {\n      return (\n        <Mouse render={mouse => (\n          <Component {...this.props} mouse={mouse} />\n        )}/>\n      );\n    }\n  }\n}\n```\n\n所以，使用 render props 是一种可能的使用模式。\n\n## 使用 Props 而非 `render`\n\n记住仅仅是因为这一模式被称为 “render props” 而你*不必为使用该模式而用一个名为 `render` 的 prop*。实际上，[组件能够知道什么需要渲染的*任何*函数 prop 在技术上都是 “render prop” ](https://cdb.reacttraining.com/use-a-render-prop-50de598f11ce)。\n\n尽管之前的例子使用了 `render`，我们也可以简单地使用 `children` prop！\n\n```js\n<Mouse children={mouse => (\n  <p>The mouse position is {mouse.x}, {mouse.y}</p>\n)}/>\n```\n\n并记住，`children` prop 并不真正需要添加到 JSX 元素的 “attributes” 列表中。相反，你可以直接放置到元素的*内部*！\n\n```js\n<Mouse>\n  {mouse => (\n    <p>The mouse position is {mouse.x}, {mouse.y}</p>\n  )}\n</Mouse>\n```\n\n你可以在 [react-motion](https://github.com/chenglou/react-motion) API 里看到这一技术的使用。\n\n由于这一技术有些不寻常，当你在设计一个类似的 API 时，你可能要直接地在你的 `propTypes` 里声明 `children` 应为一个函数类型。\n\n```js\nMouse.propTypes = {\n  children: PropTypes.func.isRequired\n};\n```\n\n## 警告\n\n### 在 React.PureComponent 中使用 render props 要注意\n\n如果你在 `render` 方法里创建函数，那么使用 render prop 会抵消使用 [`React.PureComponent`](https://cdb.reacttraining.com/use-a-render-prop-50de598f11ce) 带来的优势。这是因为浅 prop 比较对于新 props 总会返回 `false`，并且在这种情况下每一个 `render` 对于 render prop 将会生成一个新的值。\n\n例如，继续我们之前使用 `<Mouse>` 组件，如果 `Mouse` 继承自 `React.PureComponent` 而不是 `React.Component`，我们的例子看起来就像这样：\n\n```js\nclass Mouse extends React.PureComponent {\n  // Same implementation as above...\n}\n\nclass MouseTracker extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>Move the mouse around!</h1>\n\n        {/*\n          This is bad! The value of the `render` prop will\n          be different on each render.\n        */}\n        <Mouse render={mouse => (\n          <Cat mouse={mouse} />\n        )}/>\n      </div>\n    );\n  }\n}\n```\n\n在这样例子中，每次 `<MouseTracker>` 渲染，它会生成一个新的函数作为 `<Mouse render>` 的 prop，因而在同时也抵消了继承自 `React.PureComponent` 的 `<Mouse>` 组件的效果！\n\n为了绕过这一问题，有时你可以定义一个 prop 作为实例方法，类似如下：\n\n```js\nclass MouseTracker extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // This binding ensures that `this.renderTheCat` always refers\n    // to the *same* function when we use it in render.\n    this.renderTheCat = this.renderTheCat.bind(this);\n  }\n\n  renderTheCat(mouse) {\n    return <Cat mouse={mouse} />;\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Move the mouse around!</h1>\n        <Mouse render={this.renderTheCat} />\n      </div>\n    );\n  }\n}\n```\n\n`<Mouse>` 应继承`React.Component`，万一你没法提前在构造函数中绑定实例方法（如因为你可能要掩盖组件的 props 和/或 state)。\n",
        "type": "MarkdownRemark",
        "contentDigest": "262564198fcfe61a897d123e6c3c8aba",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Render Props",
        "id": "render-props",
        "permalink": "docs/render-props.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/render-props.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/render-props.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/render-props.md",
      "fields": {
        "slug": "docs/render-props.html",
        "path": "docs/render-props.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/state-and-lifecycle.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/state-and-lifecycle.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/state-and-lifecycle.md absPath of file",
      "internal": {
        "content": "---\nid: state-and-lifecycle\ntitle: State & 生命周期\npermalink: docs/state-and-lifecycle.html\nredirect_from: \"docs/interactivity-and-dynamic-uis.html\"\nprev: components-and-props.html\nnext: handling-events.html\n---\n\n生命周期图解\n![React 生命周期图解](https://upload-images.jianshu.io/upload_images/4118241-d979d05af0b7d4db.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/488/format/webp)\n\n参考[该例子](/docs/rendering-elements.html#更新元素渲染)。\n\n到目前为止我们只学习了一种方法来更新UI。\n\n我们调用 `ReactDOM.render()` 方法来改变输出：\n\n```js{8-11}\nfunction tick() {\n  const element = (\n    <div>\n      <h1>Hello, world!</h1>\n      <h2>It is {new Date().toLocaleTimeString()}.</h2>\n    </div>\n  );\n  ReactDOM.render(\n    element,\n    document.getElementById('root')\n  );\n}\n\nsetInterval(tick, 1000);\n```\n\n[在 CodePen 中尝试](http://codepen.io/gaearon/pen/gwoJZk?editors=0010)\n\n在本节中，我们将学习如何使`Clock`组件真正可重用和封装。它将设置自己的计时器，并每秒钟更新一次。\n\n我们可以从封装时钟开始：\n\n```js{3-6,12}\nfunction Clock(props) {\n  return (\n    <div>\n      <h1>Hello, world!</h1>\n      <h2>It is {props.date.toLocaleTimeString()}.</h2>\n    </div>\n  );\n}\n\nfunction tick() {\n  ReactDOM.render(\n    <Clock date={new Date()} />,\n    document.getElementById('root')\n  );\n}\n\nsetInterval(tick, 1000);\n```\n\n[在 CodePen 中尝试](http://codepen.io/gaearon/pen/dpdoYR?editors=0010)\n\n然而，它错过了一个关键的要求：`Clock`设置一个定时器并且每秒更新UI应该是`Clock`的实现细节。\n\n理想情况下，我们写一次 `Clock` 然后它能更新自身：\n\n```js{2}\nReactDOM.render(\n  <Clock />,\n  document.getElementById('root')\n);\n```\n\n为了实现这个需求，我们需要为`Clock`组件添加\"状态(state)\"\n\n状态与属性十分相似，但是状态是私有的，完全受控于当前组件。\n\n我们之前[提到过](/docs/components-and-props.html#函数定义/类定义组件)，定义为类的组件有一些额外的特性。局部状态就是如此：只能用于类的一个功能。\n\n## 将函数转换为类\n\n你可以通过5个步骤将函数组件 `Clock` 转换为类\n\n1. 创建一个名称扩展为 `React.Component` 的[ES6 类](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes)\n\n2. 创建一个叫做`render()`的空方法\n\n3. 将函数体移动到 `render()` 方法中\n\n4. 在 `render()` 方法中，使用 `this.props` 替换 `props`\n\n5. 删除剩余的空函数声明\n\n```js\nclass Clock extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>Hello, world!</h1>\n        <h2>It is {this.props.date.toLocaleTimeString()}.</h2>\n      </div>\n    );\n  }\n}\n```\n\n[在 CodePen 中尝试](http://codepen.io/gaearon/pen/zKRGpo?editors=0010)\n\n`Clock` 现在被定义为一个类而不只是一个函数\n\n使用类就允许我们使用其它特性，例如局部状态、生命周期钩子\n\n## 为一个类添加局部状态\n\n我们会通过3个步骤将 `date` 从属性移动到状态中：\n\n1) 在 `render()` 方法中使用 `this.state.date` 替代 `this.props.date`\n\n```js{6}\nclass Clock extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>Hello, world!</h1>\n        <h2>It is {this.state.date.toLocaleTimeString()}.</h2>\n      </div>\n    );\n  }\n}\n```\n\n2) 添加一个[类构造函数](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes#Constructor)来初始化状态 `this.state`\n\n```js{4}\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {date: new Date()};\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Hello, world!</h1>\n        <h2>It is {this.state.date.toLocaleTimeString()}.</h2>\n      </div>\n    );\n  }\n}\n```\n\n注意我们如何传递 `props` 到基础构造函数的：\n\n```js{2}\n  constructor(props) {\n    super(props);\n    this.state = {date: new Date()};\n  }\n```\n\n类组件应始终使用`props`调用基础构造函数。\n\n3) 从 `<Clock />` 元素移除 `date` 属性：\n\n```js{2}\nReactDOM.render(\n  <Clock />,\n  document.getElementById('root')\n);\n```\n\n稍后将定时器代码添加回组件本身。\n\n结果如下：\n\n```js{2-5,11,18}\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {date: new Date()};\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Hello, world!</h1>\n        <h2>It is {this.state.date.toLocaleTimeString()}.</h2>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Clock />,\n  document.getElementById('root')\n);\n```\n\n[在 CodePen 中尝试](http://codepen.io/gaearon/pen/KgQpJd?editors=0010)\n\n接下来，我们将使`Clock`设置自己的计时器并每秒更新一次。\n\n## 将生命周期方法添加到类中\n\n在具有许多组件的应用程序中，在销毁时释放组件所占用的资源非常重要。\n\n每当`Clock`组件第一次加载到DOM中的时候，我们都想[生成定时器](https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval)，这在React中被称为`挂载`\n\n同样，每当`Clock`生成的这个DOM被移除的时候，我们也会想要[清除定时器](https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval)，这在React中被称为`卸载`。\n\n\n我们可以在组件类上声明特殊的方法，当组件挂载或卸载时，来运行一些代码：\n\n```js{7-9,11-13}\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {date: new Date()};\n  }\n\n  componentDidMount() {\n\n  }\n\n  componentWillUnmount() {\n\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Hello, world!</h1>\n        <h2>It is {this.state.date.toLocaleTimeString()}.</h2>\n      </div>\n    );\n  }\n}\n```\n\n这些方法被称作`生命周期钩子`。\n\n当组件输出到 DOM 后会执行 `componentDidMount()` 钩子，这是一个建立定时器的好地方：\n\n```js{2-5}\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n```\n\n注意我们是将定时器ID保存在 `this` 中的。\n\n尽管 `this.props` 是由React本身安装的以及`this.state` 有特殊的含义，如果你需要存储的东西不在数据流中，你可以随意手动向类中添加其他字段（比如定时器ID）。\n\n我们将在 `componentWillUnmount()`生命周期钩子中卸载计时器：\n\n```js{2}\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n```\n\n最后，我们实现了每秒钟执行的 `tick()` 方法。\n\n它将使用 `this.setState()` 来更新组件局部状态：\n\n```js{18-22}\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {date: new Date()};\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date()\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Hello, world!</h1>\n        <h2>It is {this.state.date.toLocaleTimeString()}.</h2>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Clock />,\n  document.getElementById('root')\n);\n```\n\n[在 CodePen 中尝试](http://codepen.io/gaearon/pen/amqdNA?editors=0010)\n\n现在时钟每秒钟都会执行。\n\n让我们快速回顾一下发生了什么以及调用方法的顺序：\n\n1) 当 `<Clock />` 被传递给 `ReactDOM.render()` 时，React 调用 `Clock` 组件的构造函数。 由于 `Clock` 需要显示当前时间，所以使用包含当前时间的对象来初始化 `this.state` 。 我们稍后会更新此状态。\n\n2) React 然后调用 `Clock` 组件的 `render()` 方法。这是 React 了解屏幕上应该显示什么内容，然后 React 更新 DOM 以匹配 `Clock` 的渲染输出。\n\n3) 当 `Clock` 的输出插入到 DOM 中时，React 调用 `componentDidMount()` 生命周期钩子。 在其中，`Clock` 组件要求浏览器设置一个定时器，每秒钟调用一次 `tick()`。\n\n4) 浏览器每秒钟调用 `tick()` 方法。 在其中，`Clock` 组件通过使用包含当前时间的对象调用 `setState()` 来调度UI更新。 通过调用 `setState()` ，React 知道状态已经改变，并再次调用 `render()` 方法来确定屏幕上应当显示什么。 这一次，`render()` 方法中的 `this.state.date` 将不同，所以渲染输出将包含更新的时间，并相应地更新DOM。\n\n5) 一旦`Clock`组件被从DOM中移除，React会调用`componentWillUnmount()`这个钩子函数，定时器也就会被清除。\n\n## 正确地使用状态\n\n关于 `setState()` 这里有三件事情需要知道\n\n### 不要直接更新状态\n\n例如，此代码不会重新渲染组件：\n\n```js\n// Wrong\nthis.state.comment = 'Hello';\n```\n\n应当使用 `setState()`:\n\n```js\n// Correct\nthis.setState({comment: 'Hello'});\n```\n\n构造函数是唯一能够初始化 `this.state` 的地方。\n\n### 状态更新可能是异步的\n\nReact 可以将多个`setState()` 调用合并成一个调用来提高性能。\n\n因为 `this.props` 和 `this.state` 可能是异步更新的，你不应该依靠它们的值来计算下一个状态。\n\n例如，此代码可能无法更新计数器：\n\n```js\n// Wrong\nthis.setState({\n  counter: this.state.counter + this.props.increment,\n});\n```\n\n要修复它，请使用第二种形式的 `setState()` 来接受一个函数而不是一个对象。 该函数将接收先前的状态作为第一个参数，将此次更新被应用时的props做为第二个参数：\n\n```js\n// Correct\nthis.setState((prevState, props) => ({\n  counter: prevState.counter + props.increment\n}));\n```\n\n上方代码使用了[箭头函数](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/Arrow_functions)，但它也适用于常规函数：\n\n```js\n// Correct\nthis.setState(function(prevState, props) {\n  return {\n    counter: prevState.counter + props.increment\n  };\n});\n```\n\n### 状态更新合并\n\n当你调用 `setState()` 时，React 将你提供的对象合并到当前状态。\n\n例如，你的状态可能包含一些独立的变量：\n\n```js{4,5}\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      comments: []\n    };\n  }\n```\n\n你可以调用 `setState()` 独立地更新它们：\n\n```js{4,10}\n  componentDidMount() {\n    fetchPosts().then(response => {\n      this.setState({\n        posts: response.posts\n      });\n    });\n\n    fetchComments().then(response => {\n      this.setState({\n        comments: response.comments\n      });\n    });\n  }\n```\n\n这里的合并是浅合并，也就是说`this.setState({comments})`完整保留了`this.state.posts`，但完全替换了`this.state.comments`。\n\n## 数据自顶向下流动\n\n父组件或子组件都不能知道某个组件是有状态还是无状态，并且它们不应该关心某组件是被定义为一个函数还是一个类。\n\n这就是为什么状态通常被称为局部或封装。 除了拥有并设置它的组件外，其它组件不可访问。\n\n组件可以选择将其状态作为属性传递给其子组件：\n\n```js\n<h2>It is {this.state.date.toLocaleTimeString()}.</h2>\n```\n\n这也适用于用户定义的组件：\n\n```js\n<FormattedDate date={this.state.date} />\n```\n\n`FormattedDate` 组件将在其属性中接收到 `date` 值，并且不知道它是来自 `Clock` 状态、还是来自 `Clock` 的属性、亦或手工输入：\n\n```js\nfunction FormattedDate(props) {\n  return <h2>It is {props.date.toLocaleTimeString()}.</h2>;\n}\n```\n\n[在 CodePen 中尝试](http://codepen.io/gaearon/pen/zKRqNB?editors=0010)\n\n这通常被称为`自顶向下`或`单向`数据流。 任何状态始终由某些特定组件所有，并且从该状态导出的任何数据或 UI 只能影响树中`下方`的组件。\n\n如果你想象一个组件树作为属性的瀑布，每个组件的状态就像一个额外的水源，它连接在一个任意点，但也流下来。\n\n为了表明所有组件都是真正隔离的，我们可以创建一个 `App` 组件，它渲染三个`Clock`：\n\n```js{4-6}\nfunction App() {\n  return (\n    <div>\n      <Clock />\n      <Clock />\n      <Clock />\n    </div>\n  );\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n```\n\n[在 CodePen 中尝试](http://codepen.io/gaearon/pen/vXdGmd?editors=0010)\n\n每个 `Clock` 建立自己的定时器并且独立更新。\n\n在 React 应用程序中，组件是有状态还是无状态被认为是可能随时间而变化的组件的实现细节。 可以在有状态组件中使用无状态组件，反之亦然。\n",
        "type": "MarkdownRemark",
        "contentDigest": "2e9603791420d0e91e7209e6cd5e5427",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "State & 生命周期",
        "id": "state-and-lifecycle",
        "permalink": "docs/state-and-lifecycle.html",
        "redirect_from": "docs/interactivity-and-dynamic-uis.html",
        "prev": "components-and-props.html",
        "next": "handling-events.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/state-and-lifecycle.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/state-and-lifecycle.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/state-and-lifecycle.md",
      "fields": {
        "slug": "docs/state-and-lifecycle.html",
        "path": "docs/state-and-lifecycle.md",
        "redirect": "\"docs/interactivity-and-dynamic-uis.html\""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/static-type-checking.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/static-type-checking.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/static-type-checking.md absPath of file",
      "internal": {
        "content": "---\nid: static-type-checking\ntitle: 静态类型检查\npermalink: docs/static-type-checking.html\nprev: typechecking-with-prototypes.html\nnext: refs-and-the-dom.html\n---\n\n像 [Flow](https://flowtype.org/) 和 [TypeScript](https://www.typescriptlang.org/) 这样的静态类型检查器可以在运行代码之前识别某些类型的问题。 他们还可以通过添加自动完成功能来改善开发人员的工作流程。 出于这个原因，对于更大的代码库我们建议使用 Flow 或者 TypeScript 来替代 `PropTypes`。\n\n## Flow\n\n[Flow](https://flow.org/) 是一个针对 JavaScript 代码的静态类型检查器。它是在Facebook开发的，经常和React一起使用。 它可以让你使用特殊的类型语法来注释变量，函数和React组件，并尽早地发现错误。 您可以阅读 [Flow 介绍](https://flow.org/en/docs/getting-started/) 来了解基本知识。\n\n为了使用 Flow, 你需要：\n\n* 将 Flow 添加到您的项目作为依赖项。\n* 确保编译后的代码中去除了 Flow 语法。\n* 添加了类型注释并运行 Flow 来检查它们。\n\n我们将在下面详细解释这些步骤。\n\n### 在一个项目中添加 Flow \n\n首先，在你的终端里进入到项目目录。你需要执行两条命令。\n\n如果你使用 [Yarn](https://yarnpkg.com/), 运行：\n\n```bash\nyarn add --dev flow-bin\nyarn run flow init\n```\n\n如果你使用 [npm](https://www.npmjs.com/), 运行：\n\n```bash\nnpm install --save-dev flow-bin\nnpm run flow init\n```\n\n第一个命令在你的项目中安装了最新版的 Flow。第二个命令创建一个您需要提交的 Flow 配置文件。\n\n最后，将 `flow` 添加到你的 `package.json`中的 `\"scripts\"` 部分：\n\n```js{4}\n{\n  // ...\n  \"scripts\": {\n    \"flow\": \"flow\",\n    // ...\n  },\n  // ...\n}\n```\n\n### 从编译过的代码中剥离 Flow 语法\n\nFlow 通过使用特殊的语法为类型注释扩展了 JavaScript 语言。 然而，浏览器并不知道这个语法，所以我们需要确保它不会在发送到浏览器的已编译的 JavaScript 包中结束。\n\n确切的做法取决于你用来编译 JavaScript 的工具。\n\n#### Create React App\n\n如果你的项目是使用 [Create React App](https://github.com/facebookincubator/create-react-app) 建立的，恭喜！ Flow 此时已经被默认剥离，所以在这一步你不需要做任何事情。\n\n#### Babel\n\n>注意：\n>\n>这些说明*不*适用于使用 Create React App 的用户。即使 Create React App 在底层使用 Babel，它已经被配置为理解 Flow。只有那些*没有*使用 Create React App 的用户才需要跟进下面的步骤。\n\n如果你手动为你的项目配置了 Babel，你将需要为 Flow 安装一个特殊的 preset。\n\n如果你使用 Yarn, 运行：\n\n```bash\nyarn add --dev babel-preset-flow\n```\n\n如果你使用 npm, 运行：\n\n```bash\nnpm install --save-dev babel-preset-flow\n```\n\n然后将 `flow` preset 加入你的 [Babel 配置](http://babeljs.io/docs/usage/babelrc/)。比如，如果你通过 `.babelrc` 文件配置 Babel，它可能会如下所示：\n\n```js{3}\n{\n  \"presets\": [\n    \"flow\",\n    \"react\"\n  ]\n}\n```\n\n这将会让你可以在你的代码中使用 Flow 语法。\n\n>注意：\n>\n>Flow 不需要 `react` preset，但他们经常在一起使用。 Flow 本身就理解 JSX 语法。\n\n#### 其他生成设置\n\n如果你既不用 Create React App 也不用 Babel，你可以使用 [flow-remove-types](https://github.com/flowtype/flow-remove-types) 来去除类型注释。\n\n### 运行 Flow\n\n如果你遵循了上述的说明，你应该能够在第一次就运行 Flow。\n\n```bash\nyarn flow\n```\n\n如果你使用 npm, 运行：\n\n```bash\nnpm run flow\n```\n\n你应该会看到一条这样的消息：\n\n```\nNo errors!\n✨  Done in 0.17s.\n```\n\n### 添加 Flow 类型注释\n\n默认情况下， Flow 仅检查包含此批注的文件：\n\n```js\n// @flow\n```\n\n通常它被放置在文件的顶部。 尝试将其添加到项目中的某些文件中，然后运行 `yarn flow` 或 `npm run flow` 来查看 Flow 是否已经发现了一些问题。\n\n也有[一个选择](https://flow.org/en/docs/config/options/#toc-all-boolean)可以强制 Flow 不考虑注释检查*所有*文件。对于现有的项目它可能太繁琐了，但对于一个新项目如果你想完全用 Flow 来组织，那会是合理的。\n\n现在你们都准备好了！ 我们建议查看以下资源以了解有关 Flow 的更多信息：\n\n* [Flow 文档：类型注释](https://flow.org/en/docs/types/)\n* [Flow 文档：编辑器](https://flow.org/en/docs/editors/)\n* [Flow 文档： React](https://flow.org/en/docs/react/)\n* [Linting in Flow](https://medium.com/flow-type/linting-in-flow-7709d7a7e969)\n\n## TypeScript\n\n[TypeScript](https://www.typescriptlang.org/) 是一门由微软开发的编程语言。 它是 JavaScript 的一个类型超集，包含它自己的编译器。 作为一种类型化语言，Typescript 可以早在您的应用程序上线之前在构建时发现错误。 你可以在[这里](https://github.com/Microsoft/TypeScript-React-Starter#typescript-react-starter)了解更多关于在 React 中使用 TypeScript 的知识。\n\n要使用 TypeScript，你需要：\n* 将 Typescript 添加为您的项目的依赖项\n* 配置 TypeScript 编译器选项\n* 使用正确的文件扩展名\n* 为你使用的库添加定义\n\n让我们来详细介绍一下。\n\n### 在一个项目中添加 TypeScript \n\n这一切都始于在终端中运行一个命令。\n\n如果你使用 [Yarn](https://yarnpkg.com/), 运行：\n\n```bash\nyarn add --dev typescript\n```\n\n如果你使用 [npm](https://www.npmjs.com/), 运行：\n\n```bash\nnpm install --save-dev typescript\n```\n\n恭喜！ 您已经将最新版本的 TypeScript 安装到您的项目中。 安装 TypeScript 让我们可以访问 `tsc` 命令。 在配置之前，让我们将 `tsc` 添加到 `package.json` 中的 \"scripts\" 部分：\n\n```js{4}\n{\n  // ...\n  \"scripts\": {\n    \"build\": \"tsc\",\n    // ...\n  },\n  // ...\n}\n```\n\n### 配置 TypeScript 编译器\n\n除非我们告诉编译器要做什么，否则它对我们将毫无用处。在 TypeScript 中，这些规则定义在一个叫 `tsconfig.json` 的特殊文件中。运行如下命令生成该文件：\n\n```bash\ntsc --init\n```\n\n看看现在生成的 `tsconfig.json`，你可以看到有很多选项可以用来配置编译器。 有关所有选项的详细说明，请点击[这里](https://www.typescriptlang.org/docs/handbook/tsconfig-json.html)。\n\n在许多选项中，我们会看到 `rootDir` 和 `outDir`。编译器将以真实的情况接收 typescript 文件然后生成 javascript 文件。然而我们不想混淆源文件和编译后的输出。\n\n我们将通过两个步骤解决这个问题：\n* 首先，让我们像这样安排我们的项目结构。我们将所有的源代码放在 src 目录中。\n\n```\n├── package.json\n├── src\n│   └── index.ts\n└── tsconfig.json\n```\n\n* 接下来，我们会告诉编译器源代码在哪以及编译后输出该放哪。\n\n```js{6,7}\n// tsconfig.json\n\n{\n  \"compilerOptions\": {\n    // ...\n    \"rootDir\": \"src\",\n    \"outDir\": \"build\"\n    // ...\n  },\n}\n```\n\n非常棒！现在当我们运行构建脚本时编译器将会将生成的 javascript 代码输出到 `build` 文件夹。[TypeScript React Starter](https://github.com/Microsoft/TypeScript-React-Starter/blob/master/tsconfig.json) 提供了一个带有一套配置的 `tsconfig.json` 文件让你上手。\n\n通常，您不希望将生成的JavaScript保留在源代码管理中，因此请确保将生成文件夹添加到 `.gitignore` 中。\n\n### 文件扩展名\n\n在 React 中，你最有可能在 `.js` 文件中编写你的组件。在 TypeScript 中我们有两个文件扩展名：\n\n`.ts` 是默认的文件扩展名， `.tsx` 是一个为包含  `JSX` 代码使用的特殊扩展名。\n\n### 运行 TypeScript\n\n如果你遵循了如上的说明，你应该能够第一次就成功运行 TypeScript。\n\n```bash\nyarn build\n```\n\n如果你使用 npm, 运行：\n\n```bash\nnpm run build\n```\n\n如果你没有看到输出，这意味着它完全编译成功了。\n\n### 类型定义\n\n为了能够显示来自其他包的错误和提示，编译器依赖于声明文件。 声明文件提供了关于库的所有类型信息。 这使我们能够在我们的项目中使用像那些在 npm 中的 JavaScript 库。\n\n对于一个库来说，主要有两种方式获得声明：\n\n__Bundled__ - 该库捆绑了自己的声明文件。 这对我们来说很好，因为我们所要做的就是安装这个库，我们便可以马上使用它。 要检查一个库是否有 bundled 类型，请在项目中查找 `index.d.ts` 文件。 有些库会在 `package.json` 文件的 `typings` 或者 `types` 属性中指定它。\n\n__[DefinitelyTyped](https://github.com/DefinitelyTyped/DefinitelyTyped)__ - DefinitelyTyped 是一个不包含声明文件的库的声明库。这些声明是由微软和开源贡献者提供的。 例如 React 并不捆绑它自己的声明文件。 相反，我们可以从 DefinitelyTyped 中获得。 为此，请在终端中输入此命令。\n\n```bash\n# yarn\nyarn add --dev @types/react\n\n# npm\nnpm i --save-dev @types/react\n```\n\n__局部声明__\n有时你想使用的包不包含声明，也不能在 DefinitelyTyped 上使用。 在这种情况下，我们可以有一个本地声明文件。 为此，请在源目录的根目录中创建一个 `declarations.d.ts` 文件。 一个简单的声明可能是这样的：\n\n```typescript\ndeclare module 'querystring' {\n  export function stringify(val: object): string\n  export function parse(val: string): object\n}\n```\n\n### 和 Create React App 一起使用 TypeScript \n\n[react-scripts-ts](https://www.npmjs.com/package/react-scripts-ts) 自动配置了一个 `create-react-app` 项目支持 TypeScript。你可以像这样使用：\n\n```bash\ncreate-react-app my-app --scripts-version=react-scripts-ts\n```\n\n请注意它是一个**第三方**项目，而且不是 Create React App 的一部分。\n\n你也可以尝试 [typescript-react-starter](https://github.com/Microsoft/TypeScript-React-Starter#typescript-react-starter)。\n\n你已经准备好写代码了！我们建议查看以下资源来了解有关 TypeScript 的更多信息：\n\n* [TypeScript 文档：基本类型](https://www.typescriptlang.org/docs/handbook/basic-types.html)\n* [TypeScript 文档：从 Javascript 迁徙](http://www.typescriptlang.org/docs/handbook/migrating-from-javascript.html)\n* [TypeScript 文档： React 和 Webpack](http://www.typescriptlang.org/docs/handbook/react-&-webpack.html)\n\n## Reason\n\n[Reason](https://reasonml.github.io/) 不是一种新的语言; 这是一个新的语法和工具链，由测试语言 [OCaml](http://ocaml.org/) 提供支持。 Reason 使 OCaml 成为了面向 JavaScript 程序员的熟悉语法，而且迎合现有已知的 NPM/Yarn 工作流。\n\nReason 是在 Facebook 开发的，并且在其一些产品如 Messenger 中使用。它仍然具有一定的实验性质，但它有由 Facebook 维护的[专门的 React 绑定](https://reasonml.github.io/reason-react/) 和一个[充满活力的社区](https://reasonml.github.io/community/)。\n\n## Kotlin\n\n[Kotlin](https://kotlinlang.org/) 是由 JetBrains 开发的一门静态类型语言。其目标平台包括 JVM， Android， LLVM 和 [JavaScript](https://kotlinlang.org/docs/reference/js-overview.html)。\n\nJetBrains 专门为 React 社区开发和维护了几个工具： [React bindings](https://github.com/JetBrains/kotlin-wrappers) 以及 [Create React Kotlin App](https://github.com/JetBrains/create-react-kotlin-app)。 后者可以帮助您开始使用Kotlin 构建 React 应用程序，而不需要构建配置。 \n\n## 其他语言\n\n请注意，还有其他静态类型的语言可以编译成 JavaScript，因此是 React 兼容的。 例如，和 [elmish-react](https://fable-elmish.github.io/react) 一起使用的 [F#/Fable](http://fable.io)。查看他们各自的网站以获取更多信息，并欢迎添加更多和与 React 一起工作的静态类型的语言到这个页面！\n",
        "type": "MarkdownRemark",
        "contentDigest": "8ea3b80c46e3f36a80f863645a58a41e",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "静态类型检查",
        "id": "static-type-checking",
        "permalink": "docs/static-type-checking.html",
        "prev": "typechecking-with-prototypes.html",
        "next": "refs-and-the-dom.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/static-type-checking.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/static-type-checking.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/static-type-checking.md",
      "fields": {
        "slug": "docs/static-type-checking.html",
        "path": "docs/static-type-checking.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/thinking-in-react.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/thinking-in-react.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/thinking-in-react.md absPath of file",
      "internal": {
        "content": "---\nid: thinking-in-react\ntitle: React 理念\npermalink: docs/thinking-in-react.html\nredirect_from:\n  - 'blog/2013/11/05/thinking-in-react.html'\n  - 'docs/thinking-in-react-zh-CN.html'\nprev: composition-vs-inheritance.html\n---\n\n在我们的理念中，React 最初的目的是使用 JavaScript 创建大型的，快速响应的网络应用。它在我们的 Facebook 和 Instagram 中已经实践的非常好了。\n\nReact的众多优点之一是它让你在编写代码的时候同时也在思考你的应用。在这篇文档中，我们会带你使用 React 一起创建一个可搜索的产品数据表格，并向你展示我们的思考过程。\n\n## 从模拟页面开始\n\n想象我们已经有一个 JSON 接口和一个设计师给我们的原型图。原型图像下面这样：\n\n![Mockup](../images/blog/thinking-in-react-mock.png)\n\n我们的 JSON 接口返回类似下面的数据：\n\n```\n[\n  {category: \"Sporting Goods\", price: \"$49.99\", stocked: true, name: \"Football\"},\n  {category: \"Sporting Goods\", price: \"$9.99\", stocked: true, name: \"Baseball\"},\n  {category: \"Sporting Goods\", price: \"$29.99\", stocked: false, name: \"Basketball\"},\n  {category: \"Electronics\", price: \"$99.99\", stocked: true, name: \"iPod Touch\"},\n  {category: \"Electronics\", price: \"$399.99\", stocked: false, name: \"iPhone 5\"},\n  {category: \"Electronics\", price: \"$199.99\", stocked: true, name: \"Nexus 7\"}\n];\n```\n\n## 第一步：把 UI 划分出组件层级\n\n第一件你要做的事情是用方框划分出每一个组件(和子组件)并给他们命名。如果你和设计师一起工作，他们可能已经完成了这些，所以去和他们聊聊吧！他们的 Photoshop 图层名称也许就是你的 React 组件名称！\n\n但你如何知道哪一部分应该成为一个组件？想想在编写代码时你在什么情况下需要新建一个函数或对象，思考方式是一样的。例如 [单一功能原则](https://en.wikipedia.org/wiki/Single_responsibility_principle)，在理想状况下，一个组件应该只做一件事情。如果这个组件功能不断丰富，它应该被分成更小的组件。\n\n既然你经常向用户展示 JSON 数据模型，你会发现，如果你的模型构建正确，你的 UI (以及你的组件结构)会被很好的映射。这是因为 UI 和数据模型往往遵循着相同的*信息架构*，这意味着将 UI 划分成组件的工作往往是很容易的。只要把它划分成能准确表示你数据模型的一部分的组件就可以。\n\n![Component diagram](../images/blog/thinking-in-react-components.png)\n\n在这里你会看到，我们的简单应用中有5个组件。我们把每个组件展示的数据用斜体表示。\n\n  1. **`FilterableProductTable` (橙色):** 包含了整个例子\n  2. **`SearchBar` (蓝色):** 接受所有的*用户输入*\n  3. **`ProductTable` (绿色):** 根据*用户输入*过滤并展示*数据集合*\n  4. **`ProductCategoryRow` (绿松石色):** 展示每个*分类*的标题\n  5. **`ProductRow` (红色):** 用行来展示每个*产品*\n\n如果你查看 `ProductTable`，你会发现表头(包含 `Name` 和 `Price` 标签)并没有作为一个组件。这是一个偏好问题，选择哪种方式目前还存在争议。在这个例子中，我们把它作为 `ProductTable` 的一部分，因为它是渲染*数据集合*的一部分，而渲染*数据集合*是 `ProductTable` 的职责。然而，如果头部变得更加复杂(也就是，如果我们添加了排序功能)，它就有足够的理由成为一个单独的 `ProductTableHeader` 组件。\n\n现在我们已经确定了原型图中的组件，让我们把它们整理成层级结构。这很容易。原型图中的子组件在层级结构中应该作为子节点。\n\n  * `FilterableProductTable`\n    * `SearchBar`\n    * `ProductTable`\n      * `ProductCategoryRow`\n      * `ProductRow`\n\n## 第二步：用 React 创建一个静态版本\n\n<p data-height=\"600\" data-theme-id=\"0\" data-slug-hash=\"vXpAgj\" data-default-tab=\"js\" data-user=\"lacker\" data-embed-version=\"2\" class=\"codepen\">See the Pen <a href=\"http://codepen.io/lacker/pen/vXpAgj/\">Thinking In React: Step 2</a> on <a href=\"http://codepen.io\">CodePen</a>.</p>\n<script async src=\"//assets.codepen.io/assets/embed/ei.js\"></script>\n\n现在有了组件层级，是时候去实现你的应用了。最简单的方式是先创建一个静态版本：传入数据模型，渲染 UI 但没有任何交互。最好把这些过程解耦，因为创建一个静态版本更多需要的是码代码，不太需要逻辑思考，而添加交互则更多需要的是逻辑思考，不是码代码。我们会看看为什么是这样的。\n\n要构建一个用于呈现数据模型的静态版本的应用程序，你需要创建能够复用其他组件的组件，并通过 *props* 来传递数据。*props* 是一种从父级向子级传递数据的方法。如果你熟悉 *state* 的概念， 在创建静态版本的时候*不要使用 state*。State 只在交互的时候使用，即随时间变化的数据。由于这是静态版本的应用，你不需要使用它。\n\n你可以自顶向下或者自底向上构建应用。也就是，你可以从层级最高的组件开始构建(即 `FilterableProductTable`开始)或层级最低的组件开始构建(`ProductRow`)。在较为简单的例子中，通常自顶向下更容易，而在较大的项目中，自底向上会更容易并且在你构建的时候有利于编写测试。\n\n在这步的最后，你会拥有一个用于呈现数据模型的可重用组件库。这些组件只会有 `render()` 方法，因为这只是你的应用的静态版本。层级最高的组件(`FilterableProductTable`)会把数据模型作为 prop 传入。如果你改变你的基础数据模型并且再次调用 `ReactDOM.render()`， UI 会更新。很容易看到你的 UI 是如何更新的，哪里进行了更新。因为没有什么复杂的事情发生。React 的**单向数据流**(也叫作*单向绑定*)保证了一切是模块化并且是快速的。\n\n如果你在这步需要帮助，请参阅 [React 文档](/docs/)\n\n### 一个小插曲：Props VS State\n\n在 React 中有两种数据模型：props 和 state。理解两者的差别是很重要的；如果你还不确定差别是什么，请查看[React 官方文档](/docs/state-and-lifecycle.html)\n\n## 第三步：定义 UI 状态的最小(但完整)表示\n\n为了使你的 UI 交互，你需要能够触发对底层数据模型的更改。React 使用 **state**，让这变的更容易。\n\n为了正确构建你的应用，首先你需要考虑你的应用所需要的最小可变状态集。要点是 DRY：*不要重复(Don't Repeat Yourself)*。找出应用程序的绝对最小表示并计算你所需要的其他任何请求。例如，如果你正在创建一个 TODO 列表，只要保存一个包含 TODO 事项的数组；不要为计数保留一个单独的状态变量。相反，当你想要渲染 TODO 计数时，只需要使用 TODO 数组的长度就可以了。\n\n想想我们的实例应用中所有数据。我们有：\n\n  * 原产品列表\n  * 用户输入的搜索文本\n  * 复选框的值\n  * 产品的筛选列表\n\n让我们来看看每一条，找出哪一个是 state。每个数据只要考虑三个问题：\n\n  1. 它是通过 props 从父级传来的吗？如果是，他可能不是 state。\n  2. 它随着时间推移不变吗？如果是，它可能不是 state。\n  3. 你能够根据组件中任何其他的 state 或 props 把它计算出来吗？如果是，它不是 state。\n\n原产品列表被作为 props 传入，所以它不是 state。搜索文本和复选框似乎是 state，因为它们随时间改变并且不能由其他任何值计算出来。最后，产品的筛选列表不是 state，因为它可以通过将原始产品列表与搜索文本和复选框的值组合计算出来。\n\n最后，我们的 state 有：\n\n  * 用户输入的搜索文本\n  * 复选框的值\n\n## 第四步：确定你的 State 应该位于哪里\n\n<p data-height=\"600\" data-theme-id=\"0\" data-slug-hash=\"ORzEkG\" data-default-tab=\"js\" data-user=\"lacker\" data-embed-version=\"2\" class=\"codepen\">See the Pen <a href=\"http://codepen.io/lacker/pen/ORzEkG/\">Thinking In React: Step 4</a> by Kevin Lacker (<a href=\"http://codepen.io/lacker\">@lacker</a>) on <a href=\"http://codepen.io\">CodePen</a>.</p>\n<script async src=\"//assets.codepen.io/assets/embed/ei.js\"></script>\n\n好的，现在我们确定了应用 state 的最小集合。接下来，我们需要确定哪个组件会改变，或拥有这个 state。\n\n记住：React 中的数据流是单向的，并在组件层次结构中向下传递。一开始我们可能不是很清楚哪个组件应该拥有哪个 state。**在新手理解上这通常是最富有挑战性的部分**，所以按照下面的步骤来辨别：\n\n对你应用的每一个 state：\n\n  * 确定每一个需要这个 state 来渲染的组件。\n  * 找到一个公共所有者组件(一个在层级上高于所有其他需要这个 state 的组件的组件)\n  * 这个公共所有者组件或另一个层级更高的组件应该拥有这个 state。\n  * 如果你没有找到可以拥有这个 state 的组件，创建一个仅用来保存状态的组件并把它加入比这个公共所有者组件层级更高的地方。\n\n让我们用这个策略分析我们的应用：\n\n  * `ProductTable` 需要根据 state 过滤产品列表，`SearchBar` 需要展示搜索文本和复选框状态。\n  * 公共所有者组件是 `FilterableProductTable`。\n  * 筛选文本和复选框的值应该放在 `FilterableProductTable`。\n\n很酷，所以我们决定把 state 放在 `FilterableProductTable`。首先，为 `FilterableProductTable` 的 `constructor` 添加一个实例属性 `this.state = {filterText: '', inStockOnly: false}` 来表示我们应用的初始状态。接下来，把 `filterText` 和 `inStockOnly` 作为 prop 传入 `ProductTable` 和 `SearchBar`。最后在 `ProductTable` 中使用这些 props 来筛选每行产品信息，在 `SearchBar` 中设置表单域的值。\n\n现在你能够看到你的应用是如何运作的了：设置 `filterText` 的值为 `ball` 并刷新你的应用。你会看到数据表格正确的更新了。\n\n## 第五步：添加反向数据流\n\n<p data-height=\"265\" data-theme-id=\"0\" data-slug-hash=\"qRqmjd\" data-default-tab=\"js,result\" data-user=\"rohan10\" data-embed-version=\"2\" data-pen-title=\"Thinking In React: Step 5\" class=\"codepen\">See the Pen <a href=\"http://codepen.io/rohan10/pen/qRqmjd\">Thinking In React: Step 5</a> on <a href=\"http://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n\n到目前为止，我们已经创建了一个可以正确渲染的应用程序，它的数据在层级中通过函数的 props 和 state 向下流动。现在是时候支持其他方式的数据流了：层级结构中最底层的表单组件需要去更新在 `FilterableProductTable` 中的 state。\n\nReact 的数据流很明显，让你可以很轻松的了解你的程序是如何运行的，但相较于传统的双向绑定，它的代码量会稍微多一点。\n\n在当前版本的示例中，如果你试图键入或选中复选框，你会发现 React 会忽略你的输入。这是故意的，因为我们把 `input` 的 `value` 属性设置为一直等于从 `FilterableProductTable` 传入的 `state`.\n\n让我们想想我们想要做什么。我们想确保每当用户更改表单时，我们更新状态来反应用户输入。因为组件应该只更新自己的状态， `FilterableProductTable` 会将一个回调函数传递给 `SearchBar` ，每当应该更新状态时，它就会触发。我们可以使用输入上的 `onChange` 事件来调用它。`FilterableProductTable` 传入的回调函数会调用 `setState()`，这时应用程序会被更新。\n\n虽然这听起来很复杂，但它只是几行代码的问题。而且，你可以清楚地看出你的应用中数据是如何流动的。\n\n## 就是这样\n\n希望这可以让你了解如何使用 React 构建组件和应用程序。虽然这可能会比以前编写更多的代码，但请记住，代码是用来读的，这比写更重要，并且非常容易阅读这个模块化的，思路清晰的代码。当你开始构建大型组件库的时候，你会开始欣赏 React 的思路清晰化和模块性，并且随着代码的复用，你的代码量会开始减少。:)",
        "type": "MarkdownRemark",
        "contentDigest": "486c15410df370691ae7aabef46bc062",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React 理念",
        "id": "thinking-in-react",
        "permalink": "docs/thinking-in-react.html",
        "redirect_from": [
          "blog/2013/11/05/thinking-in-react.html",
          "docs/thinking-in-react-zh-CN.html"
        ],
        "prev": "composition-vs-inheritance.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/thinking-in-react.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/thinking-in-react.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/thinking-in-react.md",
      "fields": {
        "slug": "docs/thinking-in-react.html",
        "path": "docs/thinking-in-react.md",
        "redirect": "[\"blog/2013/11/05/thinking-in-react.html\",\"docs/thinking-in-react-zh-CN.html\"]"
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2013-11-06-community-roundup-10.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2013-11-06-community-roundup-10.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2013-11-06-community-roundup-10.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Community Round-up #10\"\nauthor: [vjeux]\n---\n\nThis is the 10th round-up already and React has come quite far since it was open sourced. Almost all new web projects at Khan Academy, Facebook, and Instagram are being developed using React. React has been deployed in a variety of contexts: a Chrome extension, a Windows 8 application, mobile websites, and desktop websites supporting Internet Explorer 8! Language-wise, React is not only being used within JavaScript but also CoffeeScript and ClojureScript.\n\nThe best part is that no drastic changes have been required to support all those use cases. Most of the efforts were targeted at polishing edge cases, performance improvements, and documentation.\n\n## Khan Academy - Officially moving to React\n\n[Joel Burget](http://joelburget.com/) announced at Hack Reactor that new front-end code at Khan Academy should be written in React!\n\n> How did we get the rest of the team to adopt React? Using interns as an attack vector! Most full-time devs had already been working on their existing projects for a while and weren't looking to try something new at the time, but our class of summer interns was just arriving. For whatever reason, a lot of them decided to try React for their projects. Then mentors became exposed through code reviews or otherwise touching the new code. In this way React knowledge diffused to almost the whole team over the summer.\n>\n> Since the first React checkin on June 5, we've somehow managed to accumulate 23500 lines of jsx (React-flavored js) code. Which is terrifying in a way - that's a lot of code - but also really exciting that it was picked up so quickly.\n>\n> We held three meetings about how we should proceed with React. At the first two we decided to continue experimenting with React and deferred a final decision on whether to adopt it. At the third we adopted the policy that new code should be written in React.\n>\n> I'm excited that we were able to start nudging code quality forward. However, we still have a lot of work to do! One of the selling points of this transition is adopting a uniform frontend style. We're trying to upgrade all the code from (really old) pure jQuery and (regular old) Backbone views / Handlebars to shiny React. At the moment all we've done is introduce more fragmentation. We won't be gratuitously updating working code (if it ain't broke, don't fix it), but are seeking out parts of the codebase where we can shoot two birds with one stone by rewriting in React while fixing bugs or adding functionality.\n>\n> [Read the full article](http://joelburget.com/backbone-to-react/)\n\n\n## React: Rethinking best practices\n\n[Pete Hunt](http://www.petehunt.net/)'s talk at JSConf EU 2013 is now available in video.\n\n<figure><iframe width=\"650\" height=\"370\" src=\"//www.youtube-nocookie.com/embed/x7cQ3mrcKaY\" frameborder=\"0\" allowfullscreen></iframe></figure>\n\n\n## Server-side React with PHP\n\n[Stoyan Stefanov](http://www.phpied.com/)'s series of articles on React has two new entries on how to execute React on the server to generate the initial page load.\n\n> This post is an initial hack to have React components render server-side in PHP.\n>\n> - Problem: Build web UIs\n> - Solution: React\n> - Problem: UI built in JS is anti-SEO (assuming search engines are still noscript) and bad for perceived performance (blank page till JS arrives)\n> - Solution: [React page](https://github.com/facebook/react-page) to render the first view\n> - Problem: Can't host node.js apps / I have tons of PHP code\n> - Solution: Use PHP then!\n>\n> [**Read part 1 ...**](http://www.phpied.com/server-side-react-with-php/)\n>\n> [**Read part 2 ...**](http://www.phpied.com/server-side-react-with-php-part-2/)\n>\n> Rendered markup on the server:\n> <figure><a href=\"http://www.phpied.com/server-side-react-with-php-part-2/\"><img src=\"../images/blog/react-php.png\"></a></figure>\n\n\n## TodoMVC Benchmarks\n\nWebkit has a [TodoMVC Benchmark](https://github.com/WebKit/webkit/tree/master/PerformanceTests/DoYouEvenBench) that compares different frameworks. They recently included React and here are the results (average of 10 runs in Chrome 30):\n\n- **AngularJS:** 4043ms\n- **AngularJSPerf:** 3227ms\n- **BackboneJS:** 1874ms\n- **EmberJS:** 6822ms\n- **jQuery:** 14628ms\n- **React:** 2864ms\n- **VanillaJS:** 5567ms\n\n[Try it yourself!](http://www.petehunt.net/react/tastejs/benchmark.html)\n\nPlease don't take those numbers too seriously, they only reflect one very specific use case and are testing code that wasn't written with performance in mind.\n\nEven though React scores as one of the fastest frameworks in the benchmark, the React code is simple and idiomatic. The only performance tweak used is the following function:\n\n```javascript\n/**\n * This is a completely optional performance enhancement that you can implement\n * on any React component. If you were to delete this method the app would still\n * work correctly (and still be very performant!), we just use it as an example\n * of how little code it takes to get an order of magnitude performance improvement.\n */\nshouldComponentUpdate: function (nextProps, nextState) {\n  return (\n    nextProps.todo.id !== this.props.todo.id ||\n    nextProps.todo !== this.props.todo ||\n    nextProps.editing !== this.props.editing ||\n    nextState.editText !== this.state.editText\n  );\n},\n```\n\nBy default, React \"re-renders\" all the components when anything changes. This is usually fast enough that you don't need to care. However, you can provide a function that can tell whether there will be any change based on the previous and next states and props. If it is faster than re-rendering the component, then you get a performance improvement.\n\nThe fact that you can control when components are rendered is a very important characteristic of React as it gives you control over its performance. We are going to talk more about performance in the future, stay tuned.\n\n## Guess the filter\n\n[Connor McSheffrey](http://conr.me) implemented a small game using React. The goal is to guess which filter has been used to create the Instagram photo.\n<figure><a href=\"http://guessthefilter.com/\"><img src=\"../images/blog/guess_filter.jpg\"></a></figure>\n\n\n## React vs FruitMachine\n\n[Andrew Betts](http://trib.tv/), director of the [Financial Times Labs](http://labs.ft.com/), posted an article comparing [FruitMachine](https://github.com/ftlabs/fruitmachine) and React.\n\n> Eerily similar, no? Maybe Facebook was inspired by Fruit Machine (after all, we got there first), but more likely, it just shows that this is a pretty decent way to solve the problem, and great minds think alike. We're graduating to a third phase in the evolution of web best practice - from intermingling of markup, style and behaviour, through a phase in which those concerns became ever more separated and encapsulated, and finally to a model where we can do that separation at a component level. Developments like Web Components show the direction the web community is moving, and frameworks like React and Fruit Machine are in fact not a lot more than polyfills for that promised behaviour to come.\n>\n> [Read the full article...](http://labs.ft.com/2013/10/client-side-layout-engines-react-vs-fruitmachine/)\n\nEven though we weren't inspired by FruitMachine (React has been used in production since before FruitMachine was open sourced), it's great to see similar technologies emerging and becoming popular.\n\n## React Brunch\n\n[Matthew McCray](http://elucidata.net/) implemented [react-brunch](https://npmjs.org/package/react-brunch), a JSX compilation step for [Brunch](http://brunch.io/).\n\n> Adds React support to brunch by automatically compiling `*.jsx` files.\n>\n> You can configure react-brunch to automatically insert a react header (`/** @jsx React.DOM */`) into all `*.jsx` files. Disabled by default.\n>\n> Install the plugin via npm with `npm install --save react-brunch`.\n>\n> [Read more...](https://npmjs.org/package/react-brunch)\n\n## Random Tweet\n\nI'm going to start adding a tweet at the end of each round-up. We'll start with this one:\n\n<blockquote class=\"twitter-tweet\"><p>This weekend <a href=\"https://twitter.com/search?q=%23angular&amp;src=hash\">#angular</a> died for me. Meet new king <a href=\"https://twitter.com/search?q=%23reactjs&amp;src=hash\">#reactjs</a></p>&mdash; Eldar Djafarov &#x30C3; (@edjafarov) <a href=\"https://twitter.com/edjafarov/statuses/397033796710961152\">November 3, 2013</a></blockquote>\n",
        "type": "MarkdownRemark",
        "contentDigest": "c24f57c090a1a0f1a9b5b2de57eb102f",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Community Round-up #10",
        "author": [
          "vjeux"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2013-11-06-community-roundup-10.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2013-11-06-community-roundup-10.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2013-11-06-community-roundup-10.md",
      "fields": {
        "date": "2013-11-05T16:00:00.000Z",
        "slug": "/blog/2013/11/06/community-roundup-10.html",
        "path": "blog/2013-11-06-community-roundup-10.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-02-20-react-v0.9.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-02-20-react-v0.9.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-02-20-react-v0.9.md absPath of file",
      "internal": {
        "content": "---\ntitle: React v0.9\nauthor: [sophiebits]\n---\n\nI'm excited to announce that today we're releasing React v0.9, which incorporates many bug fixes and several new features since the last release. This release contains almost four months of work, including over 800 commits from over 70 committers!\n\nThanks to everyone who tested the release candidate; we were able to find and fix an error in the event handling code, we upgraded envify to make running browserify on React faster, and we added support for five new attributes.\n\nAs always, the release is available for download from the CDN:\n\n* **React**  \n  Dev build with warnings: <https://fb.me/react-0.9.0.js>  \n  Minified build for production: <https://fb.me/react-0.9.0.min.js>\n* **React with Add-Ons**  \n  Dev build with warnings: <https://fb.me/react-with-addons-0.9.0.js>  \n  Minified build for production: <https://fb.me/react-with-addons-0.9.0.min.js>\n* **In-Browser JSX Transformer**  \n  <https://fb.me/JSXTransformer-0.9.0.js>\n\nWe've also published version `0.9.0` of the `react` and `react-tools` packages on npm and the `react` package on bower.\n\n## What’s New?\n\nThis version includes better support for normalizing event properties across all supported browsers so that you need to worry even less about cross-browser differences. We've also made many improvements to error messages and have refactored the core to never rethrow errors, so stack traces are more accurate and Chrome's purple break-on-error stop sign now works properly.\n\nWe've also added to the add-ons build [React.addons.TestUtils](/docs/test-utils.html), a set of new utilities to help you write unit tests for React components. You can now simulate events on your components, and several helpers are provided to help make assertions about the rendered DOM tree.\n\nWe've also made several other improvements and a few breaking changes; the full changelog is provided below.\n\n## JSX Whitespace\n\nIn addition to the changes to React core listed below, we've made a small change to the way JSX interprets whitespace to make things more consistent. With this release, space between two components on the same line will be preserved, while a newline separating a text node from a tag will be eliminated in the output. Consider the code:\n\n```html\n<div>\n  Monkeys:\n  {listOfMonkeys} {submitButton}\n</div>\n```\n\nIn v0.8 and below, it was transformed to the following:\n\n```javascript\nReact.DOM.div(null,\n  \" Monkeys: \",\n  listOfMonkeys, submitButton\n)\n```\n\nIn v0.9, it will be transformed to this JS instead:\n\n```javascript{2,3}\nReact.DOM.div(null,\n  \"Monkeys:\",\n  listOfMonkeys, \" \", submitButton\n)\n```\n\nWe believe this new behavior is more helpful and eliminates cases where unwanted whitespace was previously added.\n\nIn cases where you want to preserve the space adjacent to a newline, you can write `{'Monkeys: '}` or `Monkeys:{' '}` in your JSX source. We've included a script to do an automated codemod of your JSX source tree that preserves the old whitespace behavior by adding and removing spaces appropriately. You can [install jsx\\_whitespace\\_transformer from npm](https://github.com/facebook/react/blob/master/npm-jsx_whitespace_transformer/README.md) and run it over your source tree to modify files in place. The transformed JSX files will preserve your code's existing whitespace behavior.\n\n## Changelog\n\n### React Core\n\n#### Breaking Changes\n\n- The lifecycle methods `componentDidMount` and `componentDidUpdate` no longer receive the root node as a parameter; use `this.getDOMNode()` instead\n- Whenever a prop is equal to `undefined`, the default value returned by `getDefaultProps` will now be used instead\n- `React.unmountAndReleaseReactRootNode` was previously deprecated and has now been removed\n- `React.renderComponentToString` is now synchronous and returns the generated HTML string\n- Full-page rendering (that is, rendering the `<html>` tag using React) is now supported only when starting with server-rendered markup\n- On mouse wheel events, `deltaY` is no longer negated\n- When prop types validation fails, a warning is logged instead of an error thrown (with the production build of React, type checks are now skipped for performance)\n- On `input`, `select`, and `textarea` elements, `.getValue()` is no longer supported; use `.getDOMNode().value` instead\n- `this.context` on components is now reserved for internal use by React\n\n#### New Features\n\n- React now never rethrows errors, so stack traces are more accurate and Chrome's purple break-on-error stop sign now works properly\n- Added support for SVG tags `defs`, `linearGradient`, `polygon`, `radialGradient`, `stop`\n- Added support for more attributes:\n  - `crossOrigin` for CORS requests\n  - `download` and `hrefLang` for `<a>` tags\n  - `mediaGroup` and `muted` for `<audio>` and `<video>` tags\n  - `noValidate` and `formNoValidate` for forms\n  - `property` for Open Graph `<meta>` tags\n  - `sandbox`, `seamless`, and `srcDoc` for `<iframe>` tags\n  - `scope` for screen readers\n  - `span` for `<colgroup>` tags\n- Added support for defining `propTypes` in mixins\n- Added `any`, `arrayOf`, `component`, `oneOfType`, `renderable`, `shape` to `React.PropTypes`\n- Added support for `statics` on component spec for static component methods\n- On all events, `.currentTarget` is now properly set\n- On keyboard events, `.key` is now polyfilled in all browsers for special (non-printable) keys\n- On clipboard events, `.clipboardData` is now polyfilled in IE\n- On drag events, `.dataTransfer` is now present\n- Added support for `onMouseOver` and `onMouseOut` in addition to the existing `onMouseEnter` and `onMouseLeave` events\n- Added support for `onLoad` and `onError` on `<img>` elements\n- Added support for `onReset` on `<form>` elements\n- The `autoFocus` attribute is now polyfilled consistently on `input`, `select`, and `textarea`\n\n#### Bug Fixes\n\n- React no longer adds an `__owner__` property to each component's `props` object; passed-in props are now never mutated\n- When nesting top-level components (e.g., calling `React.renderComponent` within `componentDidMount`), events now properly bubble to the parent component\n- Fixed a case where nesting top-level components would throw an error when updating\n- Passing an invalid or misspelled propTypes type now throws an error\n- On mouse enter/leave events, `.target`, `.relatedTarget`, and `.type` are now set properly\n- On composition events, `.data` is now properly normalized in IE9 and IE10\n- CSS property values no longer have `px` appended for the unitless properties `columnCount`, `flex`, `flexGrow`, `flexShrink`, `lineClamp`, `order`, `widows`\n- Fixed a memory leak when unmounting children with a `componentWillUnmount` handler\n- Fixed a memory leak when `renderComponentToString` would store event handlers\n- Fixed an error that could be thrown when removing form elements during a click handler\n- Boolean attributes such as `disabled` are rendered without a value (previously `disabled=\"true\"`, now simply `disabled`)\n- `key` values containing `.` are now supported\n- Shortened `data-reactid` values for performance\n- Components now always remount when the `key` property changes\n- Event handlers are attached to `document` only when necessary, improving performance in some cases\n- Events no longer use `.returnValue` in modern browsers, eliminating a warning in Chrome\n- `scrollLeft` and `scrollTop` are no longer accessed on document.body, eliminating a warning in Chrome\n- General performance fixes, memory optimizations, improvements to warnings and error messages\n\n### React with Addons\n\n- `React.addons.TestUtils` was added to help write unit tests\n- `React.addons.TransitionGroup` was renamed to `React.addons.CSSTransitionGroup`\n- `React.addons.TransitionGroup` was added as a more general animation wrapper\n- `React.addons.cloneWithProps` was added for cloning components and modifying their props\n- Bug fix for adding back nodes during an exit transition for CSSTransitionGroup\n- Bug fix for changing `transitionLeave` in CSSTransitionGroup\n- Performance optimizations for CSSTransitionGroup\n- On checkbox `<input>` elements, `checkedLink` is now supported for two-way binding\n\n### JSX Compiler and react-tools Package\n\n- Whitespace normalization has changed; now space between two tags on the same line will be preserved, while newlines between two tags will be removed\n- The `react-tools` npm package no longer includes the React core libraries; use the `react` package instead.\n- `displayName` is now added in more cases, improving error messages and names in the React Dev Tools\n- Fixed an issue where an invalid token error was thrown after a JSX closing tag\n- `JSXTransformer` now uses source maps automatically in modern browsers\n- `JSXTransformer` error messages now include the filename and problematic line contents when a file fails to parse\n",
        "type": "MarkdownRemark",
        "contentDigest": "0322465c77f145ff5923fc7fe9c8a89b",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.9",
        "author": [
          "sophiebits"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-02-20-react-v0.9.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-02-20-react-v0.9.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-02-20-react-v0.9.md",
      "fields": {
        "date": "2014-02-19T16:00:00.000Z",
        "slug": "/blog/2014/02/20/react-v0.9.html",
        "path": "blog/2014-02-20-react-v0.9.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-07-17-react-v0.11.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-07-17-react-v0.11.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-07-17-react-v0.11.md absPath of file",
      "internal": {
        "content": "---\ntitle: React v0.11\nauthor: [zpao]\n---\n\n**Update:** We missed a few important changes in our initial post and changelog. We've updated this post with details about [Descriptors](#descriptors) and [Prop Type Validation](#prop-type-validation).\n\n- - -\n\nWe're really happy to announce the availability of React v0.11. There seems to be a lot of excitement already and we appreciate everybody who gave the release candidate a try over the weekend. We made a couple small changes in response to the feedback and issues filed. We enabled the destructuring assignment transform when using `jsx --harmony`, fixed a small regression with `statics`, and made sure we actually exposed the new API we said we were shipping: `React.Children.count`.\n\n\nThis version has been cooking for a couple months now and includes a wide array of bug fixes and features. We highlighted some of the most important changes below, along with the full changelog.\n\nThe release is available for download from the CDN:\n\n* **React**  \n  Dev build with warnings: <https://fb.me/react-0.11.0.js>  \n  Minified build for production: <https://fb.me/react-0.11.0.min.js>  \n* **React with Add-Ons**  \n  Dev build with warnings: <https://fb.me/react-with-addons-0.11.0.js>  \n  Minified build for production: <https://fb.me/react-with-addons-0.11.0.min.js>  \n* **In-Browser JSX transformer**  \n  <https://fb.me/JSXTransformer-0.11.0.js>\n\nWe've also published version `0.11.0` of the `react` and `react-tools` packages on npm and the `react` package on bower.\n\nPlease try these builds out and [file an issue on GitHub](https://github.com/facebook/react/issues/new) if you see anything awry.\n\n\n## `getDefaultProps`\n\nStarting in React 0.11, `getDefaultProps()` is called only once when `React.createClass()` is called, instead of each time a component is rendered. This means that `getDefaultProps()` can no longer vary its return value based on `this.props` and any objects will be shared across all instances. This change improves performance and will make it possible in the future to do PropTypes checks earlier in the rendering process, allowing us to give better error messages.\n\n\n## Rendering to `null`\n\nSince React's release, people have been using work arounds to \"render nothing\". Usually this means returning an empty `<div/>` or `<span/>`. Some people even got clever and started returning `<noscript/>` to avoid extraneous DOM nodes. We finally provided a \"blessed\" solution that allows developers to write meaningful code. Returning `null` is an explicit indication to React that you do not want anything rendered. Behind the scenes we make this work with a `<noscript>` element, though in the future we hope to not put anything in the document. In the mean time, `<noscript>` elements do not affect layout in any way, so you can feel safe using `null` today!\n\n```js\n// Before\nrender: function() {\n  if (!this.state.visible) {\n    return <span/>;\n  }\n  // ...\n}\n\n// After\nrender: function() {\n  if (!this.state.visible) {\n    return null;\n  }\n  // ...\n}\n```\n\n\n## JSX Namespacing\n\nAnother feature request we've been hearing for a long time is the ability to have namespaces in JSX. Given that JSX is just JavaScript, we didn't want to use XML namespacing. Instead we opted for a standard JS approach: object property access. Instead of assigning variables to access components stored in an object (such as a component library), you can now use the component directly as `<Namespace.Component/>`.\n\n```js\n// Before\nvar UI = require('UI');\nvar UILayout = UI.Layout;\nvar UIButton = UI.Button;\nvar UILabel = UI.Label;\n\nrender: function() {\n  return <UILayout><UIButton /><UILabel>text</UILabel></UILayout>;\n}\n\n// After\nvar UI = require('UI');\n\nrender: function() {\n  return <UI.Layout><UI.Button /><UI.Label>text</UI.Label></UI.Layout>;\n}\n```\n\n\n## Improved keyboard event normalization\n\nKeyboard events now contain a normalized `e.key` value according to the [DOM Level 3 Events spec](http://www.w3.org/TR/DOM-Level-3-Events/#keys-special), allowing you to write simpler key handling code that works in all browsers, such as:\n\n```js\nhandleKeyDown: function(e) {\n  if (e.key === 'Enter') {\n    // Handle enter key\n  } else if (e.key === ' ') {\n    // Handle spacebar\n  } else if (e.key === 'ArrowLeft') {\n    // Handle left arrow\n  }\n},\n```\n\nKeyboard and mouse events also now include a normalized `e.getModifierState()` that works consistently across browsers.\n\n## Descriptors\n\nIn our [v0.10 release notes](/blog/2014/03/21/react-v0.10.html#clone-on-mount), we called out that we were deprecating the existing behavior of the component function call (eg `component = MyComponent(props, ...children)` or `component = <MyComponent prop={...}/>`). Previously that would create an instance and React would modify that internally. You could store that reference and then call functions on it (eg `component.setProps(...)`). This no longer works. `component` in the above examples will be a descriptor and not an instance that can be operated on. The v0.10 release notes provide a complete example along with a migration path. The development builds also provided warnings if you called functions on descriptors.\n\nAlong with this change to descriptors, `React.isValidComponent` and `React.PropTypes.component` now actually validate that the value is a descriptor. Overwhelmingly, these functions are used to validate the value of `MyComponent()`, which as mentioned is now a descriptor, not a component instance. We opted to reduce code churn and make the migration to 0.11 as easy as possible. However, we realize this is has caused some confusion and we're working to make sure we are consistent with our terminology.\n\n## Prop Type Validation\n\nPreviously `React.PropTypes` validation worked by simply logging to the console. Internally, each validator was responsible for doing this itself. Additionally, you could write a custom validator and the expectation was that you would also simply `console.log` your error message. Very shortly into the 0.11 cycle we changed this so that our validators return (*not throw*) an `Error` object. We then log the `error.message` property in a central place in ReactCompositeComponent. Overall the result is the same, but this provides a clearer intent in validation. In addition, to better transition into our descriptor factory changes, we also currently run prop type validation twice in development builds. As a result, custom validators doing their own logging result in duplicate messages. To update, simply return an `Error` with your message instead.\n\n\n## Changelog\n\n### React Core\n\n#### Breaking Changes\n* `getDefaultProps()` is now called once per class and shared across all instances\n* `MyComponent()` now returns a descriptor, not an instance\n* `React.isValidComponent` and `React.PropTypes.component` validate *descriptors*, not component instances.\n* Custom `propType` validators should return an `Error` instead of logging directly\n\n#### New Features\n* Rendering to `null`\n* Keyboard events include normalized `e.key` and `e.getModifierState()` properties\n* New normalized `onBeforeInput` event\n* `React.Children.count` has been added as a helper for counting the number of children\n\n#### Bug Fixes\n\n* Re-renders are batched in more cases\n* Events: `e.view` properly normalized\n* Added Support for more HTML attributes (`coords`, `crossOrigin`, `download`, `hrefLang`, `mediaGroup`, `muted`, `scrolling`, `shape`, `srcSet`, `start`, `useMap`)\n* Improved SVG support\n  * Changing `className` on a mounted SVG component now works correctly\n  * Added support for elements `mask` and `tspan`\n  * Added support for attributes `dx`, `dy`, `fillOpacity`, `fontFamily`, `fontSize`, `markerEnd`, `markerMid`, `markerStart`, `opacity`, `patternContentUnits`, `patternUnits`, `preserveAspectRatio`, `strokeDasharray`, `strokeOpacity`\n* CSS property names with vendor prefixes (`Webkit`, `ms`, `Moz`, `O`) are now handled properly\n* Duplicate keys no longer cause a hard error; now a warning is logged (and only one of the children with the same key is shown)\n* `img` event listeners are now unbound properly, preventing the error \"Two valid but unequal nodes with the same `data-reactid`\"\n* Added explicit warning when missing polyfills\n\n### React With Addons\n* PureRenderMixin: a mixin which helps optimize \"pure\" components\n* Perf: a new set of tools to help with performance analysis\n* Update: New `$apply` command to transform values\n* TransitionGroup bug fixes with null elements, Android\n\n### React NPM Module\n* Now includes the pre-built packages under `dist/`.\n* `envify` is properly listed as a dependency instead of a peer dependency\n\n### JSX\n* Added support for namespaces, eg `<Components.Checkbox />`\n* JSXTransformer\n  * Enable the same `harmony` features available in the command line with `<script type=\"text/jsx;harmony=true\">`\n  * Scripts are downloaded in parallel for more speed. They are still executed in order (as you would expect with normal script tags)\n  * Fixed a bug preventing sourcemaps from working in Firefox\n\n### React Tools Module\n* Improved readme with usage and API information\n* Improved ES6 transforms available with `--harmony` option\n* Added `--source-map-inline` option to the `jsx` executable\n* New `transformWithDetails` API which gives access to the raw sourcemap data\n",
        "type": "MarkdownRemark",
        "contentDigest": "1b2d2203e8da6e07477f758be9411b6a",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.11",
        "author": [
          "zpao"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-07-17-react-v0.11.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-07-17-react-v0.11.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-07-17-react-v0.11.md",
      "fields": {
        "date": "2014-07-16T16:00:00.000Z",
        "slug": "/blog/2014/07/17/react-v0.11.html",
        "path": "blog/2014-07-17-react-v0.11.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-09-24-testing-flux-applications.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-09-24-testing-flux-applications.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-09-24-testing-flux-applications.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Testing Flux Applications\"\nauthor: [fisherwebdev]\n---\n\n**A more up-to-date version of this post is available as part of the [Flux documentation](https://facebook.github.io/flux/docs/testing-flux-applications.html).**\n\n[Flux](https://facebook.github.io/flux/) is the application architecture that Facebook uses to build web applications with [React](/). It's based on a unidirectional data flow. In previous blog posts and documentation articles, we've shown the [basic structure and data flow](https://facebook.github.io/flux/docs/overview.html), more closely examined the [dispatcher and action creators](/blog/2014/07/30/flux-actions-and-the-dispatcher.html), and shown how to put it all together with a [tutorial](https://facebook.github.io/flux/docs/todo-list.html). Now let's look at how to do formal unit testing of Flux applications with [Jest](https://facebook.github.io/jest/), Facebook's auto-mocking testing framework.\n\n\nTesting with Jest\n-----------------\n\nFor a unit test to operate on a truly isolated _unit_ of the application, we need to mock every module except the one we are testing. Jest makes the mocking of other parts of a Flux application trivial. To illustrate testing with Jest, we'll return to our [example TodoMVC application](https://github.com/facebook/flux/tree/master/examples/flux-todomvc).\n\nThe first steps toward working with Jest are as follows:\n\n1. Get the module dependencies for the application installed by running `npm install`.\n2. Create a directory `__tests__/` with a test file, in this case TodoStore-test.js\n3. Run `npm install jest-cli —save-dev`\n4. Add the following to your package.json\n\n```javascript\n{\n  ...\n  \"scripts\": {\n    \"test\": \"jest\"\n  }\n  ...\n}\n```\n\nNow you're ready to run your tests from the command line with `npm test`.\n\nBy default, all modules are mocked, so the only boilerplate we need in TodoStore-test.js is a declarative call to Jest's `dontMock()` method.\n\n```javascript\njest.dontMock('TodoStore');\n```\n\nThis tells Jest to let TodoStore be a real object with real, live methods. Jest will mock all other objects involved with the test.\n\n\nTesting Stores\n--------------\n\nAt Facebook, Flux stores often receive a great deal of formal unit test coverage, as this is where the application state and logic lives. Stores are arguably the most important place in a Flux application to provide coverage, but at first glance, it's not entirely obvious how to test them.\n\nBy design, stores can't be modified from the outside. They have no setters. The only way new data can enter a store is through the callback it registers with the dispatcher.\n\nWe therefore need to simulate the Flux data flow with this _one weird trick_.\n\n```javascript\nvar mockRegister = MyDispatcher.register;\nvar mockRegisterInfo = mockRegister.mock;\nvar callsToRegister = mockRegisterInfo.calls;\nvar firstCall = callsToRegister[0];\nvar firstArgument = firstCall[0];\nvar callback = firstArgument;\n```\n\nWe now have the store's registered callback, the sole mechanism by which data can enter the store.\n\nFor folks new to Jest, or mocks in general, it might not be entirely obvious what is happening in that code block, so let's look at each part of it a bit more closely. We start out by looking at the `register()` method of our application's dispatcher — the method that the store uses to register its callback with the dispatcher. The dispatcher has been thoroughly mocked automatically by Jest, so we can get a reference to the mocked version of the `register()` method just as we would normally refer to that method in our production code. But we can get additional information about that method with the `mock` _property_ of that method. We don't often think of methods having properties, but in Jest, this idea is vital. Every method of a mocked object has this property, and it allows us to examine how the method is being called during the test. A chronologically ordered list of calls to `register()` is available with the `calls` property of `mock`, and each of these calls has a list of the arguments that were used in each method call.\n\nSo in this code, we are really saying, \"Give me a reference to the first argument of the first call to MyDispatcher's `register()` method.\" That first argument is the store's callback, so now we have all we need to start testing.  But first, we can save ourselves some semicolons and roll all of this into a single line:\n\n```javascript\ncallback = MyDispatcher.register.mock.calls[0][0];\n```\n\nWe can invoke that callback whenever we like, independent of our application's dispatcher or action creators. We will, in fact, fake the behavior of the dispatcher and action creators by invoking the callback with an action that we'll create directly in our test.\n\n```javascript\nvar payload = {\n  source: 'VIEW_ACTION',\n  action: {\n    actionType: TodoConstants.TODO_CREATE,\n    text: 'foo'\n  }\n};\ncallback(payload);\nvar all = TodoStore.getAll();\nvar keys = Object.keys(all);\nexpect(all[keys[0]].text).toEqual('foo');\n```\n\nPutting it All Together\n----------------------\n\nThe example Flux TodoMVC application has been updated with an example test for the TodoStore, but let's look at an abbreviated version of the entire test. The most important things to notice in this test are how we keep a reference to the store's registered callback in the closure of the test, and how we recreate the store before every test so that we clear the state of the store entirely.\n\n```javascript\njest.dontMock('../TodoStore');\njest.dontMock('react/lib/merge');\n\ndescribe('TodoStore', function() {\n\n  var TodoConstants = require('../../constants/TodoConstants');\n\n  // mock actions inside dispatch payloads\n  var actionTodoCreate = {\n    source: 'VIEW_ACTION',\n    action: {\n      actionType: TodoConstants.TODO_CREATE,\n      text: 'foo'\n    }\n  };\n  var actionTodoDestroy = {\n    source: 'VIEW_ACTION',\n    action: {\n      actionType: TodoConstants.TODO_DESTROY,\n      id: 'replace me in test'\n    }\n  };\n\n  var AppDispatcher;\n  var TodoStore;\n  var callback;\n\n  beforeEach(function() {\n    AppDispatcher = require('../../dispatcher/AppDispatcher');\n    TodoStore = require('../TodoStore');\n    callback = AppDispatcher.register.mock.calls[0][0];\n  });\n\n  it('registers a callback with the dispatcher', function() {\n    expect(AppDispatcher.register.mock.calls.length).toBe(1);\n  });\n\n  it('initializes with no to-do items', function() {\n    var all = TodoStore.getAll();\n    expect(all).toEqual({});\n  });\n\n  it('creates a to-do item', function() {\n    callback(actionTodoCreate);\n    var all = TodoStore.getAll();\n    var keys = Object.keys(all);\n    expect(keys.length).toBe(1);\n    expect(all[keys[0]].text).toEqual('foo');\n  });\n\n  it('destroys a to-do item', function() {\n    callback(actionTodoCreate);\n    var all = TodoStore.getAll();\n    var keys = Object.keys(all);\n    expect(keys.length).toBe(1);\n    actionTodoDestroy.action.id = keys[0];\n    callback(actionTodoDestroy);\n    expect(all[keys[0]]).toBeUndefined();\n  });\n\n});\n```\n\nYou can take a look at all this code in the [TodoStore's tests on GitHub](https://github.com/facebook/flux/tree/master/examples/flux-todomvc/js/stores/__tests__/TodoStore-test.js) as well. \n\n\nMocking Data Derived from Other Stores\n--------------------------------------\n\nSometimes our stores rely on data from other stores. Because all of our modules are mocked, we'll need to simulate the data that comes from the other store.  We can do this by retrieving the mock function and adding a custom return value to it.\n\n```javascript\nvar MyOtherStore = require('../MyOtherStore');\nMyOtherStore.getState.mockReturnValue({\n  '123': {\n    id: '123',\n    text: 'foo'\n  },\n  '456': {\n    id: '456',\n    text: 'bar'\n  }\n});\n```\n\nNow we have a collection of objects that will come back from MyOtherStore whenever we call MyOtherStore.getState() in our tests.  Any application state can be simulated with a combination of these custom return values and the previously shown technique of working with the store's registered callback.\n\nA brief example of this technique is up on GitHub within the Flux Chat example's [UnreadThreadStore-test.js](https://github.com/facebook/flux/tree/master/examples/flux-chat/js/stores/__tests__/UnreadThreadStore-test.js).\n\nFor more information about the `mock` property of mocked methods or Jest's ability to provide custom mock values, see Jest's documentation on [mock functions](https://facebook.github.io/jest/docs/mock-functions.html).\n\n\nMoving Logic from React to Stores\n---------------------------------\n\nWhat often starts as a little piece of seemingly benign logic in our React components often presents a problem while creating unit tests. We want to be able to write tests that read like a specification for our application's behavior, and when application logic slips into our view layer, this becomes more difficult.\n\nFor example, when a user has marked each of their to-do items as complete, the TodoMVC specification dictates that we should also change the status of the \"Mark all as complete\" checkbox automatically. To create that logic, we might be tempted to write code like this in our MainSection's `render()` method:\n\n```javascript\nvar allTodos = this.props.allTodos;\nvar allChecked = true;\nfor (var id in allTodos) {\n  if (!allTodos[id].complete) {\n    allChecked = false;\n    break;\n  }\n}\n...\n\nreturn (\n  <section id=\"main\">\n  <input\n    id=\"toggle-all\"\n    type=\"checkbox\"\n    checked={allChecked ? 'checked' : ''}\n  />\n  ...\n  </section>\n);\n```\n\nWhile this seems like an easy, normal thing to do, this is an example of application logic slipping into the views, and it can't be described in our spec-style TodoStore test. Let's take that logic and move it to the store. First, we'll create a public method on the store that will encapsulate that logic:\n\n```javascript\nareAllComplete: function() {\n  for (var id in _todos) {\n    if (!_todos[id].complete) {\n      return false;\n    }\n  }\n  return true;\n},\n```\n\nNow we have the application logic where it belongs, and we can write the following test:\n\n```javascript\nit('determines whether all to-do items are complete', function() {\n  var i = 0;\n  for (; i < 3; i++) {\n    callback(mockTodoCreate);\n  }\n  expect(TodoStore.areAllComplete()).toBe(false);\n\n  var all = TodoStore.getAll();\n  for (key in all) {\n    callback({\n      source: 'VIEW_ACTION',\n      action: {\n        actionType: TodoConstants.TODO_COMPLETE,\n        id: key\n      }\n    });\n  }\n  expect(TodoStore.areAllComplete()).toBe(true);\n\n  callback({\n    source: 'VIEW_ACTION',\n    action: {\n      actionType: TodoConstants.TODO_UNDO_COMPLETE,\n      id: key\n    }\n  });\n  expect(TodoStore.areAllComplete()).toBe(false);\n});\n```\n\nFinally, we revise our view layer. We'll call for that data in the controller-view, TodoApp.js, and pass it down to the MainSection component.\n\n```javascript\nfunction getTodoState() {\n  return {\n    allTodos: TodoStore.getAll(),\n    areAllComplete: TodoStore.areAllComplete()\n  };\n}\n\nvar TodoApp = React.createClass({\n...\n\n  /**\n   * @return {object}\n   */\n  render: function() {\n    return (\n      ...\n      <MainSection\n        allTodos={this.state.allTodos}\n        areAllComplete={this.state.areAllComplete}\n      />\n      ...\n    );\n  },\n\n  /**\n   * Event handler for 'change' events coming from the TodoStore\n   */\n  _onChange: function() {\n    this.setState(getTodoState());\n  }\n\n});\n```\n\nAnd then we'll utilize that property for the rendering of the checkbox.\n\n```javascript\nrender: function() {\n  ...\n\n  return (\n    <section id=\"main\">\n    <input\n      id=\"toggle-all\"\n      type=\"checkbox\"\n      checked={this.props.areAllComplete ? 'checked' : ''}\n    />\n    ...\n    </section>\n  );\n},\n```\n\nTo learn how to test React components themselves, check out the [Jest tutorial for React](https://facebook.github.io/jest/docs/tutorial-react.html) and the [ReactTestUtils documentation](/docs/test-utils.html).\n\n\nFurther Reading\n---------------\n\n- [Mocks Aren't Stubs](http://martinfowler.com/articles/mocksArentStubs.html) by Martin Fowler\n- [Jest API Reference](https://facebook.github.io/jest/docs/api.html)\n",
        "type": "MarkdownRemark",
        "contentDigest": "c21edddacb766f2145161ddf346747fd",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Testing Flux Applications",
        "author": [
          "fisherwebdev"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-09-24-testing-flux-applications.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-09-24-testing-flux-applications.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-09-24-testing-flux-applications.md",
      "fields": {
        "date": "2014-09-23T16:00:00.000Z",
        "slug": "/blog/2014/09/24/testing-flux-applications.html",
        "path": "blog/2014-09-24-testing-flux-applications.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-10-14-introducing-react-elements.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-10-14-introducing-react-elements.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-10-14-introducing-react-elements.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Introducing React Elements\"\nauthor: [sebmarkbage]\nredirect_from: \"blog/2014/10/14/introducting-react-elements.html\"\n---\n\nThe upcoming React 0.12 tweaks some APIs to get us close to the final 1.0 API. This release is all about setting us up for making the `ReactElement` type really FAST, [jest unit testing](https://facebook.github.io/jest/) easier, making classes simpler (in preparation for ES6 classes) and better integration with third-party languages!\n\nIf you currently use JSX everywhere, you don't really have to do anything to get these benefits! The updated transformer will do it for you.\n\nIf you can't or don't want to use JSX, then please insert some hints for us. Add a `React.createFactory` call around your imported class when you require it:\n\n```javascript\nvar MyComponent = React.createFactory(require('MyComponent'));\n```\n\nEverything is backwards compatible for now, and as always React will provide you with descriptive console messaging to help you upgrade.\n\n`ReactElement` is the primary API of React. Making it faster has shown to give us several times faster renders on common benchmarks. The API tweaks in this release helps us get there.\n\nContinue reading if you want all the nitty gritty details...\n\n\n## New Terminology\n\nWe wanted to make it easier for new users to see the parallel with the DOM (and why React is different). To align our terminology we now use the term `ReactElement` instead of _descriptor_. Likewise, we use the term `ReactNode` instead of _renderable_.\n\n[See the full React terminology guide.](https://gist.github.com/sebmarkbage/fcb1b6ab493b0c77d589)\n\n## Creating a ReactElement\n\nWe now expose an external API for programmatically creating a `ReactElement` object.\n\n```javascript\nvar reactElement = React.createElement(type, props, children);\n```\n\nThe `type` argument is either a string (HTML tag) or a class. It's a description of what tag/class is going to be rendered and what props it will contain. You can also create factory functions for specific types. This basically just provides the type argument for you:\n\n```javascript\nvar div = React.createFactory('div');\nvar reactDivElement = div(props, children);\n```\n\n\n## Deprecated: Auto-generated Factories\n\nImagine if `React.createClass` was just a plain JavaScript class. If you call a class as a plain function you would call the component's constructor to create a Component instance, not a `ReactElement`:\n\n```javascript\nnew MyComponent(); // Component, not ReactElement\n```\n\nReact 0.11 gave you a factory function for free when you called `React.createClass`. This wrapped your internal class and then returned a `ReactElement` factory function for you.\n\n```javascript\nvar MyComponent = React.createFactory(\n  class {\n    render() {\n      ...\n    }\n  }\n);\n```\n\nIn future versions of React, we want to be able to support pure classes without any special React dependencies. To prepare for that we're [deprecating the auto-generated factory](https://gist.github.com/sebmarkbage/d7bce729f38730399d28).\n\nThis is the biggest change to 0.12. Don't worry though. This functionality continues to work the same for this release, it just warns you if you're using a deprecated API. That way you can upgrade piece-by-piece instead of everything at once.\n\n\n## Upgrading to 0.12\n\n### React With JSX\n\nIf you use the React specific [JSX](https://facebook.github.io/jsx/) transform, the upgrade path is simple. Just make sure you have React in scope.\n\n```javascript\n// If you use node/browserify modules make sure\n// that you require React into scope.\nvar React = require('react');\n```\n\nReact's JSX will create the `ReactElement` for you. You can continue to use JSX with regular classes:\n\n```javascript\nvar MyComponent = React.createClass(...);\n\nvar MyOtherComponent = React.createClass({\n  render: function() {\n    return <MyComponent prop=\"value\" />;\n  }\n});\n```\n\n*NOTE: React's JSX will not call arbitrary functions in future releases. This restriction is introduced so that it's easier to reason about the output of JSX by both the reader of your code and optimizing compilers. The JSX syntax is not tied to React. Just the transpiler. You can still use [the JSX spec](https://facebook.github.io/jsx/) with a different transpiler for custom purposes.*\n\n### React Without JSX\n\nIf you don't use JSX and just call components as functions, you will need to explicitly create a factory before calling it:\n\n```javascript\nvar MyComponentClass = React.createClass(...);\n\nvar MyComponent = React.createFactory(MyComponentClass); // New step\n\nvar MyOtherComponent = React.createClass({\n  render: function() {\n    return MyComponent({ prop: 'value' });\n  }\n});\n```\n\nIf you're using a module system, the recommended solution is to export the class and create the factory on the requiring side.\n\nYour class creation is done just like before:\n\n```javascript\n// MyComponent.js\nvar React = require('react');\nvar MyComponent = React.createClass(...);\nmodule.exports = MyComponent;\n```\n\nThe other side uses `React.createFactory` after `require`ing the component class:\n\n```javascript\n// MyOtherComponent.js\nvar React = require('react');\n// All you have to do to upgrade is wrap your requires like this:\nvar MyComponent = React.createFactory(require('MyComponent'));\n\nvar MyOtherComponent = React.createClass({\n  render: function() {\n    return MyComponent({ prop: 'value' });\n  }\n});\n\nmodule.exports = MyOtherComponent;\n```\n\nYou ONLY have to do this for custom classes. React still has built-in factories for common HTML elements.\n\n```javascript\nvar MyDOMComponent = React.createClass({\n  render: function() {\n    return React.DOM.div({ className: 'foo' }); // still ok\n  }\n});\n```\n\nWe realize that this is noisy. At least it's on the top of the file (out of sight, out of mind). This a tradeoff we had to make to get [the other benefits](https://gist.github.com/sebmarkbage/d7bce729f38730399d28) that this model unlocks.\n\n### Anti-Pattern: Exporting Factories\n\nIf you have an isolated project that only you use, then you could create a helper that creates both the class and the factory at once:\n\n```javascript\n// Anti-pattern - Please, don't use\nfunction createClass(spec) {\n  return React.createFactory(React.createClass(spec));\n}\n```\n\nThis makes your components incompatible with jest testing, consumers using JSX, third-party languages that implement their own optimized `ReactElement` creation, etc.\n\nIt also encourages you to put more logic into these helper functions. Something that another language, a compiler or a reader of your code couldn't reason about.\n\nTo fit into the React ecosystem we recommend that you always export pure classes from your shared modules and let the consumer decide the best strategy for generating `ReactElement`s.\n\n\n## Third-party Languages\n\nThe signature of a `ReactElement` is something like this:\n\n```javascript\n{\n  type : string | class,\n  props : { children, className, etc. },\n  key : string | boolean | number | null,\n  ref : string | null\n}\n```\n\nLanguages with static typing that don't need validation (e.g. [Om in ClojureScript](https://github.com/swannodette/om)), and production level compilers will be able to generate these objects inline instead of going through the validation step. This optimization will allow significant performance improvements in React.\n\n\n## Your Thoughts and Ideas\n\nWe'd love to hear your feedback on this API and your preferred style. A plausible alternative could be to directly inline objects instead of creating factory functions:\n\n```javascript\n// MyOtherComponent.js\nvar React = require('react');\nvar MyComponent = require('MyComponent');\n\nvar MyOtherComponent = React.createClass({\n  render: function() {\n    return { type: MyComponent, props: { prop: 'value' } };\n  }\n});\n\nmodule.exports = MyOtherComponent;\n```\n\nThis moves the noise down into the render method though. It also doesn't provide a hook for dynamic validation/type checking so you'll need some other way to verify that it's safe.\n\n*NOTE: This won't work in this version of React because it's conflicting with other legacy APIs that we're deprecating. (We temporarily add a `element._isReactElement = true` marker on the object.)*\n\n\n## The Next Step: ES6 Classes\n\nAfter 0.12 we'll begin work on moving to ES6 classes. We will still support `React.createClass` as a backwards compatible API. If you use an ES6 transpiler you will be able to declare your components like this:\n\n```javascript\nexport class MyComponent {\n  render() {\n    ...\n  }\n};\n```\n\nThis upcoming release is a stepping stone to make it as easy as this. Thanks for your support.\n",
        "type": "MarkdownRemark",
        "contentDigest": "925e5a3f6974bf67905d7bb795ae280d",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Introducing React Elements",
        "author": [
          "sebmarkbage"
        ],
        "redirect_from": "blog/2014/10/14/introducting-react-elements.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-10-14-introducing-react-elements.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-10-14-introducing-react-elements.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-10-14-introducing-react-elements.md",
      "fields": {
        "date": "2014-10-13T16:00:00.000Z",
        "slug": "/blog/2014/10/14/introducing-react-elements.html",
        "path": "blog/2014-10-14-introducing-react-elements.md",
        "redirect": "\"blog/2014/10/14/introducting-react-elements.html\""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-10-17-community-roundup-23.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-10-17-community-roundup-23.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-10-17-community-roundup-23.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Community Round-up #23\"\nlayout: post\nauthor: [LoukaN]\n---\n\nThis round-up is a special edition on [Flux](https://facebook.github.io/flux/). If you expect to see diagrams showing arrows that all point in the same direction, you won't be disappointed!\n\n## React And Flux at ForwardJS\n\nFacebook engineers [Jing Chen](https://github.com/jingc) and [Bill Fisher](https://github.com/fisherwebdev) gave a talk about Flux and React at [ForwardJS](http://forwardjs.com/), and how using an application architecture with a unidirectional data flow helped solve recurring bugs.\n\n<iframe width=\"650\" height=\"315\" src=\"//www.youtube-nocookie.com/embed/i__969noyAM\" frameborder=\"0\" allowfullscreen></iframe>\n\n# Yahoo\n\nYahoo is converting Yahoo Mail to React and Flux and in the process, they open sourced several components. This will help you get an isomorphic application up and running.\n\n- [Flux Router Component](https://github.com/yahoo/flux-router-component)\n- [Dispatchr](https://github.com/yahoo/dispatchr)\n- [Fetchr](https://github.com/yahoo/fetchr)\n- [Flux Examples](https://github.com/yahoo/flux-examples)\n\n\n## Reflux\n\n[Mikael Brassman](https://spoike.ghost.io/) wrote [Reflux](https://github.com/spoike/refluxjs), a library that implements Flux concepts. Note that it diverges significantly from the way we use Flux at Facebook. He explains [the reasons why in a blog post](https://spoike.ghost.io/deconstructing-reactjss-flux/).\n\n<center>\n<a href=\"https://spoike.ghost.io/deconstructing-reactjss-flux/\"><img src=\"../images/blog/reflux-flux.png\" width=\"400\" /></a>\n</center>\n\n\n## React and Flux Interview\n\n[Ian Obermiller](http://ianobermiller.com/), engineer at Facebook, [made a lengthy interview](http://ianobermiller.com/blog/2014/09/15/react-and-flux-interview/) on the experience of using React and Flux in order to build probably the biggest React application ever written so far.\n\n> I’ve actually said this many times to my team too, I love React. It’s really great for making these complex applications. One thing that really surprised me with it is that React combined with a sane module system like CommonJS, and making sure that you actually modulize your stuff properly has scaled really well to a team of almost 10 developers working on hundreds of files and tens of thousands of lines of code.\n>\n> Really, a fairly large code base... stuff just works. You don’t have to worry about mutating, and the state of the DOM just really makes stuff easy. Just conceptually it’s easier just to think about here’s what I have, here’s my data, here’s how it renders, I don’t care about anything else. For most cases that is really simplifying and makes it really fast to do stuff.\n>\n> [Read the full interview...](http://ianobermiller.com/blog/2014/09/15/react-and-flux-interview/)\n\n\n## Adobe's Brackets Project Tree\n\n[Kevin Dangoor](http://www.kevindangoor.com/) is converting the project tree of [Adobe's Bracket text editor](http://brackets.io/) to React and Flux. He wrote about his experience [using Flux](http://www.kevindangoor.com/2014/09/intro-to-the-new-brackets-project-tree/).\n\n<center>\n<a href=\"http://www.kevindangoor.com/2014/09/intro-to-the-new-brackets-project-tree/\"><img src=\"../images/blog/flux-diagram.png\" width=\"400\" /></a>\n</center>\n\n\n## Async Requests with Flux Revisited\n\n[Reto Schläpfer](http://www.code-experience.com/the-code-experience/) came back to a Flux project he hasn't worked on for a month and [saw many ways to improve the way he implemented Flux](http://www.code-experience.com/async-requests-with-react-js-and-flux-revisited/). He summarized his learnings in a blog post.\n\n> The smarter way is to call the Web Api directly from an Action Creator and then make the Api dispatch an event with the request result as a payload. The Store(s) can choose to listen on those request actions and change their state accordingly.\n>\n> Before I show some updated code snippets, let me explain why this is superior:\n>\n> - There should be only one channel for all state changes: The Dispatcher. This makes debugging easy because it just requires a single console.log in the dispatcher to observe every single state change trigger.\n>\n> - Asynchronously executed callbacks should not leak into Stores. The consequences of it are just too hard to fully foresee. This leads to elusive bugs. Stores should only execute synchronous code. Otherwise they are too hard to understand.\n>\n> - Avoiding actions firing other actions makes your app simple. We use the newest Dispatcher implementation from Facebook that does not allow a new dispatch while dispatching. It forces you to do things right.\n>\n> [Read the full article...](http://www.code-experience.com/async-requests-with-react-js-and-flux-revisited/)\n\n\n## Undo-Redo with Immutable Data Structures\n\n[Ameya Karve](https://github.com/ameyakarve) explained how to use [Mori](https://github.com/swannodette/mori), a library that provides immutable data structures, in order to [implement undo-redo](http://ameyakarve.com/jekyll/update/2014/02/06/Undo-React-Flux-Mori.html). This usually very challenging feature only takes a few lines of code with Flux!\n\n```javascript\nundo: function() {\n  this.redoStates = Mori.conj(this.redoStates, Mori.first(this.undoStates));\n  this.undoStates = Mori.drop(1, this.undoStates);\n  this.todosState = Mori.first(this.undoStates);\n  this.canUndo = Mori.count(this.undoStates) > 1;\n  this.canRedo = true;\n  if (Mori.count(this.undoStates) > 1) {\n    this.todos = JSON.parse(this.todosState);\n  } else {\n    this.todos = [];\n  }\n  this.emit('change');\n},\n```\n\n\n## Flux in practice\n\n[Gary Chambers](https://twitter.com/garychambers108) wrote a [guide to get started with Flux](https://medium.com/@garychambers108/flux-in-practice-ec08daa9041a). This is a very practical introduction to Flux.\n\n> So, what does it actually mean to write an application in the Flux way? At that moment of inspiration, when faced with an empty text editor, how should you begin? This post follows the process of building a Flux-compliant application from scratch.\n>\n> [Read the full guide...](https://medium.com/@garychambers108/flux-in-practice-ec08daa9041a)\n\n\n## Components, React and Flux\n\n[Dan Abramov](https://twitter.com/dan_abramov) working at Stampsy made a talk about React and Flux. It's a very good overview of the concepts at play.\n\n<iframe src=\"//slides.com/danabramov/components-react-flux-wip/embed\"  width=\"100%\" height=\"315\" scrolling=\"no\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>\n\n\n## React and Flux\n\n[Christian Alfoni](https://github.com/christianalfoni) wrote an article where [he compares Backbone, Angular and Flux](https://christianalfoni.github.io/javascript/2014/08/20/react-js-and-flux.html) on a simple example that's representative of a real project he worked on.\n\n> Wow, that was a bit more code! Well, try to think of it like this. In the above examples, if we were to do any changes to the application we would probably have to move things around. In the FLUX example we have considered that from the start.\n>\n> Any changes to the application is adding, not moving things around. If you need a new store, just add it and make components dependant of it. If you need more views, create a component and use it inside any other component without affecting their current \"parent controller or models\".\n>\n> [Read the full article...](https://christianalfoni.github.io/javascript/2014/08/20/react-js-and-flux.html)\n\n\n\n## Flux: Step by Step approach\n\n[Nicola Paolucci](https://github.com/durdn) from Atlassian wrote a great guide to help your getting understand [Flux step by step](https://blogs.atlassian.com/2014/08/flux-architecture-step-by-step/).\n\n<center>\n<a href=\"https://blogs.atlassian.com/2014/08/flux-architecture-step-by-step/\"><img src=\"../images/blog/flux-chart.png\" width=\"400\" /></a>\n</center>\n\n\n## DeLorean: Back to the future!\n\n[DeLorean](https://github.com/deloreanjs/delorean) is a tiny Flux pattern implementation developed by [Fatih Kadir Akin](https://github.com/f).\n\n> - Unidirectional data flow, it makes your app logic simpler than MVC\n> - Automatically listens to data changes and keeps your data updated\n> - Makes data more consistent across your whole application\n> - It's framework agnostic, completely. There's no view framework dependency\n> - Very small, just 4K gzipped\n> - Built-in React.js integration, easy to use with Flight.js and Ractive.js and probably all others\n> - Improve your UI/data consistency using rollbacks\n\n\n## Facebook's iOS Infrastructure\n\nLast but not least, Flux and React ideas are not limited to JavaScript inside of the browser. The iOS team at Facebook re-implemented Newsfeed using very similar patterns.\n\n<iframe width=\"650\" height=\"315\" src=\"//www.youtube-nocookie.com/embed/XhXC4SKOGfQ\" frameborder=\"0\" allowfullscreen></iframe>\n\n\n## Random Tweet\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p>If you build your app with flux, you can swap out React for a canvas or svg view layer and keep 85% of your code. (or the thing after React)</p>&mdash; Ryan Florence (@ryanflorence) <a href=\"https://twitter.com/ryanflorence/status/507309645372076034\">September 3, 2014</a></blockquote>\n",
        "type": "MarkdownRemark",
        "contentDigest": "6c6ac5bfa51f7802e51530f35c5c622e",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Community Round-up #23",
        "layout": "post",
        "author": [
          "LoukaN"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-10-17-community-roundup-23.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-10-17-community-roundup-23.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-10-17-community-roundup-23.md",
      "fields": {
        "date": "2014-10-16T16:00:00.000Z",
        "slug": "/blog/2014/10/17/community-roundup-23.html",
        "path": "blog/2014-10-17-community-roundup-23.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2014-11-25-community-roundup-24.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2014-11-25-community-roundup-24.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2014-11-25-community-roundup-24.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Community Round-up #24\"\nlayout: post\nauthor: [steveluscher]\n---\n\n## Keep it Simple\n\nPedro Nauck ([pedronauck](https://github.com/pedronauck)) delivered an impeccably illustrated deck at Brazil's _Front in Floripa_ conference. Watch him talk about how to keep delivering value as your app scales, by keeping your development process simple.\n\n<script async class=\"speakerdeck-embed\" data-id=\"44129b9054c901328b89221e99b278fe\" data-ratio=\"1.33333333333333\" src=\"//speakerdeck.com/assets/embed.js\"></script>\n\nMurilo Pereira ([mpereira](https://github.com/mpereira)) tussles with the topic of complexity in this blog post about [coping with scaling up](http://www.techsonian.net/2014/09/from-backbone-to-react-our-experience-scaling-a-web-application/), where he describes how his team used React to make possible the “nearly impossible.”\n\nI ([steveluscher](https://github.com/steveluscher)) spoke at Manning Publications' “Powered By JavaScript” Strangeloop pre-conf in St. Louis. There, I proposed a new notation to talk about development complexity – Big-Coffee Notation ☕(n) – and spoke about the features of React that help keep our Big-Coffee from going quadratic, as our user interfaces get more complex.\n\n<iframe width=\"650\" height=\"315\" src=\"//www.youtube-nocookie.com/embed/rI0GQc__0SM\" frameborder=\"0\" allowfullscreen></iframe>\n\nJames Pearce ([jamesgpearce](https://github.com/jamesgpearce)) carried Big-Coffee all the way to Raleigh, NC. At the _All Things Open_ conference, he spoke about some of the design decisions that went into React, particularly those that lend themselves to simpler, more reliable code.\n\n<iframe width=\"650\" height=\"315\" src=\"//www.youtube-nocookie.com/embed/m2fuO2wl_3c\" frameborder=\"0\" allowfullscreen></iframe>\n\n## All About Isomorphism\n\nMichael Ridgway ([mridgway](https://github.com/mridgway)) shows us how Yahoo! (who recently [moved Yahoo! Mail to React](http://www.slideshare.net/rmsguhan/react-meetup-mailonreact)) renders their React+Flux application, server-side.\n\n<script async class=\"speakerdeck-embed\" data-id=\"87ecaa3048750132f42542ffc18c6fcf\" data-ratio=\"1.77777777777778\" src=\"//speakerdeck.com/assets/embed.js\"></script>\n\nPéter Márton ([hekike](https://github.com/hekike)) helps us brew a cold one (literally) using an application that's server-client [isomorphic and indexable](http://blog.risingstack.com/from-angularjs-to-react-the-isomorphic-way/). Demo and sample code included – cold ones sold separately.\n\nAnd, lest you think that client-server isomorphism exists in pursuit of crawalable, indexable HTML alone, watch as Nate Hunzaker ([nhunzaker](https://github.com/nhunzaker)) [server renders data visualizations as SVG](http://viget.com/extend/visualization-is-for-sharing-using-react-for-portable-data-visualization) with React.\n\n## React Router Mows the Lawn\n\nRyan Florence ([rpflorence](https://github.com/rpflorence])) and Michael Jackson ([mjackson](https://github.com/mjackson)) unveiled a new API for [React Router](https://github.com/rackt/react-router) that solves some of its user's problems by eliminating the problems themselves. Read all about what React Router learned from its community of users, and how they've [rolled your ideas into their latest release](https://github.com/rackt/react-router/wiki/Announcements).\n\n## React in Practice\n\nJonathan Beebe ([somethingkindawierd](https://github.com/somethingkindawierd)) spoke about how he uses React to build tools that deliver hope to those trying to make the best of a bad situation. Watch his talk from this year's _Nodevember_ conference in Nashville\n\n<iframe width=\"650\" height=\"315\" src=\"//www.youtube-nocookie.com/embed/uZgAq1CZ1N8\" frameborder=\"0\" allowfullscreen></iframe>\n\nIf you take a peek under the covers, you'll find that React powers [Carousel](https://blog.carousel.com/2014/11/introducing-carousel-for-web-ipad-and-android-tablet/), Dropbox's new photo and video gallery app.\n\nWe enjoyed a cinematic/narrative experience with this React-powered, interactive story by British author William Boyd. Dive into “[The Vanishing Game](https://thevanishinggame.wellstoried.com)” and see for yourself.\n\n## Be Kind, Rewind\n\nSpend the next 60 seconds watching Daniel Woelfel ([dwwoelfel](https://github.com/dwwoelfel)) serialize a React app's state as a string, then deserialize it to produce a working UI. Read about how he uses this technique to [reproduce bugs](http://blog.circleci.com/local-state-global-concerns/) reported to him by his users.\n\n<iframe width=\"650\" height=\"315\" src=\"//www.youtube-nocookie.com/embed/5yHFTN-_mOo\" frameborder=\"0\" allowfullscreen></iframe>\n\n## Community Components\n\nTom Chen ([tomchentw](https://github.com/tomchentw)) brings us a [react-google-maps](https://tomchentw.github.io/react-google-maps/) component, and a way to syntax highlight source code using Prism and the [react-prism](https://tomchentw.github.io/react-prism/) component, for good measure.\n\nJed Watson ([jedwatson](https://github.com/JedWatson)) helps you manage touch, tap, and press events using the [react-tappable](https://github.com/JedWatson/react-tappable) component.\n\nTo find these, and more community-built components, consult the [React Components](http://react-components.com/) and [React Rocks](http://react.rocks) component directories. React Rocks recently exceeded one-hundred listed components and counting. See one missing? Add the keyword `react-component` to your `package.json` to get listed on React Components, and [submit a link to React Rocks](https://docs.google.com/forms/d/1TpnwJmLcmmGj-_TI68upu_bKBViYeiKx7Aj9uKmV6wY/viewform).\n\n## Waiter, There's a CSS In My JavaScript\n\nThe internet is abuzz with talk of styling React components using JavaScript instead of CSS. Christopher Chedeau ([vjeux](https://github.com/vjeux)) talks about some of the [fundamental style management challenges](https://speakerdeck.com/vjeux/react-css-in-js) we grapple with, at Facebook scale. A number of implementations of JavaScript centric style management solutions have appeared in the wild, including the React-focused [react-style](https://github.com/js-next/react-style).\n\n## Test Isolation\n\nYahoo! shows us how they make use of `iframe` elements to [unit test React components in isolation](http://yahooeng.tumblr.com/post/102274727496/to-testutil-or-not-to-testutil).\n\n## You've Got The Hang of Flux, Now Let's Flow\n\nFacebook Open Source released [Flow](https://code.facebook.com/posts/1505962329687926/flow-a-new-static-type-checker-for-javascript/) this month – a static type checker for JavaScript. Naturally, Flow supports JSX, and you can use it to [type check React applications](https://code.facebook.com/posts/1505962329687926/flow-a-new-static-type-checker-for-javascript/#compatibility). There's never been a better reason to start making use of `propTypes` in your component specifications!\n\n## Countdown to React.js Conf 2014\n\nWe're counting down the days until [React.js Conf](http://conf.reactjs.com) at Facebook's headquarters in Menlo Park, California, on January 28th & 29th, 2015. Thank you, to everyone who responded to the Call for Presenters. Mark the dates; tickets go on sale in three waves: at noon PST on November 28th, December 5th, and December 12th, 2014.\n\n## React Meetups Around the World\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p>React JS meetup having pretty good turn up rate today <a href=\"https://twitter.com/hashtag/londonreact?src=hash\">#londonreact</a> <a href=\"http://t.co/c360dlVVAe\">pic.twitter.com/c360dlVVAe</a></p>&mdash; Alexander Savin (@karismafilms) <a href=\"https://twitter.com/karismafilms/status/535152580377468928\">November 19, 2014</a></blockquote>\n\n<div class=\"skinny-row\">\n  <div class=\"skinny-col\">\n    <blockquote class=\"twitter-tweet\" lang=\"en\"><p>60+ attendees at the second React.js Utah meetup. <a href=\"https://twitter.com/ryanflorence\">@ryanflorence</a> doing a great job, even without the internet. <a href=\"http://t.co/fV59AQTOyu\">pic.twitter.com/fV59AQTOyu</a></p>&mdash; ReactJS Utah (@reactjsutah) <a href=\"https://twitter.com/reactjsutah/status/527259410020573184\">October 29, 2014</a></blockquote>\n  </div>\n  <div class=\"skinny-col\">\n    <blockquote class=\"twitter-tweet\" lang=\"en\"><p><a href=\"https://twitter.com/hashtag/ReactJS?src=hash\">#ReactJS</a> meetup at <a href=\"https://twitter.com/Yahoo\">@Yahoo</a> ! History of <a href=\"https://twitter.com/yahoomail\">@yahoomail</a> and why we chose react and NodeJS <a href=\"http://t.co/Nm4EdTv45G\">pic.twitter.com/Nm4EdTv45G</a></p>&mdash; rmsguhan (@rmsguhan) <a href=\"https://twitter.com/rmsguhan/status/515370950427029504\">September 26, 2014</a></blockquote>\n  </div>\n</div>\n\n<div class=\"skinny-row\">\n  <div class=\"skinny-col\">\n    <blockquote class=\"twitter-tweet\" data-cards=\"hidden\" lang=\"en\"><p>The very first ReactJS meetup in NYC tonight, I&#39;ll be speaking about the big ideas behind Om <a href=\"http://t.co/dvPrFqE9eP\">http://t.co/dvPrFqE9eP</a></p>&mdash; David Nolen (@swannodette) <a href=\"https://twitter.com/swannodette/status/532190993463128064\">November 11, 2014</a></blockquote>\n  </div>\n  <div class=\"skinny-col\">\n    <blockquote class=\"twitter-tweet\" lang=\"en\"><p>If anyone in Sydney is curious about <a href=\"https://twitter.com/reactjs\">@reactjs</a>, I&#39;m presenting at <a href=\"https://twitter.com/sydjs\">@sydjs</a> tonight on how to use it and why it is the future. <a href=\"https://twitter.com/hashtag/javascript?src=hash\">#javascript</a></p>&mdash; Jed Watson (@JedWatson) <a href=\"https://twitter.com/JedWatson/status/534943557568565248\">November 19, 2014</a></blockquote>\n  </div>\n</div>\n",
        "type": "MarkdownRemark",
        "contentDigest": "905dc6e81bee010f8b5bd21d1cf4e907",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Community Round-up #24",
        "layout": "post",
        "author": [
          "steveluscher"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2014-11-25-community-roundup-24.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2014-11-25-community-roundup-24.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2014-11-25-community-roundup-24.md",
      "fields": {
        "date": "2014-11-24T16:00:00.000Z",
        "slug": "/blog/2014/11/25/community-roundup-24.html",
        "path": "blog/2014-11-25-community-roundup-24.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-02-24-streamlining-react-elements.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-02-24-streamlining-react-elements.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-02-24-streamlining-react-elements.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Streamlining React Elements\"\nauthor: [sebmarkbage]\ndate: 2015-02-24 11:00\n---\n\nReact v0.13 is right around the corner and so we wanted to discuss some upcoming changes to ReactElement. In particular, we added several warnings to some esoteric use cases of ReactElement. There are no runtime behavior changes for ReactElement - we're adding these warnings in the hope that we can change some behavior in v0.14 if the changes are valuable to the community.\n\nIf you use React in an idiomatic way, chances are, you’ll never see any of these warnings. In that case, you can skip this blog post. You can just enjoy the benefits! These changes will unlock simplified semantics, better error messages, stack traces and compiler optimizations!\n\n## Immutable Props\n\nIn React 0.12, the props object was mutable. It allows you to do patterns like this:\n\n```js\nvar element = <Foo bar={false} />;\nif (shouldUseFoo) {\n  element.props.foo = 10;\n  element.props.bar = true;\n}\n```\n\nThe problem is that we don’t have a convenient way to tell when you’re done mutating.\n\n### Problem: Mutating Props You Don’t Own\n\nIf you mutate something, you destroy the original value. Therefore, there is nothing to diff against. Imagine something like this:\n\n```js\nvar element = this.props.child;\nelement.props.count = this.state.count;\nreturn element;\n```\n\nYou take a ReactElement through `props.child` and mutate its property before rendering it. If this component's state updates, this render function won't actually get a new ReactElement in `props.child`. It will be the same one. You're mutating the same props.\n\nYou could imagine that this would work. However, this disables the ability for any component to use `shouldComponentUpdate`. It looks like the component never changed because the previous value is always the same as the next one. Since the DOM layer does diffing, this pattern doesn't even work in this case. The change will never propagate down to the DOM except the first time.\n\nAdditionally, if this element is reused in other places or used to switch back and forth between two modes, then you have all kinds of weird race conditions.\n\nIt has always been broken to mutate the props of something passed into you. The problem is that we can’t warn you about this special case if you accidentally do this.\n\n### Problem: Too Late Validation\n\nIn React 0.12, we do PropType validation very deep inside React during mounting. This means that by the time you get an error, the debugger stack is long gone. This makes it difficult to find complex issues during debugging. We have to do this since it is fairly common for extra props to be added between the call to React.createElement and the mount time. So the type is incomplete until then.\n\nThe static analysis in Flow is also impaired by this. There is no convenient place in the code where Flow can determine that the props are finalized.\n\n### Solution: Immutable Props\n\nTherefore, we would like to be able to freeze the element.props object so that it is immediately immutable at the JSX callsite (or createElement). In React 0.13 we will start warning you if you mutate `element.props` after this point.\n\nYou can generally refactor these pattern to simply use two different JSX calls:\n\n```js\nif (shouldUseFoo) {\n  return <Foo foo={10} bar={true} />;\n} else {\n  return <Foo bar={false} />;\n}\n```\n\nHowever, if you really need to dynamically build up your props you can just use a temporary object and spread it into JSX:\n\n```js\nvar props = { bar: false };\nif (shouldUseFoo) {\n  props.foo = 10;\n  props.bar = true;\n}\nreturn <Foo {...props} />;\n```\n\nIt is still OK to do deep mutations of objects. E.g:\n\n```js\nreturn <Foo nestedObject={this.state.myModel} />;\n```\n\nIn this case it's still ok to mutate the myModel object in state. We recommend that you use fully immutable models. E.g. by using immutable-js. However, we realize that mutable models are still convenient in many cases. Therefore we're only considering shallow freezing the props object that belongs to the ReactElement itself. Not nested objects.\n\n### Solution: Early PropType Warnings\n\nWe will also start warning you for PropTypes at the JSX or createElement callsite. This will help debugging as you’ll have the stack trace right there. Similarly, Flow also validates PropTypes at this callsite.\n\nNote: There are valid patterns that clones a ReactElement and adds additional props to it. In that case these additional props needs to be optional.\n\n```js\nvar element1 = <Foo />; // extra prop is optional\nvar element2 = React.addons.cloneWithProps(element1, { extra: 'prop' });\n```\n\n## Owner\n\nIn React each child has both a \"parent\" and an “owner”. The owner is the component that created a ReactElement. I.e. the render method which contains the JSX or createElement callsite.\n\n```js\nclass Foo {\n  render() {\n    return <div><span /></div>;\n  }\n}\n```\n\nIn this example, the owner of the `span` is `Foo` but the parent is the `div`.\n\nThere is also an undocumented feature called \"context\" that also relies on the concept of an “owner” to pass hidden props down the tree.\n\n### Problem: The Semantics are Opaque and Confusing\n\nThe problem is that these are hidden artifacts attached to the ReactElement. In fact, you probably didn’t even know about it. It silently changes semantics. Take this for example:\n\n```js\nvar foo = <input className=\"foo\" />;\nclass Component {\n  render() {\n    return bar ? <input className=\"bar\" /> : foo;\n  }\n}\n```\n\nThese two inputs have different owners, therefore React will not keep its state when the conditional switches. There is nothing in the code to indicate that. Similarly, if you use `React.addons.cloneWithProps`, the owner changes.\n\n### Problem: Timing Matters\n\nThe owner is tracked by the currently executing stack. This means that the semantics of a ReactElement varies depending on when it is executed. Take this example:\n\n```js\nclass A {\n  render() {\n    return <B renderer={text => <span>{text}</span>} />;\n  }\n}\nclass B {\n  render() {\n    return this.props.renderer('foo');\n  }\n}\n```\n\nThe owner of the `span` is actually `B`, not `A` because of the timing of the callback. This all adds complexity and suffers from similar problems as mutation.\n\n### Problem: It Couples JSX to React\n\nHave you wondered why JSX depends on React? Couldn’t the transpiler have that built-in to its runtime? The reason you need to have `React.createElement` in scope is because we depend on internal state of React to capture the current \"owner\". Without this, you wouldn’t need to have React in scope.\n\n### Solution: Make Context Parent-Based Instead of Owner-Based\n\nThe first thing we’re doing is warning you if you’re using the \"owner\" feature in a way that relies on it propagating through owners. Instead, we’re planning on propagating it through parents to its children. In almost all cases, this shouldn’t matter. In fact, parent-based contexts is simply a superset.\n\n### Solution: Remove the Semantic Implications of Owner\n\nIt turns out that there are very few cases where owners are actually important part of state-semantics. As a precaution, we’ll warn you if it turns out that the owner is important to determine state. In almost every case this shouldn’t matter. Unless you’re doing some weird optimizations, you shouldn’t see this warning.\n\n### Pending: Change the refs Semantics\n\nRefs are still based on \"owner\". We haven’t fully solved this special case just yet.\n\nIn 0.13 we introduced a new callback-refs API that doesn’t suffer from these problems but we’ll keep on a nice declarative alternative to the current semantics for refs. As always, we won’t deprecate something until we’re sure that you’ll have a nice upgrade path.\n\n## Keyed Objects as Maps\n\nIn React 0.12, and earlier, you could use keyed objects to provide an external key to an element or a set. This pattern isn’t actually widely used. It shouldn’t be an issue for most of you.\n\n```js\n<div>{ {a: <span />, b: <span />} }</div>\n```\n\n### Problem: Relies on Enumeration Order\n\nThe problem with this pattern is that it relies on enumeration order of objects. This is technically unspecified, even though implementations now agree to use insertion order. Except for the special case when numeric keys are used.\n\n### Problem: Using Objects as Maps is Bad\n\nIt is generally accepted that using objects as maps screw up type systems, VM optimizations, compilers etc. It is much better to use a dedicated data structure like ES6 Maps.\n\nMore importantly, this can have important security implications. For example this has a potential security problem:\n\n```js\nvar children = {};\nitems.forEach(item => children[item.title] = <span />);\nreturn <div>{children}</div>;\n```\n\nImagine if `item.title === '__proto__'` for example.\n\n### Problem: Can’t be Differentiated from Arbitrary Objects\n\nSince these objects can have any keys with almost any value, we can’t differentiate them from a mistake. If you put some random object, we will try our best to traverse it and render it, instead of failing with a helpful warning. In fact, this is one of the few places where you can accidentally get an infinite loop in React.\n\nTo differentiate ReactElements from one of these objects, we have to tag them with `_isReactElement`. This is another issue preventing us from inlining ReactElements as simple object literals.\n\n### Solution: Just use an Array and key={…}\n\nMost of the time you can just use an array with keyed ReactElements.\n\n```js\nvar children = items.map(item => <span key={item.title} />);\n<div>{children}</div>\n```\n\n### Solution: React.addons.createFragment\n\nHowever, this is not always possible if you’re trying to add a prefix key to an unknown set (e.g. this.props.children). It is also not always the easiest upgrade path. Therefore, we are adding a helper to `React.addons` called `createFragment()`. This accepts a keyed object and returns an opaque type.\n\n```js\n<div>{React.addons.createFragment({ a: <div />, b: this.props.children })}</div>\n```\n\nThe exact signature of this kind of fragment will be determined later. It will likely be some kind of immutable sequence.\n\nNote: This will still not be valid as the direct return value of `render()`. Unfortunately, they still need to be wrapped in a `<div />` or some other element.\n\n## Compiler Optimizations: Unlocked!\n\nThese changes also unlock several possible compiler optimizations for static content in React 0.14. These optimizations were previously only available to template-based frameworks. They will now also be possible for React code! Both for JSX and `React.createElement/Factory`*!\n\nSee these GitHub Issues for a deep dive into compiler optimizations:\n\n- [Reuse Constant Value Types](https://github.com/facebook/react/issues/3226)\n- [Tagging ReactElements](https://github.com/facebook/react/issues/3227)\n- [Inline ReactElements](https://github.com/facebook/react/issues/3228)\n\n\\* If you use the recommended pattern of explicit React.createFactory calls on the consumer side - since they are easily statically analyzed.\n\n## Rationale\n\nI thought that these changes were particularly important because the mere existence of these patterns means that even components that DON’T use these patterns have to pay the price. There are other problematic patterns such as mutating state, but they’re at least localized to a component subtree so they don’t harm the ecosystem.\n\nAs always, we’d love to hear your feedback and if you have any trouble upgrading, please let us know.\n",
        "type": "MarkdownRemark",
        "contentDigest": "a2a710e2224085957ec47b52db2befb9",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Streamlining React Elements",
        "author": [
          "sebmarkbage"
        ],
        "date": "2015-02-24 11:00",
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-02-24-streamlining-react-elements.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-02-24-streamlining-react-elements.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-02-24-streamlining-react-elements.md",
      "fields": {
        "date": "2015-02-23T16:00:00.000Z",
        "slug": "/blog/2015/02/24/streamlining-react-elements.html",
        "path": "blog/2015-02-24-streamlining-react-elements.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-03-19-building-the-facebook-news-feed-with-relay.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-03-19-building-the-facebook-news-feed-with-relay.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-03-19-building-the-facebook-news-feed-with-relay.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Building The Facebook News Feed With Relay\"\nauthor: [josephsavona]\n---\n\nAt React.js Conf in January we gave a preview of Relay, a new framework for building data-driven applications in React. In this post, we'll describe the process of creating a Relay application. This post assumes some familiarity with the concepts of Relay and GraphQL, so if you haven't already we recommend reading [our introductory blog post](/blog/2015/02/20/introducing-relay-and-graphql.html) or watching [the conference talk](https://www.youtube-nocookie.com/v/9sc8Pyc51uU).\n\nWe're working hard to prepare GraphQL and Relay for public release. In the meantime, we'll continue to provide information about what you can expect.\n\n<br/>\n\n## The Relay Architecture\n\nThe diagram below shows the main parts of the Relay architecture on the client and the server:\n\n<img src=\"../images/blog/relay-components/relay-architecture.png\" alt=\"Relay Architecture\" width=\"650\" />\n\nThe main pieces are as follows:\n\n- Relay Components: React components annotated with declarative data descriptions.\n- Actions: Descriptions of how data should change in response to user actions.\n- Relay Store: A client-side data store that is fully managed by the framework.\n- Server: An HTTP server with GraphQL endpoints (one for reads, one for writes) that respond to GraphQL queries.\n\nThis post will focus on **Relay components** that describe encapsulated units of UI and their data dependencies. These components form the majority of a Relay application.\n\n<br/>\n\n## A Relay Application\n\nTo see how components work and can be composed, let's implement a basic version of the Facebook News Feed in Relay. Our application will have two components: a `<NewsFeed>` that renders a list of `<Story>` items. We'll introduce the plain React version of each component first and then convert it to a Relay component. The goal is something like the following:\n\n<img src=\"../images/blog/relay-components/sample-newsfeed.png\" alt=\"Sample News Feed\" width=\"360\" />\n\n<br/>\n\n## The `<Story>` Begins\n\nThe first step is a React `<Story>` component that accepts a `story` prop with the story's text and author information. Note that all examples uses ES6 syntax and elide presentation details to focus on the pattern of data access.\n\n```javascript\n// Story.react.js\nexport default class Story extends React.Component {\n  render() {\n    var story = this.props.story;\n    return (\n      <View>\n        <Image uri={story.author.profilePicture.uri} />\n        <Text>{story.author.name}</Text>\n        <Text>{story.text}</Text>\n      </View>\n    );\n  }\n}\n```\n\n<br/>\n\n## What's the `<Story>`?\n\nRelay automates the process of fetching data for components by wrapping existing React components in Relay containers (themselves React components):\n\n```javascript\n// Story.react.js\nclass Story extends React.Component { ... }\n\nexport default Relay.createContainer(Story, {\n  fragments: {\n    story: /* TODO */\n  }\n});\n```\n\nBefore adding the GraphQL fragment, let's look at the component hierarchy this creates:\n\n<img src=\"../images/blog/relay-components/relay-containers.png\" width=\"397\" alt=\"React Container Data Flow\" />\n\nMost props will be passed through from the container to the original component. However, Relay will return the query results for a prop whenever a fragment is defined. In this case we'll add a GraphQL fragment for `story`:\n\n```javascript\n// Story.react.js\nclass Story extends React.Component { ... }\n\nexport default Relay.createContainer(Story, {\n  fragments: {\n    story: () => Relay.QL`\n      fragment on Story {\n        author {\n          name\n          profilePicture {\n            uri\n          }\n        }\n        text\n      }\n    `,\n  },\n});\n```\n\nQueries use ES6 template literals tagged with the `Relay.QL` function. Similar to how JSX transpiles to plain JavaScript objects and function calls, these template literals transpile to plain objects that describe fragments. Note that the fragment's structure closely matches the object structure that we expected in `<Story>`'s render function.\n\n<br/>\n\n## `<Story>`s on Demand\n\nWe can render a Relay component by providing Relay with the component (`<Story>`) and the ID of the data (a story ID). Given this information, Relay will first fetch the results of the query and then `render()` the component. The value of `props.story` will be a plain JavaScript object such as the following:\n\n```javascript\n{\n  author: {\n    name: \"Greg\",\n    profilePicture: {\n      uri: \"https://…\"\n    }\n  },\n  text: \"The first Relay blog post is up…\"\n}\n```\n\nRelay guarantees that all data required to render a component will be available before it is rendered. This means that `<Story>` does not need to handle a loading state; the `story` is *guaranteed* to be available before `render()` is called. We have found that this invariant simplifies our application code *and* improves the user experience. Of course, Relay also has options to delay the fetching of some parts of our queries.\n\nThe diagram below shows how Relay containers make data available to our React components:\n\n<img src=\"../images/blog/relay-components/relay-containers-data-flow.png\" width=\"650\" alt=\"Relay Container Data Flow\" />\n\n<br/>\n\n## `<NewsFeed>` Worthy\n\nNow that the `<Story>` is over we can continue with the `<NewsFeed>` component. Again, we'll start with a React version:\n\n```javascript\n// NewsFeed.react.js\nclass NewsFeed extends React.Component {\n  render() {\n    var stories = this.props.viewer.stories; // `viewer` is the active user\n    return (\n      <View>\n        {stories.map(story => <Story story={story} />)}\n        <Button onClick={() => this.loadMore()}>Load More</Button>\n      </View>\n    );\n  }\n\n  loadMore() {\n    // TODO: fetch more stories\n  }\n}\n\nmodule.exports = NewsFeed;\n```\n\n<br/>\n\n## All the News Fit to be Relayed\n\n`<NewsFeed>` has two new requirements: it composes `<Story>` and requests more data at runtime.\n\nJust as React views can be nested, Relay components can compose query fragments from child components. Composition in GraphQL uses ES6 template literal substitution: `${Component.getFragment('prop')}`. Pagination can be accomplished with a variable, specified with `$variable` (as in `stories(first: $count)`):\n\n```javascript\n// NewsFeed.react.js\nclass NewsFeed extends React.Component { ... }\n\nexport default Relay.createContainer(NewsFeed, {\n  initialVariables: {\n    count: 3                                /* default to 3 stories */\n  },\n  fragments: {\n    viewer: () => Relay.QL`\n      fragment on Viewer {\n        stories(first: $count) {            /* fetch viewer's stories */\n          edges {                           /* traverse the graph */\n            node {\n              ${Story.getFragment('story')} /* compose child fragment */\n            }\n          }\n        }\n      }\n    `,\n  },\n});\n```\n\nWhenever `<NewsFeed>` is rendered, Relay will recursively expand all the composed fragments and fetch the queries in a single trip to the server. In this case, the `text` and `author` data will be fetched for each of the 3 story nodes.\n\nQuery variables are available to components as `props.relay.variables` and can be modified with `props.relay.setVariables(nextVariables)`. We can use these to implement pagination:\n\n```javascript\n// NewsFeed.react.js\nclass NewsFeed extends React.Component {\n  render() { ... }\n\n  loadMore() {\n    // read current params\n    var count = this.props.relay.variables.count;\n    // update params\n    this.props.relay.setVariables({\n      count: count + 5,\n    });\n  }\n}\n```\n\nNow when `loadMore()` is called, Relay will send a GraphQL request for the additional five stories. When these stories are fetched, the component will re-render with the new stories available in `props.viewer.stories` and the updated count reflected in `props.relay.variables.count`.\n\n<br/>\n\n## In Conclusion\n\nThese two components form a solid core for our application. With the use of Relay containers and GraphQL queries, we've enabled the following benefits:\n\n- Automatic and efficient pre-fetching of data for an entire view hierarchy in a single network request.\n- Trivial pagination with automatic optimizations to fetch only the additional items.\n- View composition and reusability, so that `<Story>` can be used on its own or within `<NewsFeed>`, without any changes to either component.\n- Automatic subscriptions, so that components will re-render if their data changes. Unaffected components will not re-render unnecessarily.\n- Exactly *zero* lines of imperative data fetching logic. Relay takes full advantage of React's declarative component model.\n\nBut Relay has many more tricks up its sleeve. For example, it's built from the start to handle reads and writes, allowing for features like optimistic client updates with transactional rollback. Relay can also defer fetching select parts of queries, and it uses a local data store to avoid fetching the same data twice. These are all powerful features that we hope to explore in future posts.\n",
        "type": "MarkdownRemark",
        "contentDigest": "4a671413b3c92a7d037b734b0cb77120",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Building The Facebook News Feed With Relay",
        "author": [
          "josephsavona"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-03-19-building-the-facebook-news-feed-with-relay.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-03-19-building-the-facebook-news-feed-with-relay.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-03-19-building-the-facebook-news-feed-with-relay.md",
      "fields": {
        "date": "2015-03-18T16:00:00.000Z",
        "slug": "/blog/2015/03/19/building-the-facebook-news-feed-with-relay.html",
        "path": "blog/2015-03-19-building-the-facebook-news-feed-with-relay.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-05-01-graphql-introduction.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-05-01-graphql-introduction.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-05-01-graphql-introduction.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"GraphQL Introduction\"\nauthor: [schrockn]\n---\n\nAt the React.js conference in late January 2015, we revealed our next major technology in the React family: [Relay](http://facebook.github.io/react/blog/2015/02/20/introducing-relay-and-graphql.html). \n\nRelay is a new way of structuring client applications that co-locates data-fetching requirements and React components. Instead of placing data fetching logic in some other part of the client application – or embedding this logic in a custom endpoint on the server – we instead co-locate a *declarative* data-fetching specification alongside the React component. The language of this declarative specification is GraphQL.\n\nGraphQL was not invented to enable Relay. In fact, GraphQL predates Relay by nearly three years. It was invented during the move from Facebook's HTML5-driven mobile applications to purely native applications. It is a query language for graph data that powers the lion's share of interactions in the Facebook Android and iOS applications. Any user of the native iOS or Android app in the last two years has used an app powered by GraphQL.\n\nWe plan to open-source a reference implementation of a GraphQL server and publish a language specification in the coming months. Our goal is to evolve GraphQL to adapt to a wide range of backends, so that projects and companies can use this technology to access their own data. We believe that this is a compelling way to structure servers and to provide powerful abstractions, frameworks and tools – including, but not exclusively, Relay – for product developers.\n\n\n## What is GraphQL?\n\nA GraphQL query is a string interpreted by a server that returns data in a specified format. Here is an example query: \n\n```js\n{\n  user(id: 3500401) {\n    id,\n    name,\n    isViewerFriend,\n    profilePicture(size: 50)  {\n      uri,\n      width,\n      height\n    }\n  }\n}\n```\n\n(Note: this syntax is slightly different from previous GraphQL examples. We've recently been making improvements to the language.)\n\nAnd here is the response to that query.\n\n```json\n{\n  \"user\" : {\n    \"id\": 3500401,\n    \"name\": \"Jing Chen\",\n    \"isViewerFriend\": true,\n    \"profilePicture\": {\n      \"uri\": \"http://someurl.cdn/pic.jpg\",\n      \"width\": 50,\n      \"height\": 50\n    }\n  }\n}\n```\n\nWe will dig into the syntax and semantics of GraphQL in a later post, but even a simple example shows many of its design principles:\n\n* **Hierarchical:** Most product development today involves the creation and manipulation of view hierarchies. To achieve congruence with the structure of these applications, a GraphQL query itself is a hierarchical set of fields. The query is shaped just like the data it returns. It is a natural way for product engineers to describe data requirements.\n* **Product-centric:** GraphQL is unapologetically driven by the requirements of views and the front-end engineers that write them. We start with their way of thinking and requirements and build the language and runtime necessary to enable that.\n* **Client-specified queries:** In GraphQL, the specification for queries are encoded in the *client* rather than the *server*. These queries are specified at field-level granularity. In the vast majority of applications written without GraphQL, the server determines the data returned in its various scripted endpoints. A GraphQL query, on the other hand, returns exactly what a client asks for and no more.\n* **Backwards Compatible:** In a world of deployed native mobile applications with no forced upgrades, backwards compatibility is a challenge. Facebook, for example, releases apps on a two week fixed cycle and pledges to maintain those apps for *at least* two years. This means there are at a *minimum* 52 versions of our clients per platform querying our servers at any given time. Client-specified queries simplifies managing our backwards compatibility guarantees.\n* **Structured, Arbitrary Code:** Query languages with field-level granularity have typically queried storage engines directly, such as SQL. GraphQL instead imposes a structure onto a server, and exposes fields that are backed by *arbitrary code*. This allows for both server-side flexibility and a uniform, powerful API across the entire surface area of an application.\n* **Application-Layer Protocol:** GraphQL is an application-layer protocol and does not require a particular transport. It is a string that is parsed and interpreted by a server.\n* **Strongly-typed:** GraphQL is strongly-typed. Given a query, tooling can ensure that the query is both syntactically correct and valid within the GraphQL type system before execution, i.e. at development time, and the server can make certain guarantees about the shape and nature of the response. This makes it easier to build high quality client tools.\n* **Introspective:** GraphQL is introspective. Clients and tools can query the type system using the GraphQL syntax itself. This is a powerful platform for building tools and client software, such as automatic parsing of incoming data into strongly-typed interfaces. It is especially useful in statically typed languages such as Swift, Objective-C and Java, as it obviates the need for repetitive and error-prone code to shuffle raw, untyped JSON into strongly-typed business objects.\n\n\n## Why invent something new?\n\nObviously GraphQL is not the first system to manage client-server interactions. In today's world there are two dominant architectural styles for client-server interaction: REST and *ad hoc* endpoints. \n\n\n### REST\n\nREST, an acronym for Representational State Transfer, is an architectural style rather than a formal protocol. There is actually much debate about what exactly REST is and is not. We wish to avoid such debates. We are interested in the typical attributes of systems that *self-identify* as REST, rather than systems which are formally REST.\n\nObjects in a typical REST system are addressable by URI and interacted with using verbs in the HTTP protocol. An HTTP GET to a particular URI fetches an object and returns a server-specified set of fields. An HTTP PUT edits an object; an HTTP DELETE deletes an object; and so on.\n\nWe believe there are a number of weakness in typical REST systems, ones that are particularly problematic in mobile applications:\n\n* Fetching complicated object graphs require multiple round trips between the client and server to render single views. For mobile applications operating in variable network conditions, these multiple roundtrips are highly undesirable.\n* Invariably fields and additional data are added to REST endpoints as the system requirements change. However, old clients also receive this additional data as well, because the data fetching specification is encoded on the server rather than the client. As result, these payloads tend to grow over time for all clients. When this becomes a problem for a system, one solution is to overlay a versioning system onto the REST endpoints. Versioning also complicates a server, and results in code duplication, spaghetti code, or a sophisticated, hand-rolled infrastructure to manage it. Another solution to limit over-fetching is to provide multiple views – such as “compact” vs “full” – of the same REST endpoint, however this coarse granularity often does not offer adequate flexibility.\n* REST endpoints are usually weakly-typed and lack machine-readable metadata. While there is much debate about the merits of strong- versus weak-typing in distributed systems, we believe in strong typing because of the correctness guarantees and tooling opportunities it provides. Developers deal with systems that lack this metadata by inspecting frequently out-of-date documentation and then writing code against the documentation.\n* Many of these attributes are linked to the fact that “REST is intended for long-lived network-based applications that span multiple organizations” [according to its inventor](http://roy.gbiv.com/untangled/2008/rest-apis-must-be-hypertext-driven). This is not a requirement for APIs that serve a client app built within the same organization.\n\nNearly all externally facing REST APIs we know of trend or end up in these non-ideal states, as well as nearly all *internal* REST APIs. The consequences of opaqueness and over-fetching are more severe in internal APIs since their velocity of change and level of usage is almost always higher.\n\nBecause of multiple round-trips and over-fetching, applications built in the REST style inevitably end up building *ad hoc* endpoints that are superficially in the REST style. These actually couple the data to a particular view which explicitly violates one of REST's major goals. Most REST systems of any complexity end up as a continuum of endpoints that span from “traditional” REST to *ad hoc* endpoints.\n\n\n### Ad Hoc Endpoints\n\nMany applications have no formalized client-server contract. Product developers access server capabilities through *ad hoc* endpoints and write custom code to fetch the data they need. Servers define procedures, and they return data. This approach has the virtue of simplicity, but can often become untenable as systems age.\n\n* These systems typically define a custom endpoint per view. For systems with a wide surface area this can quickly grow into a maintenance nightmare of orphaned endpoints, inconsistent tooling, and massive server code duplication. Disciplined engineering organizations can mitigate these issues with great engineering practices, high quality abstractions, and custom tooling. However, given our experience we believe that custom endpoints tend to lead to entropic server codebases.\n* Much like REST, the payloads of custom endpoints grow monotonically (even with mitigation from versioning systems) as the server evolves. Deployed clients cannot break, and, with rapid release cycles and backwards compatibility guarantees, distributed applications will have large numbers of extant versions. Under these constraints it is difficult to remove data from a custom endpoint.\n* Custom endpoints tend to – for a client developer – create a clunky, multi-language, multi-environment development process. No matter if the data has been accessed before in a different view, they are required to first change the custom endpoint, then deploy that code to a server accessible from a mobile device, and only then change the client to utilize that data. In GraphQL  – unless the data in the view is completely new to the entire system  – a product developer adds a field to a GraphQL query and the work on the client continues unabated.\n* Much like REST, most systems with custom endpoints do not have a formalized type system, which eliminates the possibility for the tools and guarantees that introspective type systems can provide. Some custom-endpoint-driven systems do use a strongly typed serialization scheme, such as Protocol Buffers, Thrift, or XML. Those do allow for direct parsing of responses into typed classes and eliminating boilerplate shuffling from JSON into handwritten classes. These systems are as not as expressive and flexible as GraphQL, and the other downsides of *ad hoc* endpoints remain.\n\nWe believe that GraphQL represents a novel way of structuring the client-server contract. Servers publish a type system specific to their application, and GraphQL provides a unified language to query data within the constraints of that type system. That language allows product developers to express data requirements in a form natural to them: a declarative and hierarchal one.\n\nThis is a liberating platform for product developers. With GraphQL, no more contending with *ad hoc* endpoints or object retrieval with multiple roundtrips to access server data; instead an elegant, hierarchical, declarative query dispatched to a single endpoint. No more  frequent jumps between client and server development environments to do experimentation or to change or create views of existing data; instead experiments are done and new views built within a native, client development environment exclusively. No more shuffling unstructured data from *ad hoc* endpoints into business objects; instead a powerful, introspective type system that serves as a platform for tool building.\n\nProduct developers are free to focus on their client software and requirements while rarely leaving their development environment; they can more confidently support shipped clients as a system evolves; and they are using a protocol designed to operate well within the constraints of mobile applications. Product developers can query for exactly what they want, in the way they think about it, across their entire application's data model. \n\n\n## What's next?\n\nOver the coming months, we will share more technical details about GraphQL, including additional language features, tools that support it, and how it is built and used at Facebook. These posts will culminate in a formal specification of GraphQL to guide implementors across various languages and platforms. We also plan on releasing a reference implementation in the summer, in order to provide a basis for custom deployments and a platform for experimentation. We're incredibly excited to share this system and work with the open source community to improve it.\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "3749f7bfb357ccb74db4e4bc84c58ca0",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "GraphQL Introduction",
        "author": [
          "schrockn"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-05-01-graphql-introduction.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-05-01-graphql-introduction.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-05-01-graphql-introduction.md",
      "fields": {
        "date": "2015-04-30T16:00:00.000Z",
        "slug": "/blog/2015/05/01/graphql-introduction.html",
        "path": "blog/2015-05-01-graphql-introduction.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-09-10-react-v0.14-rc1.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-09-10-react-v0.14-rc1.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-09-10-react-v0.14-rc1.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v0.14 Release Candidate\"\nauthor: [sophiebits]\n---\n\nWe’re happy to announce our first release candidate for React 0.14! We gave you a [sneak peek in July](/blog/2015/07/03/react-v0.14-beta-1.html) at the upcoming changes but we’ve now stabilized the release more and we’d love for you to try it out before we release the final version.\n\nLet us know if you run into any problems by filing issues on our [GitHub repo](https://github.com/facebook/react).\n\n## Installation\n\nWe recommend using React from `npm` and using a tool like browserify or webpack to build your code into a single package:\n\n* `npm install --save react@0.14.0-rc1`\n* `npm install --save react-dom@0.14.0-rc1`\n\nRemember that by default, React runs extra checks and provides helpful warnings in development mode. When deploying your app, set the `NODE_ENV` environment variable to `production` to use the production build of React which does not include the development warnings and runs significantly faster.\n\nIf you can’t use `npm` yet, we also provide pre-built browser builds for your convenience:\n\n* **React**  \n  Dev build with warnings: <https://fb.me/react-0.14.0-rc1.js>  \n  Minified build for production: <https://fb.me/react-0.14.0-rc1.min.js>  \n* **React with Add-Ons**  \n  Dev build with warnings: <https://fb.me/react-with-addons-0.14.0-rc1.js>  \n  Minified build for production: <https://fb.me/react-with-addons-0.14.0-rc1.min.js>  \n* **React DOM** (include React in the page before React DOM)  \n  Dev build with warnings: <https://fb.me/react-dom-0.14.0-rc1.js>  \n  Minified build for production: <https://fb.me/react-dom-0.14.0-rc1.min.js>  \n\nThese builds are also available in the `react` package on bower.\n\n## Changelog\n\n### Major changes\n\n- #### Two Packages: React and React DOM\n\n    As we look at packages like [react-native](https://github.com/facebook/react-native), [react-art](https://github.com/reactjs/react-art), [react-canvas](https://github.com/Flipboard/react-canvas), and [react-three](https://github.com/Izzimach/react-three), it has become clear that the beauty and essence of React has nothing to do with browsers or the DOM.\n\n    To make this more clear and to make it easier to build more environments that React can render to, we’re splitting the main `react` package into two: `react` and `react-dom`. **This paves the way to writing components that can be shared between the web version of React and React Native.** We don’t expect all the code in an app to be shared, but we want to be able to share the components that do behave the same across platforms.\n\n    The `react` package contains `React.createElement`, `.createClass`, `.Component`, `.PropTypes`, `.Children`, and the other helpers related to elements and component classes. We think of these as the [_isomorphic_](http://nerds.airbnb.com/isomorphic-javascript-future-web-apps/) or [_universal_](https://medium.com/@mjackson/universal-javascript-4761051b7ae9) helpers that you need to build components.\n\n    The `react-dom` package has `ReactDOM.render`, `.unmountComponentAtNode`, and `.findDOMNode`. In `react-dom/server` we have server-side rendering support with `ReactDOMServer.renderToString` and `.renderToStaticMarkup`.\n\n    ```js\n    var React = require('react');\n    var ReactDOM = require('react-dom');\n\n    var MyComponent = React.createClass({\n      render: function() {\n        return <div>Hello World</div>;\n      }\n    });\n\n    ReactDOM.render(<MyComponent />, node);\n    ```\n\n    We’ve published the [automated codemod script](https://github.com/reactjs/react-codemod/blob/master/README.md) we used at Facebook to help you with this transition.\n\n    The add-ons have moved to separate packages as well: `react-addons-clone-with-props`, `react-addons-create-fragment`, `react-addons-css-transition-group`, `react-addons-linked-state-mixin`, `react-addons-perf`, `react-addons-pure-render-mixin`, `react-addons-shallow-compare`, `react-addons-test-utils`, `react-addons-transition-group`, and `react-addons-update`, plus `ReactDOM.unstable_batchedUpdates` in `react-dom`.\n\n    For now, please use matching versions of `react` and `react-dom` in your apps to avoid versioning problems.\n\n- #### DOM node refs\n\n    The other big change we’re making in this release is exposing refs to DOM components as the DOM node itself. That means: we looked at what you can do with a `ref` to a React DOM component and realized that the only useful thing you can do with it is call `this.refs.giraffe.getDOMNode()` to get the underlying DOM node. In this release, `this.refs.giraffe` _is_ the actual DOM node. **Note that refs to custom (user-defined) components work exactly as before; only the built-in DOM components are affected by this change.**\n\n    ```js\n    var Zoo = React.createClass({\n      render: function() {\n        return <div>Giraffe name: <input ref=\"giraffe\" /></div>;\n      },\n      showName: function() {\n        // Previously: var input = this.refs.giraffe.getDOMNode();\n        var input = this.refs.giraffe;\n        alert(input.value);\n      }\n    });\n    ```\n\n    This change also applies to the return result of `ReactDOM.render` when passing a DOM node as the top component. As with refs, this change does not affect custom components. With these changes, we’re deprecating `.getDOMNode()` and replacing it with `ReactDOM.findDOMNode` (see below).\n\n- #### Stateless function components\n\n    In idiomatic React code, most of the components you write will be stateless, simply composing other components. We’re introducing a new, simpler syntax for these components where you can take `props` as an argument and return the element you want to render:\n\n    ```js\n    // Using an ES2015 (ES6) arrow function:\n    var Aquarium = (props) => {\n      var fish = getFish(props.species);\n      return <Tank>{fish}</Tank>;\n    };\n\n    // Or with destructuring and an implicit return, simply:\n    var Aquarium = ({species}) => (\n      <Tank>\n        {getFish(species)}\n      </Tank>\n    );\n\n    // Then use: <Aquarium species=\"rainbowfish\" />\n    ```\n\n    This pattern is designed to encourage the creation of these simple components that should comprise large portions of your apps. In the future, we’ll also be able to make performance optimizations specific to these components by avoiding unnecessary checks and memory allocations.\n\n- #### Deprecation of react-tools\n\n    The `react-tools` package and `JSXTransformer.js` browser file [have been deprecated](/blog/2015/06/12/deprecating-jstransform-and-react-tools.html). You can continue using version `0.13.3` of both, but we no longer support them and recommend migrating to [Babel](http://babeljs.io/), which has built-in support for React and JSX.\n\n- #### Compiler optimizations\n\n    React now supports two compiler optimizations that can be enabled in Babel 5.8.23 and newer. Both of these transforms **should be enabled only in production** (e.g., just before minifying your code) because although they improve runtime performance, they make warning messages more cryptic and skip important checks that happen in development mode, including propTypes.\n\n    **Inlining React elements:** The `optimisation.react.inlineElements` transform converts JSX elements to object literals like `{type: 'div', props: ...}` instead of calls to `React.createElement`.\n\n    **Constant hoisting for React elements:** The `optimisation.react.constantElements` transform hoists element creation to the top level for subtrees that are fully static, which reduces calls to `React.createElement` and the resulting allocations. More importantly, it tells React that the subtree hasn’t changed so React can completely skip it when reconciling.\n\n\n### Breaking changes\n\nAs always, we have a few breaking changes in this release. Whenever we make large changes, we warn for at least one release so you have time to update your code. The Facebook codebase has over 15,000 React components, so on the React team, we always try to minimize the pain of breaking changes.\n\nThese three breaking changes had a warning in 0.13, so you shouldn’t have to do anything if your code is already free of warnings:\n\n- The `props` object is now frozen, so mutating props after creating a component element is no longer supported. In most cases, [`React.cloneElement`](/docs/top-level-api.html#react.cloneelement) should be used instead. This change makes your components easier to reason about and enables the compiler optimizations mentioned above.\n- Plain objects are no longer supported as React children; arrays should be used instead. You can use the [`createFragment`](/docs/create-fragment.html) helper to migrate, which now returns an array.\n- Add-Ons: `classSet` has been removed. Use [classnames](https://github.com/JedWatson/classnames) instead.\n\nAnd these two changes did not warn in 0.13 but should be easy to find and clean up:\n\n- `React.initializeTouchEvents` is no longer necessary and has been removed completely. Touch events now work automatically.\n- Add-Ons: Due to the DOM node refs change mentioned above, `TestUtils.findAllInRenderedTree` and related helpers are no longer able to take a DOM component, only a custom component.\n\n### New deprecations, introduced with a warning\n\n- Due to the DOM node refs change mentioned above, `this.getDOMNode()` is now deprecated and `ReactDOM.findDOMNode(this)` can be used instead. Note that in most cases, calling `findDOMNode` is now unnecessary – see the example above in the “DOM node refs” section.\n\n    If you have a large codebase, you can use our [automated codemod script](https://github.com/facebook/react/blob/master/packages/react-codemod/README.md) to change your code automatically.\n\n- `setProps` and `replaceProps` are now deprecated. Instead, call ReactDOM.render again at the top level with the new props.\n- ES6 component classes must now extend `React.Component` in order to enable stateless function components. The [ES3 module pattern](/blog/2015/01/27/react-v0.13.0-beta-1.html#other-languages) will continue to work.\n- Reusing and mutating a `style` object between renders has been deprecated. This mirrors our change to freeze the `props` object.\n- Add-Ons: `cloneWithProps` is now deprecated. Use [`React.cloneElement`](/docs/top-level-api.html#react.cloneelement) instead (unlike `cloneWithProps`, `cloneElement` does not merge `className` or `style` automatically; you can merge them manually if needed).\n- Add-Ons: To improve reliability, `CSSTransitionGroup` will no longer listen to transition events. Instead, you should specify transition durations manually using props such as `transitionEnterTimeout={500}`.\n\n### Notable enhancements\n\n- Added `React.Children.toArray` which takes a nested children object and returns a flat array with keys assigned to each child. This helper makes it easier to manipulate collections of children in your `render` methods, especially if you want to reorder or slice `this.props.children` before passing it down. In addition, `React.Children.map` now returns plain arrays too.\n- React uses `console.error` instead of `console.warn` for warnings so that browsers show a full stack trace in the console. (Our warnings appear when you use patterns that will break in future releases and for code that is likely to behave unexpectedly, so we do consider our warnings to be “must-fix” errors.)\n- Previously, including untrusted objects as React children [could result in an XSS security vulnerability](http://danlec.com/blog/xss-via-a-spoofed-react-element). This problem should be avoided by properly validating input at the application layer and by never passing untrusted objects around your application code. As an additional layer of protection, [React now tags elements](https://github.com/facebook/react/pull/4832) with a specific [ES2015 (ES6) `Symbol`] (http://www.2ality.com/2014/12/es6-symbols.html) in browsers that support it, in order to ensure that React never considers untrusted JSON to be a valid element. If this extra security protection is important to you, you should add a `Symbol` polyfill for older browsers, such as the one included by [Babel’s polyfill](http://babeljs.io/docs/usage/polyfill/).\n- When possible, React DOM now generates XHTML-compatible markup.\n- React DOM now supports these standard HTML attributes: `capture`, `challenge`, `inputMode`, `is`, `keyParams`, `keyType`, `minLength`, `summary`, `wrap`. It also now supports these non-standard attributes: `autoSave`, `results`, `security`.\n- React DOM now supports these SVG attributes, which render into namespaced attributes: `xlinkActuate`, `xlinkArcrole`, `xlinkHref`, `xlinkRole`, `xlinkShow`, `xlinkTitle`, `xlinkType`, `xmlBase`, `xmlLang`, `xmlSpace`.\n- The `image` SVG tag is now supported by React DOM.\n- In React DOM, arbitrary attributes are supported on custom elements (those with a hyphen in the tag name or an `is=\"...\"` attribute).\n- React DOM now supports these media events on `audio` and `video` tags: `onAbort`, `onCanPlay`, `onCanPlayThrough`, `onDurationChange`, `onEmptied`, `onEncrypted`, `onEnded`, `onError`, `onLoadedData`, `onLoadedMetadata`, `onLoadStart`, `onPause`, `onPlay`, `onPlaying`, `onProgress`, `onRateChange`, `onSeeked`, `onSeeking`, `onStalled`, `onSuspend`, `onTimeUpdate`, `onVolumeChange`, `onWaiting`.\n- Many small performance improvements have been made.\n- Many warnings show more context than before.\n- Add-Ons: A [`shallowCompare`](https://github.com/facebook/react/pull/3355) add-on has been added as a migration path for `PureRenderMixin` in ES6 classes.\n- Add-Ons: `CSSTransitionGroup` can now use [custom class names](https://github.com/facebook/react/blob/48942b85/docs/docs/10.1-animation.md#custom-classes) instead of appending `-enter-active` or similar to the transition name.\n\n### New helpful warnings\n\n- React DOM now warns you when nesting HTML elements invalidly, which helps you avoid surprising errors during updates.\n- Passing `document.body` directly as the container to `ReactDOM.render` now gives a warning as doing so can cause problems with browser extensions that modify the DOM.\n- Using multiple instances of React together is not supported, so we now warn when we detect this case to help you avoid running into the resulting problems.\n\n### Notable bug fixes\n\n- Click events are handled by React DOM more reliably in mobile browsers, particularly in Mobile Safari.\n- SVG elements are created with the correct namespace in more cases.\n- React DOM now renders `<option>` elements with multiple text children properly and renders `<select>` elements on the server with the correct option selected.\n- When two separate copies of React add nodes to the same document (including when a browser extension uses React), React DOM tries harder not to throw exceptions during event handling.\n- Using non-lowercase HTML tag names in React DOM (e.g., `React.createElement('DIV')`) no longer causes problems, though we continue to recommend lowercase for consistency with the JSX tag name convention (lowercase names refer to built-in components, capitalized names refer to custom components).\n- React DOM understands that these CSS properties are unitless and does not append “px” to their values: `animationIterationCount`, `boxOrdinalGroup`, `flexOrder`, `tabSize`, `stopOpacity`.\n- Add-Ons: When using the test utils, `Simulate.mouseEnter` and `Simulate.mouseLeave` now work.\n- Add-Ons: ReactTransitionGroup now correctly handles multiple nodes being removed simultaneously.\n",
        "type": "MarkdownRemark",
        "contentDigest": "66ba71703d70b3b1fd8c22e5cd6c1b3c",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.14 Release Candidate",
        "author": [
          "sophiebits"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-09-10-react-v0.14-rc1.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-09-10-react-v0.14-rc1.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-09-10-react-v0.14-rc1.md",
      "fields": {
        "date": "2015-09-09T16:00:00.000Z",
        "slug": "/blog/2015/09/10/react-v0.14-rc1.html",
        "path": "blog/2015-09-10-react-v0.14-rc1.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-09-14-community-roundup-27.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-09-14-community-roundup-27.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-09-14-community-roundup-27.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Community Round-up #27 – Relay Edition\"\nlayout: post\nauthor: [steveluscher]\n---\n\nIn the weeks following the [open-source release](/blog/2015/08/11/relay-technical-preview.html) of the Relay technical preview, the community has been abuzz with activity. We are honored to have been able to enjoy a steady stream of ideas and contributions from such a talented group of individuals. Let's take a look at some of the things we've achieved, together!\n\n## Teaching servers to speak GraphQL\n\nEvery great Relay app starts by finding a GraphQL server to talk to. The community has spent the past few weeks teaching GraphQL to a few backend systems.\n\nBryan Goldstein ([brysgo](https://github.com/brysgo)) has built a tool to help you define a GraphQL schema that wraps a set of [Bookshelf.JS](http://bookshelfjs.org/) models. Check out [graphql-bookshelf](https://github.com/brysgo/graphql-bookshelf).\n\nRisingStack ([risingstack](https://github.com/risingstack)) created a GraphQL ORM called [graffiti](https://github.com/RisingStack/graffiti) that you can plug into [mongoose](http://mongoosejs.com/) and serve using Express, Hapi, or Koa.\n\nDavid Mongeau-Petitpas ([dmongeau](https://github.com/dmongeau)) is working on a way to vend your Laravel models through a GraphQL endpoint, [laravel-graphql](https://github.com/Folkloreatelier/laravel-graphql).\n\nGerald Monaco ([devknoll](https://github.com/devknoll)) created [graphql-schema](https://github.com/devknoll/graphql-schema) to allow the creation of JavaScript GraphQL schemas using a fluent/chainable interface.\n\nJason Dusek ([solidsnack](https://github.com/solidsnack)) dove deep into PostgreSQL to teach it how to respond to GraphQL query strings as though they were SQL queries. Check out [GraphpostgresQL](https://github.com/solidsnack/GraphpostgresQL).\n\nEspen Hovlandsdal ([rexxars](https://github.com/rexxars)) built a [sql-to-graphql](https://github.com/vaffel/sql-to-graphql) tool that can perform introspection on the tables of a MySQL or PostgreSQL database, and produce a queryable HTTP GraphQL endpoint out of it.\n\nMick Hansen ([mickhansen](https://github.com/mickhansen)) offers a set of [schema-building helpers](https://github.com/mickhansen/graphql-sequelize) for use with the [Sequelize ORM](http://docs.sequelizejs.com/en/latest/) for MySQL, PostgreSQL, SQLite, and MSSQL.\n\n## GraphQL beyond JavaScript\n\nRobert Mosolgo ([rmosolgo](https://github.com/rmosolgo)) brought the full set of schema-building and query execution tools to Ruby, in the form of [graphql-ruby](https://github.com/rmosolgo/graphql-ruby) and [graphql-relay-ruby](https://github.com/rmosolgo/graphql-relay-ruby). Check out his [Rails-based demo](https://github.com/rmosolgo/graphql-ruby-demo).\n\nAndreas Marek ([andimarek](https://github.com/andimarek)) has brewed up a Java implementation of GraphQL, [graphql-java](https://github.com/andimarek/graphql-java).\n\n[vladar](https://github.com/vladar) is hard at work on a PHP port of the GraphQL reference implementation, [graphql-php](https://github.com/webonyx/graphql-php).\n\nTaeho Kim ([dittos](https://github.com/dittos)) is bringing GraphQL to Python, with [graphql-py](https://github.com/dittos/graphql-py).\n\nOleg Ilyenko ([OlegIlyenko](https://github.com/OlegIlyenko)) made a beautiful and [delicious-looking website](http://sangria-graphql.org/) for a Scala implementation of GraphQL, [sangria](https://github.com/sangria-graphql/sangria).\n\nJoe McBride ([joemcbride](https://github.com/joemcbride)) has an up-and-running example of GraphQL for .NET, [graphql-dotnet](https://github.com/joemcbride/graphql-dotnet).\n\n## Show me, don't tell me\n\nInteract with this [visual tour of Relay's architecture](http://sgwilym.github.io/relay-visual-learners/) by Sam Gwilym ([sgwilym](https://github.com/sgwilym)).\n\n<a href=\"http://sgwilym.github.io/relay-visual-learners/\">\n  <img src=\"../images/blog/relay-visual-architecture-tour.png\" alt=\"Relay for visual learners\" style=\"max-width:100%\">\n</a>\n\nSam has already launched a product that leverages Relay's data-fetching, optimistic responses, pagination, and mutations &ndash; all atop a Ruby GraphQL server: [new.comique.co](http://new.comique.co/)\n\n## Skeletons in the closet\n\nJoseph Rollins ([fortruce](https://github.com/fortruce)) created a hot-reloading, auto schema-regenerating, [Relay skeleton](https://github.com/fortruce/relay-skeleton) that you can use to get up and running quickly.\n\nMichael Hart ([mhart](https://mhart)) built a [simple-relay-starter](https://github.com/mhart/simple-relay-starter) kit using Browserify.\n\n## Routing around\n\nJimmy Jia ([taion](@taion)) and Gerald Monaco ([devknoll](@devknoll)) have been helping lost URLs find their way to Relay apps through their work on [react-router-relay](relay-tools/react-router-relay). Check out Christoph Nakazawa's ([cpojer](@cpojer)) [blog post](medium.com/@cpojer/relay-and-routing-36b5439bad9) on the topic. Jimmy completed the Relay TodoMVC example with routing, which you can check out at [taion/relay-todomvc](taion/relay-todomvc).\n\nChen Hung-Tu ([transedward](https://github.com/transedward)) built a chat app atop the above mentioned router, with threaded conversations and pagination. Check it out at [transedward/relay-chat](https://github.com/transedward/relay-chat).\n\n## In your words\n\n<div class=\"skinny-row\">\n  <div class=\"skinny-col\">\n    <blockquote class=\"twitter-tweet\" lang=\"en\"><p lang=\"en\" dir=\"ltr\">Relay making good on its promise to be the &quot;React.js of data fetching&quot;. Rebuilding small app with it. Spectacular how fast/easy building is.</p>&mdash; Kyle Mathews (@kylemathews) <a href=\"https://twitter.com/kylemathews/status/640289107122368513\">September 5, 2015</a></blockquote>\n\n    <blockquote class=\"twitter-tweet\" lang=\"en\"><p lang=\"en\" dir=\"ltr\"><a href=\"https://twitter.com/hashtag/RainySundayHackathon?src=hash\">#RainySundayHackathon</a> exploring <a href=\"https://twitter.com/hashtag/GraphQL?src=hash\">#GraphQL</a> <a href=\"https://twitter.com/hashtag/RelayJS?src=hash\">#RelayJS</a> <a href=\"http://t.co/Mm3HlqMejJ\">pic.twitter.com/Mm3HlqMejJ</a></p>&mdash; Bastian Kistner (@passionkind) <a href=\"https://twitter.com/passionkind/status/632846601447411712\">August 16, 2015</a></blockquote>\n\n    <blockquote class=\"twitter-tweet\" lang=\"en\"><p lang=\"en\" dir=\"ltr\">Friday. Time to GraphQL a MySQL database. <a href=\"https://twitter.com/hashtag/graphql?src=hash\">#graphql</a> <a href=\"https://twitter.com/hashtag/relayjs?src=hash\">#relayjs</a> <a href=\"https://twitter.com/hashtag/reactjs?src=hash\">#reactjs</a> <a href=\"https://twitter.com/hashtag/webapp?src=hash\">#webapp</a></p>&mdash; xador (@xadorfr) <a href=\"https://twitter.com/xadorfr/status/632108552765751296\">August 14, 2015</a></blockquote>\n  </div>\n  <div class=\"skinny-col\">\n    <blockquote class=\"twitter-tweet\" lang=\"en\"><p lang=\"en\" dir=\"ltr\">Started a new <a href=\"https://twitter.com/hashtag/RelayJS?src=hash\">#RelayJS</a> and <a href=\"https://twitter.com/hashtag/GraphQL?src=hash\">#GraphQL</a> meet up group! <a href=\"http://t.co/Vt6Cv4nNH4\">http://t.co/Vt6Cv4nNH4</a> If you&#39;re in the Bay Area, I&#39;d love to have you join! <a href=\"https://twitter.com/hashtag/ReactJS?src=hash\">#ReactJS</a></p>&mdash; Gerald Monaco (@devknoll) <a href=\"https://twitter.com/devknoll/status/636723716123000832\">August 27, 2015</a></blockquote>\n\n    <blockquote class=\"twitter-tweet\" lang=\"en\"><p lang=\"en\" dir=\"ltr\">.<a href=\"https://twitter.com/reactjs\">@reactjs</a> <a href=\"https://twitter.com/laneykuenzel\">@laneykuenzel</a> <a href=\"https://twitter.com/BhuwanKhattar\">@BhuwanKhattar</a> these <a href=\"https://twitter.com/hashtag/relayjs?src=hash\">#relayjs</a> mutations. they&#39;re mind-blowingly awesome. they make so much damn sense. thank you!</p>&mdash; Jimmy Jia (@jimmy_jia) <a href=\"https://twitter.com/jimmy_jia/status/634204563709526016\">August 20, 2015</a></blockquote>\n\n    <blockquote class=\"twitter-tweet\" lang=\"en\"><p lang=\"en\" dir=\"ltr\">REST is dead, long live REST! <a href=\"https://twitter.com/hashtag/graphql?src=hash\">#graphql</a> <a href=\"https://twitter.com/hashtag/relayjs?src=hash\">#relayjs</a></p>&mdash; Syrus Akbary (@syrusakbary) <a href=\"https://twitter.com/syrusakbary/status/631531666113060864\">August 12, 2015</a></blockquote>\n  </div>\n</div>\n",
        "type": "MarkdownRemark",
        "contentDigest": "0002ce8367be2634ec3a6b4bedce6cd9",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Community Round-up #27 – Relay Edition",
        "layout": "post",
        "author": [
          "steveluscher"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-09-14-community-roundup-27.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-09-14-community-roundup-27.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-09-14-community-roundup-27.md",
      "fields": {
        "date": "2015-09-13T16:00:00.000Z",
        "slug": "/blog/2015/09/14/community-roundup-27.html",
        "path": "blog/2015-09-14-community-roundup-27.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-12-18-react-components-elements-and-instances.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-12-18-react-components-elements-and-instances.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-12-18-react-components-elements-and-instances.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React Components, Elements, and Instances\"\nauthor: [gaearon]\n---\n\nThe difference between **components, their instances, and elements** confuses many React beginners. Why are there three different terms to refer to something that is painted on screen?\n\n## Managing the Instances\n\nIf you’re new to React, you probably only worked with component classes and instances before. For example, you may declare a `Button` *component* by creating a class. When the app is running, you may have several *instances* of this component on screen, each with its own properties and local state. This is the traditional object-oriented UI programming. Why introduce *elements*?\n\nIn this traditional UI model, it is up to you to take care of creating and destroying child component instances. If a `Form` component wants to render a `Button` component, it needs to create its instance, and manually keep it up to date with any new information.\n\n```js\nclass Form extends TraditionalObjectOrientedView {\n  render() {\n    // Read some data passed to the view\n    const { isSubmitted, buttonText } = this.attrs;\n\n    if (!isSubmitted && !this.button) {\n      // Form is not yet submitted. Create the button!\n      this.button = new Button({\n        children: buttonText,\n        color: 'blue'\n      });\n      this.el.appendChild(this.button.el);\n    }\n\n    if (this.button) {\n      // The button is visible. Update its text!\n      this.button.attrs.children = buttonText;\n      this.button.render();\n    }\n\n    if (isSubmitted && this.button) {\n      // Form was submitted. Destroy the button!\n      this.el.removeChild(this.button.el);\n      this.button.destroy();\n    }\n\n    if (isSubmitted && !this.message) {\n      // Form was submitted. Show the success message!\n      this.message = new Message({ text: 'Success!' });\n      this.el.appendChild(this.message.el);\n    }\n  }\n}\n```\n\nThis is pseudocode, but it is more or less what you end up with when you write composite UI code that behaves consistently in an object-oriented way using a library like Backbone.\n\nEach component instance has to keep references to its DOM node and to the instances of the children components, and create, update, and destroy them when the time is right. The lines of code grow as the square of the number of possible states of the component, and the parents have direct access to their children component instances, making it hard to decouple them in the future.\n\nSo how is React different?\n\n## Elements Describe the Tree\n\nIn React, this is where the *elements* come to rescue. **An element is a plain object *describing* a component instance or DOM node and its desired properties.** It contains only information about the component type (for example, a `Button`), its properties (for example, its `color`), and any child elements inside it.\n\nAn element is not an actual instance. Rather, it is a way to tell React what you *want* to see on the screen. You can’t call any methods on the element. It’s just an immutable description object with two fields: `type: (string | ReactClass)` and `props: Object`[^1].\n\n### DOM Elements\n\nWhen an element’s `type` is a string, it represents a DOM node with that tag name, and `props` correspond to its attributes. This is what React will render. For example:\n\n```js\n{\n  type: 'button',\n  props: {\n    className: 'button button-blue',\n    children: {\n      type: 'b',\n      props: {\n        children: 'OK!'\n      }\n    }\n  }\n}\n```\n\nThis element is just a way to represent the following HTML as a plain object:\n\n```html\n<button class='button button-blue'>\n  <b>\n    OK!\n  </b>\n</button>\n```\n\nNote how elements can be nested. By convention, when we want to create an element tree, we specify one or more child elements as the `children` prop of their containing element.\n\nWhat’s important is that both child and parent elements are *just descriptions and not the actual instances*. They don’t refer to anything on the screen when you create them. You can create them and throw them away, and it won’t matter much.\n\nReact elements are easy to traverse, don’t need to be parsed, and of course they are much lighter than the actual DOM elements—they’re just objects!\n\n### Component Elements\n\nHowever, the `type` of an element can also be a function or a class corresponding to a React component:\n\n```js\n{\n  type: Button,\n  props: {\n    color: 'blue',\n    children: 'OK!'\n  }\n}\n```\n\nThis is the core idea of React.\n\n**An element describing a component is also an element, just like an element describing the DOM node. They can be nested and mixed with each other.**\n\nThis feature lets you define a `DangerButton` component as a `Button` with a specific `color` property value without worrying about whether `Button` renders to a DOM `<button>`, a `<div>`, or something else entirely:\n\n```js\nconst DangerButton = ({ children }) => ({\n  type: Button,\n  props: {\n    color: 'red',\n    children: children\n  }\n});\n```\n\nYou can mix and match DOM and component elements in a single element tree:\n\n```js\nconst DeleteAccount = () => ({\n  type: 'div',\n  props: {\n    children: [{\n      type: 'p',\n      props: {\n        children: 'Are you sure?'\n      }\n    }, {\n      type: DangerButton,\n      props: {\n        children: 'Yep'\n      }\n    }, {\n      type: Button,\n      props: {\n        color: 'blue',\n        children: 'Cancel'\n      }\n   }]\n});\n```\n\nOr, if you prefer JSX:\n\n```js\nconst DeleteAccount = () => (\n  <div>\n    <p>Are you sure?</p>\n    <DangerButton>Yep</DangerButton>\n    <Button color='blue'>Cancel</Button>\n  </div>\n);\n```\n\nThis mix and matching helps keep components decoupled from each other, as they can express both *is-a* and *has-a* relationships exclusively through composition:\n\n* `Button` is a DOM `<button>` with specific properties.\n* `DangerButton` is a `Button` with specific properties.\n* `DeleteAccount` contains a `Button` and a `DangerButton` inside a `<div>`.\n\n### Components Encapsulate Element Trees\n\nWhen React sees an element with a function or class `type`, it knows to ask *that* component what element it renders to, given the corresponding `props`.\n\nWhen it sees this element:\n\n```js\n{\n  type: Button,\n  props: {\n    color: 'blue',\n    children: 'OK!'\n  }\n}\n```\n\nReact will ask `Button` what it renders to. The `Button` will return this element:\n\n```js\n{\n  type: 'button',\n  props: {\n    className: 'button button-blue',\n    children: {\n      type: 'b',\n      props: {\n        children: 'OK!'\n      }\n    }\n  }\n}\n```\n\nReact will repeat this process until it knows the underlying DOM tag elements for every component on the page.\n\nReact is like a child asking “what is Y” for every “X is Y” you explain to them until they figure out every little thing in the world.\n\nRemember the `Form` example above? It can be written in React as follows[^1]:\n\n```js\nconst Form = ({ isSubmitted, buttonText }) => {\n  if (isSubmitted) {\n    // Form submitted! Return a message element.\n    return {\n      type: Message,\n      props: {\n        text: 'Success!'\n      }\n    };\n  }\n\n  // Form is still visible! Return a button element.\n  return {\n    type: Button,\n    props: {\n      children: buttonText,\n      color: 'blue'\n    }\n  };\n};\n```\n\nThat’s it! For a React component, props are the input, and an element tree is the output.\n\n**The returned element tree can contain both elements describing DOM nodes, and elements describing other components. This lets you compose independent parts of UI without relying on their internal DOM structure.**\n\nWe let React create, update, and destroy instances. We *describe* them with elements we return from the components, and React takes care of managing the instances.\n\n### Components Can Be Classes or Functions\n\nIn the code above, `Form`, `Message`, and `Button` are React components. They can either be written as functions, like above, or as classes descending from `React.Component`. These three ways to declare a component are mostly equivalent:\n\n```js\n// 1) As a function of props\nconst Button = ({ children, color }) => ({\n  type: 'button',\n  props: {\n    className: 'button button-' + color,\n    children: {\n      type: 'b',\n      props: {\n        children: children\n      }\n    }\n  }\n});\n\n// 2) Using the React.createClass() factory\nconst Button = React.createClass({\n  render() {\n    const { children, color } = this.props;\n    return {\n      type: 'button',\n      props: {\n        className: 'button button-' + color,\n        children: {\n          type: 'b',\n          props: {\n            children: children\n          }\n        }\n      }\n    };\n  }\n});\n\n// 3) As an ES6 class descending from React.Component\nclass Button extends React.Component {\n  render() {\n    const { children, color } = this.props;\n    return {\n      type: 'button',\n      props: {\n        className: 'button button-' + color,\n        children: {\n          type: 'b',\n          props: {\n            children: children\n          }\n        }\n      }\n    };\n  }\n}\n```\n\nWhen a component is defined as a class, it is a little bit more powerful than a functional component. It can store some local state and perform custom logic when the corresponding DOM node is created or destroyed.\n\nA functional component is less powerful but is simpler, and acts like a class component with just a single `render()` method. Unless you need features available only in a class, we encourage you to use functional components instead.\n\n**However, whether functions or classes, fundamentally they are all components to React. They take the props as their input, and return the elements as their output.**\n\n### Top-Down Reconciliation\n\nWhen you call:\n\n```js\nReactDOM.render({\n  type: Form,\n  props: {\n    isSubmitted: false,\n    buttonText: 'OK!'\n  }\n}, document.getElementById('root'));\n```\n\nReact will ask the `Form` component what element tree it returns, given those `props`. It will gradually “refine” its understanding of your component tree in terms of simpler primitives:\n\n```js\n// React: You told me this...\n{\n  type: Form,\n  props: {\n    isSubmitted: false,\n    buttonText: 'OK!'\n  }\n}\n\n// React: ...And Form told me this...\n{\n  type: Button,\n  props: {\n    children: 'OK!',\n    color: 'blue'\n  }\n}\n\n// React: ...and Button told me this! I guess I'm done.\n{\n  type: 'button',\n  props: {\n    className: 'button button-blue',\n    children: {\n      type: 'b',\n      props: {\n        children: 'OK!'\n      }\n    }\n  }\n}\n```\n\nThis is a part of the process that React calls [reconciliation](/docs/reconciliation.html) which starts when you call [`ReactDOM.render()`](/docs/top-level-api.html#reactdom.render) or [`setState()`](/docs/component-api.html#setstate). By the end of the reconciliation, React knows the result DOM tree, and a renderer like `react-dom` or `react-native` applies the minimal set of changes necessary to update the DOM nodes (or the platform-specific views in case of React Native).\n\nThis gradual refining process is also the reason React apps are easy to optimize. If some parts of your component tree become too large for React to visit efficiently, you can tell it to [skip this “refining” and diffing certain parts of the tree if the relevant props have not changed](/docs/advanced-performance.html). It is very fast to calculate whether the props have changed if they are immutable, so React and immutability work great together, and can provide great optimizations with the minimal effort.\n\nYou might have noticed that this blog entry talks a lot about components and elements, and not so much about the instances. The truth is, instances have much less importance in React than in most object-oriented UI frameworks.\n\nOnly components declared as classes have instances, and you never create them directly: React does that for you. While [mechanisms for a parent component instance to access a child component instance](/docs/more-about-refs.html) exist, they are only used for imperative actions (such as setting focus on a field), and should generally be avoided.\n\nReact takes care of creating an instance for every class component, so you can write components in an object-oriented way with methods and local state, but other than that, instances are not very important in the React’s programming model and are managed by React itself.\n\n## Summary\n\nAn *element* is a plain object describing what you want to appear on the screen in terms of the DOM nodes or other components. Elements can contain other elements in their props. Creating a React element is cheap. Once an element is created, it is never mutated.\n\nA *component* can be declared in several different ways. It can be a class with a `render()` method. Alternatively, in simple cases, it can be defined as a function. In either case, it takes props as an input, and returns an element tree as the output.\n\nWhen a component receives some props as an input, it is because a particular parent component returned an element with its `type` and these props. This is why people say that the props flows one way in React: from parents to children.\n\nAn *instance* is what you refer to as `this` in the component class you write. It is useful for [storing local state and reacting to the lifecycle events](/docs/component-api.html).\n\nFunctional components don’t have instances at all. Class components have instances, but you never need to create a component instance directly—React takes care of this.\n\nFinally, to create elements, use [`React.createElement()`](/docs/top-level-api.html#react.createelement), [JSX](/docs/jsx-in-depth.html), or an [element factory helper](/docs/top-level-api.html#react.createfactory). Don’t write elements as plain objects in the real code—just know that they are plain objects under the hood.\n\n## Further Reading\n\n* [Introducing React Elements](/blog/2014/10/14/introducing-react-elements.html)\n* [Streamlining React Elements](/blog/2015/02/24/streamlining-react-elements.html)\n* [React (Virtual) DOM Terminology](/docs/glossary.html)\n\n[^1]: All React elements require an additional ``$$typeof: Symbol.for('react.element')`` field declared on the object for [security reasons](https://github.com/facebook/react/pull/4832). It is omitted in the examples above. This blog entry uses inline objects for elements to give you an idea of what’s happening underneath but the code won’t run as is unless you either add `$$typeof` to the elements, or change the code to use `React.createElement()` or JSX.\n",
        "type": "MarkdownRemark",
        "contentDigest": "f73c5d05450d015ca47a90c462e55655",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React Components, Elements, and Instances",
        "author": [
          "gaearon"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-12-18-react-components-elements-and-instances.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-12-18-react-components-elements-and-instances.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-12-18-react-components-elements-and-instances.md",
      "fields": {
        "date": "2015-12-17T16:00:00.000Z",
        "slug": "/blog/2015/12/18/react-components-elements-and-instances.html",
        "path": "blog/2015-12-18-react-components-elements-and-instances.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2016-03-07-react-v15-rc1.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2016-03-07-react-v15-rc1.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2016-03-07-react-v15-rc1.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v15.0 Release Candidate\"\nauthor: [zpao]\n---\n\nSorry for the small delay in releasing this. As we said, we've been busy binge-watching House of Cards. That scene in the last episode where Francis and Claire Underwood <abbr title=\"You didn't think we would actually spoil anything did you?\">████████████████████████████████████</abbr>. WOW!\n\nBut now we're ready, so without further ado, we're shipping a release candidate for React v15 now. As a reminder, [we're switching to major versions](/blog/2016/02/19/new-versioning-scheme.html) to indicate that we have been using React in production for a long time. This 15.0 release follows our previous 0.14 version and we'll continue to follow semver like we've been doing since 2013. It's also worth noting that [we no longer actively support Internet Explorer 8](/blog/2016/01/12/discontinuing-ie8-support.html). We believe React will work in its current form there but we will not be prioritizing any efforts to fix new issues that only affect IE8.\n\nPlease try it out before we publish the final release. Let us know if you run into any problems by filing issues on our [GitHub repo](https://github.com/facebook/react).\n\n## Upgrade Guide\n\nLike always, we have a few breaking changes in this release. We know changes can be painful (the Facebook codebase has over 15,000 React components), so we always try to make changes gradually in order to minimize the pain.\n\nIf your code is free of warnings when running under React 0.14, upgrading should be easy. The bulk of changes in this release are actually behind the scenes, impacting the way that React interacts with the DOM. The other substantial change is that React now supports the full range of SVG elements and attributes. Beyond that we have a large number of incremental improvements and additional warnings aimed to aid developers. We've also laid some groundwork in the core to bring you some new capabilities in future releases.\n\nSee the changelog below for more details.\n\n## Installation\n\nWe recommend using React from `npm` and using a tool like browserify or webpack to build your code into a single bundle. To install the two packages:\n\n* `npm install --save react@15.0.0-rc.1 react-dom@15.0.0-rc.1`\n\nRemember that by default, React runs extra checks and provides helpful warnings in development mode. When deploying your app, set the `NODE_ENV` environment variable to `production` to use the production build of React which does not include the development warnings and runs significantly faster.\n\nIf you can’t use `npm` yet, we provide pre-built browser builds for your convenience, which are also available in the `react` package on bower.\n\n* **React**  \n  Dev build with warnings: <https://fb.me/react-15.0.0-rc.1.js>  \n  Minified build for production: <https://fb.me/react-15.0.0-rc.1.min.js>  \n* **React with Add-Ons**  \n  Dev build with warnings: <https://fb.me/react-with-addons-15.0.0-rc.1.js>  \n  Minified build for production: <https://fb.me/react-with-addons-15.0.0-rc.1.min.js>  \n* **React DOM** (include React in the page before React DOM)  \n  Dev build with warnings: <https://fb.me/react-dom-15.0.0-rc.1.js>  \n  Minified build for production: <https://fb.me/react-dom-15.0.0-rc.1.min.js>  \n\n## Changelog\n\n### Major changes\n\n- #### `document.createElement` is in and `data-reactid` is out\n\n    There were a number of large changes to our interactions with the DOM. One of the most noticeable changes is that we no longer set the `data-reactid` attribute for each DOM node. While this will make it much more difficult to know if a website is using React, the advantage is that the DOM is much more lightweight. This change was made possible by us switching to use `document.createElement` on initial render. Previously we would generate a large string of HTML and then set `node.innerHTML`. At the time, this was decided to be faster than using `document.createElement` for the majority of cases and browsers that we supported. Browsers have continued to improve and so overwhelmingly this is no longer true. By using `createElement` we can make other parts of React faster. The ids were used to map back from events to the original React component, meaning we had to do a bunch of work on every event, even though we cached this data heavily. As we've all experienced, caching and in particularly invalidating caches, can be error prone and we saw many hard to reproduce issues over the years as a result. Now we can build up a direct mapping at render time since we already have a handle on the node.\n\n- #### No more extra `<span>`s\n\n    Another big change with our DOM interaction is how we render text blocks. Previously you may have noticed that React rendered a lot of extra `<span>`s. Eg, in our most basic example on the home page we render `<div>Hello {this.props.name}</div>`, resulting in markup that contained 2 `<span>`s. Now we'll render plain text nodes interspersed with comment nodes that are used for demarcation. This gives us the same ability to update individual pieces of text, without creating extra nested nodes. Very few people have depended on the actual markup generated here so it's likely you are not impacted. However if you were targeting these `<span>`s in your CSS, you will need to adjust accordingly. You can always render them explicitly in your components.\n\n- #### Rendering `null` now uses comment nodes\n\n    We've also made use of these comment nodes to change what `null` renders to. Rendering to `null` was a feature we added in React v0.11 and was implemented by rendering `<noscript>` elements. By rendering to comment nodes now, there's a chance some of your CSS will be targeting the wrong thing, specifically if you are making use of `:nth-child` selectors. This, along with the other changes mentioned above, have always been considered implementation details of how React targets the DOM. We believe they are safe changes to make without going through a release with warnings detailing the subtle differences as they are details that should not be depended upon. Additionally, we have seen that these changes have improved React performance for many typical applications.\n\n- #### Improved SVG support\n\n    All SVG tags and attributes are now fully supported. (Uncommon SVG tags are not present on the `React.DOM` element helper, but JSX and `React.createElement` work on all tag names.) All SVG attributes match their original capitalization and hyphenation as defined in the specification (ex: `gradientTransform` must be camel-cased but `clip-path` should be hyphenated).\n\n\n\n### Breaking changes\n\nIt's worth calling out the DOM structure changes above again, in particular the change from `<span>`s. In the course of updating the Facebook codebase, we found a very small amount of code that was depending on the markup that React generated. Some of these cases were integration tests like WebDriver which were doing very specific XPath queries to target nodes. Others were simply tests using `ReactDOM.renderToStaticMarkup` and comparing markup. Again, there were a very small number of changes that had to be made, but we don't want anybody to be blindsided. We encourage everybody to run their test suites when upgrading and consider alternative approaches when possible. One approach that will work for some cases is to explicitly use `<span>`s in your `render` method.\n\nThese deprecations were introduced in v0.14 with a warning and the APIs are now removed.\n\n- Deprecated APIs removed from `React`, specifically `findDOMNode`, `render`, `renderToString`, `renderToStaticMarkup`, and `unmountComponentAtNode`.\n- Deprecated APIs removed from `React.addons`, specifically `batchedUpdates` and `cloneWithProps`.\n- Deprecated APIs removed from component instances, specifically `setProps`, `replaceProps`, and `getDOMNode`.\n\n### New deprecations, introduced with a warning\n\nEach of these changes will continue to work as before with a new warning until the release of React 16 so you can upgrade your code gradually.\n\n- `LinkedStateMixin` and `valueLink` are now deprecated due to very low popularity. If you need this, you can use a wrapper component that implements the same behavior: [react-linked-input](https://www.npmjs.com/package/react-linked-input).\n\n\n### New helpful warnings\n\n- If you use a minified copy of the _development_ build, React DOM kindly encourages you to use the faster production build instead.\n- React DOM: When specifying a unit-less CSS value as a string, a future version will not add `px` automatically. This version now warns in this case (ex: writing `style={{width: '300'}}`. (Unitless *number* values like `width: 300` are unchanged.)\n- Synthetic Events will now warn when setting and accessing properties (which will not get cleared appropriately), as well as warn on access after an event has been returned to the pool.\n- Elements will now warn when attempting to read `ref` and `key` from the props.\n- React DOM now attempts to warn for mistyped event handlers on DOM elements (ex: `onclick` which should be `onClick`)\n\n### Notable bug fixes\n\n- Fixed multiple small memory leaks\n- Input events are handled more reliably in IE 10 and IE 11; spurious events no longer fire when using a placeholder.\n- React DOM now supports the `cite` and `profile` HTML attributes.\n- React DOM now supports the `onAnimationStart`, `onAnimationEnd`, `onAnimationIteration`, `onTransitionEnd`, and `onInvalid` events. Support for `onLoad` has been added to `object` elements.\n- `Object.is` is used in a number of places to compare values, which leads to fewer false positives, especially involving `NaN`. In particular, this affects the `shallowCompare` add-on.\n- React DOM now defaults to using DOM attributes instead of properties, which fixes a few edge case bugs. Additionally the nullification of values (ex: `href={null}`) now results in the forceful removal, no longer trying to set to the default value used by browsers in the absence of a value.\n",
        "type": "MarkdownRemark",
        "contentDigest": "549464bef4a6928dba7f721f23023531",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v15.0 Release Candidate",
        "author": [
          "zpao"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2016-03-07-react-v15-rc1.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2016-03-07-react-v15-rc1.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2016-03-07-react-v15-rc1.md",
      "fields": {
        "date": "2016-03-06T16:00:00.000Z",
        "slug": "/blog/2016/03/07/react-v15-rc1.html",
        "path": "blog/2016-03-07-react-v15-rc1.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2016-07-22-create-apps-with-no-configuration.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2016-07-22-create-apps-with-no-configuration.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2016-07-22-create-apps-with-no-configuration.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Create Apps with No Configuration\"\nauthor: [gaearon]\n---\n\n**[Create React App](https://github.com/facebookincubator/create-react-app)** is a new officially supported way to create single-page React applications. It offers a modern build setup with no configuration.\n\n## Getting Started\n\n### Installation\n\nFirst, install the global package:\n\n```sh\nnpm install -g create-react-app\n```\n\nNode.js 4.x or higher is required.\n\n### Creating an App\n\nNow you can use it to create a new app:\n\n```sh\ncreate-react-app hello-world\n```\n\nThis will take a while as npm installs the transitive dependencies, but once it’s done, you will see a list of commands you can run in the created folder:\n\n![created folder](../images/blog/create-apps-with-no-configuration/created-folder.png)\n\n### Starting the Server\n\nRun `npm start` to launch the development server. The browser will open automatically with the created app’s URL.\n\n![compiled successfully](../images/blog/create-apps-with-no-configuration/compiled-successfully.png)\n\nCreate React App uses both webpack and Babel under the hood.\nThe console output is tuned to be minimal to help you focus on the problems:\n\n![failed to compile](../images/blog/create-apps-with-no-configuration/failed-to-compile.png)\n\nESLint is also integrated so lint warnings are displayed right in the console:\n\n![compiled with warnings](../images/blog/create-apps-with-no-configuration/compiled-with-warnings.png)\n\nWe only picked a small subset of lint rules that often lead to bugs.\n\n### Building for Production\n\nTo build an optimized bundle, run `npm run build`:\n\n![npm run build](../images/blog/create-apps-with-no-configuration/npm-run-build.png)\n\nIt is minified, correctly envified, and the assets include content hashes for caching.\n\n### One Dependency\n\nYour `package.json` contains only a single build dependency and a few scripts:\n\n```js\n{\n  \"name\": \"hello-world\",\n  \"dependencies\": {\n    \"react\": \"^15.2.1\",\n    \"react-dom\": \"^15.2.1\"\n  },\n  \"devDependencies\": {\n    \"react-scripts\": \"0.1.0\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"eject\": \"react-scripts eject\"\n  }\n}\n```\n\nWe take care of updating Babel, ESLint, and webpack to stable compatible versions so you can update a single dependency to get them all.\n\n### Zero Configuration\n\nIt is worth repeating: there are no configuration files or complicated folder structures. The tool only generates the files you need to build your app.\n\n```\nhello-world/\n  README.md\n  index.html\n  favicon.ico\n  node_modules/\n  package.json\n  src/\n    App.css\n    App.js\n    index.css\n    index.js\n    logo.svg\n```\n\nAll the build settings are preconfigured and can’t be changed. Some features, such as testing, are currently missing. This is an intentional limitation, and we recognize it might not work for everybody. And this brings us to the last point.\n\n### No Lock-In\n\nWe first saw this feature in [Enclave](https://github.com/eanplatter/enclave), and we loved it. We talked to [Ean](https://twitter.com/EanPlatter), and he was excited to collaborate with us. He already sent a few pull requests!\n\n“Ejecting” lets you leave the comfort of Create React App setup at any time. You run a single command, and all the build dependencies, configs, and scripts are moved right into your project. At this point you can customize everything you want, but effectively you are forking our configuration and going your own way. If you’re experienced with build tooling and prefer to fine-tune everything to your taste, this lets you use Create React App as a boilerplate generator.\n\nWe expect that at early stages, many people will “eject” for one reason or another, but as we learn from them, we will make the default setup more and more compelling while still providing no configuration.\n\n## Try It Out!\n\nYou can find [**Create React App**](https://github.com/facebookincubator/create-react-app) with additional instructions on GitHub.\n\nThis is an experiment, and only time will tell if it becomes a popular way of creating and building React apps, or fades into obscurity.\n\nWe welcome you to participate in this experiment. Help us build the React tooling that more people can use. We are always [open to feedback](https://github.com/facebookincubator/create-react-app/issues/11).\n\n## The Backstory\n\nReact was one of the first libraries to embrace transpiling JavaScript. As a result, even though you can [learn React without any tooling](https://github.com/facebook/react/blob/3fd582643ef3d222a00a0c756292c15b88f9f83c/examples/basic-jsx/index.html), the React ecosystem has commonly become associated with an overwhelming explosion of tools.\n\nEric Clemmons called this phenomenon the “[JavaScript Fatigue](https://medium.com/@ericclemmons/javascript-fatigue-48d4011b6fc4)”:\n\n>Ultimately, the problem is that by choosing React (and inherently JSX), you’ve unwittingly opted into a confusing nest of build tools, boilerplate, linters, & time-sinks to deal with before you ever get to create anything.\n\nIt is tempting to write code in ES2015 and JSX. It is sensible to use a bundler to keep the codebase modular, and a linter to catch the common mistakes. It is nice to have a development server with fast rebuilds, and a command to produce optimized bundles for production.\n\nCombining these tools requires some experience with each of them. Even so, it is far too easy to get dragged into fighting small incompatibilities, unsatisfied peerDependencies, and illegible configuration files.\n\nMany of those tools are plugin platforms and don’t directly acknowledge each other’s existence. They leave it up to the users to wire them together. The tools mature and change independently, and tutorials quickly get out of date.\n\n<blockquote class=\"twitter-tweet\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\">Marc was almost ready to implement his &quot;hello world&quot; React app <a href=\"https://t.co/ptdg4yteF1\">pic.twitter.com/ptdg4yteF1</a></p>&mdash; Thomas Fuchs (@thomasfuchs) <a href=\"https://twitter.com/thomasfuchs/status/708675139253174273\">March 12, 2016</a></blockquote>\n\nThis doesn’t mean those tools aren’t great. To many of us, they have become indispensable, and we very much appreciate the effort of their maintainers. They already have too much on their plates to worry about the state of the React ecosystem.\n\nStill, we knew it was frustrating to spend days setting up a project when all you wanted was to learn React. We wanted to fix this.\n\n## Could We Fix This?\n\nWe found ourselves in an unusual dilemma.\n\nSo far, [our strategy](/docs/design-principles.html#dogfooding) has been to only release the code that we are using at Facebook. This helped us ensure that every project is battle-tested and has clearly defined scope and priorities.\n\nHowever, tooling at Facebook is different than at many smaller companies. Linting, transpilation, and packaging are all handled by powerful remote development servers, and product engineers don’t need to configure them. While we wish we could give a dedicated server to every user of React, even Facebook cannot scale that well!\n\nThe React community is very important to us. We knew that we couldn’t fix the problem within the limits of our open source philosophy. This is why we decided to make an exception, and to ship something that we didn’t use ourselves, but that we thought would be useful to the community.\n\n## The Quest for a React <abbr title=\"Command Line Interface\">CLI</abbr>\n\nHaving just attended [EmberCamp](http://embercamp.com/) a week ago, I was excited about [Ember CLI](https://ember-cli.com/). Ember users have a great “getting started” experience thanks to a curated set of tools united under a single command-line interface. I have heard similar feedback about [Elm Reactor](https://github.com/elm-lang/elm-reactor).\n\nProviding a cohesive curated experience is valuable by itself, even if the user could in theory assemble those parts themselves. Kathy Sierra [explains it best](http://seriouspony.com/blog/2013/7/24/your-app-makes-me-fat):\n\n>If your UX asks the user to make *choices*, for example, even if those choices are both clear and useful, the act of *deciding* is a cognitive drain. And not just *while* they’re deciding... even *after* we choose, an unconscious cognitive background thread is slowly consuming/leaking resources, “Was *that* the right choice?”\n\nI never tried to write a command-line tool for React apps, and neither has [Christopher](https://twitter.com/vjeux). We were chatting on Messenger about this idea, and we decided to work together on it for a week as a hackathon project.\n\nWe knew that such projects traditionally haven’t been very successful in the React ecosystem. Christopher told me that multiple “React CLI” projects have started and failed at Facebook. The community tools with similar goals also exist, but so far they have not yet gained enough traction.\n\nStill, we decided it was worth another shot. Christopher and I created a very rough proof of concept on the weekend, and [Kevin](https://twitter.com/lacker) soon joined us.\n\nWe invited some of the community members to collaborate with us, and we have spent this week working on this tool. We hope that you’ll enjoy using it! [Let us know what you think.](https://github.com/facebookincubator/create-react-app/issues/11)\n\nWe would like to express our gratitude to [Max Stoiber](https://twitter.com/mxstbr), [Jonny Buchanan](https://twitter.com/jbscript), [Ean Platter](https://twitter.com/eanplatter), [Tyler McGinnis](https://github.com/tylermcginnis), [Kent C. Dodds](https://github.com/kentcdodds), and [Eric Clemmons](https://twitter.com/ericclemmons) for their early feedback, ideas, and contributions.\n",
        "type": "MarkdownRemark",
        "contentDigest": "df59c6d899258eb31b65915eff1da0fa",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Create Apps with No Configuration",
        "author": [
          "gaearon"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2016-07-22-create-apps-with-no-configuration.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2016-07-22-create-apps-with-no-configuration.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2016-07-22-create-apps-with-no-configuration.md",
      "fields": {
        "date": "2016-07-21T16:00:00.000Z",
        "slug": "/blog/2016/07/22/create-apps-with-no-configuration.html",
        "path": "blog/2016-07-22-create-apps-with-no-configuration.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2016-08-05-relay-state-of-the-state.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2016-08-05-relay-state-of-the-state.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2016-08-05-relay-state-of-the-state.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Relay: State of the State\"\nauthor: [josephsavona]\n---\n\nThis month marks a year since we released Relay and we'd like to share an update on the project and what's next.\n\n## A Year In Review\n\nA year after launch, we're incredibly excited to see an active community forming around Relay and that companies such as Twitter are [using Relay in production](https://fabric.io/blog/building-fabric-mission-control-with-graphql-and-relay):\n\n> For a project like mission control, GraphQL and Relay were a near-perfect solution, and the cost of building it any other way justified the investment.\n>\n> -- <cite>Fin Hopkins</cite>\n\nThis kind of positive feedback is really encouraging (I'll admit to re-reading that post far too many times), and great motivation for us to keep going and make Relay even better.\n\nWith the community's help we've already come a long way since the technical preview. Here are some highlights:\n\n- In March we added support for server-side rendering and for creating multiple instances of Relay on a single page. This was a coordinated effort over the course of several months by community members [Denis Nedelyaev](https://github.com/denvned) and [Gerald Monaco](https://github.com/devknoll) (now at Facebook).\n- Also in March we added support for React Native. While we use Relay and React Native together internally, they didn't quite work together in open-source out of the box. We owe a big thanks to [Adam Miskiewicz](https://github.com/skevy), [Tom Burns](https://github.com/boourns), [Gaëtan Renaudeau](https://github.com/gre), [David Aurelio](https://github.com/davidaurelio), [Martín Bigio](https://github.com/martinbigio), [Paul O’Shannessy](https://github.com/zpao), [Sophie Alpert](https://github.com/sophiebits), and many others who helped track down and resolve issues. Finally, thanks to [Steven Luscher](https://github.com/steveluscher) for coordinating this effort and building the first Relay/ReactNative example app.\n\nWe've also seen some great open-source projects spring up around Relay:\n\n- [Denis Nedelyaev](https://github.com/denvned) created [isomorphic-relay](https://github.com/denvned/isomorphic-relay/), a package that helps developers build server-rendered Relay apps where data is prepared on the server and then used to bootstrap the app on the client.\n- [Jimmy Jia](https://github.com/taion) created [react-router-relay](https://github.com/relay-tools/react-router-relay) to integrate Relay data-fetching into React Router.\n- [Pavel Chertorogov](https://github.com/nodkz) released [relay-network-layer](https://github.com/nodkz/react-relay-network-layer), which adds features such as batching query requests, middleware, authentication, logging, and more.\n\nThis is just a small sampling of the community's contributions. So far we've merged over 300 PRs - about 25% of our commits - from over 80 of you. These PRs have improved everything from the website and docs down the very core of the framework. We're humbled by these outstanding contributions and excited to keep working with each of you!\n\n# Retrospective & Roadmap\n\nEarlier this year we paused to reflect on the state of the project. What was working well? What could be improved? What features should we add, and what could we remove? A few themes emerged: performance on mobile, developer experience, and empowering the community.\n\n## Mobile Perf\n\nFirst, Relay was built to serve the needs of product developers at Facebook. In 2016, that means helping developers to build apps that work well on [mobile devices connecting on slower networks](https://newsroom.fb.com/news/2015/10/news-feed-fyi-building-for-all-connectivity/). For example, people in developing markets commonly use [2011 year-class phones](https://code.facebook.com/posts/307478339448736/year-class-a-classification-system-for-android/) and connect via [2G class networks](https://code.facebook.com/posts/952628711437136/classes-performance-and-network-segmentation-on-android/). These scenarios present their own challenges.\n\nTherefore, one of our primary goals this year is to optimize Relay for performance on low-end mobile devices *first*, knowing that this can translate to improved performance on high-end devices as well. In addition to standard approaches such as benchmarking, profiling, and optimizations, we're also working on big-picture changes.\n\nFor example, in today's Relay, here's what happens when an app is opened. First, React Native starts initializing the JavaScript context (loading and parsing your code and then running it). When this finishes, the app executes and Relay sees that you need data. It constructs and prints the query, uploads the query text to the server, processes the response, and renders your app. (Note that this process applies on the web, except that the code has to be *downloaded* instead of loaded from the device.)\n\nIdeally, though, we could begin fetching data as soon as the native code had loaded - in parallel with the JS context initialization. By the time your JS code was ready to run, the data-fetching would already be under way. To do this we would need a way to determine *statically* - at build time - what query an application would send.\n\nThe key is that GraphQL is already static - we just need to fully embrace this fact. More on this later.\n\n## Developer Experience\n\nNext, we've paid attention to the community's feedback and know that, to put it simply, Relay could be \"easier\" to use (and \"simpler\" too). This isn't entirely surprising to us - Relay was originally designed as a routing library and gradually morphed into a data-fetching library. Concepts like Relay \"routes\", for example, no longer serve as critical a role and are just one more concept that developers have to learn about. Another example is mutations: while writes *are* inherently more complex than reads, our API doesn't make the simple things simple enough.\n\nAlongside our focus on mobile performance, we've also kept the developer experience in mind as we evolve Relay core.\n\n## Empowering the Community\n\nFinally, we want to make it easier for people in the community to develop useful libraries that work with Relay. By comparison, React's small surface area - components - allows developers to build cool things like routing, higher-order components, or reusable text editors. For Relay, this would mean having the framework provide core primitives that users can build upon. We want it to be possible for the community to integrate Relay with view libraries other than React, or to build real-time subscriptions as a complementary library.\n\n# What's Next\n\nThese were big goals, and also a bit scary; we knew that incremental improvements would only allow us to move so fast. So in April we started a project to build a new implementation of Relay core targeting low-end mobile devices from the start.\n\nAs you can guess since we're writing this, the experiment was a success. The result is a new core that retains the best parts of Relay today - colocated components & data-dependencies, automatic data/view consistency, declarative data-fetching - while improving performance on mobile devices and addressing several common areas of confusion.\n\nWe're currently focused on shipping the first applications using the new core: ironing out bugs, refining the API changes and developer experience, and adding any missing features. We're excited to bring these changes to open source, and will do so once we've proven them in production. We'll go into more detail in some upcoming talks - links below - but for now here's an overview:\n\n- **Static Queries**: By adding a couple of Relay-specific directives, we've been able to retain the expressivity of current Relay queries using static syntax (concretely: you know what query an app will execute just by looking at the source text, without having to run that code). For starters this will allow Relay apps to start fetching data in parallel with JavaScript initialization. But it also unlocks other possibilities: knowing the query ahead of time means that we can generate optimized code for handling query responses, for example, or for reading query data from an offline cache.\n- **Expressive Mutations**: We'll continue to support a higher-level mutation API for common cases, but will also provide a lower-level API that allows \"raw\" data access where necessary. If you need to order a list of cached elements, for example, there will be a way to `sort()` it.\n- **Route-less Relay**: Routes will be gone in open source. Instead of a route with multiple query definitions, you'll just provide a single query with as many root fields as you want.\n- **Cache Eviction/Garbage Collection**: The API and architecture is designed from the start to allow removing cached data that is no longer referenced by a mounted view.\n\nStepping back, we recognize that any API changes will require an investment on your part. To make the transition easier, though, *we will continue to support the current API for the foreseeable future* (we're still using it too). And as much as possible we will open-source the tools that we use to migrate our own code. Ideas that we're exploring include codemods, an interoperability layer for the old/new APIs, and tutorials & guides to ease migration.\n\nUltimately, we're making these changes because we believe they make Relay better all around: simpler for developers building apps and faster for the people using them.\n\n# Conclusion\n\nIf you made it this far, congrats and thanks for reading! We'll be sharing more information about these changes in some upcoming talks:\n\n- [Greg Hurrell](https://github.com/wincent) will presenting a Relay \"Deep Dive\" at the [Silicon Valley ReactJS Meetup](http://www.meetup.com/Silicon-Valley-ReactJS-Meetup/events/232236845/) on August 17th.\n- I ([@josephsavona](https://github.com/josephsavona)) will be speaking about Relay at [React Rally](http://www.reactrally.com) on August 25th.\n\nWe can't wait to share the new code with you and are working as fast as we can to do so!\n",
        "type": "MarkdownRemark",
        "contentDigest": "045e123dd185a276308215633832caa8",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Relay: State of the State",
        "author": [
          "josephsavona"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2016-08-05-relay-state-of-the-state.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2016-08-05-relay-state-of-the-state.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2016-08-05-relay-state-of-the-state.md",
      "fields": {
        "date": "2016-08-04T16:00:00.000Z",
        "slug": "/blog/2016/08/05/relay-state-of-the-state.html",
        "path": "blog/2016-08-05-relay-state-of-the-state.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2016-09-28-our-first-50000-stars.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2016-09-28-our-first-50000-stars.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2016-09-28-our-first-50000-stars.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Our First 50,000 Stars\"\nauthor: [vjeux]\n---\n\nJust three and a half years ago we open sourced a little JavaScript library called React. The journey since that day has been incredibly exciting.\n\n## Commemorative T-Shirt\n\nIn order to celebrate 50,000 GitHub stars, [Maggie Appleton](http://www.maggieappleton.com/) from [egghead.io](http://egghead.io/) has designed us a special T-shirt, which will be available for purchase from Teespring **only for a week** through Thursday, October 6. Maggie also wrote [a blog post](https://www.behance.net/gallery/43269677/Reacts-50000-Stars-Shirt) showing all the different concepts she came up with before settling on the final design.\n\n<a target=\"_blank\" href=\"https://teespring.com/react-50000-stars\"><img src=\"../images/blog/react-50k-tshirt.jpg\" width=\"650\" height=\"340\" alt=\"React 50k Tshirt\" /></a>\n\nThe T-shirts are super soft using American Apparel's tri-blend fabric; we also have kids and toddler T-shirts and baby onesies available.\n\n* [Adult T-shirts (straight-cut and fitted)](https://teespring.com/react-50000-stars)\n* [Kids T-shirts](https://teespring.com/react-50000-stars-kids)\n* [Toddler T-Shirts](https://teespring.com/react-50000-stars-toddler)\n* [Baby Onesies](https://teespring.com/react-50000-stars-baby)\n\nProceeds from the shirts will be donated to [CODE2040](http://www.code2040.org/), a nonprofit that creates access, awareness, and opportunities in technology for underrepresented minorities with a specific focus on Black and Latinx talent.\n\n## Archeology\n\nWe've spent a lot of time trying to explain the concepts behind React and the problems it attempts to solve, but we haven't talked much about how React evolved before being open sourced. This milestone seemed like as good a time as any to dig through the earliest commits and share some of the more important moments and fun facts.\n\nThe story begins in our ads org, where we were building incredibly sophisticated client side web apps using an internal MVC framework called [BoltJS](http://web.archive.org/web/20130608154901/http://shaneosullivan.github.io/boltjs/intro.html). Here's a sample of what some Bolt code looked like:\n\n```js\nvar CarView = require('javelin/core').createClass({\n  name: 'CarView',\n  extend: require('container').Container,\n  properties: {\n    wheels: 4,\n  },\n  declare: function() {\n    return {\n      childViews: [\n        { content: 'I have ' },\n        { ref: 'wheelView' },\n        { content: ' wheels' }\n      ]\n    };\n  },\n  setWheels: function(wheels) {\n    this.findRef('wheelView').setContent(wheels);\n  },\n  getWheels: function() {\n    return this.findRef('wheelView').getContent();\n  },\n});\n\nvar car = new CarView();\ncar.setWheels(3);\ncar.placeIn(document.body);\n//<div>\n//  <div>I have </div>\n//  <div>3</div>\n//  <div> wheels</div>\n//</div>\n```\n\nBolt introduced a number of APIs and features that would eventually make their way into React including `render`, `createClass`, and `refs`. Bolt introduced the concept of `refs` as a way to create references to nodes that can be used imperatively. This was relevant for legacy interoperability and incremental adoption, and while React would eventually strive to be a lot more functional, `refs` proved to be a very useful way to break out of the functional paradigm when the need arose.\n\nBut as our applications grew more and more sophisticated, our Bolt codebases got pretty complicated. Recognizing some of the framework's shortcomings, [Jordan Walke](https://twitter.com/jordwalke) started experimenting with a side-project called [FaxJS](https://github.com/jordwalke/FaxJs). His goal was to solve many of the same problems as Bolt, but in a very different way. This is actually where most of React's fundamentals were born, including props, state, re-evaluating large portions of the tree to “diff” the UI, server-side rendering, and a basic concept of components.\n\n```js\nTestProject.PersonDisplayer = {\n  structure : function() {\n    return Div({\n      classSet: { personDisplayerContainer: true },\n      titleDiv: Div({\n        classSet: { personNameTitle: true },\n        content: this.props.name\n      }),\n      nestedAgeDiv: Div({\n        content: 'Interests: ' + this.props.interests\n      })\n    });\n  }\n};\n```\n\n## FBolt is Born\n\nThrough his FaxJS experiment, Jordan became convinced that functional APIs  — which discouraged mutation —  offered a better, more scalable way to build user interfaces. He imported his library into Facebook's codebase in March of 2012 and renamed it “FBolt”, signifying an extension of Bolt where components are written in a functional programming style. Or maybe “FBolt” was a nod to FaxJS – he didn't tell us! ;)\n\nThe interoperability between FBolt and Bolt allowed us to experiment with replacing just one component at a time with more functional component APIs. We could test the waters of this new functional paradigm, without having to go all in. We started with the components that were clearly best expressed functionally and then we would later continue to push the boundaries of what we could express as functions.\n\nRealizing that FBolt wouldn't be a great name for the library when used on its own, Jordan Walke and [Tom Occhino](https://twitter.com/tomocchino) decided on a new name: “React.” After Tom sent out the diff to rename everything to React, Jordan commented:\n\n\n> Jordan Walke:\nI might add for the sake of discussion, that many systems advertise some kind of reactivity, but they usually require that you set up some kind of point-to-point listeners and won't work on structured data. This API reacts to any state or property changes, and works with data of any form (as deeply structured as the graph itself) so I think the name is fitting.\n\n\nMost of Tom's other commits at the time were on the first version of [GraphiQL](https://github.com/graphql/graphiql), a project which was recently open sourced.\n\n## Adding JSX\n\nSince about 2010 Facebook has been using an extension of PHP called [XHP](https://www.facebook.com/notes/facebook-engineering/xhp-a-new-way-to-write-php/294003943919/), which enables engineers to create UIs using XML literals right inside their PHP code. It was first introduced to help prevent XSS holes but ended up being an excellent way to structure applications with custom components.\n\n```js\nfinal class :a:post extends :x:element {\n  attribute :a;\n  protected function render(): XHPRoot {\n    $anchor = <a>{$this->getChildren()}</a>;\n    $form = (\n      <form\n        method=\"post\"\n        action={$this->:href}\n        target={$this->:target}\n        class=\"postLink\"\n      >{$anchor}</form>\n    );\n    $this->transferAllAttributes($anchor);\n    return $form;\n  }\n}\n```\n\nBefore Jordan's work had even made its way into the Facebook codebase, Adam Hupp implemented an XHP-like concept for JavaScript, written in Haskell. This system enabled you to write the following inside a JavaScript file:\n\n```js\nfunction :example:hello(attrib, children) {\n  return (\n    <div class=\"special\">\n      <h1>Hello, World!</h1>\n      {children}\n    </div>\n  );\n}\n```\n\nIt would compile the above into the following normal ES3-compatible JavaScript:\n\n```js\nfunction jsx_example_hello(attrib, children) {\n  return (\n    S.create(\"div\", {\"class\": \"special\"}, [\n      S.create(\"h1\", {}, [\"Hello, World!\"]),\n      children\n    ]\n  );\n}\n```\n\nIn this prototype, `S.create` would immediately create and return a DOM node. Most of the conversations on this prototype revolved around the performance characteristics of `innerHTML` versus creating DOM nodes directly. At the time, it would have been less than ideal to push developers universally in the direction of creating DOM nodes directly since it did not perform as well, especially in Firefox and IE. Facebook's then-CTO [Bret Taylor](https://twitter.com/btaylor) chimed in on the discussion at the time in favor of `innerHTML` over `document.createElement`:\n\n\n> Bret Taylor:\nIf you are not convinced about innerHTML, here is a small microbenchmark. It is about the same in Chrome. innerHTML is about 30% faster in the latest version of Firefox (much more in previous versions), and about 90% faster in IE8.\n\n\nThis work was eventually abandoned but was revived after React made its way into the codebase. Jordan sidelined the previous performance discussions by introducing the concept of a “Virtual DOM,” though its eventual name didn't exist yet.\n\n\n> Jordan Walke:\n> For the first step, I propose that we do the easiest, yet most general transformation possible. My suggestion is to simply map xml expressions to function call expressions.\n>\n> - `<x></x>` becomes `x( )`\n> - `<x height=12></x>` becomes `x( {height:12} )`\n> - `<x> <y> </y> </x>` becomes `x({ childList: [y( )] })`\n>\n> At this point, JSX doesn't need to know about React - it's just a convenient way to write function calls. Coincidentally, React's primary abstraction is the function. Okay maybe it's not so coincidental ;)\n\n\nAdam made a very insightful comment, which is now the default way we write lists in React with JSX.\n\n\n> Adam Hupp:\n> I think we should just treat arrays of elements as a frag. This is useful for constructs like:\n>\n> ```js\n> <ul>{foo.map(function(i) { return <li>{i.data}</li>; })}</ul>\n> ```\n>\n> In this case the ul(..) will get a childList with a single child, which is itself a list.\n\n\nReact didn't end up using Adam's implementation directly. Instead, we created JSX by forking [js-xml-literal](https://github.com/laverdet/js-xml-literal), a side project by XHP creator Marcel Laverdet. JSX took its name from js-xml-literal, which Jordan modified to just be syntactic sugar for deeply nested function calls.\n\n## API Churn\n\nDuring the first year of React, internal adoption was growing quickly but there was quite a lot of churn in the component APIs and naming conventions:\n\n* `project` was renamed to `declare` then to `structure` and finally to `render`.\n* `Componentize` was renamed to `createComponent` and finally to `createClass`.\n\nAs the project was about to be open sourced, [Lee Byron](https://twitter.com/leeb) sat down with Jordan Walke, Tom Occhino and Sebastian Markbåge in order to refactor, reimplement, and rename one of React's most beloved features – the lifecycle API. Lee [came up with a well-designed API](https://gist.github.com/vjeux/f2b015d230cc1ab18ed1df30550495ed) that is still in place today.\n\n* Concepts\n    * component - a ReactComponent instance\n    * state - internal state to a component\n    * props - external state to a component\n    * markup - the stringy HTML-ish stuff components generate\n    * DOM - the document and elements within the document\n* Actions\n    * mount - to put a component into a DOM\n    * initialize - to prepare a component for rendering\n    * update - a transition of state (and props) resulting a render.\n    * render - a side-effect-free process to get the representation (markup) of a component.\n    * validate - make assertions about something created and provided\n    * destroy - opposite of initialize\n* Operands\n    * create - make a new thing\n    * get - get an existing thing\n    * set - merge into existing\n    * replace - replace existing\n    * receive - respond to new data\n    * force - skip checks to do action\n* Notifications\n    * shouldObjectAction\n    * objectWillAction\n    * objectDidAction\n\n## Instagram\n\nIn 2012, Instagram got acquired by Facebook. [Pete Hunt](https://twitter.com/floydophone), who was working on Facebook photos and videos at the time, joined their newly formed web team. He wanted to build their website completely in React, which was in stark contrast with the incremental adoption model that had been used at Facebook.\n\nTo make this happen, React had to be decoupled from Facebook's infrastructure, since Instagram didn't use any of it. This project acted as a forcing function to do the work needed to open source React. In the process, Pete also discovered and promoted a little project called webpack. He also implemented the `renderToString` primitive which was needed to do server-side rendering.\n\nAs we started to prepare for the open source launch, [Maykel Loomans](https://twitter.com/miekd), a designer on Instagram, made a mock of what the website could look like. The header ended up defining the visual identity of React: its logo and the electric blue color!\n\n<center><a target=\"_blank\" href=\"../images/blog/react-50k-mock-full.jpg\"><img src=\"../images/blog/react-50k-mock.jpg\" width=\"400\" height=\"410\" alt=\"React website mock\" /></a></center>\n\nIn its earliest days, React benefited tremendously from feedback, ideas, and technical contributions of early adopters and collaborators all over the company. While it might look like an overnight success in hindsight, the story of React is actually a great example of how new ideas often need to go through several rounds of refinement, iteration, and course correction over a long period of time before reaching their full potential.\n\nReact's approach to building user interfaces with functional programming principles has changed the way we do things in just a few short years. It goes without saying, but React would be nothing without the amazing open source community that's built up around it!\n",
        "type": "MarkdownRemark",
        "contentDigest": "2d54916a1a5a3641d8b7b69294ba57b0",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Our First 50,000 Stars",
        "author": [
          "vjeux"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2016-09-28-our-first-50000-stars.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2016-09-28-our-first-50000-stars.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2016-09-28-our-first-50000-stars.md",
      "fields": {
        "date": "2016-09-27T16:00:00.000Z",
        "slug": "/blog/2016/09/28/our-first-50000-stars.html",
        "path": "blog/2016-09-28-our-first-50000-stars.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2016-11-16-react-v15.4.0.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2016-11-16-react-v15.4.0.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2016-11-16-react-v15.4.0.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v15.4.0\"\nauthor: [gaearon]\n---\n\nToday we are releasing React 15.4.0.\n\nWe didn't announce the [previous](https://github.com/facebook/react/blob/master/CHANGELOG.md#1510-may-20-2016) [minor](https://github.com/facebook/react/blob/master/CHANGELOG.md#1520-july-1-2016) [releases](https://github.com/facebook/react/blob/master/CHANGELOG.md#1530-july-29-2016) on the blog because most of the changes were bug fixes. However, 15.4.0 is a special release, and we would like to highlight a few notable changes in it.\n\n### Separating React and React DOM\n\n[More than a year ago](/react/blog/2015/09/10/react-v0.14-rc1.html#two-packages-react-and-react-dom), we started separating React and React DOM into separate packages. We deprecated `React.render()` in favor of `ReactDOM.render()` in React 0.14, and removed DOM-specific APIs from `React` completely in React 15. However, the React DOM implementation still [secretly lived inside the React package](https://www.reddit.com/r/javascript/comments/3m6wyu/found_this_line_in_the_react_codebase_made_me/cvcyo4a/).\n\nIn React 15.4.0, we are finally moving React DOM implementation to the React DOM package. The React package will now contain only the renderer-agnostic code such as `React.Component` and `React.createElement()`.\n\nThis solves a few long-standing issues, such as [errors](https://github.com/facebook/react/issues/7386) when you import React DOM in the same file as the [snapshot testing](https://facebook.github.io/jest/blog/2016/07/27/jest-14.html) renderer.\n\n**If you only use the official and documented React APIs you won't need to change anything in your application.**\n\nHowever, there is a possibility that you imported private APIs from `react/lib/*`, or that a package you rely on might use them. We would like to remind you that this was never supported, and that your apps should not rely on internal APIs. The React internals will keep changing as we work to make React better.\n\nAnother thing to watch out for is that React DOM Server is now about the same size as React DOM since it contains its own copy of the React reconciler. We don't recommend using React DOM Server on the client in most cases.\n\n### Profiling Components with Chrome Timeline\n\nYou can now visualize React components in the Chrome Timeline. This lets you see which components exactly get mounted, updated, and unmounted, how much time they take relative to each other.\n\n<center><img src=\"/react/img/blog/react-perf-chrome-timeline.png\" width=\"651\" height=\"228\" alt=\"React components in Chrome timeline\" /></center>\n\nTo use it:\n\n1. Load your app with `?react_perf` in the query string (for example, `http://localhost:3000/?react_perf`).\n\n2. Open the Chrome DevTools **Timeline** tab and press **Record**.\n\n3. Perform the actions you want to profile. Don't record more than 20 seconds or Chrome might hang.\n\n4. Stop recording.\n\n5. React events will be grouped under the **User Timing** label.\n\nNote that the numbers are relative so components will render faster in production. Still, this should help you realize when unrelated UI gets updated by mistake, and how deep and how often your UI updates occur.\n\nCurrently Chrome, Edge, and IE are the only browsers supporting this feature, but we use the standard [User Timing API](https://developer.mozilla.org/en-US/docs/Web/API/User_Timing_API) so we expect more browsers to add support for it.\n\n### Mocking Refs for Snapshot Testing\n\nIf you're using Jest [snapshot testing](https://facebook.github.io/jest/blog/2016/07/27/jest-14.html), you might have had [issues](https://github.com/facebook/react/issues/7371) with components that rely on refs. With React 15.4.0, we introduce a way to provide mock refs to the test renderer. For example, consider this component using a ref in `componentDidMount`:\n\n```js{5,11}\nimport React from 'react';\n\nexport default class MyInput extends React.Component {\n  componentDidMount() {\n    this.input.focus();\n  }\n\n  render() {\n    return (\n      <input\n        ref={node => this.input = node}\n      />\n    );\n  }\n}\n```\n\nWith snapshot renderer, `this.input` will be `null` because there is no DOM. React 15.4.0 lets us avoid such crashes by passing a custom `createNodeMock` function to the snapshot renderer in an `options` argument:\n\n```js{5-12,16}\nimport React from 'react';\nimport MyInput from './MyInput';\nimport renderer from 'react-test-renderer';\n\nfunction createNodeMock(element) {\n  if (element.type === 'input') {\n    return {\n      focus() {},\n    };\n  }\n  return null;\n}\n\nit('renders correctly', () => {\n  const options = {createNodeMock};\n  const tree = renderer.create(<MyInput />, options);\n  expect(tree).toMatchSnapshot();\n});\n```\n\nWe would like to thank [Brandon Dail](https://github.com/Aweary) for implementing this feature.\n\nYou can learn more about snapshot testing in [this Jest blog post](https://facebook.github.io/jest/blog/2016/07/27/jest-14.html).\n\n---\n\n## Installation\n\nWe recommend using [Yarn](https://yarnpkg.com/) or [npm](https://www.npmjs.com/) for managing front-end dependencies. If you're new to package managers, the [Yarn documentation](https://yarnpkg.com/en/docs/getting-started) is a good place to get started.\n\nTo install React with Yarn, run:\n\n```bash\nyarn add react@15.4.0 react-dom@15.4.0\n```\n\nTo install React with npm, run:\n\n```bash\nnpm install --save react@15.4.0 react-dom@15.4.0\n```\n\nWe recommend using a bundler like [webpack](https://webpack.js.org/) or [Browserify](http://browserify.org/) so you can write modular code and bundle it together into small packages to optimize load time.\n\nRemember that by default, React runs extra checks and provides helpful warnings in development mode. When deploying your app, make sure to [compile it in production mode](/react/docs/installation.html#development-and-production-versions).\n\nIn case you don't use a bundler, we also provide pre-built bundles in the npm packages which you can [include as script tags](/react/docs/installation.html#using-a-cdn) on your page:\n\n* **React**  \n  Dev build with warnings: [react/dist/react.js](https://unpkg.com/react@15.4.0/dist/react.js)  \n  Minified build for production: [react/dist/react.min.js](https://unpkg.com/react@15.4.0/dist/react.min.js)  \n* **React with Add-Ons**  \n  Dev build with warnings: [react/dist/react-with-addons.js](https://unpkg.com/react@15.4.0/dist/react-with-addons.js)  \n  Minified build for production: [react/dist/react-with-addons.min.js](https://unpkg.com/react@15.4.0/dist/react-with-addons.min.js)  \n* **React DOM** (include React in the page before React DOM)  \n  Dev build with warnings: [react-dom/dist/react-dom.js](https://unpkg.com/react-dom@15.4.0/dist/react-dom.js)  \n  Minified build for production: [react-dom/dist/react-dom.min.js](https://unpkg.com/react-dom@15.4.0/dist/react-dom.min.js)  \n* **React DOM Server** (include React in the page before React DOM Server)  \n  Dev build with warnings: [react-dom/dist/react-dom-server.js](https://unpkg.com/react-dom@15.4.0/dist/react-dom-server.js)  \n  Minified build for production: [react-dom/dist/react-dom-server.min.js](https://unpkg.com/react-dom@15.4.0/dist/react-dom-server.min.js)\n\nWe've also published version `15.4.0` of the `react`, `react-dom`, and addons packages on npm and the `react` package on bower.\n\n- - -\n\n## Changelog\n\n### React\n* React package and browser build no longer \"secretly\" includes React DOM.  \n  <small>([@sebmarkbage](https://github.com/sebmarkbage) in [#7164](https://github.com/facebook/react/pull/7164) and [#7168](https://github.com/facebook/react/pull/7168))</small>\n* Required PropTypes now fail with specific messages for null and undefined.  \n  <small>([@chenglou](https://github.com/chenglou) in [#7291](https://github.com/facebook/react/pull/7291))</small>\n* Improved development performance by freezing children instead of copying.  \n  <small>([@keyanzhang](https://github.com/keyanzhang) in [#7455](https://github.com/facebook/react/pull/7455))</small>\n\n### React DOM\n* Fixed occasional test failures when React DOM is used together with shallow renderer.  \n  <small>([@goatslacker](https://github.com/goatslacker) in [#8097](https://github.com/facebook/react/pull/8097))</small>\n* Added a warning for invalid `aria-` attributes.  \n  <small>([@jessebeach](https://github.com/jessebeach) in [#7744](https://github.com/facebook/react/pull/7744))</small>\n* Added a warning for using `autofocus` rather than `autoFocus`.  \n  <small>([@hkal](https://github.com/hkal) in [#7694](https://github.com/facebook/react/pull/7694))</small>\n* Removed an unnecessary warning about polyfilling `String.prototype.split`.  \n  <small>([@nhunzaker](https://github.com/nhunzaker) in [#7629](https://github.com/facebook/react/pull/7629))</small>\n* Clarified the warning about not calling PropTypes manually.  \n  <small>([@jedwards1211](https://github.com/jedwards1211) in [#7777](https://github.com/facebook/react/pull/7777))</small>\n* The unstable `batchedUpdates` API now passes the wrapped function's return value through.  \n  <small>([@bgnorlov](https://github.com/bgnorlov) in [#7444](https://github.com/facebook/react/pull/7444))</small>\n* Fixed a bug with updating text in IE 8.  \n  <small>([@mnpenner](https://github.com/mnpenner) in [#7832](https://github.com/facebook/react/pull/7832))</small>\n\n### React Perf\n* When ReactPerf is started, you can now view the relative time spent in components as a chart in Chrome Timeline.  \n  <small>([@gaearon](https://github.com/gaearon) in [#7549](https://github.com/facebook/react/pull/7549))</small>\n\n### React Test Utils\n* If you call `Simulate.click()` on a `<input disabled onClick={foo} />` then `foo` will get called whereas it didn't before.  \n  <small>([@nhunzaker](https://github.com/nhunzaker) in [#7642](https://github.com/facebook/react/pull/7642))</small>\n\n### React Test Renderer\n* Due to packaging changes, it no longer crashes when imported together with React DOM in the same file.  \n  <small>([@sebmarkbage](https://github.com/sebmarkbage) in [#7164](https://github.com/facebook/react/pull/7164) and [#7168](https://github.com/facebook/react/pull/7168))</small>\n* `ReactTestRenderer.create()` now accepts `{createNodeMock: element => mock}` as an optional argument so you can mock refs with snapshot testing.  \n  <small>([@Aweary](https://github.com/Aweary) in [#7649](https://github.com/facebook/react/pull/7649) and [#8261](https://github.com/facebook/react/pull/8261))</small>\n",
        "type": "MarkdownRemark",
        "contentDigest": "1e4f63c584fc6eb0f0f4ada5306ab598",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v15.4.0",
        "author": [
          "gaearon"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2016-11-16-react-v15.4.0.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2016-11-16-react-v15.4.0.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2016-11-16-react-v15.4.0.md",
      "fields": {
        "date": "2016-11-15T16:00:00.000Z",
        "slug": "/blog/2016/11/16/react-v15.4.0.html",
        "path": "blog/2016-11-16-react-v15.4.0.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2017-04-07-react-v15.5.0.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2017-04-07-react-v15.5.0.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2017-04-07-react-v15.5.0.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v15.5.0\"\nauthor: [acdlite]\n---\n\n自上次更新React已经是一年前了。我们下一次的重要发布，React 16，将包含一些让人兴奋的提升，包含一个[完全重写](https://www.youtube.com/watch?v=ZCuYPiUIONs)的React内核。[我们认真考虑了稳定性](/react/contributing/design-principles.html#stability)，并致力于以最小的改动将这些特性带给我们的用户。\n\n最后，我们发布了React 15.5.0。\n\n### 新的弃用警告\n\n最大的改变是我们将`React.PropTypes`和`React.createClass` 移到他们的自己的包。二者仍然可以通过主要的`React`独享访问，但是在开发模式下，使用其中的一个将在控制台上打印一个过时的弃用警告。这将会让之后代码大小有所优化。\n\n这些警告并不会影响你的应用行为。然而，我们意识到他们可能会造成一些困惑，尤其是你使用的测试框架将`console.error`视为失败时。\n\n**添加新警告并不是我们轻易做的。** 警告在React中不仅仅是建议 - 它们是我们能够让尽可能多地人使用最新版React的策略的组成部分。我们从不在不增加路径的情况下增加警告。\n\n因此，当警告可能在短期内造成困惑，我们相信**能刺激开发者在当前迁移代码库而防止在未来产生更大困惑**。提前修复警告确保你已为下一个重要发布做好了准备。若你的应用在15.5时产生了0个警告，那么在16中应该能够继续工作而无需任何改变。\n\n关于每一项新的弃用，我们已经提供了一份代码修改（codemod）以自动迁移你的代码。它们已可以利用来作为 [react-codemod](https://github.com/reactjs/react-codemod)项目的部分。\n\n### 从React.PropTypes迁移\n\n属性类型是用于在开发期间对属性进行运行时校验的一项特性。我们已将内建的属性类型提取到一个独立的包中以反映是否并非每个人都会使用的事实。\n\n在15.5中，不再是从`React`主对象中访问 `PropTypes` ，而是安装`prop-types`包并从中引入他们：\n\n```js{11,16,25}\n// Before (15.4 and below)\nimport React from 'react';\n\nclass Component extends React.Component {\n  render() {\n    return <div>{this.props.text}</div>;\n  }\n}\n\nComponent.propTypes = {\n  text: React.PropTypes.string.isRequired,\n}\n\n// After (15.5)\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Component extends React.Component {\n  render() {\n    return <div>{this.props.text}</div>;\n  }\n}\n\nComponent.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n```\n\n对于这一改变，[codemo](https://github.com/reactjs/react-codemod#react-proptypes-to-prop-types) 自动处理这一转换。基础用法：\n\n```bash\njscodeshift -t react-codemod/transforms/React-PropTypes-to-prop-types.js <path>\n```\n\n `propTypes`， `contextTypes` 和 `childContextTypes`仍将和以前一样。唯一的改变是以前内建的的验证器现在位于独立的包内。\n\n你也可能考虑使用 [Flow](https://flow.org/)来静态地检查你的JavaScript代码类型，包括[React 组件](https://flow.org/en/docs/frameworks/react/#setup-flow-with-react-a-classtoc-idtoc-setup-flow-with-react-hreftoc-setup-flow-with-reacta).\n\n### 从React.crateClass迁移\n\n当React首次发布时，在JavaScript中并没有通用的方式创建类，因此我们提供我们一个自定义方法：`React.createClass`。\n\n而后，类被添加进该语言中作为ES2015的一部分，因此我们增加了使用JavaScript的类来创建React组件的能力。**与函数式组件一起，JavaScript类现在都是[在React创建组件的首选方式](/react/docs/components-and-props.html#functional-and-class-components)。**\n\n对于已经存在的 `createClass` 组件，我们建议你将它们迁移到JavaScript类。然而，若你的组件依赖于混合（mixins），迁移至类可能不会立即可行。若是如此，`create-react-class` 作为一个顺带的替换方案已在npm上可用：\n\n```js{4,13,15}\n// Before (15.4 and below)\nvar React = require('react');\n\nvar Component = React.createClass({\n  mixins: [MixinA],\n  render() {\n    return <Child />;\n  }\n});\n\n// After (15.5)\nvar React = require('react');\nvar createReactClass = require('create-react-class');\n\nvar Component = createReactClass({\n  mixins: [MixinA],\n  render() {\n    return <Child />;\n  }\n});\n```\n\n你的组件仍然能够和之前一样继续工作。\n\n对于这一变化，[codemo](https://github.com/reactjs/react-codemod#explanation-of-the-new-es2015-class-transform-with-property-initializers) 尝试转换`createClass`组件为一个JavaScript类，并在必要时回退到`create-react-class`。该方案已处理了Facebook内部数千计的组件。\n\n基本用法：\n\n```bash\njscodeshift -t react-codemod/transforms/class.js path/to/components\n```\n\n### 不再支持的React附件\n\n我们将停止维护React附件包。真实地，大多数包已经有很长时间没有维护了。它们仍将持续继续工作，但我们建议尽快迁移以防止将来的破坏。\n\n- **react-addons-create-fragment** - React 16将优先支持碎片，在这点上该包已不再必要。我们推荐使用键控元素的数组。\n- **react-addons-css-transition-group**。使用[react-transition-group/CSSTransitionGroup](https://github.com/reactjs/react-transition-group)。1.1.1版本提供了插入式的替代方案。\n- **react-addons-linked-state-mixin** 直接设置`value`和`onChange`处理器\n- **react-addons-pure-render-mixin** - 使用[`React.PureComponent`](/react/docs/react-api.html#react.purecomponent)。\n- **react-addons-shallow-compare** - 使用[`React.PureComponent`](/react/docs/react-api.html#react.purecomponent)。\n- **react-addons-transition-group** 使用[react-transition-group/TransitionGroup](https://github.com/reactjs/react-transition-group)。1.1.1版本提供了一个插入式的替代方案。\n- **react-addons-update** - 使用[immutability-helper](https://github.com/kolodny/immutability-helper)，一个插入式替代方案。\n- **react-linked-input** - 直接设置`value`和`onChange`处理器。\n\n我们也放弃对于`react-with-addons`UMD构建的支持。其将在React 16中被移除。\n\n### React测试套件\n\n当前，React 测试套件位于`react-addons-test-utils`内。在15.5中，我们将其从包中独立出去，并将它们迁移至`react-dom/test-utils`：\n\n```js\n// Before (15.4 and below)\nimport TestUtils from 'react-addons-test-utils';\n\n// After (15.5)\nimport TestUtils from 'react-dom/test-utils';\n```\n\n这反应了我们所说的测试套件实际上是一套包装了DOM渲染器的API。\n\n浅渲染是一个例外，其并不是DOM规范。浅渲染器已被移至`react-test-renderer/shallow`。\n\n```js{2,5}\n// Before (15.4 and below)\nimport { createRenderer } from 'react-addons-test-utils';\n\n// After (15.5)\nimport { createRenderer } from 'react-test-renderer/shallow';\n```\n\n---\n\n## 感谢\n\n特别感谢这些人转让npm包名称的所有权：\n\n- [Jason Miller](https://github.com/developit)\n- [Aaron Ackerman](https://github.com/aackerman)\n- [Vinicius Marson](https://github.com/viniciusmarson)\n\n---\n\n## 安装\n\n我们推荐使用[Yarn](https://yarnpkg.com/)或[npm](https://www.npmjs.com/)来管理前端依赖。若你是初次接触包管理器，[Yarn documentation](https://yarnpkg.com/en/docs/getting-started)是一个不错的起点。\n\n通过Yarn安装React，运行：\n\n```bash\nyarn add react@^15.5.0 react-dom@^15.5.0\n```\n\n通过npm安装React，运行：\n\n```bash\nnpm install --save react@^15.5.0 react-dom@^15.5.0\n```\n\n我们推荐如[webpack](https://webpack.js.org/) 或 [Browserify](http://browserify.org/)打包器，以让你可以编写模块化代码并将其打包到一起放在一个小的包内以优化加载时间。\n\n记住默认情况下，React在开发模式下运行会带有额外检查并提供有用的警告。当部署你的应用时，确保其[在生产模式编译](/react/docs/installation.html#development-and-production-versions)。\n\n万一你未使用打包器，我们也提供了一个预先构建好的包在npm上，你可以在你的页面中[通过script标签引入](/react/docs/installation.html#using-a-cdn)。\n\n* **React**  \n  带警告的开发版本：[react/dist/react.js](https://unpkg.com/react@15.5.0/dist/react.js)  \n  用于生产的压缩版本：[react/dist/react.min.js](https://unpkg.com/react@15.5.0/dist/react.min.js)  \n* **React with Add-Ons**  \n  带警告的开发版本：[react/dist/react-with-addons.js](https://unpkg.com/react@15.5.0/dist/react-with-addons.js)  \n  用于生产的压缩版本：[react/dist/react-with-addons.min.js](https://unpkg.com/react@15.5.0/dist/react-with-addons.min.js)  \n* **React DOM** (在React DOM之前引入React)  \n  带警告的开发版本：[react-dom/dist/react-dom.js](https://unpkg.com/react-dom@15.5.0/dist/react-dom.js)  \n  用于生产的压缩版本：[react-dom/dist/react-dom.min.js](https://unpkg.com/react-dom@15.5.0/dist/react-dom.min.js)  \n* **React DOM Server** (React DOM Server之前引入React)  \n  带警告的开发版本：[react-dom/dist/react-dom-server.js](https://unpkg.com/react-dom@15.5.0/dist/react-dom-server.js)  \n  用于生产的压缩版本：[react-dom/dist/react-dom-server.min.js](https://unpkg.com/react-dom@15.5.0/dist/react-dom-server.min.js)\n\n我们还在npm上发布了`react`，`react-dom`及附件包的`15.5.0`版本以及在bower上的`react`包。\n\n---\n\n## 修改日志\n\n## 15.5.0 (April 7, 2017)\n\n### React\n\n* 为`React.createClass`增加一个独立的警告。将用户指向create-react-class。（[@acdlite](https://github.com/acdlite) 在 [d9a4fa4](https://github.com/facebook/react/commit/d9a4fa4f51c6da895e1655f32255cf72c0fe620e)的提交）\n* 为`React.PropTypes`增加一个独立的警告。将用户指向prop-types。（[@acdlite](https://github.com/acdlite) 在 [043845c](https://github.com/facebook/react/commit/043845ce75ea0812286bbbd9d34994bb7e01eb28)的提交）\n* 修复同时使用`ReactDOM`和`ReactDOMServer`。（[@wacii](https://github.com/wacii) 在 [#9005](https://github.com/facebook/react/pull/9005)提的PR）\n* 修复关于Closure Compiler的问题。（[@Shastel](https://github.com/Shastel) 在 [#8882](https://github.com/facebook/react/pull/8882)提的PR）\n* 另一个关于Closure Compiler的修复。（[@Shastel](https://github.com/Shastel) 在 [#8882](https://github.com/facebook/react/pull/8882)提的PR）\n* 为无效的元素类型警告增加组件栈信息。（[@n3tr](https://github.com/n3tr) 在 [#8495](https://github.com/facebook/react/pull/8495)提的PR）\n\n### React DOM\n\n* 修正当在数字输入中回退时的Chrome bug。([@nhunzaker](https://github.com/nhunzaker) 在 [#7359](https://github.com/facebook/react/pull/7359)提的PR)\n* 增加`react-dom/test-utils`，暴露React测试套件。([@bvaughn](https://github.com/bvaughn))\n\n### React Test Renderer\n\n* 修复子组件不会调用`componentWillUnmount`。（[@gre](https://github.com/gre) 在 [#8512](https://github.com/facebook/react/pull/8512]提的PR）\n* 增加 `react-test-renderer/shallow`，暴露浅渲染器。\n\n### React Addons\n\n* 最后一次发布附件；他们将不再被维护\n* 移除`peerDependencies`以让附件能够无限期继续工作。（[@acdlite](https://github.com/acdlite) 和 [@bvaughn](https://github.com/bvaughn) 在 [8a06cd7](https://github.com/facebook/react/commit/8a06cd7a786822fce229197cac8125a551e8abfa) 和 [67a8db3](https://github.com/facebook/react/commit/67a8db3650d724a51e70be130e9008806402678a)的提交）\n* 更新以移除`React.createClass` 和 `React.PropTypes` 的引用。（[@acdlite](https://github.com/acdlite) 在 [12a96b9](https://github.com/facebook/react/commit/12a96b94823d6b6de6b1ac13bd576864abd50175)的提交）\n* `react-addons-test-utils`被移除。使用`react-dom/test-utils` 和 `react-test-renderer/shallow` 代替。（[@bvaughn](https://github.com/bvaughn)）\n",
        "type": "MarkdownRemark",
        "contentDigest": "cd219efa499167d414eb838a76b5e14e",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v15.5.0",
        "author": [
          "acdlite"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2017-04-07-react-v15.5.0.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2017-04-07-react-v15.5.0.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2017-04-07-react-v15.5.0.md",
      "fields": {
        "date": "2017-04-06T16:00:00.000Z",
        "slug": "/blog/2017/04/07/react-v15.5.0.html",
        "path": "blog/2017-04-07-react-v15.5.0.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2017-05-18-whats-new-in-create-react-app.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2017-05-18-whats-new-in-create-react-app.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2017-05-18-whats-new-in-create-react-app.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"What's New in Create React App\"\nauthor: [gaearon]\n---\n\n在不到一年前，我们介绍了 [Create React App](/blog/2016/07/22/create-apps-with-no-configuration.html) 作为一种官方支持的零配置方法来构建应用。此后，该项目取得了巨大的进展，250多名参与者提交了950多次提交。\n\n今天，我们很兴奋地宣布，过去几个月中在进展中的许多新功能最终发布了。\n\n像过去一样， 通过 `Create React App`，**你可以通过更新单个依赖项来在现有应用程序中享受这些改进只要你的项目并没有执行弹出操作，** 请参考我们的 [迁移说明](https://github.com/facebookincubator/create-react-app/releases/tag/v1.0.0)。、\n\n新创建的项目会自动获得这些新的功能改进。\n\n### webpack 2\n\n>*这个功能开发者是[@Timer](https://github.com/Timer) 在 [#1291](https://github.com/facebookincubator/create-react-app/pull/1291).*\n\n我们已经升级到了几个月前[正式发布](https://medium.com/webpack/webpack-2-and-beyond-40520af9067f)的 `webpack2`。这对许多 bug 修复和整体改进都是一个巨大的升级。我们已经对它进行了一段时间的测试，并最终认为它已经足够稳定并鼓励大家都来尝试一下。\n\n`webpack` 的配置风格发生了改变，但是没有使用弹出操作的 `Create React App` 用户不需要担心，我们已经在我们内部做了对应的调整。\n\n如果出于某种原因你必须要做弹出操作的话，可以参考 `webpack` 提供的 [升级指南](https://webpack.js.org/guides/migrating/) 对你的应用进行必要的升级。需要说明的是，Create React App 发布的每个版本，我们都努力去支持尽可能多的应用场景以便将来你不需要做弹出操作。\n\nwebpack 2 最引人注目的新特性就是其对 ES6 模块 的支持，可以直接创建和引入 [ES6 模块](http://2ality.com/2014/09/es6-modules-final.html)而不必把事先它们编译成 CommonJS 模块。虽然这不应该影响你如何写代码因为你可能已经在使用 `import` 和 `export` 语句了。但是它可以在编译阶段捕获更多的错误，比如exports 的变量undefined之类的：\n\n![Export validation](../img/blog/cra-update-exports.gif) \n\n未来，随着 ES6 模块相关生态系统的成熟，webpack 2 还提供了 [tree shaking](https://webpack.js.org/guides/tree-shaking/) 特性，可以通过去除冗余代码，优化打包后脚本的尺寸。\n\n### Runtime Error Overlay\n\n>*开发这个功能的是 [@Timer](https://github.com/Timer) 和 [@nicinabox](https://github.com/nicinabox) 在 [#1101](https://github.com/facebookincubator/create-react-app/pull/1101), [@bvaughn](https://github.com/bvaughn) 在 [#2201](https://github.com/facebookincubator/create-react-app/pull/2201).*\n\n你有没有这种经历，代码中写错了一个地方，控制台里也报错了，但是死活找不到报错代码的位置？或者情况更糟，你允许应用上线了然后程序在生产环境下直接崩掉了，只是因为你漏掉了开发环境中的一个错误？\n\n为了解决这个问题，我们引入了一个专门捕获错误的弹窗，当程序报错的时候会展示报错信息和引发错误的位置！当然，这只会出现在开发环境中，你也可以按 `ESC` 把它关闭。\n\n一图胜千言，有图，有真相:\n    \n![Runtime error overlay](../img/blog/cra-runtime-error.gif) \n\n(没错，它还能跟你的编辑器结合到一起!)\n\n未来 Creat React App 还准备支持更多错误捕获。比如在React 16 版本发布之后，Creat React App 计划支持 React 组件调用栈的展示。\n\n### 默认支持渐进式web应用\n\n>*这个功能的贡献者是 [@jeffposnick](https://github.com/jeffposnick) 在 [#1728](https://github.com/facebookincubator/create-react-app/pull/1728).*\n\n使用新版本 Creat React App 创建的项目默认就会支持 [渐进式web应用](https://developers.google.com/web/progressive-web-apps/)。这意味着它们使用了 [service workers](https://developers.google.com/web/fundamentals/getting-started/primers/service-workers)， 通过 [离线优先缓存策略](https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#cache-falling-back-to-network) 来优化用户再次访问应用的速度。当然，你也可以通过设置默认不开启这个特性，但是如果你在开发新的应用，我推荐你使用它，特别是在移动设备上运行的应用，体验会更好。\n\n![Loading assets from service worker](../img/blog/cra-pwa.png) \n\n使用新版本 Creat React App 创建的项目默认就支持这些新特性，但是你可以很容易的对老项目进行升级，请参考[升级指南](https://github.com/facebookincubator/create-react-app/releases/tag/v1.0.0)。\n\n在未来的几周我们会为这个主题增加 [更多文档](https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/template/README.md#making-a-progressive-web-app)。希望大家在答疑区畅所欲言，[积极提问](https://github.com/facebookincubator/create-react-app/issues/new) 。\n\n\n### Jest 20\n\n>*这个功能的贡献者是 [@rogeliog](https://github.com/rogeliog) 在 [#1614](https://github.com/facebookincubator/create-react-app/pull/1614) 和 [@gaearon](https://github.com/gaearon) 在 [#2171](https://github.com/facebookincubator/create-react-app/pull/2171).*\n   \n   我们正在使用的是最新版的 Jest，包括了许多的 bug 修复和功能增强。更多信息请阅读博客 [Jest 19](https://facebook.github.io/jest/blog/2017/02/21/jest-19-immersive-watch-mode-test-platform-improvements.html) 和 [Jest 20](http://facebook.github.io/jest/blog/2017/05/06/jest-20-delightful-testing-multi-project-runner.html)。\n\n主要亮点包括 [immersive watch mode](https://facebook.github.io/jest/blog/2017/02/21/jest-19-immersive-watch-mode-test-platform-improvements.html#immersive-watch-mode)， [a better snapshot format](https://facebook.github.io/jest/blog/2017/02/21/jest-19-immersive-watch-mode-test-platform-improvements.html#snapshot-updates)， [improvements to printing skipped tests](https://facebook.github.io/jest/blog/2017/02/21/jest-19-immersive-watch-mode-test-platform-improvements.html#improved-printing-of-skipped-tests)，以及 [new testing APIs](https://facebook.github.io/jest/blog/2017/05/06/jest-20-delightful-testing-multi-project-runner.html#new-improved-testing-apis)。\n\n![Immersive test watcher](../img/blog/cra-jest-search.gif) \n\n现在 Create React App 只需要做少量 Jest 的配置就可以生成覆盖率报告了。\n\n### 动态import()代码分割\n\n>*这个功能的贡献者是 [@Timer](https://github.com/Timer) 在 [#1538](https://github.com/facebookincubator/create-react-app/pull/1538) 和 [@tharakawj](https://github.com/tharakawj) 在 [#1801](https://github.com/facebookincubator/create-react-app/pull/1801).*\n   \n 对于 web 应用而言很重要的一点就是减轻页面初始化时的 JS 加载负担，并做到  [按需加载](https://medium.com/@addyosmani/progressive-web-apps-with-react-js-part-2-page-load-performance-33b932d97cf2)。虽然 Create React App 发布以后通过使用 `require.ensure()` 支持 [代码分割](https://webpack.js.org/guides/code-splitting-async/) , 它使用 webpack 规范的语法然而在 Jest 及其他环境下并不适用。\n   \n这个版本，我们增加了它对[动态 `import()` 代码分割](http://2ality.com/2017/01/import-operator.html#loading-code-on-demand) 的支持，这与未来的 web 标准是一致的。 与 `require.ensure()` 不同的是, 它不会影响 Jest 的测试，并最终会成为 JavaScript 的一部分。我们建议你使用 `import()` 来对不必要的组件的代码做延迟加载。\n\n![Creating chunks with dynamic import](../img/blog/cra-dynamic-import.gif)\n\n### 更好的控制台输出\n\n>*本功能开发者是 [@gaearon](https://github.com/gaearon) 于 [#2120](https://github.com/facebookincubator/create-react-app/pull/2120)， [#2125](https://github.com/facebookincubator/create-react-app/pull/2125)， 和 [#2161](https://github.com/facebookincubator/create-react-app/pull/2161)。*\n\n新版的 Create React App 改善了控制台的输出。\n\n举个例子，当你启动测试服务时，新版的 Create React App 除了会显示本地地址之外，还会显示局域网ip地址，这样你就能更快的用你的手机测试应用了：\n\n![Better console output](../img/blog/cra-better-output.png) \n\n当代码错误报告出来了，我们将不再展示警告信息以便你集中注意力到更严重的问题上。错误和警告信息在生产环境下的展示也被优化了，而且构建错误的弹出字体跟浏览器字体匹配度更高了。\n\n### 别急... 还有干货！\n\n虽然讲了很多，但是这个版本中还有许多未能介绍的新特性，比如 [environment-specific and local `.env` files](https://github.com/facebookincubator/create-react-app/pull/1344)，[a lint rule against confusingly named globals](https://github.com/facebookincubator/create-react-app/pull/2130)，[support for multiple proxies in development](https://github.com/facebookincubator/create-react-app/pull/1790)， [a customizable browser launch script](https://github.com/facebookincubator/create-react-app/pull/1590)以及许多 bug 修复。\n\n更多信息请参阅升级文档 [v1.0.0 发布详情](https://github.com/facebookincubator/create-react-app/releases/tag/v1.0.0)。\n\n### 致谢\n\n这个发布版本是 React 社区的许多成员共同奋斗几个月的成果。我们旨在同时提升开发者的开发体验和用户的使用体验，因为我们坚信，这二者是互相补充携手并进的。\n\n我们很感谢 [参与贡献的每个人](https://github.com/facebookincubator/create-react-app/graphs/contributors), 无论是贡献代码, 文档, 或者为他人提供帮助。我们尤其要感谢 [Joe Haddad](https://github.com/timer) 为了维护项目所付出的巨大努力。\n\n我们非常高兴为使用 Create React App 的开发者带来着这些改进，我们会继续期待着你们的反馈和贡献。\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "c4ac9f544a3cd543cfccecb2357eb185",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "What's New in Create React App",
        "author": [
          "gaearon"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2017-05-18-whats-new-in-create-react-app.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2017-05-18-whats-new-in-create-react-app.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2017-05-18-whats-new-in-create-react-app.md",
      "fields": {
        "date": "2017-05-17T16:00:00.000Z",
        "slug": "/blog/2017/05/18/whats-new-in-create-react-app.html",
        "path": "blog/2017-05-18-whats-new-in-create-react-app.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2017-09-26-react-v16.0.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2017-09-26-react-v16.0.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2017-09-26-react-v16.0.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v16.0\"\nauthor: [acdlite]\n---\n\n我们非常激动地宣布 React v16.0 发布了！这些变更包含了一些存在已久的特性，包括[**碎片（fragments）**](#new-render-return-types-fragments-and-strings)，[**错误边界**](#better-error-handling)，[**portals**](#portals)，支持[**自定义 DOM 属性**](#support-for-custom-dom-attributes)，提升[**服务端渲染**]以及[**减小库的大小**](#reduced-file-size)。\n\n### 新的渲染返回类型：碎片和字符串\n\n现在你可以从组件的渲染方法中返回一个包含元素的数组。类似于其他数组，但你需要为每一个元素添加key以避免警告：\n\n```js\nrender() {\n  // No need to wrap list items in an extra element!\n  return [\n    // Don't forget the keys :)\n    <li key=\"A\">First item</li>,\n    <li key=\"B\">Second item</li>,\n    <li key=\"C\">Third item</li>,\n  ];\n}\n```\n\n未来，我们很可能会给 JSX 增加一种不需要 key 的特殊碎片语法。\n\n我们也添加了对返回字符串的支持：\n\n```js\nrender() {\n  return 'Look ma, no spans!';\n}\n```\n\n[查看完整的支持的返回类型列表](/docs/react-component.html#render)。\n\n### 更好的错误处理\n\n之前，渲染时的运行错误会使得 React 进入错误状态，生成加密的错误信息并需要页面进行刷新。为处理这一问题， React 16 使用了更具弹性的错误处理策略。默认情况下，若错误在组件内的渲染或生命周期方法被抛出，整个组件从根开始都不会渲染。这阻止了错误信息的显示。然而，其也可能不是理想的用户体验。\n\n你可以使用错误边界，而非每次出现错误时卸载整个应用。错误边界是用以在子树内部捕获错误并在其位置展示回退 UI 的特殊组件。可以认为错误边界类似于 try-catch 语句，但针对 React 组件。\n\n更多细节，查看我们[之前的关于 React 16 的错误处理的文章](/blog/2017/07/26/error-handling-in-react-16.html)。\n\n\n### Portals\n\nPortals 提供了一种很好的将子节点渲染到父组件以外的 DOM 节点的方式。\n\n```js\nrender() {\n  // React does *not* create a new div. It renders the children into `domNode`.\n  // `domNode` is any valid DOM node, regardless of its location in the DOM.\n  return ReactDOM.createPortal(\n    this.props.children,\n    domNode,\n  );\n}\n```\n\n可以在 [关于 portals 的文档](/docs/portals.html) 查看完成的例子。\n\n### 更好的服务端渲染\n\nReact 16 包含了一个完全重写的服务端渲染器。其是真的快。支持**流**，因此你能够更快地将数据发送到客户端。同时由于[新的打包策略](#reduced-file-size) 即编译不再进行 `process.env` 检查（不论你相信与否，在 Node 中读取 `process.env` 是真的慢！），你不再需要打包React以获得良好的服务端渲染性能。\n\n核心团队成员 Sasha Aickin 写了一篇[不错的描述 React 16 服务端渲染的提升](https://medium.com/@aickin/whats-new-with-server-side-rendering-in-react-16-9b0d78585d67)。根据 Sasha 的综合的基准测试，React 16 的服务端渲染要比 React 15 快大概**三倍**。“与带有 `process.env` 编译后 React 15 比较，在 Node 4 下大约有 2.4x 的性能提升，在 Node 6 下大概有 3.x 的性能提升，在新发布的 Node 8.4下有 3.8x 的性能提升。若与未编译的 React 15进行比较，在最新版本的 Node下，React 16 在服务端渲染有一整个量级的增益！”（根据 Sasha 指出，请注意这些数字是基于综合的基准测试得出的并不一定能反映出真实的性能。）\n\n此外，一旦到达客户端，React 16 更擅长于保留服务端的HTML。其不再要求初始渲染完全匹配服务端的渲染结果。相反，其会尝试尽可能重用现有的 DOM 元素。不再进行 checksums 校验！通常来讲，我们不推荐在客户端渲染和服务端不同的内容，但在某些情况是有用的（例如：时间戳）。\n\n查看[关于 `ReactDOMServer` 的文档](/docs/react-dom-server.html) 了解更多细节。\n\n### 支持自定义 DOM 属性\n\nReact 现在会[将自定义属性传递给 DOM](https://facebook.github.io/react/blog/2017/09/08/dom-attributes-in-react-16.html)，而不是忽略不认识的 HTML 和 SVG 属性。这使得我们能够不必在维护的 React 特性的白名单，并能够减少文件体积。\n\n### 减少文件体积\n\n除了这些外，React 16 确实要小于 15.6.1！\n\n* `react` 从20.7kb（gzip 后：6.9 kb）减至大小为 5.3 kb（gzip 后：2.2 kb）。\n* `react-dom` 从141 kb（gzip 后：42.9 kb）减至 103.7 kb（gzip 后：32.6 kb）。\n* `react` + `react-dom` 从 161.7 kb（gzip 后：49.8 kb）减至 109 kb（gzip 后：34.8 kb）\n\n二者结合**相较于之前的版本体积减少了32%（gzip 后30%）。**\n\n体积的差异主要因为包的变化。React 现在使用 [Rollup](https://rollupjs.org/) 来进行扁平化的打包以处理不同目标格式，而这使得体积和性能都有了提高。扁平化的包格式也意味着 React 对包的体积大小影响大致一直，无论你如何运行你的应用程序，无论是使用 Webpack、Browserify 还是预构建的 UMD 包或其他系统。\n\n### MIT 协议\n\n[以防你错过](https://code.facebook.com/posts/300798627056246/relicensing-react-jest-flow-and-immutable-js/)，React 16 使用 MIT 协议。我们也为那些无法立刻升级的人在 MIT 协议下发布了 React 15.6.2。\n\n### 新核心架构\n\nReact 16 是第一个从顶层采用全新的核心架构的版本，代号 “Fiber”。你可以在[Facebook 的工程博客](https://code.facebook.com/posts/1716776591680069/react-16-a-look-inside-an-api-compatible-rewrite-of-our-frontend-ui-library/)上了解这一项目。（Spoiler：我们重写了 React！）\n\nFiber 负责大部分 React 16 里的新特性，例如错误边界和 fragments。而在接下来的几个版本中，你可以期待我们解锁更多 React 的潜在特性。\n\n可能目前我们的工作最为激动的领域是 **异步渲染** - 一种周期性地对浏览器执行调度渲染工作的策略。结果如下，通过异步渲染，应用能够更好的响应，因为 React 避免阻塞了主线程。\n\n这一示例为异步渲染可以解决的问题提供了一个先导（译注：即异步渲染可以解决什么样的问题）：\n\n<blockquote class=\"twitter-tweet\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\">有考虑过什么是 &quot;异步渲染&quot;？这有一个 Demo 展示了如何在无 React 下协调异步 React 树工作。\n<a href=\"https://t.co/3snoahB3uV\">https://t.co/3snoahB3uV</a>\n<a href=\"https://t.co/egQ988gBjR\">pic.twitter.com/egQ988gBjR</a></p>&mdash; Andrew Clark (@acdlite) <a href=\"https://twitter.com/acdlite/status/909926793536094209\">September 18, 2017</a></blockquote>\n\n*提示：留意旋转的黑色方块。*\n\n我们认为异步渲染是一次大动作，并代表了 React 的未来。为保证尽可能平稳地迁移到 v16.0，我们目前仍并没有支持异步特性，但我们非常期待能在接下来几个月将他们推出。保持关注！\n\n## 安装\n\nReact v16.0.0 已可通过 npm 进行安装。\n\n通过 Yarn 安装 React 16，执行：\n\n```bash\nyarn add react@^16.0.0 react-dom@^16.0.0\n```\n\n通过 npm 安装 React 16，执行：\n\n```bash\nnpm install --save react@^16.0.0 react-dom@^16.0.0\n```\n\n我们也通过CDN提供了 UMD 方式构建的 React：\n\n```html\n<script crossorigin src=\"https://unpkg.com/react@16/umd/react.production.min.js\"></script>\n<script crossorigin src=\"https://unpkg.com/react-dom@16/umd/react-dom.production.min.js\"></script>\n```\n\n[关于安装说明的细节](/docs/installation.html)可以查看文档。\n\n## 升级\n\n尽管 React 16 包含了重大的内部变更，就升级而言，你可以认为这和其他主要版本的 React 发布类似。自今年早些时候我们已经用 React 16 服务了 Facebook 和 Messenger.com的用户，同时我们发布几个 beta 版本和 补丁 版本以解决额外的问题。除了一些小的意外，**若你的应用运行在 15.6 版本上且没有任何警告，那么其应该也能够在 16 下正常工作。**\n\n### 新的弃用\n\n保留（Hydrating）服务端渲染的容器现在有了更清晰的 API 定义。若你想重用服务端渲染的 HTML，使用 [`ReactDOM.hydrate`](/docs/react-dom.html#hydrate) 而不是 `ReactDOM.render`。若你只是想做客户端渲染则继续使用 `ReactDOM.render` 即可。\n\n### React 附加套件\n\n如之前宣称，我们[不再为 React Addons 增加支持](/blog/2017/04/07/react-v15.5.0.html#discontinuing-support-for-react-addons)。我们期望每个附加套件（除`react-addons-perf`；查看之前）能够在可见的未来中继续工作，但我们不会再发布额外的更新。\n\n关于[如何迁移的建议](/blog/2017/04/07/react-v15.5.0.html#discontinuing-support-for-react-addons)可以参考之前的博客。\n\n`react-addons-perf` 无法在React 16中继续工作。在之后我们可能会发布一个新版工具。同时，你可以[使用你的浏览器性能工具来测量 React 组件](/docs/optimizing-performance.html#profiling-components-with-the-chrome-performance-tab)。\n\n### 更新\n\nReact 16 包含了一系列小的变革。这些变革仅会影响一些不常用的示例，而我们并不希望他们会干扰大多数应用。\n\n* React 15 已对使用 `unstable_handleError` 进行了限制，不再为错误边界提供文档支持。该方法已重命名为 `componentDidCatch`。你可以使用 codemod来[自动地迁移代码到新的 API](https://github.com/reactjs/react-codemod#error-boundaries)。\n* 若在生命周期方法内部调用 `ReactDOM.render` 和 `ReactDOM.unstable_renderIntoContainer` ，则其返回空。为使其继续工作，你可以使用 [portals](https://github.com/facebook/react/issues/10309#issuecomment-318433235) 或 [refs](https://github.com/facebook/react/issues/10309#issuecomment-318434635)。\n* `setState`:\n  * 通过 null 调用 `setState` 不再触发更新。这允许你确定在更新函数里你是否想要重新渲染。\n  * 在 render 方法里调用 `setState` 会触发更新。这不同于之前。无论如何，你不应该在 render 里调用 setState。\n  * `setState` 回调函数（第二个参数）现在会在 `componentDidMount` / `componentDidUpdate`之后立刻触发，而非等到所有组件都已渲染。\n* 当使用 `<B />` 来替换 `<A />`，`B.componentWillMount` 现在会在 `A.componentWillUnmount` 之前触发。之前，在某些情况下，`A.componentWillUnmount` 会立刻触发。\n* 之前，改变组件的引用总会导致在组件渲染之前解除引用。现在当修改 DOM 节点时，我们将引用的调整置后。\n* 重渲到一个并非由 React 修改的容器里的方式并不安全。这在之前某些情况能够工作但 React 不再支持。现在我们在这一情况下会触发一个警告。你应该清理你组件树中使用 `ReactDOM.unmountComponentAtNode` 的组件。[查看这一例子。](https://github.com/facebook/react/issues/10294#issuecomment-318820987)\n* `componentDidUpdate` 生命周期方法将不再传递 `prevContext` 参数。（查看 [#8631](https://github.com/facebook/react/issues/8631)）\n* 浅渲染器不再调用 `componentDidUpdate` 因为 DOM 引用并不可用。这也和 `componentDidMount` 保持一致（之前的版本亦不会调用 `componentDidMount` ）。\n* 浅渲染器不再实现 `unstable_batchedUpdates`\n\n### 包\n\n* 不再有 `react/lib/*` 和 `react-dom/lib/*`。即使在 CommonJS 环境下，React 和 ReactDOM也会预编译为单文件（“扁平包（flat bundles）”）。若你之前依赖于文档未标明的 React 内部方法，则他们不再有效，可以在新的 issue 说明你的具体情况，同时我们也会尽可能为你提供迁移建议。\n* 不再有 `react-with-addons.js` 构建包。所有兼容的附加组件都单独地在 npm 上发布，若你需要，也对应有单文件的浏览器版本。\n* 在 15.x 介绍的弃用已经从核心 package 中移除。`React.createClass` 可用 `create-react-class` 来替代，`React.PropTypes` 用 `prop-types` 来代替，`react-dom-factories` 来代替 `React.DOM`，`react-dom/test-utils` 来代替 `react-addons-test-utils` 以及浅渲染器可用 `react-test-renderer/shallow`。 查看 [15.5.0](https://facebook.github.io/react/blog/2017/04/07/react-v15.5.0.html) 和 [15.6.0](https://facebook.github.io/react/blog/2017/06/13/react-v15.6.0.html) 的博客文章来了解代码迁移和自动化代码修改（codemods）的建议。\n* 对于单文件的浏览器构建版本名字和路径做了调整以强调开发和生产版本之前的差异。例如：\n    * `react/dist/react.js` → `react/umd/react.development.js`\n    * `react/dist/react.min.js` → `react/umd/react.production.min.js`\n    * `react-dom/dist/react-dom.js` → `react-dom/umd/react-dom.development.js`\n    * `react-dom/dist/react-dom.min`.js → `react-dom/umd/react-dom.production.min.js`\n\n## JavaScript环境要求\n\nReact 16 依赖于集合类型 [Map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map) 和 [Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set)。若你要支持老式的可能未提供原生支持的浏览器和设备（例如 IE < 11），考虑在你的应用库中包含一个全局的 polyfill，例如 [core-js](https://github.com/zloirock/core-js) 或 [babel-polyfill](https://babeljs.io/docs/usage/polyfill/)。\n\n一个使用 core-js 支持老版浏览器的 React 16 polyfill 环境大致如下：\n\n```js\nimport 'core-js/es6/map';\nimport 'core-js/es6/set';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(\n  <h1>Hello, world!</h1>,\n  document.getElementById('root')\n);\n```\n\nReact 也依赖于 `requestAnimationFrame` （甚至包括测试环境）。一个在测试环境下的简单 shim 如下：\n\n```js\nglobal.requestAnimationFrame = function(callback) {\n  setTimeout(callback, 0);\n};\n```\n\n## 感谢\n\n一如既往，此次发布没有开源社区贡献将无法完成。感谢每一位提bug，开PR，回答问题，编写文档以及其他有所贡献的人们！\n\n尤其感谢我们的核心贡献者，尤其是在过去几周的预发布周期的卓越贡献：[Brandon Dail](https://twitter.com/aweary)，[Jason Quense](https://twitter.com/monasticpanic)，[Nathan Hunzaker](https://twitter.com/natehunzaker)，和 [Sasha Aickin](https://twitter.com/xander76)。\n",
        "type": "MarkdownRemark",
        "contentDigest": "2240933051ff279d0ba87bf6c3bcdc0b",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v16.0",
        "author": [
          "acdlite"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2017-09-26-react-v16.0.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2017-09-26-react-v16.0.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2017-09-26-react-v16.0.md",
      "fields": {
        "date": "2017-09-25T16:00:00.000Z",
        "slug": "/blog/2017/09/26/react-v16.0.html",
        "path": "blog/2017-09-26-react-v16.0.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2017-11-28-react-v16.2.0-fragment-support.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2017-11-28-react-v16.2.0-fragment-support.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2017-11-28-react-v16.2.0-fragment-support.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v16.2.0: Improved Support for Fragments\"\nauthor: [clemmy]\n---\n\nReact 16.2 现在已经发布了！最大的增加是提高了对子组件的渲染方法返回多个子元素的支持。我们称这一特性称为 *fragments*：\n\nFragment 看起来像是空的 JSX 标签。他们能够让 let you group a list of children 而无需添加额外的节点到 DOM 树上：\n\n```js\nrender() {\n  return (\n    <>\n      <ChildA />\n      <ChildB />\n      <ChildC />\n    </>\n  );\n}\n```\n\n这一令人激动的新特性能够通过 React 和 JSX 添加来实现。\n\n## 什么是 Fragments？\n\n对于一个组件来说，普遍模式是返回一个列表的子组件。用 HTML 展示这个例子的如下：\n\n```html\nSome text.\n<h2>A heading</h2>\nMore text.\n<h2>Another heading</h2>\nEven more text.\n```\n\nReact 16 之前的版本，React 实现这一功能的唯一方式是通过用一个额外的元素来包装子节点，通常使用一个 `div` 或 `span`：\n\n```js\nrender() {\n  return (\n    // Extraneous div element :(\n    <div>\n      Some text.\n      <h2>A heading</h2>\n      More text.\n      <h2>Another heading</h2>\n      Even more text.\n    </div>\n  );\n}\n```\n\n为了处理这一限制，React 16.0 增加了对[组件的 `render` 方法返回一个包含元素的数组](https://reactjs.org/blog/2017/09/26/react-v16.0.html#new-render-return-types-fragments-and-strings) 的支持。你可以将其他们放进数组里，而不用将子元素包装在一个 DOM 元素内：\n\n```jsx\nrender() {\n return [\n  \"Some text.\",\n  <h2 key=\"heading-1\">A heading</h2>,\n  \"More text.\",\n  <h2 key=\"heading-2\">Another heading</h2>,\n  \"Even more text.\"\n ];\n}\n```\n\n然而，这和普通 JSX 有一些令人混淆的区别：\n\n- 数组中的子元素必须用逗号分隔，\n- 数组中的子元素必须有一个唯一的 key 以防止 React 的 [key 警告](https://reactjs.org/docs/lists-and-keys.html#keys)。\n- 字符串必须包括在引号内。\n\n为了对 fragment 提供更好的一致性开发体验，React 现在提供了第一等的 `Fragment`组件以可以用来替换数组。\n\n```jsx{3,9}\nrender() {\n  return (\n    <Fragment>\n      Some text.\n      <h2>A heading</h2>\n      More text.\n      <h2>Another heading</h2>\n      Even more text.\n    </Fragment>\n  );\n}\n```\n\n你可以像使用其他任何元素一样使用 `<Fragment />`，而不用改变你写 JSX 的方式。没有逗号，没有 key，没有引号。\n\nFragment 能够通过 React 对象进行使用：\n\n```js\nconst Fragment = React.Fragment;\n\n<Fragment>\n  <ChildA />\n  <ChildB />\n  <ChildC />\n</Fragment>\n\n// This also works\n<React.Fragment>\n  <ChildA />\n  <ChildB />\n  <ChildC />\n</React.Fragment>\n```\n\n## JSX Fragment 语法\n\n在 Facebook, 片段（Fragments）在我们的代码库中是一个通用模式。我们期望也能被其他团队广泛采用。为了保证开发体验尽可能地便利，我们为 JSX 增加了 fragment 的语法支持：\n\n```jsx{3,9}\nrender() {\n  return (\n    <>\n      Some text.\n      <h2>A heading</h2>\n      More text.\n      <h2>Another heading</h2>\n      Even more text.\n    </>\n  );\n}\n```\n\nReact 中，类似于之前一节展示的例子，是 `<React.Fragment />` 的语法糖。（使用 JSX 的非 React 框架可能在编译时有些差异。）\n\nJSX 里的 Fragments 语法受到了来自之前技术如 [E4X](https://developer.mozilla.org/en-US/docs/Archive/Web/E4X/E4X_for_templating) 中的 `XMLList() <></>` 构造函数的激励。使用一对空标签其意味不用添加了一个实际的元素到 DOM 结构中。\n\n### 带有 key 属性的 Fragments\n\n注意 `<></>` 语法不接受属性，包括 key。\n\n若你需要一个带有 key 属性的 fragment，你可以直接使用 `<Fragment />`。一个例子是将一个集合映射到一个片段的数组 -- 例如，创建一个列表：\n\n```jsx\nfunction Glossary(props) {\n  return (\n    <dl>\n      {props.items.map(item => (\n        // Without the `key`, React will fire a key warning\n        <Fragment key={item.id}>\n          <dt>{item.term}</dt>\n          <dd>{item.description}</dd>\n        </Fragment>\n      )}\n    </dl>\n  );\n}\n```\n\n`key` 是唯一一个能够传递给 `Fragment`  的属性。未来，我们可能还会增加额外属性，如事件处理。\n\n### 在线演示\n\n你可以在 [CodePen](https://codepen.io/reactjs/pen/VrEbjE?editors=1000) 体验 JSX fragment。\n\n## Fragment 语法支持\n\n在 JSX 支持 fragment 语法将取决你用于构建应用的工具。请对 JSX 社区致力于采用新语法保持些耐心。我们也在和大多数流行项目的维护者紧密的合作:\n\n### Create React App\n\n试验性支持的 fragment 语法将会在接下来几天中加入到 Create React App。稳定版的发布可能需要更长的时间，由于我们需要等到上游项目的采纳。\n\n### Babel\n\n对于 JSX fragment 已经在 [Babel v7.0.0-beta.31](https://github.com/babel/babel/releases/tag/v7.0.0-beta.31) 及以上版本中得到支持！若你已经在使用 Babel 7，很容易将其升级到最新版本的 Babel 和 transform 插件（plugin transform）:\n\n```bash\n# for yarn users\nyarn upgrade @babel/core @babel/plugin-transform-react-jsx\n# for npm users\nnpm update @babel/core @babel/plugin-transform-react-jsx\n```\n\n或若你正在使用 [react preset](https://www.npmjs.com/package/@babel/preset-react)：\n\n```bash\n# for yarn users\nyarn upgrade @babel/core @babel/preset-react\n# for npm users\nnpm update @babel/core @babel/preset-react\n```\n\n注意 Babel 7 目前技术上仍在 beta 阶段，但[稳定版本将很快发布](https://babeljs.io/blog/2017/09/12/planning-for-7.0)。 \n\n不幸的是，目前仍然还没有对 Babel 6.x 进行支持，同时目前也没有计划反向移植到旧版中。\n\n#### Babel 以及 Webpack (babel-loader)\n\n如果你在使用 Babel 和 [Webpack](https://webpack.js.org/)，则不需要额外的步骤，因为 [babel-loader](https://github.com/babel/babel-loader) 将会使用你的同等安装的 Babel 版本。\n\n#### Babel 及其他框架\n\n如果你在使用 JSX 及非 React 框架如 Inferno 或 Preact，在 [babel-plugin-transform-react-jsx 中有一个编译选项](https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-react-jsx#pragmafrag) 能够配置 Babel 编译器使其能够将 `<></>` 这一语法糖编译为一个自定义标签。\n\n### TypeScript\n\nTypeScript 已经完全支持 fragment 语法！请升级到 [2.6.2 版本](https://github.com/Microsoft/TypeScript/releases/tag/v2.6.2)。（注意这非常重要，即使你已经升级到了 2.6.1 版本，由于这一支持是作为补丁发布在 2.6.2 上的。）\n\n使用如下命令升级到最新版本的 TypeScript：\n\n```bash\n# for yarn users\nyarn upgrade typescript\n# for npm users\nnpm update typescript\n```\n\n### Flow\n\n[Flow](https://flow.org/) 对 JSX fragment 的语法支持从 [0.59 版本](https://github.com/facebook/flow/releases/tag/v0.59.0) 开始！简单运行\n\n```bash\n# for yarn users\nyarn upgrade flow-bin\n# for npm users\nnpm update flow-bin\n```\n\n以升级到最新版本的 Flow。\n\n### Prettier\n\n[Prettier](https://github.com/prettier/prettier) 将在他们[即将发布的 1.9 版本](https://github.com/prettier/prettier/pull/3237)中支持 fragment 语法。\n\n### ESLint\n\n当其和 [babel-eslint](https://github.com/babel/babel-eslint) 一同使用时，[ESLint](https://eslint.org/) 3.x 支持 JSX fragment 语法：\n\n```bash\n# for yarn users\nyarn add eslint@3.x babel-eslint@7\n# for npm users\nnpm install eslint@3.x babel-eslint@7\n```\n\n若你已经在使用，则将其升级：\n\n```bash\n# for yarn users\nyarn upgrade eslint@3.x babel-eslint@7\n# for npm users\nnpm update eslint@3.x babel-eslint@7\n```\n\n确保将下面这行代码添加进你的 `.eslintrc.js` 文件:\n\n```json\n\"parser\": \"babel-eslint\"\n```\n\n仅此而已！\n\n注意 `babel-eslint` 并非由 ESLint 官方支持。我们将在未来几周寻求将对 fragment 的支持添加到 ESLint 4.x 上。\n\n### 编辑器支持\n\n其可能会花费些时间来让你的文本编辑器支持 fragment 语法。请对社区采纳这一最新的变更保持些耐心。同时，如果你的编辑器仍未支持 fragment 语法，你可能会看到些错误或异常的高亮语法。通常来讲，这些错误可以被安全地忽略。\n\n#### TypeScript 编辑器支持\n\n如果你是一位 TypeScript 用户 -- 好消息！[Visual Studio 2015](https://www.microsoft.com/en-us/download/details.aspx?id=48593)，[Visual Studio 2017](https://www.microsoft.com/en-us/download/details.aspx?id=55258) 以及 [Sublime Text via Package Control](https://packagecontrol.io/packages/TypeScript) 已经支持了 JSX fragment。Visual Studio Code 也将很快进行更新，但[需要配置其 TypeScript 版本为 2.6.2 及之后](https://code.visualstudio.com/Docs/languages/typescript#_using-newer-typescript-versions)。\n\n### 其他工具\n\n对于其他工具，请检查对应的文档以查看其是否支持。然而，如果你被你的工具所阻碍，你可以先采用 `<Fragment>` 组件并在工具能够正确支持之后用 codemod 将其进行替换为缩写语法。\n\n## 安装\n\nReact v16.2.0 已经发布到 npm 仓库上。\n\n通过 Yarn 安装 React 16，运行：\n\n```bash\nyarn add react@^16.2.0 react-dom@^16.2.0\n```\n\n通过 npm 安装 React 16，运行：\n\n```bash\nnpm install --save react@^16.2.0 react-dom@^16.2.0\n```\n\n我们也通过 CDN 提供了一个 UMD 构建的 React 版本：\n\n```html\n<script crossorigin src=\"https://unpkg.com/react@16/umd/react.production.min.js\"></script>\n<script crossorigin src=\"https://unpkg.com/react-dom@16/umd/react-dom.production.min.js\"></script>\n```\n\n查阅文档了解[安装细节说明](/docs/installation.html)。\n\n## 变更日志\n\n### React\n\n* 为 React 添加名为 `Fragment` 的导出（export）对象。（[@clemmy](https://github.com/clemmy) 在 [#10783](https://github.com/facebook/react/pull/10783) 提的 PR）\n* 在 `React.Children` 的工具集中增加试验性的 Call/Return 类型。（[@MatteoVH](https://github.com/MatteoVH) 在 [#11422](https://github.com/facebook/react/pull/11422) 提的 PR）\n\n### React DOM\n\n* 修复当使用多列单选按钮，单选按钮无法被选中。（[@landvibe](https://github.com/landvibe) 在 [#11227](https://github.com/facebook/react/pull/11227) 提的 PR）\n* 修复单选按钮在某些情况下无法接受到 `onChange` 事件。（[@jquense](https://github.com/jquense) 在 [#11028](https://github.com/facebook/react/pull/11028) 提的 PR）\n\n### React Test Renderer\n\n* 修复当在 `componentWillMount` 调用 `setState()` 时，其回调函数过早调用的问题。（[@accordeiro](https://github.com/accordeiro) 在 [#11507](https://github.com/facebook/react/pull/11507) 提的 PR）\n\n### React Reconciler\n\n* 发布 `react-reconciler/reflection` 帮助公用的自定义渲染器。（[@rivenhk](https://github.com/rivenhk) 在 [#11683](https://github.com/facebook/react/pull/11683) 提及的 PR）\n\n### 内部变更\n\n* 许多公开的 API 测试用例被重写。非常感谢[每一位的贡献](https://github.com/facebook/react/issues/11299)！\n\n## 感谢\n\n本次发布由我们的开源贡献者完成。非常感谢提交问题的人，对语法讨论的贡献和审阅 PR，在第三方库中增加 JSX fragment 支持等等！\n\n尤为感谢  [TypeScript](https://www.typescriptlang.org/) 和 [Flow](https://flow.org/) 团队，以及 [Babel](https://babeljs.io/) 的维护者们，帮助为新语法在工具上提供了无缝支持。\n\n感谢 [Gajus Kuizinas](https://github.com/gajus/) 和其他贡献者在开源社区提出了 `Fragment` 的原型。\n",
        "type": "MarkdownRemark",
        "contentDigest": "5393987158b053019eec327700c60d81",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v16.2.0: Improved Support for Fragments",
        "author": [
          "clemmy"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2017-11-28-react-v16.2.0-fragment-support.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2017-11-28-react-v16.2.0-fragment-support.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2017-11-28-react-v16.2.0-fragment-support.md",
      "fields": {
        "date": "2017-11-27T16:00:00.000Z",
        "slug": "/blog/2017/11/28/react-v16.2.0-fragment-support.html",
        "path": "blog/2017-11-28-react-v16.2.0-fragment-support.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2018-05-23-react-v-16-4.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2018-05-23-react-v-16-4.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2018-05-23-react-v-16-4.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v16.4.0: Pointer Events\"\nauthor: [acdlite]\n---\n\n最新的版本（16.4.0）增加了对经常请求的特性——指针事件的支持；\n\n这个版本也包含了对于 `getDerivedStateFromProps` 的bug修复工作。\n\nIt also includes a bugfix for `getDerivedStateFromProps`. 查看下面完整的[更新日志](#changelog) 。\n\n## 指针事件\n\n在 React DOM 中，现在可以使用如下指针事件：\n\n- `onPointerDown`\n- `onPointerMove`\n- `onPointerUp`\n- `onPointerCancel`\n- `onGotPointerCapture`\n- `onLostPointerCapture`\n- `onPointerEnter`\n- `onPointerLeave`\n- `onPointerOver`\n- `onPointerOut`\n\n请注意，这些事件只能在支持 [指针事件](https://developer.mozilla.org/en-US/docs/Web/API/Pointer_events) 规范的浏览器中工作。(在编写本文时，包括Chrome、Firefox、Edge和Internet Explorer的最新版本。) 如果你的应用程序依赖于指针事件，我们建议使用第三方指针事件 polyfill 。为了避免增加包文件的大小，我们在 React DOM 中不包含这样的 polyfill。（译者注：Polyfill 是一块代码，用来为旧浏览器提供它没有原生支持的较新的功能。）\n\n[在沙箱中查看运行这个案例。](codesandbox://16-4-release-blog-post/pointer-events-example)\n\n非常感谢 [Philipp Spiess](https://github.com/philipp-spiess) 对于这个改变的巨大贡献！\n\n## 修复 `getDerivedStateFromProps` bug\n\n不管更新的原因是什么，`getDerivedStateFromProps` 这个函数在组件的每一次渲染中都会被调用。以前，只有当父组件重新渲染时，才会调用这个函数。同时，当这个组件执行`setState`时不会触发这个函数。这是在最初实施时的疏忽造成的 bug，现在已经修复。这个函数之前的行为更类似于`compoenentWillReceiveProps`这个函数。但是，改进后的行为确保了与 React 框架即将推出的异步渲染模式的兼容。\n\n**这个 bug 修复不会影响大部分应用。**但是可能会造成一小部分组件部分的问题。这些罕见的案例主要影响在两个大类：\n\n### 1. 避免`getDerivedStateFromProps`函数的副作用\n\n就像渲染的方法，`getDerivedStateFromProps` 函数应该是一个纯净的 props 和 state 的函数。这个函数的副作用在 `getDerivedStateFromProps`从来没有支持。但由于它现在比过去的任何时候更受欢迎，最近的变化可能暴露出之前未被发现的一些bug。\n\n函数产生副作用的代码，应该移动到其他方法中。例如，流量分派方法，通常属于原始事件处理程序内；手动DOM变化方法，通常属于内部 componentDidMount 或 componentDidUpdate 生命周琼函数中。你可以在我们最近关于准备发布的[异步呈现文章](/blog/2018/03/27/update-on-async-rendering.html)中，了解更多信息。\n\n### 2. 计算受控属性时，将新 props 和上一个 props 进行比较\n\n下面的代码假设 `getDerivedStateFromProps` 函数只在 props 更新的时候触发：\n\n```js\nstatic getDerivedStateFromProps(props, state) {\n  if (props.value !== state.controlledValue) {\n    return {\n      // Since this method fires on both props and state changes, local updates\n      // to the controlled value will be ignored, because the props version\n      // always overrides it. Oops!\n      controlledValue: props.value,\n    };\n  }\n  return null;\n}\n```\n\n解决这个问题的可能的方法是：将传入值与前一个值进行比较。具体方法是将前面的 props存储在 state 中。\n\n```js\nstatic getDerivedStateFromProps(props, state) {\n  const prevProps = state.prevProps;\n  // Compare the incoming prop to previous prop\n  const controlledValue =\n    prevProps.value !== props.value\n      ? props.value\n      : state.controlledValue;\n  return {\n    // Store the previous props in state\n    prevProps: props,\n    controlledValue,\n  };\n}\n```\n\n然而， **在 state 中存储“镜像” props 通常会包含 bug**， 不管你使用新的 `getDerivedStateFromProps` 函数，或者旧的 `componentWillReceiveProps` 函数。我们发表了一篇后续的博客文章，更详细地解释了这些问题， 并且提出了[不涉及`getDerivedStateFromProps()`函数的更简单的解决方案](/blog/2018/06/07/you-probably-dont-need-derived-state.html)。\n\n## 安装\n\n你可以通过 npm 获取 React 16.4.0 版本。\n\n使用 Yarn 安装 React 16 版本，运行下面的代码：\n\n```bash\nyarn add react@^16.4.0 react-dom@^16.4.0\n```\n\n使用 npm 安装安装 React 16 版本，运行下面的代码：\n\n```bash\nnpm install --save react@^16.4.0 react-dom@^16.4.0\n```\n\n我们也提供了通过 CDN 的 UMD 方式搭建一个 React：\n\n```html\n<script crossorigin src=\"https://unpkg.com/react@16/umd/react.production.min.js\"></script>\n<script crossorigin src=\"https://unpkg.com/react-dom@16/umd/react-dom.production.min.js\"></script>\n```\n\n请参阅文档获取详细的[安装方法](/docs/installation.html)。\n\n## 更新日志\n\n### React\n\n* Add a new [experimental](https://github.com/reactjs/rfcs/pull/51) `React.unstable_Profiler` component for measuring performance. ([@bvaughn](https://github.com/bvaughn) in [#12745](https://github.com/facebook/react/pull/12745))\n\n### React DOM\n\n* Add support for the Pointer Events specification. ([@philipp-spiess](https://github.com/philipp-spiess) in [#12507](https://github.com/facebook/react/pull/12507))\n* Properly call `getDerivedStateFromProps()` regardless of the reason for re-rendering. ([@acdlite](https://github.com/acdlite) in [#12600](https://github.com/facebook/react/pull/12600) and [#12802](https://github.com/facebook/react/pull/12802))\n* Fix a bug that prevented context propagation in some cases. ([@gaearon](https://github.com/gaearon) in [#12708](https://github.com/facebook/react/pull/12708))\n* Fix re-rendering of components using `forwardRef()` on a deeper `setState()`. ([@gaearon](https://github.com/gaearon) in [#12690](https://github.com/facebook/react/pull/12690))\n* Fix some attributes incorrectly getting removed from custom element nodes. ([@airamrguez](https://github.com/airamrguez) in [#12702](https://github.com/facebook/react/pull/12702))\n* Fix context providers to not bail out on children if there's a legacy context provider above. ([@gaearon](https://github.com/gaearon) in [#12586](https://github.com/facebook/react/pull/12586))\n* Add the ability to specify `propTypes` on a context provider component. ([@nicolevy](https://github.com/nicolevy) in [#12658](https://github.com/facebook/react/pull/12658))\n* Fix a false positive warning when using `react-lifecycles-compat` in `<StrictMode>`. ([@bvaughn](https://github.com/bvaughn) in [#12644](https://github.com/facebook/react/pull/12644))\n* Warn when the `forwardRef()` render function has `propTypes` or `defaultProps`. ([@bvaughn](https://github.com/bvaughn) in [#12644](https://github.com/facebook/react/pull/12644))\n* Improve how `forwardRef()` and context consumers are displayed in the component stack. ([@sophiebits](https://github.com/sophiebits) in [#12777](https://github.com/facebook/react/pull/12777))\n* Change internal event names. This can break third-party packages that rely on React internals in unsupported ways. ([@philipp-spiess](https://github.com/philipp-spiess) in [#12629](https://github.com/facebook/react/pull/12629))\n\n### React Test Renderer\n\n* Fix the `getDerivedStateFromProps()` support to match the new React DOM behavior. ([@koba04](https://github.com/koba04) in [#12676](https://github.com/facebook/react/pull/12676))\n* Fix a `testInstance.parent` crash when the parent is a fragment or another special node. ([@gaearon](https://github.com/gaearon) in [#12813](https://github.com/facebook/react/pull/12813))\n* `forwardRef()` components are now discoverable by the test renderer traversal methods. ([@gaearon](https://github.com/gaearon) in [#12725](https://github.com/facebook/react/pull/12725))\n* Shallow renderer now ignores `setState()` updaters that return `null` or `undefined`. ([@koba04](https://github.com/koba04) in [#12756](https://github.com/facebook/react/pull/12756))\n\n### React ART\n\n* Fix reading context provided from the tree managed by React DOM. ([@acdlite](https://github.com/acdlite) in [#12779](https://github.com/facebook/react/pull/12779))\n\n### React Call Return (Experimental)\n\n* This experiment was deleted because it was affecting the bundle size and the API wasn't good enough. It's likely to come back in the future in some other form. ([@gaearon](https://github.com/gaearon) in [#12820](https://github.com/facebook/react/pull/12820))\n\n### React Reconciler (Experimental)\n\n* The [new host config shape](https://github.com/facebook/react/blob/c601f7a64640290af85c9f0e33c78480656b46bc/packages/react-noop-renderer/src/createReactNoop.js#L82-L285) is flat and doesn't use nested objects. ([@gaearon](https://github.com/gaearon) in [#12792](https://github.com/facebook/react/pull/12792))\n",
        "type": "MarkdownRemark",
        "contentDigest": "6e704f8b41829d94dd4b59bbd09aacd5",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v16.4.0: Pointer Events",
        "author": [
          "acdlite"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2018-05-23-react-v-16-4.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2018-05-23-react-v-16-4.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2018-05-23-react-v-16-4.md",
      "fields": {
        "date": "2018-05-22T16:00:00.000Z",
        "slug": "/blog/2018/05/23/react-v-16-4.html",
        "path": "blog/2018-05-23-react-v-16-4.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2018-09-10-introducing-the-react-profiler.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2018-09-10-introducing-the-react-profiler.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2018-09-10-introducing-the-react-profiler.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Introducing the React Profiler\"\nauthor: [bvaughn]\n---\nReact 16.5 adds support for a new DevTools profiler plugin.\nThis plugin uses React's [experimental Profiler API](https://github.com/reactjs/rfcs/pull/51) to collect timing information about each component that's rendered in order to identify performance bottlenecks in React applications.\nIt will be fully compatible with our upcoming [time slicing and suspense](/blog/2018/03/01/sneak-peek-beyond-react-16.html) features.\n\nThis blog post covers the following topics:\n* [Profiling an application](#profiling-an-application)\n* [Reading performance data](#reading-performance-data)\n  * [Browsing commits](#browsing-commits)\n  * [Filtering commits](#filtering-commits)\n  * [Flame chart](#flame-chart)\n  * [Ranked chart](#ranked-chart)\n  * [Component chart](#component-chart)\n  * [Interactions](#interactions)\n* [Troubleshooting](#troubleshooting)\n  * [No profiling data has been recorded for the selected root](#no-profiling-data-has-been-recorded-for-the-selected-root)\n  * [No timing data to display for the selected commit](#no-timing-data-to-display-for-the-selected-commit)\n* [Deep dive video](#deep-dive-video)\n\n## Profiling an application\n\nDevTools will show a \"Profiler\" tab for applications that support the new profiling API:\n\n![New DevTools \"profiler\" tab](../images/blog/introducing-the-react-profiler/devtools-profiler-tab.png)\n\n> Note:\n>\n> `react-dom` 16.5+ supports profiling in DEV mode.\n> A production profiling bundle is also available as `react-dom/profiling`.\n> Read more about how to use this bundle at [fb.me/react-profiling](https://fb.me/react-profiling) \n\nThe \"Profiler\" panel will be empty initially. Click the record button to start profiling:\n\n![Click \"record\" to start profiling](../images/blog/introducing-the-react-profiler/start-profiling.png)\n\nOnce you've started recording, DevTools will automatically collect performance information each time your application renders.\nUse your app as you normally would.\nWhen you are finished profiling, click the \"Stop\" button.\n\n![Click \"stop\" when you are finished profiling](../images/blog/introducing-the-react-profiler/stop-profiling.png)\n\nAssuming your application rendered at least once while profiling, DevTools will show several ways to view the performance data.\nWe'll [take a look at each of these below](#reading-performance-data).\n\n## Reading performance data\n\n### Browsing commits\nConceptually, React does work in two phases:\n\n* The **render** phase determines what changes need to be made to e.g. the DOM. During this phase, React calls `render` and then compares the result to the previous render.\n* The **commit** phase is when React applies any changes. (In the case of React DOM, this is when React inserts, updates, and removes DOM nodes.) React also calls lifecycles like `componentDidMount` and `componentDidUpdate` during this phase.\n\nThe DevTools profiler groups performance info by commit.\nCommits are displayed in a bar chart near the top of the profiler:\n\n![Bar chart of profiled commits](../images/blog/introducing-the-react-profiler/commit-selector.png)\n\nEach bar in the chart represents a single commit with the currently selected commit colored black.\nYou can click on a bar (or the left/right arrow buttons) to select a different commit.\n\nThe color and height of each bar corresponds to how long that commit took to render.\n(Taller, yellow bars took longer than shorter, blue bars.)\n\n### Filtering commits\n\nThe longer you profile, the more times your application will render.\nIn some cases you may end up with _too many commits_ to easily process.\nThe profiler offers a filtering mechanism to help with this.\nUse it to specify a threshold and the profiler will hide all commits that were _faster_ than that value.\n\n![Filtering commits by time](../images/blog/introducing-the-react-profiler/filtering-commits.gif)\n\n### Flame chart\n\nThe flame chart view represents the state of your application for a particular commit.\nEach bar in the chart represents a React component (e.g. `App`, `Nav`).\nThe size and color of the bar represents how long it took to render the component and its children.\n(The width of a bar represents how much time was spent _when the component last rendered_ and the color represents how much time was spent _as part of the current commit_.)\n\n![Example flame chart](../images/blog/introducing-the-react-profiler/flame-chart.png)\n\n> Note:\n>\n> The width of a bar indicates how long it took to render the component (and its children) when they last rendered.\n> If the component did not re-render as part of this commit, the time represents a previous render.\n> The wider a component is, the longer it took to render.\n> \n> The color of a bar indicates how long the component (and its children) took to render in the selected commit.\n> Yellow components took more time, blue components took less time, and gray components did not render at all during this commit.\n\nFor example, the commit shown above took a total of 18.4ms to render.\nThe `Router` component was the \"most expensive\" to render (taking 18.4ms).\nMost of this time was due to two of its children, `Nav` (8.4ms) and `Route` (7.9ms).\nThe rest of the time was divided between its remaining children or spent in the component's own render method.\n\nYou can zoom in or out on a flame chart by clicking on components:\n![Click on a component to zoom in or out](../images/blog/introducing-the-react-profiler/zoom-in-and-out.gif)\n\nClicking on a component will also select it and show information in the right side panel which includes its `props` and `state` at the time of this commit.\nYou can drill into these to learn more about what the component actually rendered during the commit:\n\n![Viewing a component's props and state for a commit](../images/blog/introducing-the-react-profiler/props-and-state.gif)\n\nIn some cases, selecting a component and stepping between commits may also provide a hint as to _why_ the component rendered:\n\n![Seeing which values changed between commits](../images/blog/introducing-the-react-profiler/see-which-props-changed.gif)\n\nThe above image shows that `state.scrollOffset` changed between commits.\nThis is likely what caused the `List` component to re-render.\n\n### Ranked chart\n\nThe ranked chart view represents a single commit.\nEach bar in the chart represents a React component (e.g. `App`, `Nav`).\nThe chart is ordered so that the components which took the longest to render are at the top.\n\n![Example ranked chart](../images/blog/introducing-the-react-profiler/ranked-chart.png)\n\n> Note:\n>\n> A component's render time includes the time spent rendering its children,\n> so the components which took the longest to render are generally near the top of the tree.\n\nAs with the flame chart, you can zoom in or out on a ranked chart by clicking on components.\n\n### Component chart\n\nSometimes it's useful to see how many times a particular component rendered while you were profiling.\nThe component chart provides this information in the form of a bar chart.\nEach bar in the chart represents a time when the component rendered.\nThe color and height of each bar corresponds to how long the component took to render _relative to other components_ in a particular commit.\n\n![Example component chart](../images/blog/introducing-the-react-profiler/component-chart.png)\n\nThe chart above shows that the `List` component rendered 11 times.\nIt also shows that each time it rendered, it was the most \"expensive\" component in the commit (meaning that it took the longest).\n\nTo view this chart, either double-click on a component _or_ select a component and click on the blue bar chart icon in the right detail pane.\nYou can return to the previous chart by clicking the \"x\" button in the right detail pane.\nYou can aso double click on a particular bar to view more information about that commit.\n\n![How to view all renders for a specific component](../images/blog/introducing-the-react-profiler/see-all-commits-for-a-fiber.gif)\n\nIf the selected component did not render at all during the profiling session, the following message will be shown:\n\n![No render times for the selected component](../images/blog/introducing-the-react-profiler/no-render-times-for-selected-component.png)\n\n### Interactions\n\nReact recently added another [experimental API](https://fb.me/react-interaction-tracing) for tracing the _cause_ of an update.\n\"Interactions\" traced with this API will also be shown in the profiler:\n\n![The interactions panel](../images/blog/introducing-the-react-profiler/interactions.png)\n\nThe image above shows a profiling session that traced four interactions.\nEach row represents an interaction that was traced.\nThe colored dots along the row represent commits that were related to that interaction.\n\nYou can also see which interactions were traced for a particular commit from the flame chart and ranked chart views as well:\n\n![List of interactions for a commit](../images/blog/introducing-the-react-profiler/interactions-for-commit.png)\n\nYou can navigate between interactions and commits by clicking on them:\n\n![Navigate between interactions and commits](../images/blog/introducing-the-react-profiler/navigate-between-interactions-and-commits.gif)\n\nThe tracing API is still new and we will cover it in more detail in a future blog post.\n\n## Troubleshooting\n\n### No profiling data has been recorded for the selected root\n\nIf your your application has multiple \"roots\", you may see the following message after profiling:\n![No profiling data has been recorded for the selected root](../images/blog/introducing-the-react-profiler/no-profiler-data-multi-root.png)\n\nThis message indicates that no performance data was recorded for the root that's selected in the \"Elements\" panel.\nIn this case, try selecting a different root in that panel to view profiling information for that root:\n\n![Select a root in the \"Elements\" panel to view its performance data](../images/blog/introducing-the-react-profiler/select-a-root-to-view-profiling-data.gif)\n\n### No timing data to display for the selected commit\n\nSometimes a commit may be so fast that `performance.now()` doesn't give DevTools any meaningful timing information.\nIn this case, the following message will be shown:\n\n![No timing data to display for the selected commit](../images/blog/introducing-the-react-profiler/no-timing-data-for-commit.png)\n\n## Deep dive video\n\nThe following video demonstrates how the React profiler can be used to detect and improve performance bottlenecks in an actual React application.\n\n<br>\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube-nocookie.com/embed/nySib7ipZdk?rel=0\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>\n",
        "type": "MarkdownRemark",
        "contentDigest": "90185d9f67116247d662aa53df9d375a",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Introducing the React Profiler",
        "author": [
          "bvaughn"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2018-09-10-introducing-the-react-profiler.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2018-09-10-introducing-the-react-profiler.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2018-09-10-introducing-the-react-profiler.md",
      "fields": {
        "date": "2018-09-09T16:00:00.000Z",
        "slug": "/blog/2018/09/10/introducing-the-react-profiler.html",
        "path": "blog/2018-09-10-introducing-the-react-profiler.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2018-10-01-create-react-app-v2.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2018-10-01-create-react-app-v2.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2018-10-01-create-react-app-v2.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Create React App 2.0: Babel 7, Sass, and More\"\nauthor: [timer, gaearon]\n---\n\nCreate React App 2.0 has been released today, and it brings a year's worth of improvements in a single dependency update.\n\nWhile React itself [doesn't require any build dependencies](/docs/create-a-new-react-app.html), it can be challenging to write a complex app without a fast test runner, a production minifier, and a modular codebase. Since the very first release, the goal of [Create React App](https://github.com/facebook/create-react-app) has been to help you focus on what matters the most -- your application code -- and to handle build and testing setup for you.\n\nMany of the tools it relies on have since released new versions containing new features and performance improvements: [Babel 7](https://babeljs.io/blog/2018/08/27/7.0.0), [webpack 4](https://medium.com/webpack/webpack-4-released-today-6cdb994702d4), and [Jest 23](https://jestjs.io/blog/2018/05/29/jest-23-blazing-fast-delightful-testing.html). However, updating them manually and making them work well together takes a lot of effort. And this is exactly what [Create React App 2.0 contributors](https://github.com/facebook/create-react-app/graphs/contributors) have been busy with for the past few months: **migrating the configuration and dependencies so that you don't need to do it yourself.**\n\nNow that Create React App 2.0 is out of beta, let's see what's new and how you can try it!\n\n>Note\n>\n>Don't feel pressured to upgrade anything. If you're satisfied with the current feature set, its performance, and reliability, you can keep using the version you're currently at! It might also be a good idea to let the 2.0 release stabilize a little bit before switching to it in production.\n\n## What's New\n\nHere's a short summary of what's new in this release:\n\n* 🎉 More styling options: you can use [Sass](https://github.com/facebook/create-react-app/blob/master/packages/react-scripts/template/README.md#adding-a-sass-stylesheet) and [CSS Modules](https://github.com/facebook/create-react-app/blob/master/packages/react-scripts/template/README.md#adding-a-css-modules-stylesheet) out of the box.\n* 🐠 We updated to [Babel 7](https://babeljs.io/blog/2018/08/27/7.0.0), including support for the [React fragment syntax](/docs/fragments.html#short-syntax) and many bugfixes.\n* 📦 We updated to [webpack 4](https://medium.com/webpack/webpack-4-released-today-6cdb994702d4), which automatically splits JS bundles more intelligently.\n* 🃏 We updated to [Jest 23](https://jestjs.io/blog/2018/05/29/jest-23-blazing-fast-delightful-testing.html), which includes an [interactive mode](https://jestjs.io/blog/2018/05/29/jest-23-blazing-fast-delightful-testing#interactive-snapshot-mode) for reviewing snapshots.\n* 💄 We added [PostCSS](https://preset-env.cssdb.org/features#stage-3) so you can use new CSS features in old browsers.\n* 💎 You can use [Apollo](https://github.com/leoasis/graphql-tag.macro#usage), [Relay Modern](https://github.com/facebook/relay/pull/2171#issuecomment-411459604), [MDX](https://github.com/facebook/create-react-app/issues/5149#issuecomment-425396995), and other third-party [Babel Macros](https://babeljs.io/blog/2017/09/11/zero-config-with-babel-macros) transforms.\n* 🌠 You can now [import an SVG as a React component](https://github.com/facebook/create-react-app/blob/master/packages/react-scripts/template/README.md#adding-svgs), and use it in JSX.\n* 🐈 You can try the experimental [Yarn Plug'n'Play mode](https://github.com/yarnpkg/rfcs/pull/101) that removes `node_modules`.\n* 🕸 You can now [plug your own proxy implementation](https://github.com/facebook/create-react-app/blob/master/packages/react-scripts/template/README.md#configuring-the-proxy-manually) in development to match your backend API.\n* 🚀 You can now use [packages written for latest Node versions](https://github.com/sindresorhus/ama/issues/446#issuecomment-281014491) without breaking the build.\n* ✂️ You can now optionally get a smaller CSS bundle if you only plan to target modern browsers.\n* 👷‍♀️ Service workers are now opt-in and are built using Google's [Workbox](https://developers.google.com/web/tools/workbox/).\n\n**All of these features work out of the box** -- to enable them, follow the below instructions.\n\n## Starting a Project with Create React App 2.0\n\nYou don't need to update anything special. Starting from today, when you run `create-react-app` it will use the 2.0 version of the template by default. Have fun!\n\nIf you want to **use the old 1.x template** for some reason, you can do that by passing `--scripts-version=react-scripts@1.x` as an argument to `create-react-app`.\n\n## Updating a Project to Create React App 2.0\n\nUpgrading a non-ejected project to Create React App 2.0 should usually be straightforward. Open `package.json` in the root of your project and find `react-scripts` there.\n\nThen change its version to `2.0.3`:\n\n```js{2}\n  // ... other dependencies ...\n  \"react-scripts\": \"2.0.3\"\n```\n\nRun `npm install` (or `yarn`, if you use it). **For many projects, this one-line change is sufficient to upgrade!**\n\n<blockquote class=\"twitter-tweet\" data-conversation=\"none\" data-dnt=\"true\"><p lang=\"en\" dir=\"ltr\">working here... thanks for all the new functionality 👍</p>&mdash; Stephen Haney (@sdothaney) <a href=\"https://twitter.com/sdothaney/status/1046822703116607490?ref_src=twsrc%5Etfw\">October 1, 2018</a></blockquote>\n\nHere are a few more tips to get you started.\n\n**When you run `npm start` for the first time after the upgrade,** you'll get a prompt asking about which browsers you'd like to support. Press `y` to accept the default ones. They'll be written to your `package.json` and you can edit them any time. Create React App will use this information to produce smaller or polyfilled CSS bundles depending on whether you target modern browsers or older browsers.\n\n**If `npm start` still doesn't quite work for you after the upgrade,** [check out the more detailed migration instructions in the release notes](https://github.com/facebook/create-react-app/releases/tag/v2.0.3). There *are* a few breaking changes in this release but the scope of them is limited, so they shouldn't take more than a few hours to sort out. Note that **[support for older browsers](https://github.com/facebook/create-react-app/blob/master/packages/react-app-polyfill/README.md) is now opt-in** to reduce the polyfill size.\n\n**If you previously ejected but now want to upgrade,** one common solution is to find the commits where you ejected (and any subsequent commits changing the configuration), revert them, upgrade, and later optionally eject again. It's also possible that the feature you ejected for (maybe Sass or CSS Modules?) is now supported out of the box.\n\n>Note\n>\n>Due to a possible bug in npm, you might see warnings about unsatisfied peer dependencies. You should be able to ignore them. As far as we're aware, this issue isn't present with Yarn.\n\n## Breaking Changes\n\nHere's a short list of breaking changes in this release:\n\n* Node 6 is no longer supported.\n* Support for older browsers (such as IE 9 to IE 11) is now opt-in with a [separate package](https://github.com/facebook/create-react-app/tree/master/packages/react-app-polyfill).\n* Code-splitting with `import()` now behaves closer to specification, while `require.ensure()` is disabled.\n* The default Jest environment now includes jsdom.\n* Support for specifying an object as `proxy` setting was replaced with support for a custom proxy module.\n* Support for `.mjs` extension was removed until the ecosystem around it stabilizes.\n* PropTypes definitions are automatically stripped out of the production builds.\n\nIf either of these points affects you, [2.0.3 release notes](https://github.com/facebook/create-react-app/releases/tag/v2.0.3) contain more detailed instructions.\n\n## Learn More\n\nYou can find the full changelog in the [release notes](https://github.com/facebook/create-react-app/releases/tag/v2.0.3). This was a large release, and we may have missed something. Please report any problems to our [issue tracker](https://github.com/facebook/create-react-app/issues/new) and we'll try to help.\n\n>Note\n>\n>If you've been using 2.x alpha versions, we provide [separate migration instructions](https://gist.github.com/gaearon/8650d1c70e436e5eff01f396dffc4114) for them.\n\n## Thanks\n\nThis release wouldn't be possible without our wonderful community of contributors. We'd like to thank [Andreas Cederström](https://github.com/andriijas), [Clement Hoang](https://github.com/clemmy), [Brian Ng](https://github.com/existentialism), [Kent C. Dodds](https://github.com/kentcdodds), [Ade Viankakrisna Fadlil](https://github.com/viankakrisna), [Andrey Sitnik](https://github.com/ai), [Ro Savage](https://github.com/ro-savage), [Fabiano Brito](https://github.com/Fabianopb), [Ian Sutherland](https://github.com/iansu), [Pete Nykänen](https://github.com/petetnt), [Jeffrey Posnick](https://github.com/jeffposnick), [Jack Zhao](https://github.com/bugzpodder), [Tobias Koppers](https://github.com/sokra), [Henry Zhu](https://github.com/hzoo), [Maël Nison](https://github.com/arcanis), [XiaoYan Li](https://github.com/lixiaoyan), [Marko Trebizan](https://github.com/themre), [Marek Suscak](https://github.com/mareksuscak), [Mikhail Osher](https://github.com/miraage), and many others who provided feedback and testing for this release.\n",
        "type": "MarkdownRemark",
        "contentDigest": "6be8a3f0da05f4e56bdd8a2a96b8d848",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Create React App 2.0: Babel 7, Sass, and More",
        "author": [
          "timer",
          "gaearon"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2018-10-01-create-react-app-v2.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2018-10-01-create-react-app-v2.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2018-10-01-create-react-app-v2.md",
      "fields": {
        "date": "2018-09-30T16:00:00.000Z",
        "slug": "/blog/2018/10/01/create-react-app-v2.html",
        "path": "blog/2018-10-01-create-react-app-v2.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2018-10-23-react-v-16-6.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2018-10-23-react-v-16-6.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2018-10-23-react-v-16-6.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v16.6.0: lazy, memo and contextType\"\nauthor: [sebmarkbage]\n---\n\nToday we're releasing React 16.6 with a few new convenient features. A form of PureComponent/shouldComponentUpdate for function components, a way to do code splitting using Suspense and an easier way to consume Context from class components.\n\nCheck out the full [changelog](#changelog) below.\n\n## [`React.memo`](/docs/react-api.html#reactmemo)\n\nClass components can bail out from rendering when their input props are the same using [`PureComponent`](/docs/react-api.html#reactpurecomponent) or [`shouldComponentUpdate`](/docs/react-component.html#shouldcomponentupdate). Now you can do the same with function components by wrapping them in [`React.memo`](/docs/react-api.html#reactmemo).\n\n```js\nconst MyComponent = React.memo(function MyComponent(props) {\n  /* only rerenders if props change */\n});\n```\n\n## [`React.lazy`](/docs/code-splitting.html#reactlazy): Code-Splitting with `Suspense`\n\nYou may have seen [Dan's talk about React Suspense at JSConf Iceland](/blog/2018/03/01/sneak-peek-beyond-react-16.html). Now you can use the Suspense component to do [code-splitting](/docs/code-splitting.html#reactlazy) by wrapping a dynamic import in a call to `React.lazy()`.\n\n```js\nimport React, {lazy, Suspense} from 'react';\nconst OtherComponent = lazy(() => import('./OtherComponent'));\n\nfunction MyComponent() {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <OtherComponent />\n    </Suspense>\n  );\n}\n```\n\nThe Suspense component will also allow library authors to start building data fetching with Suspense support in the future.\n\n> Note: This feature is not yet available for server-side rendering. Suspense support will be added in a later release.\n\n## [`static contextType`](/docs/context.html#classcontexttype)\n\nIn [React 16.3](/blog/2018/03/29/react-v-16-3.html) we introduced the official Context API as a replacement to the previous [Legacy Context](/docs/legacy-context.html) API.\n\n```js\nconst MyContext = React.createContext();\n```\n\nWe've heard feedback that adopting the new render prop API can be difficult in class components. So we've add a convenience API to [consume a context value from within a class component](/docs/context.html#classcontexttype).\n\n```js\nclass MyClass extends React.Component {\n  static contextType = MyContext;\n  componentDidMount() {\n    let value = this.context;\n    /* perform a side-effect at mount using the value of MyContext */\n  }\n  componentDidUpdate() {\n    let value = this.context;\n    /* ... */\n  }\n  componentWillUnmount() {\n    let value = this.context;\n    /* ... */\n  }\n  render() {\n    let value = this.context;\n    /* render something based on the value of MyContext */\n  }\n}\n```\n\n## [`static getDerivedStateFromError()`](/docs/react-component.html#static-getderivedstatefromerror)\n\nReact 16 introduced [Error Boundaries](/blog/2017/07/26/error-handling-in-react-16.html) for handling errors thrown in React renders. We already had the `componentDidCatch` lifecycle method which gets fired after an error has already happened. It's great for logging errors to the server. It also lets you show a different UI to the user by calling `setState`.\n\nBefore that is fired, we render `null` in place of the tree that threw an error. This sometimes breaks parent components that don't expect their refs to be empty. It also doesn't work to recover from errors on the server since the `Did` lifecycle methods don't fire during server-side rendering.\n\nWe're adding another error method that lets you render the fallback UI before the render completes. See the docs for [`getDerivedStateFromError()`](/docs/react-component.html#static-getderivedstatefromerror).\n\n> Note: `getDerivedStateFromError()` is not yet available for server-side rendering. It is designed to work with server-side rendering in a future release. We're releasing it early so that you can start preparing to use it.\n\n## Deprecations in StrictMode\n\nIn [16.3](/blog/2018/03/29/react-v-16-3.html#strictmode-component) we introduced the [`StrictMode`](/docs/strict-mode.html) component. It lets you opt-in to early warnings for patterns that might cause problems in the future.\n\nWe've added two more APIs to the list of deprecated APIs in `StrictMode`. If you don't use `StrictMode` you don't have to worry; these warning won't fire for you.\n\n* __ReactDOM.findDOMNode()__ - This API is often misunderstood and most uses of it are unnecessary. It can also be surprisingly slow in React 16. [See the docs](/docs/strict-mode.html#warning-about-deprecated-finddomnode-usage) for possible upgrade paths.\n* __Legacy Context__ using contextTypes and getChildContext - Legacy context makes React slightly slower and bigger than it needs to be. That's why we strongly want to encourage upgrading to the [new context API](/docs/context.html). Hopefully the addition of the [`contextType`](/docs/context.html#classcontexttype) API makes this a bit easier.\n\nIf you're having trouble upgrading, we'd like to hear your feedback.\n\n## Installation\n\nReact v16.6.0 is available on the npm registry.\n\nTo install React 16 with Yarn, run:\n\n```bash\nyarn add react@^16.6.0 react-dom@^16.6.0\n```\n\nTo install React 16 with npm, run:\n\n```bash\nnpm install --save react@^16.6.0 react-dom@^16.6.0\n```\n\nWe also provide UMD builds of React via a CDN:\n\n```html\n<script crossorigin src=\"https://unpkg.com/react@16/umd/react.production.min.js\"></script>\n<script crossorigin src=\"https://unpkg.com/react-dom@16/umd/react-dom.production.min.js\"></script>\n```\n\nRefer to the documentation for [detailed installation instructions](/docs/installation.html).\n\n## Changelog\n\n### React\n\n* Add `React.memo()` as an alternative to `PureComponent` for functions. ([@acdlite](https://github.com/acdlite) in [#13748](https://github.com/facebook/react/pull/13748))\n* Add `React.lazy()` for code splitting components. ([@acdlite](https://github.com/acdlite) in [#13885](https://github.com/facebook/react/pull/13885))\n* `React.StrictMode` now warns about legacy context API. ([@bvaughn](https://github.com/bvaughn) in [#13760](https://github.com/facebook/react/pull/13760))\n* `React.StrictMode` now warns about `findDOMNode`. ([@sebmarkbage](https://github.com/sebmarkbage) in [#13841](https://github.com/facebook/react/pull/13841))\n* Rename `unstable_AsyncMode` to `unstable_ConcurrentMode`. ([@trueadm](https://github.com/trueadm) in [#13732](https://github.com/facebook/react/pull/13732))\n* Rename `unstable_Placeholder` to `Suspense`, and `delayMs` to `maxDuration`. ([@gaearon](https://github.com/gaearon) in [#13799](https://github.com/facebook/react/pull/13799) and [@sebmarkbage](https://github.com/sebmarkbage) in [#13922](https://github.com/facebook/react/pull/13922))\n\n### React DOM\n\n* Add `contextType` as a more ergonomic way to subscribe to context from a class. ([@bvaughn](https://github.com/bvaughn) in [#13728](https://github.com/facebook/react/pull/13728))\n* Add `getDerivedStateFromError` lifecycle method for catching errors in a future asynchronous server-side renderer. ([@bvaughn](https://github.com/bvaughn) in [#13746](https://github.com/facebook/react/pull/13746))\n* Warn when `<Context>` is used instead of `<Context.Consumer>`. ([@trueadm](https://github.com/trueadm) in [#13829](https://github.com/facebook/react/pull/13829))\n* Fix gray overlay on iOS Safari. ([@philipp-spiess](https://github.com/philipp-spiess) in [#13778](https://github.com/facebook/react/pull/13778))\n* Fix a bug caused by overwriting `window.event` in development. ([@sergei-startsev](https://github.com/sergei-startsev) in [#13697](https://github.com/facebook/react/pull/13697))\n\n### React DOM Server\n\n* Add support for `React.memo()`. ([@alexmckenley](https://github.com/alexmckenley) in [#13855](https://github.com/facebook/react/pull/13855))\n* Add support for `contextType`. ([@alexmckenley](https://github.com/alexmckenley) and [@sebmarkbage](https://github.com/sebmarkbage) in [#13889](https://github.com/facebook/react/pull/13889))\n\n### Scheduler (Experimental)\n\n* Rename the package to `scheduler`. ([@gaearon](https://github.com/gaearon) in [#13683](https://github.com/facebook/react/pull/13683))\n* Support priority levels, continuations, and wrapped callbacks. ([@acdlite](https://github.com/acdlite) in [#13720](https://github.com/facebook/react/pull/13720) and [#13842](https://github.com/facebook/react/pull/13842))\n* Improve the fallback mechanism in non-DOM environments. ([@acdlite](https://github.com/acdlite) in [#13740](https://github.com/facebook/react/pull/13740))\n* Schedule `requestAnimationFrame` earlier. ([@acdlite](https://github.com/acdlite) in [#13785](https://github.com/facebook/react/pull/13785))\n* Fix the DOM detection to be more thorough. ([@trueadm](https://github.com/trueadm) in [#13731](https://github.com/facebook/react/pull/13731))\n* Fix bugs with interaction tracing. ([@bvaughn](https://github.com/bvaughn) in [#13590](https://github.com/facebook/react/pull/13590))\n* Add the `envify` transform to the package. ([@mridgway](https://github.com/mridgway) in [#13766](https://github.com/facebook/react/pull/13766))\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "5a7cdc9c7d1514b027755dc3f609d8d9",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v16.6.0: lazy, memo and contextType",
        "author": [
          "sebmarkbage"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2018-10-23-react-v-16-6.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2018-10-23-react-v-16-6.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2018-10-23-react-v-16-6.md",
      "fields": {
        "date": "2018-10-22T16:00:00.000Z",
        "slug": "/blog/2018/10/23/react-v-16-6.html",
        "path": "blog/2018-10-23-react-v-16-6.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/design-principles.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/design-principles.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/design-principles.md absPath of file",
      "internal": {
        "content": "---\nid: design-principles\ntitle: Design Principles\nlayout: contributing\npermalink: docs/design-principles.html\nprev: implementation-notes.html\nredirect_from: \"contributing/design-principles.html\"\n---\n\nWe wrote this document so that you have a better idea of how we decide what React does and what React doesn't do, and what our development philosophy is like. While we are excited to see community contributions, we are not likely to choose a path that violates one or more of these principles.\n\n>**Note:**\n>\n>This document assumes a strong understanding of React. It describes the design principles of *React itself*, not React components or applications.\n>\n>For an introduction to React, check out [Thinking in React](/docs/thinking-in-react.html) instead.\n\n### Composition\n\nThe key feature of React is composition of components. Components written by different people should work well together. It is important to us that you can add functionality to a component without causing rippling changes throughout the codebase.\n\nFor example, it should be possible to introduce some local state into a component without changing any of the components using it. Similarly, it should be possible to add some initialization and teardown code to any component when necessary.\n\nThere is nothing \"bad\" about using state or lifecycle hooks in components. Like any powerful feature, they should be used in moderation, but we have no intention to remove them. On the contrary, we think they are integral parts of what makes React useful. We might enable [more functional patterns](https://github.com/reactjs/react-future/tree/master/07%20-%20Returning%20State) in the future, but both local state and lifecycle hooks will be a part of that model.\n\nComponents are often described as \"just functions\" but in our view they need to be more than that to be useful. In React, components describe any composable behavior, and this includes rendering, lifecycle, and state. Some external libraries like [Relay](http://facebook.github.io/relay/) augment components with other responsibilities such as describing data dependencies. It is possible that those ideas might make it back into React too in some form.\n\n### Common Abstraction\n\nIn general we [resist adding features](https://www.youtube.com/watch?v=4anAwXYqLG8) that can be implemented in userland. We don't want to bloat your apps with useless library code. However, there are exceptions to this.\n\nFor example, if React didn't provide support for local state or lifecycle hooks, people would create custom abstractions for them. When there are multiple abstractions competing, React can't enforce or take advantage of the properties of either of them. It has to work with the lowest common denominator.\n\nThis is why sometimes we add features to React itself. If we notice that many components implement a certain feature in incompatible or inefficient ways, we might prefer to bake it into React. We don't do it lightly. When we do it, it's because we are confident that raising the abstraction level benefits the whole ecosystem. State, lifecycle hooks, cross-browser event normalization are good examples of this.\n\nWe always discuss such improvement proposals with the community. You can find some of those discussions by the [\"big picture\"](https://github.com/facebook/react/issues?q=is:open+is:issue+label:\"big+picture\") label on the React issue tracker.\n\n### Escape Hatches\n\nReact is pragmatic. It is driven by the needs of the products written at Facebook. While it is influenced by some paradigms that are not yet fully mainstream such as functional programming, staying accessible to a wide range of developers with different skills and experience levels is an explicit goal of the project.\n\nIf we want to deprecate a pattern that we don't like, it is our responsibility to consider all existing use cases for it and [educate the community about the alternatives](/blog/2016/07/13/mixins-considered-harmful.html) before we deprecate it. If some pattern that is useful for building apps is hard to express in a declarative way, we will [provide an imperative API](/docs/more-about-refs.html) for it. If we can't figure out a perfect API for something that we found necessary in many apps, we will [provide a temporary subpar working API](/docs/context.html) as long as it is possible to get rid of it later and it leaves the door open for future improvements.\n\n### Stability\n\nWe value API stability. At Facebook, we have more than 20 thousand components using React. Many other companies, including [Twitter](https://twitter.com/) and [Airbnb](https://www.airbnb.com/), are also heavy users of React. This is why we are usually reluctant to change public APIs or behavior.\n\nHowever we think stability in the sense of \"nothing changes\" is overrated. It quickly turns into stagnation. Instead, we prefer the stability in the sense of \"It is heavily used in production, and when something changes, there is a clear (and preferably automated) migration path.\"\n\nWhen we deprecate a pattern, we study its internal usage at Facebook and add deprecation warnings. They let us assess the impact of the change. Sometimes we back out if we see that it is too early, and we need to think more strategically about getting the codebases to the point where they are ready for this change.\n\nIf we are confident that the change is not too disruptive and the migration strategy is viable for all use cases, we release the deprecation warning to the open source community. We are closely in touch with many users of React outside of Facebook, and we monitor popular open source projects and guide them in fixing those deprecations.\n\nGiven the sheer size of the Facebook React codebase, successful internal migration is often a good indicator that other companies won't have problems either. Nevertheless sometimes people point out additional use cases we haven't thought of, and we add escape hatches for them or rethink our approach.\n\nWe don't deprecate anything without a good reason. We recognize that sometimes deprecations warnings cause frustration but we add them because deprecations clean up the road for the improvements and new features that we and many people in the community consider valuable.\n\nFor example, we added a [warning about unknown DOM props](/warnings/unknown-prop.html) in React 15.2.0. Many projects were affected by this. However fixing this warning is important so that we can introduce the support for [custom attributes](https://github.com/facebook/react/issues/140) to React. There is a reason like this behind every deprecation that we add.\n\nWhen we add a deprecation warning, we keep it for the rest of the current major version, and [change the behavior in the next major version](/blog/2016/02/19/new-versioning-scheme.html). If there is a lot of repetitive manual work involved, we release a [codemod](https://www.youtube.com/watch?v=d0pOgY8__JM) script that automates most of the change. Codemods enable us to move forward without stagnation in a massive codebase, and we encourage you to use them as well.\n\nYou can find the codemods that we released in the [react-codemod](https://github.com/reactjs/react-codemod) repository.\n\n### Interoperability\n\nWe place high value in interoperability with existing systems and gradual adoption. Facebook has a massive non-React codebase. Its website uses a mix of a server-side component system called XHP, internal UI libraries that came before React, and React itself. It is important to us that any product team can [start using React for a small feature](https://www.youtube.com/watch?v=BF58ZJ1ZQxY) rather than rewrite their code to bet on it.\n\nThis is why React provides escape hatches to work with mutable models, and tries to work well together with other UI libraries. You can wrap an existing imperative UI into a declarative component, and vice versa. This is crucial for gradual adoption.\n\n### Scheduling\n\nEven when your components are described as functions, when you use React you don't call them directly. Every component returns a [description of what needs to be rendered](/blog/2015/12/18/react-components-elements-and-instances.html#elements-describe-the-tree), and that description may include both user-written components like `<LikeButton>` and platform-specific components like `<div>`. It is up to React to \"unroll\" `<LikeButton>` at some point in the future and actually apply changes to the UI tree according to the render results of the components recursively.\n\nThis is a subtle distinction but a powerful one. Since you don't call that component function but let React call it, it means React has the power to delay calling it if necessary. In its current implementation React walks the tree recursively and calls render functions of the whole updated tree during a single tick. However in the future it might start [delaying some updates to avoid dropping frames](https://github.com/facebook/react/issues/6170).\n\nThis is a common theme in React design. Some popular libraries implement the \"push\" approach where computations are performed when the new data is available. React, however, sticks to the \"pull\" approach where computations can be delayed until necessary.\n\nReact is not a generic data processing library. It is a library for building user interfaces. We think that it is uniquely positioned in an app to know which computations are relevant right now and which are not.\n\nIf something is offscreen, we can delay any logic related to it. If data is arriving faster than the frame rate, we can coalesce and batch updates. We can prioritize work coming from user interactions (such as an animation caused by a button click) over less important background work (such as rendering new content just loaded from the network) to avoid dropping frames.\n\nTo be clear, we are not taking advantage of this right now. However the freedom to do something like this is why we prefer to have control over scheduling, and why `setState()` is asynchronous. Conceptually, we think of it as \"scheduling an update\".\n\nThe control over scheduling would be harder for us to gain if we let the user directly compose views with a \"push\" based paradigm common in some variations of [Functional Reactive Programming](https://en.wikipedia.org/wiki/Functional_reactive_programming). We want to own the \"glue\" code.\n\nIt is a key goal for React that the amount of the user code that executes before yielding back into React is minimal. This ensures that React retains the capability to schedule and split work in chunks according to what it knows about the UI.\n\nThere is an internal joke in the team that React should have been called \"Schedule\" because React does not want to be fully \"reactive\".\n\n### Developer Experience\n\nProviding a good developer experience is important to us.\n\nFor example, we maintain [React DevTools](https://github.com/facebook/react-devtools) which let you inspect the React component tree in Chrome and Firefox. We have heard that it brings a big productivity boost both to the Facebook engineers and to the community.\n\nWe also try to go an extra mile to provide helpful developer warnings. For example, React warns you in development if you nest tags in a way that the browser doesn't understand, or if you make a common typo in the API. Developer warnings and the related checks are the main reason why the development version of React is slower than the production version.\n\nThe usage patterns that we see internally at Facebook help us understand what the common mistakes are, and how to prevent them early. When we add new features, we try to anticipate the common mistakes and warn about them.\n\nWe are always looking out for ways to improve the developer experience. We love to hear your suggestions and accept your contributions to make it even better.\n\n### Debugging\n\nWhen something goes wrong, it is important that you have breadcrumbs to trace the mistake to its source in the codebase. In React, props and state are those breadcrumbs.\n\nIf you see something wrong on the screen, you can open React DevTools, find the component responsible for rendering, and then see if the props and state are correct. If they are, you know that the problem is in the component’s `render()` function, or some function that is called by `render()`. The problem is isolated.\n\nIf the state is wrong, you know that the problem is caused by one of the `setState()` calls in this file. This, too, is relatively simple to locate and fix because usually there are only a few `setState()` calls in a single file.\n\nIf the props are wrong, you can traverse the tree up in the inspector, looking for the component that first \"poisoned the well\" by passing bad props down.\n\nThis ability to trace any UI to the data that produced it in the form of current props and state is very important to React. It is an explicit design goal that state is not \"trapped\" in closures and combinators, and is available to React directly.\n\nWhile the UI is dynamic, we believe that synchronous `render()` functions of props and state turn debugging from guesswork into a boring but finite procedure. We would like to preserve this constraint in React even though it makes some use cases, like complex animations, harder.\n\n### Configuration\n\nWe find global runtime configuration options to be problematic.\n\nFor example, it is occasionally requested that we implement a function like `React.configure(options)` or `React.register(component)`. However this poses multiple problems, and we are not aware of good solutions to them.\n\nWhat if somebody calls such a function from a third-party component library? What if one React app embeds another React app, and their desired configurations are incompatible? How can a third-party component specify that it requires a particular configuration? We think that global configuration doesn't work well with composition. Since composition is central to React, we don't provide global configuration in code.\n\nWe do, however, provide some global configuration on the build level. For example, we provide separate development and production builds. We may also [add a profiling build](https://github.com/facebook/react/issues/6627) in the future, and we are open to considering other build flags.\n\n### Beyond the DOM\n\nWe see the value of React in the way it allows us to write components that have fewer bugs and compose together well. DOM is the original rendering target for React but [React Native](http://facebook.github.io/react-native/) is just as important both to Facebook and the community.\n\nBeing renderer-agnostic is an important design constraint of React. It adds some overhead in the internal representations. On the other hand, any improvements to the core translate across platforms.\n\nHaving a single programming model lets us form engineering teams around products instead of platforms. So far the tradeoff has been worth it for us.\n\n### Implementation\n\nWe try to provide elegant APIs where possible. We are much less concerned with the implementation being elegant. The real world is far from perfect, and to a reasonable extent we prefer to put the ugly code into the library if it means the user does not have to write it. When we evaluate new code, we are looking for an implementation that is correct, performant and affords a good developer experience. Elegance is secondary.\n\nWe prefer boring code to clever code. Code is disposable and often changes. So it is important that it [doesn't introduce new internal abstractions unless absolutely necessary](https://youtu.be/4anAwXYqLG8?t=13m9s). Verbose code that is easy to move around, change and remove is preferred to elegant code that is prematurely abstracted and hard to change.\n\n### Optimized for Tooling\n\nSome commonly used APIs have verbose names. For example, we use `componentDidMount()` instead of `didMount()` or `onMount()`. This is [intentional](https://github.com/reactjs/react-future/issues/40#issuecomment-142442124). The goal is to make the points of interaction with the library highly visible.\n\nIn a massive codebase like Facebook, being able to search for uses of specific APIs is very important. We value distinct verbose names, and especially for the features that should be used sparingly. For example, `dangerouslySetInnerHTML` is hard to miss in a code review.\n\nOptimizing for search is also important because of our reliance on [codemods](https://www.youtube.com/watch?v=d0pOgY8__JM) to make breaking changes. We want it to be easy and safe to apply vast automated changes across the codebase, and unique verbose names help us achieve this. Similarly, distinctive names make it easy to write custom [lint rules](https://github.com/yannickcr/eslint-plugin-react) about using React without worrying about potential false positives.\n\n[JSX](/docs/displaying-data.html#jsx-syntax) plays a similar role. While it is not required with React, we use it extensively at Facebook both for aesthetic and pragmatic reasons.\n\nIn our codebase, JSX provides an unambiguous hint to the tools that they are dealing with a React element tree. This makes it possible to add build-time optimizations such as [hoisting constant elements](http://babeljs.io/docs/plugins/transform-react-constant-elements/), safely lint and codemod internal component usage, and [include JSX source location](https://github.com/facebook/react/pull/6771) into the warnings.\n\n### Dogfooding\n\nWe try our best to address the problems raised by the community. However we are likely to prioritize the issues that people are *also* experiencing internally at Facebook. Perhaps counter-intuitively, we think this is the main reason why the community can bet on React.\n\nHeavy internal usage gives us the confidence that React won't disappear tomorrow. React was created at Facebook to solve its problems. It brings tangible business value to the company and is used in many of its products. [Dogfooding](https://en.wikipedia.org/wiki/Eating_your_own_dog_food) it means that our vision stays sharp and we have a focused direction going forward.\n\nThis doesn't mean that we ignore the issues raised by the community. For example, we added support for [web components](/docs/webcomponents.html) and [SVG](https://github.com/facebook/react/pull/6243) to React even though we don't rely on either of them internally. We are actively [listening to your pain points](https://github.com/facebook/react/issues/2686) and [address them](/blog/2016/07/11/introducing-reacts-error-code-system.html) to the best of our ability. The community is what makes React special to us, and we are honored to contribute back.\n\nAfter releasing many open source projects at Facebook, we have learned that trying to make everyone happy at the same time produced projects with poor focus that didn't grow well. Instead, we found that picking a small audience and focusing on making them happy brings a positive net effect. That's exactly what we did with React, and so far solving the problems encountered by Facebook product teams has translated well to the open source community.\n\nThe downside of this approach is that sometimes we fail to give enough focus to the things that Facebook teams don't have to deal with, such as the \"getting started\" experience. We are acutely aware of this, and we are thinking of how to improve in a way that would benefit everyone in the community without making the same mistakes we did with open source projects before.\n",
        "type": "MarkdownRemark",
        "contentDigest": "5ebb11b37b831fe83d921ef28311b354",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Design Principles",
        "id": "design-principles",
        "layout": "contributing",
        "permalink": "docs/design-principles.html",
        "prev": "implementation-notes.html",
        "redirect_from": "contributing/design-principles.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/design-principles.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/design-principles.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/design-principles.md",
      "fields": {
        "slug": "docs/design-principles.html",
        "path": "docs/design-principles.md",
        "redirect": "\"contributing/design-principles.html\""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/higher-order-components.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/higher-order-components.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/higher-order-components.md absPath of file",
      "internal": {
        "content": "---\nid: higher-order-components\ntitle: 高阶组件\npermalink: docs/higher-order-components.html\n---\n\n高阶组件（HOC）是react中的高级技术，用来重用组件逻辑。但高阶组件本身并不是React API。它只是一种模式，这种模式是由react自身的组合性质必然产生的。\n\n具体而言，**高阶组件就是一个函数，且该函数接受一个组件作为参数，并返回一个新的组件。**\n\n```js\nconst EnhancedComponent = higherOrderComponent(WrappedComponent);\n```\n\n对比组件将props属性转变成UI，高阶组件则是将一个组件转换成另一个组件。\n\n高阶组件在React第三方库中很常见，比如Redux的[`connect`](https://github.com/reactjs/react-redux/blob/master/docs/api.md#connectmapstatetoprops-mapdispatchtoprops-mergeprops-options)方法和Relay的[`createContainer`](https://facebook.github.io/relay/docs/api-reference-relay.html#createcontainer-static-method).\n\n在本文档中，我们将会讨论为什么高阶组件很有用，以及该如何实现一个自己的高阶组件。\n\n## 使用高阶组件（HOC）解决横切关注点\n\n> **注意**\n>\n> 我们曾经介绍了混入（mixins）技术来解决横切关注点。现在我们意识到混入（mixins）技术产生的问题要比带来的价值大。[更多资料](/blog/2016/07/13/mixins-considered-harmful.html)介绍了为什么我们要移除混入（mixins）技术以及如何转换你已经使用了混入（mixins）技术的组件。\n\n在React中，组件是代码复用的主要单元。然而你会发现，一些模式用传统的组件并不直白。\n\n例如，假设你有一个`CommentList`组件，该组件从外部数据源订阅数据并渲染评论列表：\n\n```js\nclass CommentList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      // \"DataSource\" is some global data source\n      comments: DataSource.getComments()\n    };\n  }\n\n  componentDidMount() {\n    // Subscribe to changes\n    DataSource.addChangeListener(this.handleChange);\n  }\n\n  componentWillUnmount() {\n    // Clean up listener\n    DataSource.removeChangeListener(this.handleChange);\n  }\n\n  handleChange() {\n    // Update component state whenever the data source changes\n    this.setState({\n      comments: DataSource.getComments()\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.comments.map((comment) => (\n          <Comment comment={comment} key={comment.id} />\n        ))}\n      </div>\n    );\n  }\n}\n```\n\n然后，你又写了一个订阅单个博客文章的组件，该组件遵循类似的模式：\n\n```js\nclass BlogPost extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      blogPost: DataSource.getBlogPost(props.id)\n    };\n  }\n\n  componentDidMount() {\n    DataSource.addChangeListener(this.handleChange);\n  }\n\n  componentWillUnmount() {\n    DataSource.removeChangeListener(this.handleChange);\n  }\n\n  handleChange() {\n    this.setState({\n      blogPost: DataSource.getBlogPost(this.props.id)\n    });\n  }\n\n  render() {\n    return <TextBlock text={this.state.blogPost} />;\n  }\n}\n```\n\n`CommentList` 和 `BlogPost` 组件并不相同——他们调用 `DataSource` 的方法不同，并且他们渲染的输出也不相同。但是，他们有很多实现是相同的：\n\n- 挂载组件时， 向 `DataSource` 添加一个改变监听器。\n- 在监听器内， 每当数据源发生改变时，调用`setState`。\n- 卸载组件时， 移除改变监听器。\n\n设想一下，在一个大型的应用中，这种从`DataSource`订阅数据并调用`setState`的模式将会一次又一次的发生。我们希望一个抽象允许我们定义这种逻辑，在单个地方，并且许多组件都可以共享它，这就是高阶组件的杰出所在。\n\n我们可以写一个创建组件的函数，创建的组件类似`CommonList`和`BlogPost`一样订阅到`DataSource`。该函数接受它的参数之一作为一个子组件，子组件又接受订阅的数据作为一个属性(prop)。让我们称这个函数为`withSubscription`：\n\n```js\nconst CommentListWithSubscription = withSubscription(\n  CommentList,\n  (DataSource) => DataSource.getComments()\n);\n\nconst BlogPostWithSubscription = withSubscription(\n  BlogPost,\n  (DataSource, props) => DataSource.getBlogPost(props.id)\n);\n```\n\n第一个参数是被包裹的组件，第二个参数检索所需要的数据，从给定的`DataSource`和当前props属性中。\n\n> 译者注：根据代码示例，这里应该是高阶组件的props属性\n\n当渲染 `CommentListWithSubscription` 和 `BlogPostWithSubscription` 时, 会向`CommentList` 和 `BlogPost` 传递一个 `data` 属性，该 `data`属性带有从 `DataSource` 检索的最新数据：\n\n```js{31}\n// This function takes a component...\nfunction withSubscription(WrappedComponent, selectData) {\n  // ...and returns another component...\n  return class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.handleChange = this.handleChange.bind(this);\n      this.state = {\n        data: selectData(DataSource, props)\n      };\n    }\n\n    componentDidMount() {\n      // ... that takes care of the subscription...\n      DataSource.addChangeListener(this.handleChange);\n    }\n\n    componentWillUnmount() {\n      DataSource.removeChangeListener(this.handleChange);\n    }\n\n    handleChange() {\n      this.setState({\n        data: selectData(DataSource, this.props)\n      });\n    }\n\n    render() {\n      // ... and renders the wrapped component with the fresh data!\n      // Notice that we pass through any additional props\n      return <WrappedComponent data={this.state.data} {...this.props} />;\n    }\n  };\n}\n```\n\n注意，高阶组件既不会修改输入组件，也不会使用继承拷贝它的行为。而是，高阶组件 *组合（composes）* 原始组件，通过用一个容器组件 *包裹着（wrapping）* 原始组件。高阶组件就是一个没有副作用的纯函数。\n\n就是这样！被包裹的组件接收容器的所有props属性以及一个新属性`data`用于渲染输出。高阶组件并不关心数据使用的方式和原因，而被包裹的组件也不关心数据来自何处。\n\n因为 `withSubscription` 就是一个普通函数，你可以按需添加可多可少的参数。例如，你或许会想使 `data` 属性的名字是可配置的，以进一步从被包裹的组件隔离高阶组件。或者你想要接收一个参数用于配置 `shouldComponentUpdate`，或配置数据源。所有的这些都是可以的，因为高阶组件充分地控制新组件定义的方式。\n\n和普通组件一样，`withSubscription` 和被包裹的组件之间的合约是完全基于props属性的。这使得易于替换一个高阶组件到另一个，只要他们提供相同的props属性给被包裹的组件即可。这可以用于你改变获取数据的库时，举例来说。\n\n## 不要改变原始组件，使用组合\n\n抵制诱惑，不要在高阶组件内修改一个组件的原型（或以其它方式修改组件）。\n\n```js\nfunction logProps(InputComponent) {\n  InputComponent.prototype.componentWillReceiveProps = function(nextProps) {\n    console.log('Current props: ', this.props);\n    console.log('Next props: ', nextProps);\n  };\n  // The fact that we're returning the original input is a hint that it has\n  // been mutated.\n  return InputComponent;\n}\n\n// EnhancedComponent will log whenever props are received\nconst EnhancedComponent = logProps(InputComponent);\n```\n\n上面的示例有一些问题。首先就是，输入组件不能独立于增强型组件（enhanced component）被重用。更致命的是，如果你在`EnhancedComponent`上应用另一个高阶组件，同样也去改变`componentWillReceiveProps`，第一个高阶组件的功能就会被覆盖。这样的高阶组件对没有生命周期方法的函数式组件也是无效的。\n\n修改高阶组件泄露了组件的抽象性——使用者必须知道他们的实现方式，才能避免与其它高阶组件的冲突。\n\n与修改组件相反，高阶组件应该使用组合技术，将输入组件包裹到一个容器组件中：\n\n```js\nfunction logProps(WrappedComponent) {\n  return class extends React.Component {\n    componentWillReceiveProps(nextProps) {\n      console.log('Current props: ', this.props);\n      console.log('Next props: ', nextProps);\n    }\n    render() {\n      // 用容器包裹输入组件，不要修改它，漂亮！\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n}\n```\n\n这个高阶组件和那个更改型版本有着同样的功能，但却避免了潜在的冲突。它对类组件和函数式组件适用性同样好。而且，因为它是纯函数，它是可组合的，可以和其它高阶组件，甚至和它自身组合。\n\n你可能发现了高阶组件和**容器组件**模式的相似之处。容器组件是专注于在高层和低层关注之间进行责任分离的策略的一部分。容器管理的事情诸如订阅和状态，传递props属性给某些组件。这些组件处理渲染UI等事情。高阶组件使用容器作为他们实现的一部分。你也可以认为高阶组件就是参数化的容器组件定义。\n\n## 约定：贯穿传递不相关props属性给被包裹的组件\n\n高阶组件添加了一些特性到一个组件，他们不应该大幅修改它的合约。被期待的是，从高阶组件返回的那个组件与被包裹的组件具有类似的接口。\n\n高阶组件应该贯穿传递与它专门关注无关的props属性。大多数高阶组件都包含类似如下的渲染方法：\n\n```js\nrender() {\n  // 过滤掉专用于这个阶组件的props属性，\n  // 不应该被贯穿传递\n  const { extraProp, ...passThroughProps } = this.props;\n\n  // 向被包裹的组件注入props属性，这些一般都是状态值或\n  // 实例方法\n  const injectedProp = someStateOrInstanceMethod;\n\n  // 向被包裹的组件传递props属性\n  return (\n    <WrappedComponent\n      injectedProp={injectedProp}\n      {...passThroughProps}\n    />\n  );\n}\n```\n\n这个约定帮助确保高阶组件最大程度的灵活性和可重用性。\n\n## 约定：最大化的组合性\n\n并不是所有的高阶组件看起来都是一样的。有时，它们仅接收单独一个参数，即被包裹的组件：\n\n```js\nconst NavbarWithRouter = withRouter(Navbar);\n```\n\n一般而言，高阶组件会接收额外的参数。在下面这个来自Relay的示例中，一个`config`对象用于指定组件的数据依赖：\n\n```js\nconst CommentWithRelay = Relay.createContainer(Comment, config);\n```\n\n高阶组件最常见签名如下所示：\n\n```js\n// React Redux's `connect`\nconst ConnectedComment = connect(commentSelector, commentActions)(Comment);\n```\n\n*什么？！* 如果你把它剥开，你就很容易看明白到底是怎么回事了。\n\n```js\n// connect是一个返回函数的函数（译者注：就是个高阶函数）\nconst enhance = connect(commentListSelector, commentListActions);\n// 返回的函数就是一个高阶组件，该高阶组件返回一个组件被连接\n// 到Redux store\nconst ConnectedComment = enhance(CommentList);\n```\n\n换句话说，`connect` 是一个返回高阶组件的高阶函数！\n\n这种形式有点让人迷惑，有点多余，但是它有一个有用的性质。那就是，单独一个参数的高阶组件，类似 `connect` 函数返回的，签名是`Component => Component`。输入和输出类型相同的函数确实是很容易组合在一起。\n\n<!-- 对以下代码的个人理解：第一段代码对初始组件进行了两次包装；第二段代码就是函数的柯里化 -->\n\n```js\n// 不要这样做……\nconst EnhancedComponent = withRouter(connect(commentSelector)(WrappedComponent))\n\n// ……你可以使用一个函数组合工具\n// compose(f, g, h) 和 (...args) => f(g(h(...args)))是一样的\nconst enhance = compose(\n  // 这些都是单独一个参数的高阶组件\n  withRouter,\n  connect(commentSelector)\n)\nconst EnhancedComponent = enhance(WrappedComponent)\n```\n\n（这个同样的性质也允许`connect`函数和其它增强型高阶组件被用作装饰器，这是一个试验JavaScript建议。）\n\n包括lodash（比如说[`lodash.flowRight`](https://lodash.com/docs/#flowRight)）, [`Redux`](http://redux.js.org/docs/api/compose.html) 和 [`Ramda`](http://ramdajs.com/docs/#compose)在内的许多第三方库都提供了类似`compose`功能的函数。\n\n## 约定：包装显示名字以便于调试\n\n高阶组件创建的容器组件在[`React Developer Tools`](https://github.com/facebook/react-devtools)中的表现和其它的普通组件是一样的。为了便于调试，可以选择一个显示名字，传达它是一个高阶组件的结果。\n\n最常用的技术是包裹显示名字给被包裹的组件。所以，如果你的高阶组件名字是 `withSubscription`，且被包裹的组件的显示名字是 `CommentList`，那么就是用 `WithSubscription(CommentList)`这样的显示名字：\n\n```js\nfunction withSubscription(WrappedComponent) {\n  class WithSubscription extends React.Component {/* ... */}\n  WithSubscription.displayName = `WithSubscription(${getDisplayName(WrappedComponent)})`;\n  return WithSubscription;\n}\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n```\n\n## 告诫\n\n如果你是React新手，你要知道高阶组件自身也有一些不是太明显的告诫。\n\n### 不要在render方法内使用高阶组件\n\nReact的差分算法（称为协调）使用组件标识确定是否更新现有的子树或扔掉它并重新挂载一个新的。如果`render`方法返回的组件和前一次渲染返回的组件是完全相同的(`===`)，React就递归地更新子树，这是通过差分它和新的那个完成。如果它们不相等，前一个子树被完全卸载掉。\n\n一般而言，你不需要考虑差分算法的原理。但是它和高阶函数有关。因为它意味着你不能在组件的`render`方法之内应用高阶函数到组件：\n\n```js\nrender() {\n  // 每一次渲染，都会创建一个新的EnhancedComponent版本\n  // EnhancedComponent1 !== EnhancedComponent2\n  const EnhancedComponent = enhance(MyComponent);\n  // 那引起每一次都会使子对象树完全被卸载/重新加载\n  return <EnhancedComponent />;\n}\n```\n\n这里产生的问题不仅仅是性能问题——还有，重新加载一个组件会引起原有组件的状态和它的所有子组件丢失。\n\n相反，应用高阶组件在组件定义的外面，可以使结果组件只创建一次。那么，它的标识将都是一致的遍及多次渲染。这通常是你想要的，无论如何。\n\n在很少的情况下，你可能需要动态的应用高阶组件。你也可以在组件的生命周期方法或构造函数中操作。\n\n### 必须将静态方法做拷贝\n\n有时，在React组件上定义静态方法是十分有用的。例如，Relay容器就暴露一个静态方法`getFragment`便于组合GraphQL的代码片段。\n\n当你应用一个高阶组件到一个组件时，尽管，原始组件被包裹于一个容器组件内，也就意味着新组件会没有原始组件的任何静态方法。\n\n```js\n// 定义静态方法\nWrappedComponent.staticMethod = function() {/*...*/}\n// 使用高阶组件\nconst EnhancedComponent = enhance(WrappedComponent);\n\n// 增强型组件没有静态方法\ntypeof EnhancedComponent.staticMethod === 'undefined' // true\n```\n\n为解决这个问题，在返回之前，将原始组件的方法拷贝给容器：\n\n```js\nfunction enhance(WrappedComponent) {\n  class Enhance extends React.Component {/*...*/}\n  // 必须得知道要拷贝的方法 :(\n  Enhance.staticMethod = WrappedComponent.staticMethod;\n  return Enhance;\n}\n```\n\n这样做，就需要你清楚的知道都有哪些静态方法需要拷贝。你可以使用[hoist-non-react-statics](https://github.com/mridgway/hoist-non-react-statics)来帮你自动处理，它会自动拷贝所有非React的静态方法：\n\n```js\nimport hoistNonReactStatic from 'hoist-non-react-statics';\nfunction enhance(WrappedComponent) {\n  class Enhance extends React.Component {/*...*/}\n  hoistNonReactStatic(Enhance, WrappedComponent);\n  return Enhance;\n}\n```\n\n另外一个可能的解决方案就是分别导出组件自身的静态方法。\n\n```js\n// Instead of...\nMyComponent.someFunction = someFunction;\nexport default MyComponent;\n\n// ...export the method separately...\nexport { someFunction };\n\n// ...and in the consuming module, import both\nimport MyComponent, { someFunction } from './MyComponent.js';\n```\n\n### Refs属性不能贯穿传递\n\n一般来说，高阶组件可以传递所有的props属性给包裹的组件，但是不能传递refs引用。因为并不是像`key`一样，refs是一个伪属性，React对它进行了特殊处理。如果你向一个由高阶组件创建的组件的元素添加ref引用，那么ref指向的是最外层容器组件实例的，而不是被包裹的组件。\n\n现在我们提供一个名为 `React.forwardRef` 的 API 来解决这一问题（在 React 16.3 版本中）。[在 refs 传递章节中了解详情](/docs/forwarding-refs.html)。\n",
        "type": "MarkdownRemark",
        "contentDigest": "08f3069740ce8ceeb8a01c1da7eaa30d",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "高阶组件",
        "id": "higher-order-components",
        "permalink": "docs/higher-order-components.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/higher-order-components.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/higher-order-components.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/higher-order-components.md",
      "fields": {
        "slug": "docs/higher-order-components.html",
        "path": "docs/higher-order-components.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/hooks-effect.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/hooks-effect.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/hooks-effect.md absPath of file",
      "internal": {
        "content": "---\nid: hooks-state\ntitle: Using the Effect Hook\npermalink: docs/hooks-effect.html\nnext: hooks-rules.html\nprev: hooks-intro.html\n---\n\n*Hooks* 是 React v16.7.0-alpha 中加入的新特性。它可以让你在 class 以外使用 state 和其他 React 特性。你可以在[这里](https://github.com/reactjs/rfcs/pull/68)看到关于它的一些讨论。\n\n*Effect Hook* 可以让你在函数组件中执行一些具有 side effect（副作用）的操作：\n\n```js{1,6-10}\nimport { useState, useEffect } from 'react';\n\nfunction Example() {\n  const [count, setCount] = useState(0);\n\n  // 与 componentDidMount 和 componentDidUpdate 类似:\n  useEffect(() => {\n    // 通过浏览器自带的 API 更新页面标题\n    document.title = `You clicked ${count} times`;\n  });\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>\n        Click me\n      </button>\n    </div>\n  );\n}\n```\n\n这段代码基于[前一页的计数器示例](/docs/hook-state.html)，但是我们添加了一个新特性:我们将文档标题设置为包含单击次数的自定义消息。\n\n获取数据、设置订阅和手动更改 React 组件中的 DOM 都是副作用的例子。不管您是否习惯将这些操作称为什么，您以前都可能在组件中执行过这些操作。\n\n>Tip\n>\n> 如果你熟悉 class 组件中的生命周期方法，你可以把 `useEffect` Hooks 视作 `componentDidMount`、`componentDidUpdate` 和 `componentWillUnmount` 的结合。\n\nReact 组件中的 side effects 大致可以分为两种：一种是不需要手动清理（cleanup）的，一种是需要的。让我们看看这部分的细节。\n\n## 不需要清理的 effects\n\n有时我们想要 **在 React 更新过 DOM 之后执行一些额外的操作。** 比如网络请求、手动更新 DOM 、以及打印日志都是常见的不需要清理的 effects。让我们比较一下我们在 classes 和 Hooks 中如何做到这些。\n\n### 使用 Class 的例子\n\n在 class 组件中，`render` 方法本身不应该导致 side effects。`render` 方法太早了————我们通常会在 React 更新过 DOM *之后* 再执行 effect。\n\n这也是我们在 class 组件中，把 side effects 放在 `componentDidMount` 和 `componentDidUpdate` 中的原因。回到我们的例子上，在这个例子中，我们在 React 更新 DOM 之后立刻更新 document title ：\n```js{9-15}\nclass Example extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    };\n  }\n\n  componentDidMount() {\n    document.title = `You clicked ${this.state.count} times`;\n  }\n\n  componentDidUpdate() {\n    document.title = `You clicked ${this.state.count} times`;\n  }\n\n  render() {\n    return (\n      <div>\n        <p>You clicked {this.state.count} times</p>\n        <button onClick={() => this.setState({ count: this.state.count + 1 })}>\n          Click me\n        </button>\n      </div>\n    );\n  }\n}\n```\n\n注意 **我们 class 组件中需要在两个生命周期中重复这段代码。**\n\n这是因为在很多时候，我们想要执行相同的 side effect，不管组件是刚刚挂载，或是刚刚更新。从概念上讲，我们想要它在每次 render 之后执行————尽管 React class 组件并不包含这样的方法。就算我们把这个公用的 side effect 抽象出来，我们依旧需要在两个地方分别调用它。\n\n现在让我们来看看我们用 `useEffect` Hook，如何做到这些。 \n\n### 使用 Hooks的例子\n\n我们已经在这一页的顶部看过了这个例子，不过让我们再仔细地研究一下：\n\n```js{1,6-8}\nimport { useState, useEffect } from 'react';\n\nfunction Example() {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    document.title = `You clicked ${count} times`;\n  });\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>\n        Click me\n      </button>\n    </div>\n  );\n}\n```\n\n**`useEffect` 做了什么？** 通过这个 Hook，React 知道你想要这个组件在每次 render 之后做些事情。React 会记录下你传给 `useEffect` 的这个方法（我们可以把它看做我们的 `effect` ），然后在进行了 DOM 更新之后调用这个方法。在这个 effect 中，我们设置 document title，但我们同样也可以进行数据获取或是调用其它必要的 API。\n\n**为什么 `useEffect` 在组件内部调用？** 将 `useEffect` 放在一个组件内部，可以让我们在 effect 中，即可获得对 `count` state（或其它 props）的访问，而不是使用一个特殊的 API 去获取它。Hooks 使用了 JavaScript 的闭包，从而避免了引入 React 特有的 API 来解决 JavaScript 已经提供解决方案。\n\n**`useEffect` 是不是在每次 render 之后都会调用？** 是的！默认情况下，它会在第一次 render *和* 之后的每次 update 后运行。（我们会在之后讨论如何[优化](#tip-optimizing-performance-by-skipping-effects)。）比起 “mounting” 和 “updating”，effect 在“每次 render”之后调用，想必会更容易理解。React 保证每次运行 effects 之前 DOM 已经更新了。\n\n### 细节解释\n\n现在我们来看看下面这几行代码的作用：\n\n```js\nfunction Example() {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    document.title = `You clicked ${count} times`;\n  });\n```\n\n我们声明了 `count` state，然后我们告诉 React 我们将会用到一个 effect。我们将一个函数传递给 `useEffct` Hook。我们传递的这个方法 *就是* 我们的 effect（副作用）。在这个 effect 里，我们使用 `document.title` API 设置了 document title。同时，由于 effect 在这个函数的作用域内，我们也可以在 effect 中读取到最新的 `count`。当 React 渲染组件时，它会记录下我们使用的 effect，然后再更新完 DOM 后调用它。这发生在每一次 render 之后，包括最开始的一次。\n\n有经验的 JavaScript 开发者也许已经发现，在每次 render 的时候，我们传递给 `useEffect` 的方法都是全新的。这是故意的。事实上，这正是我们可以在 effect 内部读取到 `count` 值，并且不用担心 `count` 值过期的原因。每当我们重新 render 的时候，我们都会使用一个 _不同的_ effect，替换掉之前的哪一个。在某种程度上，这使得 effect 表现得更像是 render 结果的一部分————每个 effect “属于”一个特定的 render。我们会在[这一节的后面](#explanation-why-effects-run-on-each-update)更清晰地了解到这么做的作用。\n\n>Tip\n>\n> 不像 `componentDidMount` 或者 `componentDidUpdate`，`useEffect` 中使用的 effect 并不会阻滞浏览器渲染页面。这让你的 app 看起来更加流畅。尽管大多数 effect 不需要同步调用。但是在一些不常见的情况下你也许需要他们同步调用（比如计算元素尺寸），我们提供了一个单独的 [`useLayoutEffect`](/docs/hooks-reference.html#uselayouteffect) 来达成这样的效果。它的 API 和 `useEffect` 是相同的。\n\n## 需要清理的 Effect\n\n我们刚刚看过了如何书写不需要清理的 side effect。然而，还有一些 effects 需要清理。比如，**我们可能会需要从一些外部数据源获取数据**。在这种情况下，我们就要确保我们进行了清理，以避免内存泄漏。我们还是来比较一下 class 和 Hooks。\n\n### 使用 Class 的例子\n\n在 React class 中，典型的做法是在 `componentDidMount` 里创建订阅，然后在 `componentWillUnmount` 中清除它。比如说我们假设我们有一个 `ChatAPI` 模块，可以让我们获取朋友的在线状态。我们使用 class 一般是这么做的：\n\n```js{8-26}\nclass FriendStatus extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { isOnline: null };\n    this.handleStatusChange = this.handleStatusChange.bind(this);\n  }\n\n  componentDidMount() {\n    ChatAPI.subscribeToFriendStatus(\n      this.props.friend.id,\n      this.handleStatusChange\n    );\n  }\n\n  componentWillUnmount() {\n    ChatAPI.unsubscribeFromFriendStatus(\n      this.props.friend.id,\n      this.handleStatusChange\n    );\n  }\n\n  handleStatusChange(status) {\n    this.setState({\n      isOnline: status.isOnline\n    });\n  }\n\n  render() {\n    if (this.state.isOnline === null) {\n      return 'Loading...';\n    }\n    return this.state.isOnline ? 'Online' : 'Offline';\n  }\n}\n```\n\n注意 `componentDidMount` 和 `componentWillUnmount` 中我们需要重复同一段代码。生命周期要求我们不得不拆分这段逻辑，就算从概念上讲他们是从属于同一个 effect 的。\n\n>Note\n>\n> 细心的读者也许已经注意到，这段例子需要一个 `componentDidUpdate` 方法才能是完全正确的。不过我们在这里暂时忽略这一点。我们将在[后文](#explanation-why-effects-run-on-each-update)继续讨论这一内容。\n\n### 使用 Hooks 的例子\n\n让我们来看看使用 Hooks 如何书写这个组件。\n\n你有可能以为我们依旧需要使用单独的 effect 来执行清理。但是添加和删除订阅的代码是如此的紧密相关，因此 `useEffect` 选择将它们保存在一起。如果你的 effect 返回了一个函数，React 将会在清理时运行它：\n\n```js{10-16}\nimport { useState, useEffect } from 'react';\n\nfunction FriendStatus(props) {\n  const [isOnline, setIsOnline] = useState(null);\n\n  function handleStatusChange(status) {\n    setIsOnline(status.isOnline);\n  }\n\n  useEffect(() => {\n    ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange);\n    // 明确在这个 effect 之后如何清理它\n    return function cleanup() {\n      ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange);\n    };\n  });\n\n  if (isOnline === null) {\n    return 'Loading...';\n  }\n  return isOnline ? 'Online' : 'Offline';\n}\n```\n\n**我们为什么在 effect 中返回一个函数** 这是一种可选的清理机制。每个 effect 都可以返回一个用来在晚些时候清理它的函数。这让我们让添加和移除订阅的逻辑彼此靠近。它们是同一个 effect 的一部分！\n\n**React 究竟在什么时候清理 effect？** React 在每次组件 unmount 的时候执行清理。然而，正如我们之前了解的那样，effect 会在每次 render 时运行，而不是仅仅运行一次。这也就是为什么 React *也* 会在下次运行 effect 之后清理上一次 render 中的 effect。我们会在接下来讨论[为什么这可以帮助避免 bug](#explanation-why-effects-run-on-each-update) 以及[如何有选择的运行 effect 以避免出现性能问题](#tip-optimizing-performance-by-skipping-effects)\n\n>Note\n>\n> 我们没必要在 effect 中返回一个具名函数。我们在这里称它为 `清理` 就可以表明它的目的，但你也可以返回一个箭头函数或者给它起一个名字。\n\n## 小结\n\n我们现在知道 `useEffect` 让我们可以在每次组件 render 之后调用不同种类的 side effect。其中的一些可能会需要被清理，所以它们返回一个函数：\n\n```js\n  useEffect(() => {\n    ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange);\n    return () => {\n      ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange);\n    };\n  });\n```\n\n其他的一些并不需要清理操作，所以它们并不返回任何东西。\n\n```js\n  useEffect(() => {\n    document.title = `You clicked ${count} times`;\n  });\n```\n\nEffect Hook 使用一个 API 使这两者获得了统一。\n\n-------------\n\n**不论你觉得对 Effect Hook 的工作方式有了很好的了解，或者你还是觉得有些迷惑，你都可以在这里跳转到 [下一页](/docs/hooks-rules.html)**\n\n-------------\n\n## 使用 Effect 的 Tips\n\n在这一页我们将会继续深入探讨关于 `useEffect` 的细节。有经验的 React 用户或许会对这部分内容感兴趣，不过你也可以先去看看其他 Hook 的使用方法。你可以随时返回这个页面以了解 Effect Hook 的更多细节。\n\n### Tip: 使用多个 Effect 以实现关注点分离\n\n我们在 Hook 的[动机](/docs/hooks-intro.html#complex-components-become-hard-to-understand)中提到的一个问题是 class 的生命周期函数常常包含不相关的逻辑，同时相关的逻辑被拆分进不同的方法。这里有一个结合了之前的计数器和朋友状态指示器逻辑的组件：\n\n```js\nclass FriendStatusWithCounter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { count: 0, isOnline: null };\n    this.handleStatusChange = this.handleStatusChange.bind(this);\n  }\n\n  componentDidMount() {\n    document.title = `You clicked ${this.state.count} times`;\n    ChatAPI.subscribeToFriendStatus(\n      this.props.friend.id,\n      this.handleStatusChange\n    );\n  }\n\n  componentDidUpdate() {\n    document.title = `You clicked ${this.state.count} times`;\n  }\n\n  componentWillUnmount() {\n    ChatAPI.unsubscribeFromFriendStatus(\n      this.props.friend.id,\n      this.handleStatusChange\n    );\n  }\n\n  handleStatusChange(status) {\n    this.setState({\n      isOnline: status.isOnline\n    });\n  }\n  // ...\n```\n\n注意这里设置 `document.title` 的代码被拆分到了 `componentDidMount` 和 `componentDidUpdate` 中。订阅的逻辑也分散到了 `componentDidMount` 和 `componentWillUnmount` 中。而 `componentDidMount` 包含了这两部分的代码。\n\n所以 Hooks 要如何解决这一问题呢？就像[你可以不止一次使用 *State* Hooks](/docs/hooks-state.html#tip-using-multiple-state-variables) 中说的一样，你同样可以使用多个 effects。这让我们可以把不相关的逻辑分离到不同的 effect 里：\n\n```js{3,8}\nfunction FriendStatusWithCounter(props) {\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    document.title = `You clicked ${count} times`;\n  });\n\n  const [isOnline, setIsOnline] = useState(null);\n  useEffect(() => {\n    ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange);\n    return () => {\n      ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange);\n    };\n  });\n\n  function handleStatusChange(status) {\n    setIsOnline(status.isOnline);\n  }\n  // ...\n}\n```\n\n**Hook 让我们根据代码的作用将它们拆分** 而不是根据生命周期。React 将会按照指定的顺序应用 *每个* effect。\n\n### Explanation: Why Effects Run on Each Update\n\nIf you're used to classes, you might be wondering why the effect cleanup phase happens after every re-render, and not just once during unmounting. Let's look at a practical example to see why this design helps us create components with fewer bugs.\n\n[Earlier on this page](#example-using-classes-1), we introduced an example `FriendStatus` component that displays whether a friend is online or not. Our class reads `friend.id` from `this.props`, subscribes to the friend status after the component mounts, and unsubscribes during unmounting:\n\n```js\n  componentDidMount() {\n    ChatAPI.subscribeToFriendStatus(\n      this.props.friend.id,\n      this.handleStatusChange\n    );\n  }\n\n  componentWillUnmount() {\n    ChatAPI.unsubscribeFromFriendStatus(\n      this.props.friend.id,\n      this.handleStatusChange\n    );\n  }\n```\n\n**But what happens if the `friend` prop changes** while the component is on the screen? Our component would continue displaying the online status of a different friend. This is a bug. We would also cause a memory leak or crash when unmounting since the unsubscribe call would use the wrong friend ID.\n\nIn a class component, we would need to add `componentDidUpdate` to handle this case:\n\n```js{8-19}\n  componentDidMount() {\n    ChatAPI.subscribeToFriendStatus(\n      this.props.friend.id,\n      this.handleStatusChange\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    // Unsubscribe from the previous friend.id\n    ChatAPI.unsubscribeFromFriendStatus(\n      prevProps.friend.id,\n      this.handleStatusChange\n    );\n    // Subscribe to the next friend.id\n    ChatAPI.subscribeToFriendStatus(\n      this.props.friend.id,\n      this.handleStatusChange\n    );\n  }\n\n  componentWillUnmount() {\n    ChatAPI.unsubscribeFromFriendStatus(\n      this.props.friend.id,\n      this.handleStatusChange\n    );\n  }\n```\n\nForgetting to handle `componentDidUpdate` properly is a common source of bugs in React applications.\n\nNow consider the version of this component that uses Hooks:\n\n```js\nfunction FriendStatus(props) {\n  // ...\n  useEffect(() => {\n    ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange);\n    return () => {\n      ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange);\n    };\n  });\n```\n\nIt doesn't suffer from this bug. (But we also didn't make any changes to it.)\n\nThere is no special code for handling updates because `useEffect` handles them *by default*. It cleans up the previous effects before applying the next effects. To illustrate this, here is a sequence of subscribe and unsubscribe calls that this component could produce over time:\n\n```js\n// Mount with { friend: { id: 100 } } props\nChatAPI.subscribeToFriendStatus(100, handleStatusChange);     // Run first effect\n\n// Update with { friend: { id: 200 } } props\nChatAPI.unsubscribeFromFriendStatus(100, handleStatusChange); // Clean up previous effect\nChatAPI.subscribeToFriendStatus(200, handleStatusChange);     // Run next effect\n\n// Update with { friend: { id: 300 } } props\nChatAPI.unsubscribeFromFriendStatus(200, handleStatusChange); // Clean up previous effect\nChatAPI.subscribeToFriendStatus(300, handleStatusChange);     // Run next effect\n\n// Unmount\nChatAPI.unsubscribeFromFriendStatus(300, handleStatusChange); // Clean up last effect\n```\n\nThis behavior ensures consistency by default and prevents bugs that are common in class components due to missing update logic.\n\n### Tip: Optimizing Performance by Skipping Effects\n\nIn some cases, cleaning up or applying the effect after every render might create a performance problem. In class components, we can solve this by writing an extra comparison with `prevProps` or `prevState` inside `componentDidUpdate`:\n\n```js\ncomponentDidUpdate(prevProps, prevState) {\n  if (prevState.count !== this.state.count) {\n    document.title = `You clicked ${this.state.count} times`;\n  }\n}\n```\n\nThis requirement is common enough that it is built into the `useEffect` Hook API. You can tell React to *skip* applying an effect if certain values haven't changed between re-renders. To do so, pass an array as an optional second argument to `useEffect`:\n\n```js{3}\nuseEffect(() => {\n  document.title = `You clicked ${count} times`;\n}, [count]); // Only re-run the effect if count changes\n```\n\nIn the example above, we pass `[count]` as the second argument. What does this mean? If the `count` is `5`, and then our component re-renders with `count` still equal to `5`, React will compare `[5]` from the previous render and `[5]` from the next render. Because all items in the array are the same (`5 === 5`), React would skip the effect. That's our optimization.\n\nWhen we render with `count` updated to `6`, React will compare the items in the `[5]` array from the previous render to items in the `[6]` array from the next render. This time, React will re-apply the effect because `5 !== 6`. If there are multiple items in the array, React will re-run the effect even if just one of them is different.\n\nThis also works for effects that have a cleanup phase:\n\n```js{6}\nuseEffect(() => {\n  ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange);\n  return () => {\n    ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange);\n  };\n}, [props.friend.id]); // Only re-subscribe if props.friend.id changes\n```\n\nIn the future, the second argument might get added automatically by a build-time transformation.\n\n>Note\n>\n>If you use this optimization, make sure the array includes **any values from the outer scope that change over time and that are used by the effect**. Otherwise, your code will reference stale values from previous renders. We'll also discuss other optimization options in the [Hooks API reference](/docs/hooks-reference.html).\n>\n>If you want to run an effect and clean it up only once (on mount and unmount), you can pass an empty array (`[]`) as a second argument. This tells React that your effect doesn't depend on *any* values from props or state, so it never needs to re-run. This isn't handled as a special case -- it follows directly from how the inputs array always works. While passing `[]` is closer to the familiar `componentDidMount` and `componentWillUnmount` mental model, we suggest not making it a habit because it often leads to bugs, [as discussed above](#explanation-why-effects-run-on-each-update). Don't forget that React defers running `useEffect` until after the browser has painted, so doing extra work is less of a problem.\n\n## Next Steps\n\nCongratulations! This was a long page, but hopefully by the end most of your questions about effects were answered. You've learned both the State Hook and the Effect Hook, and there is a *lot* you can do with both of them combined. They cover most of the use cases for classes -- and where they don't, you might find the [additional Hooks](/docs/hooks-reference.html) helpful.\n\nWe're also starting to see how Hooks solve problems outlined in [Motivation](/docs/hooks-intro.html#motivation). We've seen how effect cleanup avoids duplication in `componentDidUpdate` and `componentWillUnmount`, brings related code closer together, and helps us avoid bugs. We've also seen how we can separate effects by their purpose, which is something we couldn't do in classes at all.\n\nAt this point you might be questioning how Hooks work. How can React know which `useState` call corresponds to which state variable between re-renders? How does React \"match up\" previous and next effects on every update? **On the next page we will learn about the [Rules of Hooks](/docs/hooks-rules.html) -- they're essential to making Hooks work.**\n",
        "type": "MarkdownRemark",
        "contentDigest": "bd2deb49fb3059766231817790a6d54c",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Using the Effect Hook",
        "id": "hooks-state",
        "permalink": "docs/hooks-effect.html",
        "next": "hooks-rules.html",
        "prev": "hooks-intro.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/hooks-effect.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/hooks-effect.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/hooks-effect.md",
      "fields": {
        "slug": "docs/hooks-effect.html",
        "path": "docs/hooks-effect.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/hooks-state.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/hooks-state.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/hooks-state.md absPath of file",
      "internal": {
        "content": "---\nid: hooks-state\ntitle: Using the State Hook\npermalink: docs/hooks-state.html\nnext: hooks-effect.html\nprev: hooks-overview.html\n---\n\n*Hooks* is a new feature proposal that lets you use state and other React features without writing a class. They're currently in React v16.7.0-alpha and being discussed in [an open RFC](https://github.com/reactjs/rfcs/pull/68).\n\n*Hooks* 是一个新的特性（提案）用来在不书写class的情况下处理组件的状态. 已经部署在最新的React v16.7.0-alpha版本中，这里有关于它的讨论 [an open RFC](https://github.com/reactjs/rfcs/pull/68).\n\nThe [previous page](/docs/hooks-intro.html) introduced Hooks with this example:\n下面这一页介绍了Hooks的一个示例 \n```js{4-5}\nimport { useState } from 'react';\n\nfunction Example() {\n  // Declare a new state variable, which we'll call \"count\"\n  const [count, setCount] = useState(0);\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>\n        Click me\n      </button>\n    </div>\n  );\n}\n```\n\nWe'll start learning about Hooks by comparing this code to an equivalent class example.\n我们通过比较类声明组件的方式和函数声明的方式来学习Hooks.\n## Equivalent Class Example\n## 这是一个等价的类声明的组件\nIf you used classes in React before, this code should look familiar:\n\n```js\nclass Example extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <p>You clicked {this.state.count} times</p>\n        <button onClick={() => this.setState({ count: this.state.count + 1 })}>\n          Click me\n        </button>\n      </div>\n    );\n  }\n}\n```\n\nThe state starts as `{ count: 0 }`, and we increment `state.count` when the user clicks a button by calling `this.setState()`. We'll use snippets from this class throughout the page.\n这个状态从`{ count: 0 }`开始，然后在用户点击按钮的时候通过`this.setState()`增加 `state.count`，我们将在这一整页中使用这个代码段。\n>Note\n>\n>You might be wondering why we're using a counter here instead of a more realistic example. This is to help us focus on the API while we're still making our first steps with Hooks.\n\n>注意\n>\n>你可能疑惑为什么我们要使用counter而不是一个更实际的例子，因为我们现在的目的是集中讨论使用钩子的第一步，它的API\n\n## Hooks and Function Components\n\nAs a reminder, function components in React look like this:\n## Hooks和函数式组件\n\n提醒一下，React函数组件是这个样子\n\n```js\nconst Example = (props) => {\n  // You can use Hooks here!\n  return <div />;\n}\n```\n\n或者:\n\n```js\nfunction Example(props) {\n  // You can use Hooks here!\n  return <div />;\n}\n```\n\nYou might have previously known these as \"stateless components\". We're now introducing the ability to use React state from these, so we prefer the name \"function components\".\n\nHooks **don't** work inside classes. But you can use them instead of writing classes.\n你可能之前使用过无状态组件，而现在要讨论的是在这里使用React的state，所以更适合叫“函数式组件”.\n\nHooks 在class声明中**无法使用**，但是你可以使用它来代替类声明\n## What's a Hook?\n\nOur new example starts by importing the `useState` Hook from React:\n## 什么是Hook\n\n我们的例子是通过从React中导入一个 `useState` 钩子来开始的。\n```js{1}\nimport { useState } from 'react';\n\nfunction Example() {\n  // ...\n}\n```\n\n**What is a Hook?** A Hook is a special function that lets you \"hook into\" React features. For example, `useState` is a Hook that lets you add React state to function components. We'll learn other Hooks later.\n\n**什么是钩子函数？**钩子函数是一个简单的函数，它允许你 “钩入” （hook into）React的特性，例如，`useState`是一个允许你在函数式组件中使用React的状态特性的钩子\n**When would I use a Hook?** If you write a function component and realize you need to add some state to it, previously you had to convert it to a class. Now you can use a Hook inside the existing function component. We're going to do that right now!\n**我该在什么时候使用钩子函数？**如果你编写了一个函数式组件，并且意识到你需要在上面添加一些必要的状态的时候使用它，当然，你必须从类声明中转变过来，现在你可以在已经存在的函数式组件中使用钩子函数(Hook)，我们现在就开始。\n>Note:\n>\n>There are some special rules about where you can and can't use Hooks within a component. We'll learn them in [Rules of Hooks](/docs/hooks-rules.html).\n\n>注意:\n>\n>有一些特殊的规则，你在组件的某些地方不可以使用钩子函数[Rules of Hooks](/docs/hooks-rules.html).\n## Declaring a State Variable\n\nIn a class, we initialize the `count` state to `0` by setting `this.state` to `{ count: 0 }` in the constructor:\n\n## 声明一个状态变量\n\n在类中的构造函数里面，我们通过设置`this.state`为`{count:0}`,从而初始化`count`状态为`0`\n```js{4-6}\nclass Example extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    };\n  }\n```\n\nIn a function component, we have no `this`, so we can't assign or read `this.state`. Instead, we call the `useState` Hook directly inside our component:\n\n在一个函数式组件中，我们没有`this`，所以不用赋值或者读取`this.state`,与之相对应的，我们直接在组件中调用`useState`这个钩子函数\n\n```js{4,5}\nimport { useState } from 'react';\n\nfunction Example() {\n  // Declare a new state variable, which we'll call \"count\"\n  const [count, setCount] = useState(0);\n```\n\n**What does calling `useState` do?** It declares a \"state variable\". Our variable is called `count` but we could call it anything else, like `banana`. This is a way to \"preserve\" some values between the function calls — `useState` is a new way to use the exact same capabilities that `this.state` provides in a class. Normally, variables \"disappear\" when the function exits but state variables are preserved by React.\n**这个叫做`useState`的东西做了什么** 它声明了一个\"状态变量\",此时我们的变量叫做`count`，当然我们也可以给它任意取一个名字，像“香蕉”“苹果”什么的，这是一种在函数调用中保存值的手段————`useState`是一个新的方法来实现`this.state`在class中所实现的相同的功能，通常情况下，变量在函数调用之后会\"消失\"，但是在这里，React会将变量保存在自身。\n**What do we pass to `useState` as an argument?** The only argument to the `useState()` Hook is the initial state. Unlike with classes, the state doesn't have to be an object. We can keep a number or a string if that's all we need. In our example, we just want a number for how many times the user clicked, so pass `0` as initial state for our variable. (If we wanted to store two different values in state, we would call `useState()` twice.)\n**如何通过`useState`来传递参数？**`useState`钩子唯一的参数就是初始化参数，不像在类组件中，函数式组件中的状态不是一个对象，如果需要的话，我们可以保存一个数字，或者一个字符串，在这个示例中，我们刚刚想要一个数字来显示用户点击的次数，所以设置`0`作为初始化状态（如果想要存储两个不同的值，必须再调一次`useState()`）\n**What does `useState` return?** It returns a pair of values: the current state and a function that updates it. This is why we write `const [count, setCount] = useState()`. This is similar to `this.state.count` and `this.setState` in a class, except you get them in a pair. If you're not familiar with the syntax we used, we'll come back to it [at the bottom of this page](/docs/hooks-state.html#tip-what-do-square-brackets-mean).\n**使用`useState`得到什么？**它会返回一对值：变化的状态变量和一个用来更新该状态的函数，也就是我们编写的`const [count, setCount] = useState()`,如果你对使用的语法不熟悉，可以返回[页面顶部](/docs/hooks-state.html#tip-what-do-square-brackets-mean).\nNow that we know what the `useState` Hook does, our example should make more sense:\n现在，已经知道了`useState`钩子的作用，我们的例子就更有意义了\n```js{4,5}\nimport { useState } from 'react';\n\nfunction Example() {\n  // Declare a new state variable, which we'll call \"count\"\n  const [count, setCount] = useState(0);\n```\n\nWe declare a state variable called `count`, and set it to `0`. React will remember its current value between re-renders, and provide the most recent one to our function. If we want to update the current `count`, we can call `setCount`.\n我们声明了一个状态变量，名字是`count`，设置它的值是`0`，React会在重新渲染的时候记得它的值，提供最新的一个给函数，如果我们想要更新变化的`count`，直接调用`setCount。`\n>Note\n>\n>You might be wondering: why is `useState` not named `createState` instead?\n>\n>\"Create\" wouldn't be quite accurate because the state is only created the first time our component renders. During the next renders, `useState` gives us the current state. Otherwise it wouldn't be \"state\" at all! There's also a reason why Hook names *always* start with `use`. We'll learn why later in the [Rules of Hooks](/docs/hooks-rules.html).\n>注意\n>\n>你可能会疑惑：为什么`useState`不叫做`createState`?\n>\n>“创建”(create)不太准确，因为状态只在第一次渲染的时候创建，在接下来的渲染过程中，`useState`返回的是变化后的值，另外，它已经不再是\"状态\"，还有很多理由说明为何使用`use`，我们会在后面了解更多相关的信息[Rules of Hooks](/docs/hooks-rules.html).\n\n## Reading State\n\nWhen we want to display the current count in a class, we read `this.state.count`:\n## 渲染状态\n\n当我们想要在类组件中展示变化的count，我们读取`this.state.count`:\n```js\n  <p>You clicked {this.state.count} times</p>\n```\n\nIn a function, we can use `count` directly:\n在函数中，我们可以直接使用`count`\n\n```js\n  <p>You clicked {count} times</p>\n```\n\n## Updating State\n## 更新状态\nIn a class, we need to call `this.setState()` to update the `count` state:\n在类中，我们需要调用`this.setState()`来更新`count`\n```js{1}\n  <button onClick={() => this.setState({ count: this.state.count + 1 })}>\n    Click me\n  </button>\n```\n\nIn a function, we already have `setCount` and `count` as variables so we don't need `this`:\n在函数中，我们已经有了`setCount`和`count`作为变量，所以我们需要`this`\n```js{1}\n  <button onClick={() => setCount(count + 1)}>\n    Click me\n  </button>\n```\n\n## Recap\n## 重申\nLet's now **recap what we learned line by line** and check our understanding.\n我们现在重新来一行一行理解刚才所讲的东西\n<!--\n  I'm not proud of this line markup. Please somebody fix this.\n  But if GitHub got away with it for years we can cheat.\n  我对行注释不是很自信，要是谁可以帮我补充一些\n-->\n```js{1,4,9}\n 1:  import { useState } from 'react';\n 2: \n 3:  function Example() {\n 4:    const [count, setCount] = useState(0);\n 5:\n 6:    return (\n 7:      <div>\n 8:        <p>You clicked {count} times</p>\n 9:        <button onClick={() => setCount(count + 1)}>\n10:         Click me\n11:        </button>\n12:      </div>\n13:    );\n14:  }\n```\n\n* **Line 1:** We import the `useState` Hook from React. It lets us keep local state in a function component.\n* **Line 1:** 我们从React中导入`useState`钩子，它让我们将函数中的状态保存起来\n* **Line 4:** Inside the `Example` component, we declare a new state variable by calling the `useState` Hook. It returns a pair of values, to which we give names. We're calling our variable `count` because it holds the number of button clicks. We initialize it to zero by passing `0` as the only `useState` argument. The second returned item is itself a function. It lets us update the `count` so we'll name it `setCount`.\n* **Line4:** 在`Example`组件中，我们通过`useState`声明了一个新的状态变量，它返回一对我们给定的值，我们把`count`定义为按钮点击的次数，初始化为零，写在`useState`的参数中，第二个值是一个函数，用来更新我们`count`。\n* **Line 9:** When the user clicks, we call `setCount` with a new value. React will then re-render the `Example` component, passing the new `count` value to it.\n* **Line9:** 在用户点击的时候，调用`setCount`传入一个新的值，React会重新渲染`Examole`组件，同一时刻分配这个更新后的`count`值\nThis might seem like a lot to take in at first. Don't rush it! If you're lost in the explanation, look at the code above again and try to read it from top to bottom. We promise that once you try to \"forget\" how state works in classes, and look at this code with fresh eyes, it will make sense.\n这个看起来挺不容易理解的，但是不要着急，如果你对某些地方感觉还需要理清思路，重复阅读上面的代码，我们保证，一旦你试图将脑海中class声明的`this.state`的方式去除掉，再理解起来，就会很非常轻松。\n### Tip: What Do Square Brackets Mean?\n### 小技巧：方括号是什么意思\nYou might have noticed the square brackets when we declare a state variable:\n你也许注意到变量声明时候的方括号\n```js\n  const [count, setCount] = useState(0);\n```\n\nThe names on the left aren't a part of the React API. You can name your own state variables:\n变量的声明不是ReactAPI的一部分，你可以命名自己的变量\n```js\n  const [fruit, setFruit] = useState('banana');\n```\n\nThis JavaScript syntax is called [\"array destructuring\"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment#Array_destructuring). It means that we're making two new variables `fruit` and `setFruit`, where `fruit` is set to the first value returned by `useState`, and `setFruit` is the second. It is equivalent to this code:\n这个语法是ES6中的解构赋值[\"array destructuring\"](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment#Array_destructuring)，表示我们定义了两个变量`fruit`和`setFruit`，`fruit`被设置为`useState`的第一个值，`setFruit`是第二个，等价于下代码\n```js\n  var fruitStateVariable = useState('banana'); // Returns a pair\n  var fruit = fruitStateVariable[0]; // First item in a pair\n  var setFruit = fruitStateVariable[1]; // Second item in a pair\n```\n\nWhen we declare a state variable with `useState`, it returns a pair — an array with two items. The first item is the current value, and the second is a function that lets us update it. Using `[0]` and `[1]` to access them is a bit confusing because they have a specific meaning. This is why we use array destructuring instead.\n当我们使用`useState`声明状态变量，它返回一对，带有两个值的数组，第一个参数是变化的状态值，第二个是用来更新该状态的函数，使用`[0]`和`[1]`来访问会有一些困惑，因为它们有特定的含义，所以我们使用解构赋值来代替。\n>Note\n>\n>You might be curious how React knows which component `useState` corresponds to since we're not passing anything like `this` back to React. We'll answer [this question](/docs/hooks-faq.html#how-does-react-associate-hook-calls-with-components) and many others in the FAQ section.\n>注意\n>\n>你可能感到好奇，为何React知道哪个组件的`useState`，因为我们并没有将this之类的东西传递给React，在这里可以找到答案[this question](/docs/hooks-faq.html#how-does-react-associate-hook-calls-with-components) and many others in the FAQ section.\n### Tip: Using Multiple State Variables\n### 小技巧：使用多个状态变量\nDeclaring state variables as a pair of `[something, setSomething]` is also handy because it lets us give *different* names to different state variables if we want to use more than one:\n声明状态变量的一对值`[something, setSomething]`是很容易的，因为我们使用的是不同的命名，不同的名字返回更多的状态变量\n```js\nfunction ExampleWithManyStates() {\n  // Declare multiple state variables!\n  const [age, setAge] = useState(42);\n  const [fruit, setFruit] = useState('banana');\n  const [todos, setTodos] = useState([{ text: 'Learn Hooks' }]);\n```\n\nIn the above component, we have `age`, `fruit`, and `todos` as local variables, and we can update them individually:\n在下面的这个组件中，有年龄，水果，待办事项，作为本地变量，我们可以分别声明它们\n```js\n  function handleOrangeClick() {\n    // Similar to this.setState({ fruit: 'orange' })\n    setFruit('orange');\n  }\n```\n\nYou **don't have to** use many state variables. State variables can hold objects and arrays just fine, so you can still group related data together. However, unlike `this.setState` in a class, updating a state variable always *replaces* it instead of merging it.\n你 **不必** 使用很多状态变量，状态变量可以保持一个对象和一个数组，你也可以将相关联的数据组合到一起，然而，不像类中的`this.setState`，更新一个状态的值总是需要*替换*它，而不是合并它\nWe provide more recommendations on splitting independent state variables [in the FAQ](/docs/hooks-faq.html#should-i-use-one-or-many-state-variables).\n我们提供了更多的分离状态的推荐[in the FAQ](/docs/hooks-faq.html#should-i-use-one-or-many-state-variables).\n## Next Steps\n## 下一步\nOn this page we've learned about one of the Hooks provided by React, called `useState`. We're also sometimes going to refer to it as the \"State Hook\". It lets us add local state to React function components -- which we did for the first time ever! \n在这里我们已经学会了React提供的Hooks，叫做`useState`，我们有时候也将它称为“状态钩子”，它让我们添加一个本地的状态给React的函数组件，就像之前那样。\nWe also learned a little bit more about what Hooks are. Hooks are functions that let you \"hook into\" React features from function components. Their names always start with `use`, and there are more Hooks we haven't seen yet.\n我们已经学会了一些关于钩子函数的东西，钩子函数是一个在函数式组件中使用React状态特性的函数，它们的名字通常以`use`开头，有更多的钩子函数我们会在后面看见。\n**Now let's continue by [learning the next Hook: `useEffect`.](/docs/hooks-effect.html)** It lets you perform side effects in components, and is similar to lifecycle methods in classes.\n**接下来我们继续下一部分[learning the next Hook: `useEffect`.](/docs/hooks-effect.html)**它允许你在组件中使用一些副作用，类似于class中的生命周期函数。\n",
        "type": "MarkdownRemark",
        "contentDigest": "0a03dcfa559ebf54f4274da46db08a27",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Using the State Hook",
        "id": "hooks-state",
        "permalink": "docs/hooks-state.html",
        "next": "hooks-effect.html",
        "prev": "hooks-overview.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/hooks-state.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/hooks-state.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/hooks-state.md",
      "fields": {
        "slug": "docs/hooks-state.html",
        "path": "docs/hooks-state.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/integrating-with-other-libraries.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/integrating-with-other-libraries.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/integrating-with-other-libraries.md absPath of file",
      "internal": {
        "content": "---\nid: integrating-with-other-libraries\ntitle: 与第三方库协同\npermalink: docs/integrating-with-other-libraries.html\n---\n\n我们可以在任何网页应用中使用 React。不仅可以把 React 添加到其他应用里，而且只要稍作改动，我们也可以把其他应用添加到 React 项目里。本文将着重介绍如何将 React 与 [jQuery](https://jquery.com/) 以及 [Backbone](http://backbonejs.org/) 结合使用。当然，类似的思路同样可以应用与其他场景。\n\n## 与 DOM 节点操作类插件结合\n\n对于 React 之外的 DOM 节点操作，React 是不会去处理的，因为 React 内部有自己的渲染逻辑。当相同的 DOM 节点被外部的代码改变时，React 就会很迷茫，并不知道发生了什么。\n\n但这也不意味着 React 无法与其他操作 DOM 节点的库一起使用，你只要清楚他们分别在做什么就可以了。\n\n最简单的方式就是阻止 React 更新外部在操作的节点，那么你可以通过生成一个 React 根本不会去更新的元素来实现，比如空的 `<div />`。\n\n### 进一步的解释\n\n为了解释得更清楚，我们先来封装一个通用的 jQuery 插件吧。\n\n在这里，我们给 DOM 的根节点元素加了一个 [ref](/docs/refs-and-the-dom.html)。在 `componentDidMount` 中，我们会调用这个 ref，并把它传给 jQuery 插件。\n\n为了防止 React 在 DOM 加载后修改节点，我们先要在 `render()` 中返回一个空的 `<div />`。这个空的 `<div />` 既没有属性也没有子元素，这样一来，React 就不会更新它了。那么，我们封装的 jQuery 插件就可以随意地更新这个节点。\n\n```js{3,4,8,12}\nclass SomePlugin extends React.Component {\n  componentDidMount() {\n    this.$el = $(this.el);\n    this.$el.somePlugin();\n  }\n\n  componentWillUnmount() {\n    this.$el.somePlugin('destroy');\n  }\n\n  render() {\n    return <div ref={el => this.el = el} />;\n  }\n}\n```\n\n值得注意的是，我们既调用了 `componentDidMount` 也调用了 `componentWillUnmount` [生命周期函数](/docs/react-component.html#the-component-lifecycle)。由于很多 jQuery 的插件都会在 DOM 上挂载事件监听器，因此我们必须要在 `componentWillUnmount` 的时候把这个监听器删掉。如果某个插件没有提供“删除监听器”这类的方法，那你很可能需要自己写一个。为了防止内存泄漏，请务必在生命周期函数中移除插件挂载的事件监听器。\n\n### 集成 jQuery Chosen 插件\n\n为了进一步解释上面提到的内容，我们来封装一个 [Chosen](https://harvesthq.github.io/chosen/) 插件，这是一个可以扩充 `<select>` 功能的 jQuery 插件。\n\n> **注：**\n>\n> 尽管以下的做法是可以实现的，但这样处理，并不是最佳的解决方案。更好的方式，显然是使用 React 组件。不仅因为在 React 应用中组件的可复用性强，而且通常来说，组件的行为及外观也是更容易控制的。\n\n首先，我们先来看一下 Chosen 插件是如何操作 DOM 节点的。\n\n如果你在 `<select>` 节点中调用 Chosen 插件，首先它会读取节点中原本存在的属性，然后通过添加行内样式，把 `<select>` 这个节点隐藏起来。接下来，Chosen 插件会在隐藏起来的这个 `<select>` 节点之后添加它自己定义的节点。最后，调用 jQuery，并告知我们节点已经被它改变了。\n\n那么，我们就需要把上面提到的这个节点封装成 React 组件。在这里我们把它封装成 `<Chosen>`：\n\n```js\nfunction Example() {\n  return (\n    <Chosen onChange={value => console.log(value)}>\n      <option>vanilla</option>\n      <option>chocolate</option>\n      <option>strawberry</option>\n    </Chosen>\n  );\n}\n```\n\n为了方便，我么先把它写成一个 [不可控组件](/docs/uncontrolled-components.html)。\n\n首先，我们来创建一个带有 `render()` 方法的空组件，这个组件返回用 `<div>` 包着的 `<select>`：\n\n```js{4,5}\nclass Chosen extends React.Component {\n  render() {\n    return (\n      <div>\n        <select className=\"Chosen-select\" ref={el => this.el = el}>\n          {this.props.children}\n        </select>\n      </div>\n    );\n  }\n}\n```\n\n需要注意，这里我们必须用一个 `<div>` 包着 `<select>`，因为 Chosen 插件会在 `<select>` 之后添加 DOM 元素。对于 React 来说，`<div>` 就应该只有一个子级元素，因此这样做就可以让 React 忽略 Chosen 插件添加的 DOM 元素，也就不会存在冲突了。请记住，如果你想让其他插件修改某一个 DOM 节点，那你一定要保证 React 不会同时修改这个节点。\n\n\n接下来，我们需要添加生命周期函数。在 Chosen 插件初始化节点的时候，我们需要在 `componentDidMount` 里面给 `<select>` 节点设置一个 ref，然后在 `componentWillUnmount` 的时候删掉它：\n\n```js{2,3,7}\ncomponentDidMount() {\n  this.$el = $(this.el);\n  this.$el.chosen();\n}\n\ncomponentWillUnmount() {\n  this.$el.chosen('destroy');\n}\n```\n\n[CodePen 上的示例](http://codepen.io/gaearon/pen/qmqeQx?editors=0010)\n\nReact 不会给 `this.el` 加上什么特殊的意义，因为我们是在 `render` 方法中，通过 `ref` 来赋值的：\n\n```js\n<select className=\"Chosen-select\" ref={el => this.el = el}>\n```\n\n现在我们的组件就可以加载了，但我们还需要处理一下值改变的情况。首先，我们需要在 Chosen 插件的 `<select>` 元素中\"订阅\" jQuery 的 `change` 事件。\n\n我们不需要直接给 Chosen 传入 `this.props.onChange`，因为组件的 props 会随时发生变化，而且我们还需要一个处理 jQuery 事件的方法。在这里，我们定义了一个 `handleChange` 方法，这个方法会调用 `this.props.onChange`。然后，我们就用方法来订阅 jQuery 的 `change` 事件：\n\n```js{5,6,10,14-16}\ncomponentDidMount() {\n  this.$el = $(this.el);\n  this.$el.chosen();\n\n  this.handleChange = this.handleChange.bind(this);\n  this.$el.on('change', this.handleChange);\n}\n\ncomponentWillUnmount() {\n  this.$el.off('change', this.handleChange);\n  this.$el.chosen('destroy');\n}\n\nhandleChange(e) {\n  this.props.onChange(e.target.value);\n}\n```\n\n[CodePen 上的示例](http://codepen.io/gaearon/pen/bWgbeE?editors=0010)\n\n最后，我们还剩下一件事要做。正如上面提到的，在 React 中，props 可以随时改变。举个例子，如果 `<Chosen>` 组件父级元素的 state 改变了，那么 `<Chosen>` 组件里面的 DOM 节点也很可能发生变化。这也就意味着，在集成插件的时候，如果 props 发生了改变，那我们就需要手动更新 DOM 元素，这是因为我们之前已经保证过 React 不会去处理这个节点。\n\nChosen 插件的文档中提到，我们可以用 jQuery 的 `trigger()` 方法来更新 Chosen 中的 DOM 元素。那么，我们可以让 React 负责处理 `<select>` 中的 `this.props.children`，然后用 `componentDidUpdate()` 来通知 Chosen 去更新节点的 DOM 元素：\n\n```js{2,3}\ncomponentDidUpdate(prevProps) {\n  if (prevProps.children !== this.props.children) {\n    this.$el.trigger(\"chosen:updated\");\n  }\n}\n```\n\n这样一来，Chosen 插件就可以在 React 获取到 `<select>` 子元素变化的时候去更新 DOM 元素了。\n\n我们把上面提到的内容结合起来，`Chosen` 组件的最终代码如下：\n\n```js\nclass Chosen extends React.Component {\n  componentDidMount() {\n    this.$el = $(this.el);\n    this.$el.chosen();\n\n    this.handleChange = this.handleChange.bind(this);\n    this.$el.on('change', this.handleChange);\n  }\n  \n  componentDidUpdate(prevProps) {\n    if (prevProps.children !== this.props.children) {\n      this.$el.trigger(\"chosen:updated\");\n    }\n  }\n\n  componentWillUnmount() {\n    this.$el.off('change', this.handleChange);\n    this.$el.chosen('destroy');\n  }\n  \n  handleChange(e) {\n    this.props.onChange(e.target.value);\n  }\n\n  render() {\n    return (\n      <div>\n        <select className=\"Chosen-select\" ref={el => this.el = el}>\n          {this.props.children}\n        </select>\n      </div>\n    );\n  }\n}\n```\n\n[CodePen 上的示例](http://codepen.io/gaearon/pen/xdgKOz?editors=0010)\n\n## 在 React 中使用其他引擎加载页面\n\n由于 [`ReactDOM.render()`](/docs/react-dom.html#render) 方法很灵活，因此我们可以将 React 与其他处理页面显示的库结合使用。\n\n通常来说，尽管 React 是在页面加载的时候把一个根组件放到 DOM 里，但 `ReactDOM.render()` 方法也可以被不同的 UI 部件多次调用。这个部件可以仅仅是一个按钮，或者也可以是一个应用。\n\n事实上，Facebook 就是这么使用 React 的。我们可以独立地开发每一个部件，然后把这些部件与服务端创建的模板以及客户端代码结合起来，这样就形成了一个完整的应用。\n\n### 在 React 中使用“字符串替换”类的库\n\n早期的网页应用中，一个常用的方式是先把内容定义成字符串片段，然后插入到 DOM 节点中，就像这样：`$el.html(htmlString)`。采用这种方式写出来的应用，其实非常适合引入 React。只需要把那些字符串定义成 React 组件就可以了。\n\n比如，这一段 jQuery 代码……\n\n```js\n$('#container').html('<button id=\"btn\">Say Hello</button>');\n$('#btn').click(function() {\n  alert('Hello!');\n});\n```\n\n……可以改写成这样的 React 组件：\n\n```js\nfunction Button() {\n  return <button id=\"btn\">Say Hello</button>;\n}\n\nReactDOM.render(\n  <Button />,\n  document.getElementById('container'),\n  function() {\n    $('#btn').click(function() {\n      alert('Hello!');\n    });\n  }\n);\n```\n\n那么现在开始，你就可以在这个组件中应用 React 的思路，加入更多的逻辑代码。比如，习惯上来说组件是不应该依赖 ID 的，因为这一个组件可能会显示很多次。因此，我们需要使用 [React 事件系统](/docs/handling-events.html) 来给 `<button>` 添加点击事件的回调\n\n```js{2,6,9}\nfunction Button(props) {\n  return <button onClick={props.onClick}>Say Hello</button>;\n}\n\nfunction HelloButton() {\n  function handleClick() {\n    alert('Hello!');\n  }\n  return <Button onClick={handleClick} />;\n}\n\nReactDOM.render(\n  <HelloButton />,\n  document.getElementById('container')\n);\n```\n\n[CodePen 上的示例](http://codepen.io/gaearon/pen/RVKbvW?editors=1010)\n\n像这样的独立组件，你可以在页面中尽情使用，数量不限，只需要通过 `ReactDOM.render()` 方法把它放到不同位置就可以了。随着你把越来越多的代码转成 React 组件，你就可以把这些组件合并成更大的组件。这时候你再使用 `ReactDOM.render()` 就会输出更多的元素了。\n\n### 在 React 中使用 Backbone 的视图\n\n[Backbone](http://backbonejs.org/) 的视图是很典型的 HTML 字符串，或者说是通过模板生成 DOM 元素的函数。这个过程同样可以替换成 React 组件中的 render 方法。\n\n现在我们来创建一个叫做 `ParagraphView` 的 Backbone 视图，然后我们要覆盖 Backbone 原有的 `render()` 方法，让 Backbone 中 (`this.el`) 创建的 DOM 元素加载 React 的 `<Paragraph>` 组件：\n\n```js{1,5,8,12}\nfunction Paragraph(props) {\n  return <p>{props.text}</p>;\n}\n\nconst ParagraphView = Backbone.View.extend({\n  render() {\n    const text = this.model.get('text');\n    ReactDOM.render(<Paragraph text={text} />, this.el);\n    return this;\n  },\n  remove() {\n    ReactDOM.unmountComponentAtNode(this.el);\n    Backbone.View.prototype.remove.call(this);\n  }\n});\n```\n\n[CodePen 上的示例](http://codepen.io/gaearon/pen/gWgOYL?editors=0010)\n\n请注意，我们在 `remove` 中调用了 `ReactDOM.unmountComponentAtNode()`。这样 React 就会在恰当的时候把事件处理器和相关的绑定方法从组件树中删除。\n\n当一个组件被 React 从树中删除，在这个组件上绑定的监听器之类的也会被清除掉。但由于我们是在手动操作这些，因此需要调用相关方法。\n\n## 在 React 中使用其他数据层库和框架\n\n一般来说，推荐大家使用符合单向数据流的框架和库，比如 [React state](/docs/lifting-state-up.html)、[Flux](http://facebook.github.io/flux/) 或 [Redux](http://redux.js.org/)。但 React 的组件也可以支持其他处理数据流的框架和库。\n\n### 在 React 组件中使用 Backbone 处理数据\n\n如果想在 React 中使用 [Backbone](http://backbonejs.org/) 处理数据模型，最简单的实现方式就是监听多个事件，然后手动调用方法，强制更新页面。\n\n负责处理数据模型的组件通常都会监听 `'change'` 事件，但负责处理数据本身的组件还要监听 `'add'` 和 `'remove'` 事件。无论对于哪种，我们都可以通过调用 [`this.forceUpdate()`](/docs/react-component.html#forceupdate) 来强制更新页面显示的数据。\n\n在接下来的例子中，`List` 组件用来显示来自 Backbone 的数据，而 `Item` 组件是负责显示每一条数据的。\n\n```js{1,7-9,12,16,24,30-32,35,39,46}\nclass Item extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.forceUpdate();\n  }\n\n  componentDidMount() {\n    this.props.model.on('change', this.handleChange);\n  }\n\n  componentWillUnmount() {\n    this.props.model.off('change', this.handleChange);\n  }\n\n  render() {\n    return <li>{this.props.model.get('text')}</li>;\n  }\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange();\n  }\n\n  handleChange() {\n    this.forceUpdate();\n  }\n\n  componentDidMount() {\n    this.props.collection.on('add', 'remove', this.handleChange);\n  }\n\n  componentWillUnmount() {\n    this.props.collection.off('add', 'remove', this.handleChange);\n  }\n\n  render() {\n    return (\n      <ul>\n        {this.props.collection.map(model => (\n          <Item key={model.cid} model={model} />\n        ))}\n      </ul>\n    );\n  }\n}\n```\n\n[CodePen 上的示例](http://codepen.io/gaearon/pen/GmrREm?editors=0010)\n\n### 从 Backbone 的数据模型中提取数据\n\n上面的方法需要 React 组件实时获取 Backbone 数据的更新。如果将来你打算迁移到另一个数据管理系统，你肯定不愿意在 Backbone 这里改动太多的代码。\n\n一种解决方案就是在数据变化时，提取出数据模型的属性，并把这个逻辑封装起来。这里有个 [高阶组件](/docs/higher-order-components.html) 的例子，作用就是把 Backbone 数据模型中的属性提取出来成为 state，并把数据传到组件中。\n\n采用这种写法，只有这个高阶组件需要实时获取到 Backbone 数据模型的更新，应用中的其他组件都不需要与 Backbone 互动。\n\n在下面的例子中，我们会把数据模型的属性复制到初始 state 中。然后我们会订阅 `change` 事件（当然，我们也要在组件移除的时候取消订阅）。`change` 事件触发的时候，我们会根据数据模型当前的属性来更新 state。最后，我们还要确认一件事，就是在 `model` 这个 prop 本身发生变化的时候，我们同样要取消原来的订阅，同时订阅更新后的 prop。\n\n请注意，这个例子的目的不在于详细说明如何与 Backbone 集成，而是想给出一些通用的思路，这样你也可以试着与其他库或框架集成。\n\n```js{1,5,10,14,16,17,22,26,32}\nfunction connectToBackboneModel(WrappedComponent) {\n  return class BackboneComponent extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = Object.assign({}, props.model.attributes);\n      this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n      this.props.model.on('change', this.handleChange);\n    }\n\n    componentWillReceiveProps(nextProps) {\n      this.setState(Object.assign({}, nextProps.model.attributes));\n      if (nextProps.model !== this.props.model) {\n        this.props.model.off('change', this.handleChange);\n        nextProps.model.on('change', this.handleChange);\n      }\n    }\n\n    componentWillUnmount() {\n      this.props.model.off('change', this.handleChange);\n    }\n\n    handleChange(model) {\n      this.setState(model.changedAttributes());\n    }\n\n    render() {\n      const propsExceptModel = Object.assign({}, this.props);\n      delete propsExceptModel.model;\n      return <WrappedComponent {...propsExceptModel} {...this.state} />;\n    }\n  }\n}\n```\n\n为了展示如何调用，我们在 Backbone 模型中引入一个叫做 `NameInput` 的 React 组件。当输入发生变化时更新组件的 `firstName` 属性。\n\n```js{4,6,11,15,19-21}\nfunction NameInput(props) {\n  return (\n    <p>\n      <input value={props.firstName} onChange={props.handleChange} />\n      <br />\n      My name is {props.firstName}.\n    </p>\n  );\n}\n\nconst BackboneNameInput = connectToBackboneModel(NameInput);\n\nfunction Example(props) {\n  function handleChange(e) {\n    model.set('firstName', e.target.value);\n  }\n\n  return (\n    <BackboneNameInput\n      model={props.model}\n      handleChange={handleChange}\n    />\n  );\n}\n\nconst model = new Backbone.Model({ firstName: 'Frodo' });\nReactDOM.render(\n  <Example model={model} />,\n  document.getElementById('root')\n);\n```\n\n[CodePen 上的示例](http://codepen.io/gaearon/pen/PmWwwa?editors=0010)\n\n以上提到的内容不局限于 Backbone。对于任何处理数据模型的库或框架，你都可以在 React 中通过生命周期函数订阅它的变化事件。你还可以把这些数据直接复制到 React 组件的 state 中，不过这个步骤不是必须的。\n",
        "type": "MarkdownRemark",
        "contentDigest": "852ebed4a64bc62527f9d4d64d8e659d",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "与第三方库协同",
        "id": "integrating-with-other-libraries",
        "permalink": "docs/integrating-with-other-libraries.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/integrating-with-other-libraries.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/integrating-with-other-libraries.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/integrating-with-other-libraries.md",
      "fields": {
        "slug": "docs/integrating-with-other-libraries.html",
        "path": "docs/integrating-with-other-libraries.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/optimizing-performance.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/optimizing-performance.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/optimizing-performance.md absPath of file",
      "internal": {
        "content": "---\nid: optimizing-performance\ntitle: 性能优化\npermalink: docs/optimizing-performance.html\nredirect_from: \"docs/advanced-performance.html\"\n---\n\n更新UI时，React在内部使用几种巧妙的技术来最小化DOM操作的数量。对许多应用来说，使用React不需要做太多的优化工作就可以快速创建用户界面。除此之外，还有一些优化React应用性能的办法。\n\n## 使用生产版本\n\n在React应用中检测性能问题时，请务必使用压缩过的生产版本。\n\n默认情况下，React包含很多在开发过程中很有帮助的警告。然而，这会导致React更大更慢。因此，在部署应用时，请确认使用了生产版本。\n\n如果你不确定构建过程是否正确，可以安装[React开发者工具（chrome）](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi)。当你访问一个生产模式的React页面时，这个工具的图标会有一个黑色的背景：\n\n<img src=\"../images/docs/devtools-prod.png\" style=\"max-width:100%\" alt=\"React DevTools on a website with production version of React\">\n\n当你访问一个开发模式的React页面时，这个工具的图标会有一个红色的背景：\n\n<img src=\"../images/docs/devtools-dev.png\" style=\"max-width:100%\" alt=\"React DevTools on a website with development version of React\">\n\n最好在开发应用时使用开发模式，部署应用时换为生产模式。\n\n以下是构建生产应用的流程。\n\n### Create React App方式\n\n如果你的项目是以[Create React App](https://github.com/facebookincubator/create-react-app)创建的，运行如下代码：\n\n```\nnpm run build\n```\n\n这将会在该项目的`build/`文件夹内创建一个生产版本的应用。\n\n注意只有发布项目时才有必要这样做，正常开发时，使用`npm start`。\n\n### 单文件生产版本\n\n我们提供压缩好的生产版本的React和React DOM文件:\n\n```html\n<script src=\"https://unpkg.com/react@15/dist/react.min.js\"></script>\n<script src=\"https://unpkg.com/react-dom@15/dist/react-dom.min.js\"></script>\n```\n\n注意只有结尾为`.min.js`的React文件才是适合生产使用的。\n\n### Brunch\n\n为了创建最高效的Brunch生产版本，需要安装[`uglify-js-brunch`](https://github.com/brunch/uglify-js-brunch) 插件:\n\n```\n# If you use npm\nnpm install --save-dev uglify-js-brunch\n\n# If you use Yarn\nyarn add --dev uglify-js-brunch\n```\n\n接下来，为了构建生产版本，在`build`命令后添加`-p`参数：\n\n```\nbrunch build -p\n```\n\n注意只有生产版本需要这样操作。不要在开发环境中安装这个插件或者使用`-p`参数，因为它会隐藏掉有用的React警告并使构建过程更慢。\n\n### Browserify\n\n为了创建最高效的Browserify生产版本，需要安装一些插件：\n\n```\n# If you use npm\nnpm install --save-dev bundle-collapser envify uglify-js uglifyify \n\n# If you use Yarn\nyarn add --dev bundle-collapser envify uglify-js uglifyify \n```\n\n为了构建生产版本，务必添加这些设置指令 **(参数很重要)**:\n\n* [`envify`](https://github.com/hughsk/envify)该插件确保正确的编译环境，全局安装（`-g`）。\n* [`uglifyify`](https://github.com/hughsk/uglifyify)该插件移除了开发接口。全局安装（`-g`）。\n* [`bundle-collapser`](https://github.com/substack/bundle-collapser)该插件用数字替代了长长的模块ID。\n* 最后，以上结果都被输添加至[`uglify-js`](https://github.com/mishoo/UglifyJS2)来得到整合。([了解原因](https://github.com/hughsk/uglifyify#motivationusage)).\n\n举个例子：\n\n```\nbrowserify ./index.js \\\n  -g [ envify --NODE_ENV production ] \\\n  -g uglifyify \\\n  -p bundle-collapser/plugin \\\n  | uglifyjs --compress --mangle > ./bundle.js\n```\n\n>**注意：**\n>\n>包的名称是`uglify-js`，但是它提供的文件叫`uglifyjs`。<br>\n>这不是一个错字。\n\n注意只有生产版本需要这样操作。不要在开发环境中安装这些插件，因为它们会隐藏掉有用的React警告并使构建过程更慢。\n\n### Rollup\n\n为了创建最高效的Rollup生产版本，需要安装一些插件：\n\n```\n# If you use npm\nnpm install --save-dev rollup-plugin-commonjs rollup-plugin-replace rollup-plugin-uglify \n\n# If you use Yarn\nyarn add --dev rollup-plugin-commonjs rollup-plugin-replace rollup-plugin-uglify \n```\n\n为了构建生产版本，务必添加这些插件 **(参数很重要)**:\n\n* [`replace`](https://github.com/rollup/rollup-plugin-replace)该插件确保正确的编译环境。\n* [`commonjs`](https://github.com/rollup/rollup-plugin-commonjs)该插件在Rollup内提供对CommonJS的支持。\n* [`uglify`](https://github.com/TrySound/rollup-plugin-uglify)该插件压缩生成最终版本。\n\n```js\nplugins: [\n  // ...\n  require('rollup-plugin-replace')({\n    'process.env.NODE_ENV': JSON.stringify('production')\n  }),\n  require('rollup-plugin-commonjs')(),\n  require('rollup-plugin-uglify')(),\n  // ...\n]\n```\n\n查看完整的[安装例子](https://gist.github.com/Rich-Harris/cb14f4bc0670c47d00d191565be36bf0).\n\n注意只有生产版本需要这样操作。不要在开发环境中安装`uglify`和`replace`，因为它们会隐藏掉有用的React警告并使构建过程更慢。\n\n### Webpack\n\n>**注意：**\n>\n>如果你正在使用[Create React App](#create-react-app)方式，参考上述文档。<br>\n>本节只适用于直接配置Webpack的情况。\n\n为了创建最高效的Webpack生产版本，需要在生产版本的配置中添加这些插件：\n\n```js\nnew webpack.DefinePlugin({\n  'process.env': {\n    NODE_ENV: JSON.stringify('production')\n  }\n}),\nnew webpack.optimize.UglifyJsPlugin()\n```\n\n了解更多参见[Webpack文档](https://webpack.js.org/guides/production-build/).\n\n注意只有生产版本需要这样操作。不要在开发环境中安装`UglifyJsPlugin`和`DefinePlugin`，因为它们会隐藏掉有用的React警告并使构建过程更慢。\n\n## 使用 Chrome Performance 归档组件\n\n在**开发**模式下， 在支持的浏览器内使用性能工具可以直观的了解组件何时挂载，更新和卸载。例如：\n\n<center><img src=\"../images/blog/react-perf-chrome-timeline.png\" style=\"max-width:100%\" alt=\"React components in Chrome timeline\" /></center>\n\nChrome浏览器内：\n\n1. 在项目地址栏内添加查询字符串 `?react_perf`（例如， `http://localhost:3000/?react_perf`）。\n\n2. 打开Chrome开发工具**[Performance](https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/timeline-tool)** 标签页点击**Record**.\n\n3. 执行你想要分析的动作。不要记录超过20s，不然Chrome可能会挂起。\n\n4. 停止记录。\n\n5. React事件将会被归类在 **User Timing**标签下。\n\n更多的详细操作，请参考 [BenSchwarz 的这篇文章](https://building.calibreapp.com/debugging-react-performance-with-react-16-and-chrome-devtools-c90698a522ad)。\n\n注意**由于这些数字是相对的，因此组件在生产版本中会运行更快**。然而，这也能够帮助你了解何时会有无关的组件被错误的更新，以及你的组件更新的深度和频率。\n\n目前浏览器中仅有Chrome，Edge和IE支持此特性，但是我们使用此标准[用户Timing API](https://developer.mozilla.org/en-US/docs/Web/API/User_Timing_API)，因此我们期待更多的浏览器对其添加支持。\n\n## 虚拟化长列表\n\nIf your application renders long lists of data (hundreds or thousands of rows), we recommended using a technique known as “windowing”. This technique only renders a small subset of your rows at any given time, and can dramatically reduce the time it takes to re-render the components as well as the number of DOM nodes created.\n\n[react-window](https://react-window.now.sh/) and [react-virtualized](https://bvaughn.github.io/react-virtualized/) are popular windowing libraries. They provide several reusable components for displaying lists, grids, and tabular data. You can also create your own windowing component, like [Twitter did](https://medium.com/@paularmstrong/twitter-lite-and-high-performance-react-progressive-web-apps-at-scale-d28a00e780a3), if you want something more tailored to your application’s specific use case.\n\n## 避免协调\n\nReact在渲染出的UI内部建立和维护了一个内层的实现方式，它包括了从组件返回的React元素。这种实现方式使得React避免了一些不必要的创建和关联DOM节点，因为这样做可能比直接操作JavaScript对象更慢一些。有时它被称之为“虚拟DOM”，但是它其实和React Native的工作方式是一样的。\n\n当一个组件的`props`或者`state`改变时，React通过比较新返回的元素和之前渲染的元素来决定是否有必要更新实际的DOM。当他们不相等时，React会更新DOM。\n\nYou can now visualize these re-renders of the virtual DOM with React DevTools:\n\n- [Chrome Browser Extension](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?hl=en)\n- [Firefox Browser Extension](https://addons.mozilla.org/en-GB/firefox/addon/react-devtools/)\n- [Standalone Node Package](https://www.npmjs.com/package/react-devtools)\n\nIn the developer console select the **Highlight Updates** option in the **React** tab:\n\n[![How to enable highlight updates](https://reactjs.org/static/devtools-highlight-updates-97eda4825de476af4515435a0c36ca78-acf85.png)](https://reactjs.org/static/devtools-highlight-updates-97eda4825de476af4515435a0c36ca78-a62e3.png)\n\nInteract with your page and you should see colored borders momentarily appear around any components that have re-rendered. This lets you spot re-renders that were not necessary. You can learn more about this React DevTools feature from this [blog post](https://blog.logrocket.com/make-react-fast-again-part-3-highlighting-component-updates-6119e45e6833) from [Ben Edelstein](https://blog.logrocket.com/@edelstein).\n\nConsider this example:\n\n![React DevTools Highlight Updates example](https://reactjs.org/highlight-updates-example-7a42123e91b1b460b1a65605d6ff0d2b.gif)\n\nNote that when we’re entering a second todo, the first todo also flashes on the screen on every keystroke. This means it is being re-rendered by React together with the input. This is sometimes called a “wasted” render. We know it is unnecessary because the first todo content has not changed, but React doesn’t know this.\n\nEven though React only updates the changed DOM nodes, re-rendering still takes some time. In many cases it’s not a problem, but if the slowdown is noticeable, you can speed all of this up by overriding the lifecycle function `shouldComponentUpdate`, which is triggered before the re-rendering process starts. The default implementation of this function returns `true`, leaving React to perform the update:\n\n在一些情况下，你的组件可以通过重写这个生命周期函数`shouldComponentUpdate`来提升速度， 它是在重新渲染过程开始前触发的。 这个函数默认返回`true`，可使React执行更新：\n\n```js\nshouldComponentUpdate(nextProps, nextState) {\n  return true;\n}\n```\n\n如果你知道在某些情况下你的组件不需要更新，你可以在`shouldComponentUpdate`内返回`false`来跳过整个渲染进程，该进程包括了对该组件和之后的内容调用`render()`指令。\n\nIn most cases, instead of writing `shouldComponentUpdate()` by hand, you can inherit from [`React.PureComponent`](https://reactjs.org/docs/react-api.html#reactpurecomponent). It is equivalent to implementing `shouldComponentUpdate()` with a shallow comparison of current and previous props and state.\n\n## shouldComponentUpdate实战\n\n这是一个组件的子树。对其中每个组件来说，`SCU`表明了`shouldComponentUpdate`的返回内容，`vDOMEq`表明了待渲染的React元素与原始元素是否相等，最后，圆圈的颜色表明这个组件是否需要重新渲染。\n\n<figure><img src=\"../images/docs/should-component-update.png\" style=\"max-width:100%\" /></figure>\n\n由于以C2为根的子树的`shouldComponentUpdate`返回了`false`，React不会试图渲染C2，甚至不会在C4和C5上调用`shouldComponentUpdate`。\n\n对C1和C3来说，`shouldComponentUpdate`返回了`true`，因此React会深入到分支中并检查它们。C6的`shouldComponentUpdate`返回了`true`，由于待渲染的元素与原始元素并不相等，React会更新这个DOM节点。\n\n最后一个有趣的情况是C8，React需要渲染这个组件，但是由于组件元素返回值与原元素相等，因此它并没有更新这个DOM节点。\n\n注意React只需更新C6，因为它是不可避免的。对C8来说，它通过比较待渲染元素与原始元素避免了渲染，对C2的子树和C7，它们甚至都没有执行比较，因为我们设置了`shouldComponentUpdate`为`false`，`render`没有被调用。\n\n## 案例\n\n如果想让组件只在`props.color`或者`state.count`的值变化时重新渲染，你可以像下面这样设定`shouldComponentUpdate`：\n\n```js\nclass CounterButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {count: 1};\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.color !== nextProps.color) {\n      return true;\n    }\n    if (this.state.count !== nextState.count) {\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n    return (\n      <button\n        color={this.props.color}\n        onClick={() => this.setState(state => ({count: state.count + 1}))}>\n        Count: {this.state.count}\n      </button>\n    );\n  }\n}\n```\n\n在以上代码中，`shouldComponentUpdate`只检查`props.color`和`state.count`的变化。如果这些值没有变化，组件就不会更新。当你的组件变得更加复杂时，你可以使用类似的模式来做一个“浅比较”，用来比较属性和值以判定是否需要更新组件。这种模式十分常见，因此React提供了一个辅助对象来实现这个逻辑 - 继承自`React.PureComponent`。以下代码可以更简单的实现相同的操作：\n\n```js\nclass CounterButton extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {count: 1};\n  }\n\n  render() {\n    return (\n      <button\n        color={this.props.color}\n        onClick={() => this.setState(state => ({count: state.count + 1}))}>\n        Count: {this.state.count}\n      </button>\n    );\n  }\n}\n```\n\n大部分时候，你可以使用`React.PureComponent`而不必写你自己的`shouldComponentUpdate`，它只做一个浅比较。如果属性或状态变化会因为浅比较的原因而不被感知，这会导致渲染结果和数据的不一致，此时你不能使用它。\n\n对于更复杂的数据结构这可能成为一个问题。例如，假设你想要一个`ListOfWords`组件来渲染一个逗号分隔的单词列表，并使用一个带了点击按钮名字叫`WordAdder`的父组件来给子列表添加一个单词。以下代码*并不正确*： \n\n```js\nclass ListOfWords extends React.PureComponent {\n  render() {\n    return <div>{this.props.words.join(',')}</div>;\n  }\n}\n\nclass WordAdder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      words: ['marklar']\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    // This section is bad style and causes a bug\n    const words = this.state.words;\n    words.push('marklar');\n    this.setState({words: words});\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.handleClick} />\n        <ListOfWords words={this.state.words} />\n      </div>\n    );\n  }\n}\n```\n\n问题是`PureComponent`将会在`this.props.words`的新旧值之间做一个简单的比较。由于代码中`words`数组在`WordAdder`的`handleClick`方法中被改变了，尽管数组中的实际单词已经改变，`this.props.words`的新旧值还是相等的，因此即便`ListOfWords`具有应该被渲染的新单词，它还是不会更新。\n\n## 不会突变的数据的力量\n\n避免此类问题最简单的方式是避免使用值可能会**突变**的属性或状态。例如，上面例子中的`handleClick`应该用`concat`重写成：\n\n```js\nhandleClick() {\n  this.setState(prevState => ({\n    words: prevState.words.concat(['marklar'])\n  }));\n}\n```\n\nES6支持数组的[展开语法](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator)可以让它变得更容易。如果你使用的是`Create React App`，那么此语法默认可用。\n\n```js\nhandleClick() {\n  this.setState(prevState => ({\n    words: [...prevState.words, 'marklar'],\n  }));\n};\n```\n\n你也可以用相似的方式重写可以会突变的对象。例如，假设我们有一个叫`colormap`的对象，我们想写一个把`colormap.right`改变成`'blue'`的函数，我们应该写：\n\n```js\nfunction updateColorMap(colormap) {\n  colormap.right = 'blue';\n}\n```\n\n想要实现代码而不突变原始对象，我们可以使用[Object.assign](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)方法：\n\n```js\nfunction updateColorMap(colormap) {\n  return Object.assign({}, colormap, {right: 'blue'});\n}\n```\n\n`updateColorMap`现在会返回一个新对象，而不会突变之前的旧对象。`Object.assign`在ES6中，需要`polyfill`支持。\n\n有一个JavaScript提议来添加[对象展开属性](https://github.com/sebmarkbage/ecmascript-rest-spread)以使其更容易地更新对象并且不会突变对象：\n\n```js\nfunction updateColorMap(colormap) {\n  return {...colormap, right: 'blue'};\n}\n```\n\n如果使用`Create React App`，默认情况下 `Object.assign`和对象展开语法都可以使用。\n\n## 使用不可突变的数据结构\n\n[Immutable.js](https://github.com/facebook/immutable-js)是解决这个问题的另一种方法。它通过结构共享提供不可突变的，持久的集合：\n\n* *不可突变*:一旦创建，集合就不能在另一个时间点改变。\n* *持久性*:可以使用原始集合和一个突变来创建新的集合。原始集合在新集合创建后仍然可用。\n* *结构共享*:新集合尽可能多的使用原始集合的结构来创建，以便将复制操作降至最少从而提升性能。\n\n不可突变性使得跟踪改变很方便。每个变化都会导致产生一个新的对象，因此我们只需检查对象的引用是否有改变。例如，在这个常规的JavaScript代码中：\n\n```js\nconst x = { foo: 'bar' };\nconst y = x;\ny.foo = 'baz';\nx === y; // true\n```\n\n虽然`y`被编辑了，但是由于它与`x`索引了相同的对象，这个比较会返回`true`。你可以使用`immutable.js`实现类似效果：\n\n```javascript\nconst SomeRecord = Immutable.Record({ foo: null });\nconst x = new SomeRecord({ foo: 'bar' });\nconst y = x.set('foo', 'baz');\nx === y; // false\n```\n\n在这个例子中，`x`突变后返回了一个新的引用，因此我们可以安全的确认`x`被改变了。\n\n还有两个库可以帮助我们使用不可突变数据：[seamless-immutable](https://github.com/rtfeldman/seamless-immutable) 和[immutability-helper](https://github.com/kolodny/immutability-helper)。\n\n不可突变的数据结构帮助我们轻松地在对象上追踪变化，我们只需要实现`shouldComponentUpdate`。这通常可以提供一个不错的性能提升。\n",
        "type": "MarkdownRemark",
        "contentDigest": "d19c19be26f18f17d529da4de0ae0a2a",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "性能优化",
        "id": "optimizing-performance",
        "permalink": "docs/optimizing-performance.html",
        "redirect_from": "docs/advanced-performance.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/optimizing-performance.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/optimizing-performance.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/optimizing-performance.md",
      "fields": {
        "slug": "docs/optimizing-performance.html",
        "path": "docs/optimizing-performance.md",
        "redirect": "\"docs/advanced-performance.html\""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-02-18-react-conf-roundup-2015.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-02-18-react-conf-roundup-2015.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-02-18-react-conf-roundup-2015.md absPath of file",
      "internal": {
        "content": "---\ntitle: React.js Conf Round-up 2015\nlayout: post\nauthor: [steveluscher]\n---\n\nIt was a privilege to welcome the React community to Facebook HQ on January 28–29 for the first-ever React.js Conf, and a pleasure to be able to unveil three new technologies that we've been using internally at Facebook for some time: GraphQL, Relay, and React Native.\n\n## The talks\n\n<div class=\"skinny-row\">\n  <div class=\"skinny-col\">\n    <h3 style=\"margin-top:0\"><a class=\"anchor\" name=\"talk-keynote\"></a>Keynote <a class=\"hash-link\" href=\"#talk-keynote\">#</a></h3>\n    <p>\n      <strong>Tom Occhino</strong> opened with a history of how React came to be, before announcing Facebook’s answer to a long-looming what-if question: what if we could use React to target something other than the DOM?\n    </p>\n  </div>\n  <div class=\"skinny-col\">\n    <iframe width=\"650\" height=\"171\" src=\"https://www.youtube-nocookie.com/embed/KVZ-P-ZI6W4\" frameborder=\"0\" allowfullscreen></iframe>\n  </div>\n</div>\n\n<div class=\"skinny-row\">\n  <div class=\"skinny-col\">\n    <h3 style=\"margin-top:0\"><a class=\"anchor\" name=\"talk-tweak\"></a>Tweaking in real time <a class=\"hash-link\" href=\"#talk-tweak\">#</a></h3>\n    <p>\n      <strong>Brenton Simpson</strong> showed us how eBay brings Bret Victor’s feedback loop to your favorite editor using webpack, react-hot-loader, and <a href=\"https://github.com/appsforartists/ambidex\">Ambidex</a>.\n    </p>\n  </div>\n  <div class=\"skinny-col\">\n    <iframe width=\"650\" height=\"171\" src=\"https://www.youtube-nocookie.com/embed/yaymfLj5tjA\" frameborder=\"0\" allowfullscreen></iframe>\n  </div>\n</div>\n\n<div class=\"skinny-row\">\n  <div class=\"skinny-col\">\n    <h3 style=\"margin-top:0\"><a class=\"anchor\" name=\"talk-ast\"></a>Abstract Syntax Trees <a class=\"hash-link\" href=\"#talk-ast\">#</a></h3>\n    <p>\n      <strong>Gurdas Nijor</strong> showed us how we can leverage some conventions of React to perform source code transformations that unlock an inspirational set of use cases.\n    </p>\n  </div>\n  <div class=\"skinny-col\">\n    <iframe width=\"650\" height=\"171\" src=\"https://www.youtube-nocookie.com/embed/OZGgVxFxSIs\" frameborder=\"0\" allowfullscreen></iframe>\n  </div>\n</div>\n\n<div class=\"skinny-row\">\n  <div class=\"skinny-col\">\n    <h3 style=\"margin-top:0\"><a class=\"anchor\" name=\"talk-relay-graphql\"></a>Relay and GraphQL <a class=\"hash-link\" href=\"#talk-relay-graphql\">#</a></h3>\n    <p>\n      <strong>Daniel Schafer</strong> and <strong>Jing Chen</strong> showed us how Facebook approaches data fetching with React, giving us an early peek at the forthcoming duo of Relay and GraphQL.\n    </p>\n  </div>\n  <div class=\"skinny-col\">\n    <iframe width=\"650\" height=\"171\" src=\"https://www.youtube-nocookie.com/embed/9sc8Pyc51uU\" frameborder=\"0\" allowfullscreen></iframe>\n  </div>\n</div>\n\n<div class=\"skinny-row\">\n  <div class=\"skinny-col\">\n    <h3 style=\"margin-top:0\"><a class=\"anchor\" name=\"talk-channels\"></a>Channels <a class=\"hash-link\" href=\"#talk-channels\">#</a></h3>\n    <p>\n      <strong>James Long</strong> explores what might happen if we introduce channels, a new style of coordinating actions, to React.\n    </p>\n  </div>\n  <div class=\"skinny-col\">\n    <iframe width=\"650\" height=\"171\" src=\"https://www.youtube-nocookie.com/embed/W2DgDNQZOwo\" frameborder=\"0\" allowfullscreen></iframe>\n  </div>\n</div>\n\n<div class=\"skinny-row\">\n  <div class=\"skinny-col\">\n    <h3 style=\"margin-top:0\"><a class=\"anchor\" name=\"talk-router\"></a>React Router <a class=\"hash-link\" href=\"#talk-router\">#</a></h3>\n    <p>\n      <strong>Michael Jackson</strong> reminded us that URLs should be part of our design process, and showed us how <a href=\"https://github.com/rackt/react-router\">react-router</a> can help to manage the transitions between them.\n    </p>\n  </div>\n  <div class=\"skinny-col\">\n    <iframe width=\"650\" height=\"171\" src=\"https://www.youtube-nocookie.com/embed/XZfvW1a8Xac\" frameborder=\"0\" allowfullscreen></iframe>\n  </div>\n</div>\n\n<div class=\"skinny-row\">\n  <div class=\"skinny-col\">\n    <h3 style=\"margin-top:0\"><a class=\"anchor\" name=\"talk-full-stack-flux\"></a>Full-stack Flux <a class=\"hash-link\" href=\"#talk-full-stack-flux\">#</a></h3>\n    <p>\n      <strong>Pete Hunt</strong> showed us how a Flux approach can help us scale actions and questions on the backend in addition to the frontend.\n    </p>\n  </div>\n  <div class=\"skinny-col\">\n    <iframe width=\"650\" height=\"171\" src=\"https://www.youtube-nocookie.com/embed/KtmjkCuV-EU\" frameborder=\"0\" allowfullscreen></iframe>\n  </div>\n</div>\n\n<div class=\"skinny-row\">\n  <div class=\"skinny-col\">\n    <h3 style=\"margin-top:0\"><a class=\"anchor\" name=\"talk-performance\"></a>High-performance <a class=\"hash-link\" href=\"#talk-performance\">#</a></h3>\n    <p>\n      <strong>Jason Bonta</strong> showed us how complex user interfaces can get, and how his team keeps them performant as they scale. He also had the pleasure of open-sourcing his team’s work on <a href=\"https://facebook.github.io/fixed-data-table/\">FixedDataTable</a>.\n    </p>\n  </div>\n  <div class=\"skinny-col\">\n    <iframe width=\"650\" height=\"171\" src=\"https://www.youtube-nocookie.com/embed/KYzlpRvWZ6c\" frameborder=\"0\" allowfullscreen></iframe>\n  </div>\n</div>\n\n<div class=\"skinny-row\">\n  <div class=\"skinny-col\">\n    <h3 style=\"margin-top:0\"><a class=\"anchor\" name=\"talk-intl\"></a>FormatJS and react-intl <a class=\"hash-link\" href=\"#talk-intl\">#</a></h3>\n    <p>\n      <strong>Eric Ferraiuolo</strong> showed how you can bring your app to a worldwide audience using a series of polyfills and emerging ECMAScript APIs.\n    </p>\n  </div>\n  <div class=\"skinny-col\">\n    <iframe width=\"650\" height=\"171\" src=\"https://www.youtube-nocookie.com/embed/Sla-DkvmIHY\" frameborder=\"0\" allowfullscreen></iframe>\n  </div>\n</div>\n\n<div class=\"skinny-row\">\n  <div class=\"skinny-col\">\n    <h3 style=\"margin-top:0\"><a class=\"anchor\" name=\"talk-hype\"></a>Hype! <a class=\"hash-link\" href=\"#talk-hype\">#</a></h3>\n    <p>\n      <strong>Ryan Florence</strong> showed us how easy it is to transition from a career selling life insurance, to a burgeoning one as a software developer. All you have to do is to learn how to say “yes.”\n    </p>\n  </div>\n  <div class=\"skinny-col\">\n    <iframe width=\"650\" height=\"171\" src=\"https://www.youtube-nocookie.com/embed/z5e7kWSHWTg\" frameborder=\"0\" allowfullscreen></iframe>\n  </div>\n</div>\n\n<div class=\"skinny-row\">\n  <div class=\"skinny-col\">\n    <h3 style=\"margin-top:0\"><a class=\"anchor\" name=\"talk-native\"></a>React Native <a class=\"hash-link\" href=\"#talk-native\">#</a></h3>\n    <p>\n      <strong>Christopher Chedeau</strong> showed us how to bring the developer experience of working with React on the web to native app development, using React Native.\n    </p>\n  </div>\n  <div class=\"skinny-col\">\n    <iframe width=\"650\" height=\"171\" src=\"https://www.youtube-nocookie.com/embed/7rDsRXj9-cU\" frameborder=\"0\" allowfullscreen></iframe>\n  </div>\n</div>\n\n<div class=\"skinny-row\">\n  <div class=\"skinny-col\">\n    <h3 style=\"margin-top:0\"><a class=\"anchor\" name=\"talk-components\"></a>Components <a class=\"hash-link\" href=\"#talk-components\">#</a></h3>\n    <p>\n      <strong>Andrew Rota</strong> explained how React and Web Components can work together, and how to avoid some common pitfalls.\n    </p>\n  </div>\n  <div class=\"skinny-col\">\n    <iframe width=\"650\" height=\"171\" src=\"https://www.youtube-nocookie.com/embed/g0TD0efcwVg\" frameborder=\"0\" allowfullscreen></iframe>\n  </div>\n</div>\n\n<div class=\"skinny-row\">\n  <div class=\"skinny-col\">\n    <h3 style=\"margin-top:0\"><a class=\"anchor\" name=\"talk-immutable\"></a>Immutability <a class=\"hash-link\" href=\"#talk-immutable\">#</a></h3>\n    <p>\n      <strong>Lee Byron</strong> led a master-class on persistent immutable data structures, showing us the world of possibility that they can unlock for your software, and perhaps JavaScript in general.\n    </p>\n  </div>\n  <div class=\"skinny-col\">\n    <iframe width=\"650\" height=\"171\" src=\"https://www.youtube-nocookie.com/embed/I7IdS-PbEgI\" frameborder=\"0\" allowfullscreen></iframe>\n  </div>\n</div>\n\n<div class=\"skinny-row\">\n  <div class=\"skinny-col\">\n    <h3 style=\"margin-top:0\"><a class=\"anchor\" name=\"talk-gibbon\"></a>Beyond the DOM <a class=\"hash-link\" href=\"#talk-gibbon\">#</a></h3>\n    <p>\n      <strong>Jafar Husain</strong> told us a story about how Netflix was able to push React into places where the DOM could not go.\n  </div>\n  <div class=\"skinny-col\">\n    <iframe width=\"650\" height=\"171\" src=\"https://www.youtube-nocookie.com/embed/eNC0mRYGWgc\" frameborder=\"0\" allowfullscreen></iframe>\n  </div>\n</div>\n\n<div class=\"skinny-row\">\n  <div class=\"skinny-col\">\n    <h3 style=\"margin-top:0\"><a class=\"anchor\" name=\"talk-visualization\"></a>Data Visualization <a class=\"hash-link\" href=\"#talk-visualization\">#</a></h3>\n    <p>\n      <strong>Zach Nation</strong> showed us how we can produce visualizations from over 45 million data points without breaking a sweat.\n  </div>\n  <div class=\"skinny-col\">\n    <iframe width=\"650\" height=\"171\" src=\"https://www.youtube-nocookie.com/embed/2ii1lEkIv1s\" frameborder=\"0\" allowfullscreen></iframe>\n  </div>\n</div>\n\n<div class=\"skinny-row\">\n  <div class=\"skinny-col\">\n    <h3 style=\"margin-top:0\"><a class=\"anchor\" name=\"talk-refracted\"></a>React Refracted <a class=\"hash-link\" href=\"#talk-refracted\">#</a></h3>\n    <p>\n      <strong>David Nolen</strong> gave us a view of React from a non-JavaScript perspective, challenging some common intuition along the way.\n  </div>\n  <div class=\"skinny-col\">\n    <iframe width=\"650\" height=\"171\" src=\"https://www.youtube-nocookie.com/embed/5hGHdETNteE\" frameborder=\"0\" allowfullscreen></iframe>\n  </div>\n</div>\n\n<div class=\"skinny-row\">\n  <div class=\"skinny-col\">\n    <h3 style=\"margin-top:0\"><a class=\"anchor\" name=\"talk-flux-panel\"></a>Flux Panel <a class=\"hash-link\" href=\"#talk-flux-panel\">#</a></h3>\n    <p>\n      <strong>Bill Fisher</strong> coordinated a Flux panel together with <strong>Michael Ridgway</strong>, <strong>Spike Brehm</strong>, <strong>Andres Suarez</strong>, <strong>Jing Chen</strong>, <strong>Ian Obermiller</strong>, and <strong>Kyle Davis</strong>.\n  </div>\n  <div class=\"skinny-col\">\n    <iframe width=\"650\" height=\"171\" src=\"https://www.youtube-nocookie.com/embed/LTj4O7WJJ98\" frameborder=\"0\" allowfullscreen></iframe>\n  </div>\n</div>\n\n<div class=\"skinny-row\">\n  <div class=\"skinny-col\">\n    <h3 style=\"margin-top:0\"><a class=\"anchor\" name=\"talk-communication\"></a>Component communication <a class=\"hash-link\" href=\"#talk-communication\">#</a></h3>\n    <p>\n      <strong>Bonnie Eisenman</strong> led us through the ‘adapter’ approach to inter-component communication taken by her team at Codecademy.\n  </div>\n  <div class=\"skinny-col\">\n    <iframe width=\"650\" height=\"171\" src=\"https://www.youtube-nocookie.com/embed/ZM6wXoFTY3o\" frameborder=\"0\" allowfullscreen></iframe>\n  </div>\n</div>\n\n<div class=\"skinny-row\">\n  <div class=\"skinny-col\">\n    <h3 style=\"margin-top:0\"><a class=\"anchor\" name=\"talk-typescript\"></a>Flow and TypeScript <a class=\"hash-link\" href=\"#talk-typescript\">#</a></h3>\n    <p>\n      <strong>James Brantly</strong> demonstrated how we can reap the benefits of static typing using both Flow and TypeScript.\n  </div>\n  <div class=\"skinny-col\">\n    <iframe width=\"650\" height=\"171\" src=\"https://www.youtube-nocookie.com/embed/9PTa9-PPVAc\" frameborder=\"0\" allowfullscreen></iframe>\n  </div>\n</div>\n\n<div class=\"skinny-row\">\n  <div class=\"skinny-col\">\n    <h3 style=\"margin-top:0\"><a class=\"anchor\" name=\"talk-qa\"></a>Core Team Q&amp;A <a class=\"hash-link\" href=\"#talk-qa\">#</a></h3>\n    <p>\n      <strong>Tom Occhino</strong>, <strong>Sophie Alpert</strong>, <strong>Lee Byron</strong>, <strong>Christopher Chedeau</strong>, <strong>Sebastian Markbåge</strong>, <strong>Jing Chen</strong>, and <strong>Dan Schafer</strong> closed the conference with a Q&amp;A session.\n  </div>\n  <div class=\"skinny-col\">\n    <iframe width=\"650\" height=\"171\" src=\"https://www.youtube-nocookie.com/embed/EPpkboSKvPI\" frameborder=\"0\" allowfullscreen></iframe>\n  </div>\n</div>\n\n## Reactions\n\nThe conference is over, but the conversation has just begun.\n\n**Mihai Parparita** detailed his efforts to [hack his way to a React.js Conf ticket](http://blog.persistent.info/2014/12/html-munging-my-way-to-reactjs-conf.html); **James Long** blogged about [his first encounter with React Native](http://jlongster.com/First-Impressions-using-React-Native); **Eric Florenzano** talked about how he perceives the [impact of Relay, GraphQL, and React Native](https://medium.com/@ericflo/facebook-just-taught-us-all-how-to-build-websites-51f1e7e996f2) on software development; **Margaret Staples** blogged about her experience of [being on-campus at Facebook HQ](http://deadlugosi.blogspot.com/2015/02/facebook-gave-me-ice-cream.html); **Jeff Barczewski** tied his experience of attending the conference up with a bow in this [blog post filled with photos, videos, and links](http://codewinds.com/blog/2015-02-04-reactjs-conf.html); **Kevin Old** left us with [his takeaways](http://kevinold.com/2015/01/31/takeaways-from-reactjs-conf-2015.html); **Paul Wittmann** found React Native [freshly on his radar](http://www.railslove.com/stories/fresh-on-our-radar-react-native); and finally, undeterred by not being able to attend the conference in person, **Justin Ball** [summarized it from afar](http://www.justinball.com/2015/02/02/i-didn't-attend-react.js-conf.html).\n\nAnd, in case you missed a session, you can borrow **Michael Chan’s** [drawings](http://chantastic.io/2015-reactjs-conf/), **Mihai Parparita’s** [summary](https://quip.com/uJQeABv7nkFN), or **Shaohua Zhou’s** [day 1](http://getshao.com/2015/01/29/react-js-conf-notes-day1/) / [day 2](http://getshao.com/2015/01/29/react-js-conf-notes-day-2/) notes.\n\n<div class=\"skinny-row\">\n  <div class=\"skinny-col\">\n    <blockquote class=\"twitter-tweet\" lang=\"en\"><p>Notes from <a href=\"https://twitter.com/dlschafer\">@dlschafer</a> and <a href=\"https://twitter.com/jingc\">@jingc</a>&#39;s <a href=\"https://twitter.com/hashtag/reactjsconf?src=hash\">#reactjsconf</a> talk &quot;Data fetching for React applications at Facebook&quot; <a href=\"http://t.co/IUZUbDCDMQ\">pic.twitter.com/IUZUbDCDMQ</a></p>&mdash; Michael Chan (@chantastic) <a href=\"https://twitter.com/chantastic/status/560538533161472000\">January 28, 2015</a></blockquote>\n    <blockquote class=\"twitter-tweet\" lang=\"en\"><p>This is just magical (in the good way)… GraphQL + Relay is amazing. <a href=\"https://twitter.com/hashtag/reactjsconf?src=hash\">#reactjsconf</a></p>&mdash; Chris Williams (@voodootikigod) <a href=\"https://twitter.com/voodootikigod/status/560533225395589120\">January 28, 2015</a></blockquote>\n    <blockquote class=\"twitter-tweet\" lang=\"en\"><p>These… these are my people. :) <a href=\"https://twitter.com/hashtag/reactjsconf?src=hash\">#reactjsconf</a></p>&mdash; Thomas Beirne (@Beirnet) <a href=\"https://twitter.com/Beirnet/status/560317879501848576\">January 28, 2015</a></blockquote>\n  </div>\n  <div class=\"skinny-col\">\n    <blockquote class=\"twitter-tweet\" lang=\"en\"><p>Humbled by the React team and community. Found <a href=\"https://twitter.com/hashtag/reactjsconf?src=hash\">#reactjsconf</a> very mindful, practical and just real.</p>&mdash; xnoɹǝʃ uɐıɹq (@brianleroux) <a href=\"https://twitter.com/brianleroux/status/560972130112655360\">January 30, 2015</a></blockquote>\n    <blockquote class=\"twitter-tweet\" lang=\"en\"><p>I say with confidence as a former UIKit author: [React&#39;s model for the UI layer is vastly better than UIKit&#39;s. React Native is a *huge* deal.</p>&mdash; Andy Matuschak (@andy_matuschak) <a href=\"https://twitter.com/andy_matuschak/status/560511204867575808\">January 28, 2015</a></blockquote>]\n    <blockquote class=\"twitter-tweet\" lang=\"en\"><p><a href=\"https://twitter.com/hashtag/reactjsconf?src=hash\">#reactjsconf</a> was incredible. Amazing project stewardship and community. Boring prediction, React Native sends adoption vertical in 2015.</p>&mdash; David Nolen (@swannodette) <a href=\"https://twitter.com/swannodette/status/561232290273980416\">January 30, 2015</a></blockquote>\n    <blockquote class=\"twitter-tweet\" lang=\"en\"><p>I really love the community shout outs by <a href=\"https://twitter.com/Vjeux\">@vjeux</a> between talks at <a href=\"https://twitter.com/hashtag/reactjsconf?src=hash\">#reactjsconf</a>!</p>&mdash; Andrew Rota (@AndrewRota) <a href=\"https://twitter.com/AndrewRota/status/560927339522297856\">January 29, 2015</a></blockquote>\n  </div>\n</div>\n\n**All proceeds from React.js Conf 2015 were donated to the wonderful programs at [code.org](http://code.org)**. These programs aim to increase access to the field of computer science by underrepresented members of our community. Watch this video to learn more.\n\n<iframe width=\"650\" height=\"171\" src=\"https://www.youtube-nocookie.com/embed/FC5FbmsH4fw\" frameborder=\"0\" allowfullscreen></iframe>\n",
        "type": "MarkdownRemark",
        "contentDigest": "2e1a145571b60c4803eaf5590ccaf96a",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React.js Conf Round-up 2015",
        "layout": "post",
        "author": [
          "steveluscher"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-02-18-react-conf-roundup-2015.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-02-18-react-conf-roundup-2015.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-02-18-react-conf-roundup-2015.md",
      "fields": {
        "date": "2015-02-17T16:00:00.000Z",
        "slug": "/blog/2015/02/18/react-conf-roundup-2015.html",
        "path": "blog/2015-02-18-react-conf-roundup-2015.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2015-10-07-react-v0.14.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2015-10-07-react-v0.14.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2015-10-07-react-v0.14.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v0.14\"\nauthor: [sophiebits]\n---\n\nWe’re happy to announce the release of React 0.14 today! This release has a few major changes, primarily designed to simplify the code you write every day and to better support environments like React Native.\n\nIf you tried the release candidate, thank you – your support is invaluable and we've fixed a few bugs that you reported.\n\nAs with all of our releases, we consider this version to be stable enough to use in production and recommend that you upgrade in order to take advantage of our latest improvements.\n\n## Upgrade Guide\n\nLike always, we have a few breaking changes in this release. We know changes can be painful (the Facebook codebase has over 15,000 React components), so we always try to make changes gradually in order to minimize the pain.\n\nIf your code is free of warnings when running under React 0.13, upgrading should be easy. We have two new small breaking changes that didn't give a warning in 0.13 (see below). Every new change in 0.14, including the major changes below, is introduced with a runtime warning and will work as before until 0.15, so you don't have to worry about your app breaking with this upgrade.\n\nFor the two major changes which require significant code changes, we've included [codemod scripts](https://github.com/reactjs/react-codemod/blob/master/README.md) to help you upgrade your code automatically.\n\nSee the changelog below for more details.\n\n## Installation\n\nWe recommend using React from `npm` and using a tool like browserify or webpack to build your code into a single bundle. To install the two packages:\n\n* `npm install --save react react-dom`\n\nRemember that by default, React runs extra checks and provides helpful warnings in development mode. When deploying your app, set the `NODE_ENV` environment variable to `production` to use the production build of React which does not include the development warnings and runs significantly faster.\n\nIf you can’t use `npm` yet, we provide pre-built browser builds for your convenience, which are also available in the `react` package on bower.\n\n* **React**  \n  Dev build with warnings: <https://fb.me/react-0.14.0.js>  \n  Minified build for production: <https://fb.me/react-0.14.0.min.js>  \n* **React with Add-Ons**  \n  Dev build with warnings: <https://fb.me/react-with-addons-0.14.0.js>  \n  Minified build for production: <https://fb.me/react-with-addons-0.14.0.min.js>  \n* **React DOM** (include React in the page before React DOM)  \n  Dev build with warnings: <https://fb.me/react-dom-0.14.0.js>  \n  Minified build for production: <https://fb.me/react-dom-0.14.0.min.js>  \n\n## Changelog\n\n### Major changes\n\n- #### Two Packages: React and React DOM\n\n    As we look at packages like [react-native](https://github.com/facebook/react-native), [react-art](https://github.com/reactjs/react-art), [react-canvas](https://github.com/Flipboard/react-canvas), and [react-three](https://github.com/Izzimach/react-three), it has become clear that the beauty and essence of React has nothing to do with browsers or the DOM.\n\n    To make this more clear and to make it easier to build more environments that React can render to, we’re splitting the main `react` package into two: `react` and `react-dom`. **This paves the way to writing components that can be shared between the web version of React and React Native.** We don’t expect all the code in an app to be shared, but we want to be able to share the components that do behave the same across platforms.\n\n    The `react` package contains `React.createElement`, `.createClass`, `.Component`, `.PropTypes`, `.Children`, and the other helpers related to elements and component classes. We think of these as the [_isomorphic_](http://nerds.airbnb.com/isomorphic-javascript-future-web-apps/) or [_universal_](https://medium.com/@mjackson/universal-javascript-4761051b7ae9) helpers that you need to build components.\n\n    The `react-dom` package has `ReactDOM.render`, `.unmountComponentAtNode`, and `.findDOMNode`. In `react-dom/server` we have server-side rendering support with `ReactDOMServer.renderToString` and `.renderToStaticMarkup`.\n\n    ```js\n    var React = require('react');\n    var ReactDOM = require('react-dom');\n\n    var MyComponent = React.createClass({\n      render: function() {\n        return <div>Hello World</div>;\n      }\n    });\n\n    ReactDOM.render(<MyComponent />, node);\n    ```\n\n    The old names will continue to work with a warning until 0.15 is released, and we’ve published the [automated codemod script](https://github.com/reactjs/react-codemod/blob/master/README.md) we used at Facebook to help you with this transition.\n\n    The add-ons have moved to separate packages as well:\n    - `react-addons-clone-with-props`\n    - `react-addons-create-fragment`\n    - `react-addons-css-transition-group`\n    - `react-addons-linked-state-mixin`\n    - `react-addons-perf`\n    - `react-addons-pure-render-mixin`\n    - `react-addons-shallow-compare`\n    - `react-addons-test-utils`\n    - `react-addons-transition-group`\n    - `react-addons-update`\n    - `ReactDOM.unstable_batchedUpdates` in `react-dom`.\n\n    For now, please use matching versions of `react` and `react-dom` (and the add-ons, if you use them) in your apps to avoid versioning problems.\n\n- #### DOM node refs\n\n    The other big change we’re making in this release is exposing refs to DOM components as the DOM node itself. That means: we looked at what you can do with a `ref` to a React DOM component and realized that the only useful thing you can do with it is call `this.refs.giraffe.getDOMNode()` to get the underlying DOM node. Starting with this release, `this.refs.giraffe` _is_ the actual DOM node. **Note that refs to custom (user-defined) components work exactly as before; only the built-in DOM components are affected by this change.**\n\n    ```js\n    var Zoo = React.createClass({\n      render: function() {\n        return <div>Giraffe name: <input ref=\"giraffe\" /></div>;\n      },\n      showName: function() {\n        // Previously: var input = this.refs.giraffe.getDOMNode();\n        var input = this.refs.giraffe;\n        alert(input.value);\n      }\n    });\n    ```\n\n    This change also applies to the return result of `ReactDOM.render` when passing a DOM node as the top component. As with refs, this change does not affect custom components.\n\n    With this change, we’re deprecating `.getDOMNode()` and replacing it with `ReactDOM.findDOMNode` (see below). If your components are currently using `.getDOMNode()`, they will continue to work with a warning until 0.15.\n\n- #### Stateless functional components\n\n    In idiomatic React code, most of the components you write will be stateless, simply composing other components. We’re introducing a new, simpler syntax for these components where you can take `props` as an argument and return the element you want to render:\n\n    ```js\n    // A functional component using an ES2015 (ES6) arrow function:\n    var Aquarium = (props) => {\n      var fish = getFish(props.species);\n      return <Tank>{fish}</Tank>;\n    };\n\n    // Or with destructuring and an implicit return, simply:\n    var Aquarium = ({species}) => (\n      <Tank>\n        {getFish(species)}\n      </Tank>\n    );\n\n    // Then use: <Aquarium species=\"rainbowfish\" />\n    ```\n\n    These components behave just like a React class with only a `render` method defined. Since no component instance is created for a functional component, any `ref` added to one will evaluate to `null`. Functional components do not have lifecycle methods, but you can set `.propTypes` and `.defaultProps` as properties on the function.\n\n    This pattern is designed to encourage the creation of these simple components that should comprise large portions of your apps. In the future, we’ll also be able to make performance optimizations specific to these components by avoiding unnecessary checks and memory allocations.\n\n- #### Deprecation of react-tools\n\n    The `react-tools` package and `JSXTransformer.js` browser file [have been deprecated](/blog/2015/06/12/deprecating-jstransform-and-react-tools.html). You can continue using version `0.13.3` of both, but we no longer support them and recommend migrating to [Babel](http://babeljs.io/), which has built-in support for React and JSX.\n\n- #### Compiler optimizations\n\n    React now supports two compiler optimizations that can be enabled in Babel 5.8.24 and newer. Both of these transforms **should be enabled only in production** (e.g., just before minifying your code) because although they improve runtime performance, they make warning messages more cryptic and skip important checks that happen in development mode, including propTypes.\n\n    **Inlining React elements:** The `optimisation.react.inlineElements` transform converts JSX elements to object literals like `{type: 'div', props: ...}` instead of calls to `React.createElement`.\n\n    **Constant hoisting for React elements:** The `optimisation.react.constantElements` transform hoists element creation to the top level for subtrees that are fully static, which reduces calls to `React.createElement` and the resulting allocations. More importantly, it tells React that the subtree hasn’t changed so React can completely skip it when reconciling.\n\n\n### Breaking changes\n\nIn almost all cases, we change our APIs gradually and warn for at least one release to give you time to clean up your code. These two breaking changes did not have a warning in 0.13 but should be easy to find and clean up:\n\n- `React.initializeTouchEvents` is no longer necessary and has been removed completely. Touch events now work automatically.\n- Add-Ons: Due to the DOM node refs change mentioned above, `TestUtils.findAllInRenderedTree` and related helpers are no longer able to take a DOM component, only a custom component.\n\nThese three breaking changes had a warning in 0.13, so you shouldn’t have to do anything if your code is already free of warnings:\n\n- The `props` object is now frozen, so mutating props after creating a component element is no longer supported. In most cases, [`React.cloneElement`](/docs/top-level-api.html#react.cloneelement) should be used instead. This change makes your components easier to reason about and enables the compiler optimizations mentioned above.\n- Plain objects are no longer supported as React children; arrays should be used instead. You can use the [`createFragment`](/docs/create-fragment.html) helper to migrate, which now returns an array.\n- Add-Ons: `classSet` has been removed. Use [classnames](https://github.com/JedWatson/classnames) instead.\n\n### New deprecations, introduced with a warning\n\nEach of these changes will continue to work as before with a new warning until the release of 0.15 so you can upgrade your code gradually.\n\n- Due to the DOM node refs change mentioned above, `this.getDOMNode()` is now deprecated and `ReactDOM.findDOMNode(this)` can be used instead. Note that in most cases, calling `findDOMNode` is now unnecessary – see the example above in the “DOM node refs” section.\n\n    With each returned DOM node, we've added a `getDOMNode` method for backwards compatibility that will work with a warning until 0.15. If you have a large codebase, you can use our [automated codemod script](https://github.com/reactjs/react-codemod/blob/master/README.md) to change your code automatically.\n\n- `setProps` and `replaceProps` are now deprecated. Instead, call ReactDOM.render again at the top level with the new props.\n- ES6 component classes must now extend `React.Component` in order to enable stateless function components. The [ES3 module pattern](/blog/2015/01/27/react-v0.13.0-beta-1.html#other-languages) will continue to work.\n- Reusing and mutating a `style` object between renders has been deprecated. This mirrors our change to freeze the `props` object.\n- Add-Ons: `cloneWithProps` is now deprecated. Use [`React.cloneElement`](/docs/top-level-api.html#react.cloneelement) instead (unlike `cloneWithProps`, `cloneElement` does not merge `className` or `style` automatically; you can merge them manually if needed).\n- Add-Ons: To improve reliability, `CSSTransitionGroup` will no longer listen to transition events. Instead, you should specify transition durations manually using props such as `transitionEnterTimeout={500}`.\n\n### Notable enhancements\n\n- Added `React.Children.toArray` which takes a nested children object and returns a flat array with keys assigned to each child. This helper makes it easier to manipulate collections of children in your `render` methods, especially if you want to reorder or slice `this.props.children` before passing it down. In addition, `React.Children.map` now returns plain arrays too.\n- React uses `console.error` instead of `console.warn` for warnings so that browsers show a full stack trace in the console. (Our warnings appear when you use patterns that will break in future releases and for code that is likely to behave unexpectedly, so we do consider our warnings to be “must-fix” errors.)\n- Previously, including untrusted objects as React children [could result in an XSS security vulnerability](http://danlec.com/blog/xss-via-a-spoofed-react-element). This problem should be avoided by properly validating input at the application layer and by never passing untrusted objects around your application code. As an additional layer of protection, [React now tags elements](https://github.com/facebook/react/pull/4832) with a specific [ES2015 (ES6) `Symbol`] (http://www.2ality.com/2014/12/es6-symbols.html) in browsers that support it, in order to ensure that React never considers untrusted JSON to be a valid element. If this extra security protection is important to you, you should add a `Symbol` polyfill for older browsers, such as the one included by [Babel’s polyfill](http://babeljs.io/docs/usage/polyfill/).\n- When possible, React DOM now generates XHTML-compatible markup.\n- React DOM now supports these standard HTML attributes: `capture`, `challenge`, `inputMode`, `is`, `keyParams`, `keyType`, `minLength`, `summary`, `wrap`. It also now supports these non-standard attributes: `autoSave`, `results`, `security`.\n- React DOM now supports these SVG attributes, which render into namespaced attributes: `xlinkActuate`, `xlinkArcrole`, `xlinkHref`, `xlinkRole`, `xlinkShow`, `xlinkTitle`, `xlinkType`, `xmlBase`, `xmlLang`, `xmlSpace`.\n- The `image` SVG tag is now supported by React DOM.\n- In React DOM, arbitrary attributes are supported on custom elements (those with a hyphen in the tag name or an `is=\"...\"` attribute).\n- React DOM now supports these media events on `audio` and `video` tags: `onAbort`, `onCanPlay`, `onCanPlayThrough`, `onDurationChange`, `onEmptied`, `onEncrypted`, `onEnded`, `onError`, `onLoadedData`, `onLoadedMetadata`, `onLoadStart`, `onPause`, `onPlay`, `onPlaying`, `onProgress`, `onRateChange`, `onSeeked`, `onSeeking`, `onStalled`, `onSuspend`, `onTimeUpdate`, `onVolumeChange`, `onWaiting`.\n- Many small performance improvements have been made.\n- Many warnings show more context than before.\n- Add-Ons: A [`shallowCompare`](https://github.com/facebook/react/pull/3355) add-on has been added as a migration path for `PureRenderMixin` in ES6 classes.\n- Add-Ons: `CSSTransitionGroup` can now use [custom class names](https://github.com/facebook/react/blob/48942b85/docs/docs/10.1-animation.md#custom-classes) instead of appending `-enter-active` or similar to the transition name.\n\n### New helpful warnings\n\n- React DOM now warns you when nesting HTML elements invalidly, which helps you avoid surprising errors during updates.\n- Passing `document.body` directly as the container to `ReactDOM.render` now gives a warning as doing so can cause problems with browser extensions that modify the DOM.\n- Using multiple instances of React together is not supported, so we now warn when we detect this case to help you avoid running into the resulting problems.\n\n### Notable bug fixes\n\n- Click events are handled by React DOM more reliably in mobile browsers, particularly in Mobile Safari.\n- SVG elements are created with the correct namespace in more cases.\n- React DOM now renders `<option>` elements with multiple text children properly and renders `<select>` elements on the server with the correct option selected.\n- When two separate copies of React add nodes to the same document (including when a browser extension uses React), React DOM tries harder not to throw exceptions during event handling.\n- Using non-lowercase HTML tag names in React DOM (e.g., `React.createElement('DIV')`) no longer causes problems, though we continue to recommend lowercase for consistency with the JSX tag name convention (lowercase names refer to built-in components, capitalized names refer to custom components).\n- React DOM understands that these CSS properties are unitless and does not append “px” to their values: `animationIterationCount`, `boxOrdinalGroup`, `flexOrder`, `tabSize`, `stopOpacity`.\n- Add-Ons: When using the test utils, `Simulate.mouseEnter` and `Simulate.mouseLeave` now work.\n- Add-Ons: ReactTransitionGroup now correctly handles multiple nodes being removed simultaneously.\n",
        "type": "MarkdownRemark",
        "contentDigest": "492e38ba7633e2cd8d85e0640cfad494",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v0.14",
        "author": [
          "sophiebits"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2015-10-07-react-v0.14.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2015-10-07-react-v0.14.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2015-10-07-react-v0.14.md",
      "fields": {
        "date": "2015-10-06T16:00:00.000Z",
        "slug": "/blog/2015/10/07/react-v0.14.html",
        "path": "blog/2015-10-07-react-v0.14.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2018-03-27-update-on-async-rendering.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2018-03-27-update-on-async-rendering.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2018-03-27-update-on-async-rendering.md absPath of file",
      "internal": {
        "content": "---\ntitle: Update on Async Rendering\nauthor: [bvaughn]\n---\n\nFor over a year, the React team has been working to implement asynchronous rendering. Last month during his talk at JSConf Iceland, [Dan unveiled some of the exciting new possibilities async rendering unlocks](/blog/2018/03/01/sneak-peek-beyond-react-16.html). Now we'd like to share with you some of the lessons we've learned while working on these features, and some recipes to help prepare your components for async rendering when it launches.\n\nOne of the biggest lessons we've learned is that some of our legacy component lifecycles tend to encourage unsafe coding practices. They are:\n\n* `componentWillMount`\n* `componentWillReceiveProps`\n* `componentWillUpdate`\n\nThese lifecycle methods have often been misunderstood and subtly misused; furthermore, we anticipate that their potential misuse may be more problematic with async rendering. Because of this, we will be adding an \"UNSAFE_\" prefix to these lifecycles in an upcoming release. (Here, \"unsafe\" refers not to security but instead conveys that code using these lifecycles will be more likely to have bugs in future versions of React, especially once async rendering is enabled.)\n\n## Gradual Migration Path\n\n[React follows semantic versioning](/blog/2016/02/19/new-versioning-scheme.html), so this change will be gradual. Our current plan is:\n\n* **16.3**: Introduce aliases for the unsafe lifecycles, `UNSAFE_componentWillMount`, `UNSAFE_componentWillReceiveProps`, and `UNSAFE_componentWillUpdate`. (Both the old lifecycle names and the new aliases will work in this release.)\n* **A future 16.x release**: Enable deprecation warning for `componentWillMount`, `componentWillReceiveProps`, and `componentWillUpdate`. (Both the old lifecycle names and the new aliases will work in this release, but the old names will log a DEV-mode warning.)\n* **17.0**: Remove `componentWillMount`, `componentWillReceiveProps`, and `componentWillUpdate` . (Only the new \"UNSAFE_\" lifecycle names will work from this point forward.)\n\n**Note that if you're a React application developer, you don't have to do anything about the legacy methods yet. The primary purpose of the upcoming version 16.3 release is to enable open source project maintainers to update their libraries in advance of any deprecation warnings. Those warnings will not be enabled until a future 16.x release.**\n\nWe maintain over 50,000 React components at Facebook, and we don't plan to rewrite them all immediately. We understand that migrations take time. We will take the gradual migration path along with everyone in the React community.\n\n---\n\n## Migrating from Legacy Lifecycles\n\nIf you'd like to start using the new component APIs introduced in React 16.3 (or if you're a maintainer looking to update your library in advance) here are a few examples that we hope will help you to start thinking about components a bit differently. Over time, we plan to add additional \"recipes\" to our documentation that show how to perform common tasks in a way that avoids the problematic lifecycles.\n\nBefore we begin, here's a quick overview of the lifecycle changes planned for version 16.3:\n* We are **adding the following lifecycle aliases**: `UNSAFE_componentWillMount`, `UNSAFE_componentWillReceiveProps`, and `UNSAFE_componentWillUpdate`. (Both the old lifecycle names and the new aliases will be supported.)\n* We are **introducing two new lifecycles**, static `getDerivedStateFromProps` and `getSnapshotBeforeUpdate`.\n\n### New lifecycle: `getDerivedStateFromProps`\n\n`embed:update-on-async-rendering/definition-getderivedstatefromprops.js`\n\nThe new static `getDerivedStateFromProps` lifecycle is invoked after a component is instantiated as well as when it receives new props. It can return an object to update `state`, or `null` to indicate that the new `props` do not require any `state` updates.\n\nTogether with `componentDidUpdate`, this new lifecycle should cover all use cases for the legacy `componentWillReceiveProps`.\n\n### New lifecycle: `getSnapshotBeforeUpdate`\n\n`embed:update-on-async-rendering/definition-getsnapshotbeforeupdate.js`\n\nThe new `getSnapshotBeforeUpdate` lifecycle is called right before mutations are made (e.g. before the DOM is updated). The return value for this lifecycle will be passed as the third parameter to `componentDidUpdate`. (This lifecycle isn't often needed, but can be useful in cases like manually preserving scroll position during rerenders.)\n\nTogether with `componentDidUpdate`, this new lifecycle should cover all use cases for the legacy `componentWillUpdate`.\n\nYou can find their type signatures [in this gist](https://gist.github.com/gaearon/88634d27abbc4feeb40a698f760f3264).\n\nWe'll look at examples of how both of these lifecycles can be used below.\n\n## Examples\n- [Initializing state](#initializing-state)\n- [Fetching external data](#fetching-external-data)\n- [Adding event listeners (or subscriptions)](#adding-event-listeners-or-subscriptions)\n- [Updating `state` based on props](#updating-state-based-on-props)\n- [Invoking external callbacks](#invoking-external-callbacks)\n- [Side effects on props change](#side-effects-on-props-change)\n- [Fetching external data when props change](#fetching-external-data-when-props-change)\n- [Reading DOM properties before an update](#reading-dom-properties-before-an-update)\n\n> Note\n>\n> For brevity, the examples below are written using the experimental class properties transform, but the same migration strategies apply without it.\n\n### Initializing state\n\nThis example shows a component with `setState` calls inside of `componentWillMount`:\n`embed:update-on-async-rendering/initializing-state-before.js`\n\nThe simplest refactor for this type of component is to move state initialization to the constructor or to a property initializer, like so:\n`embed:update-on-async-rendering/initializing-state-after.js`\n\n### Fetching external data\n\nHere is an example of a component that uses `componentWillMount` to fetch external data:\n`embed:update-on-async-rendering/fetching-external-data-before.js`\n\nThe above code is problematic for both server rendering (where the external data won't be used) and the upcoming async rendering mode (where the request might be initiated multiple times).\n\nThe recommended upgrade path for most use cases is to move data-fetching into `componentDidMount`:\n`embed:update-on-async-rendering/fetching-external-data-after.js`\n\nThere is a common misconception that fetching in `componentWillMount` lets you avoid the first empty rendering state. In practice this was never true because React has always executed `render` immediately after `componentWillMount`. If the data is not available by the time `componentWillMount` fires, the first `render` will still show a loading state regardless of where you initiate the fetch. This is why moving the fetch to `componentDidMount` has no perceptible effect in the vast majority of cases.\n\n> Note\n>\n> Some advanced use-cases (e.g. libraries like Relay) may want to experiment with eagerly prefetching async data. An example of how this can be done is available [here](https://gist.github.com/bvaughn/89700e525ff423a75ffb63b1b1e30a8f).\n>\n> In the longer term, the canonical way to fetch data in React components will likely be based on the “suspense” API [introduced at JSConf Iceland](/blog/2018/03/01/sneak-peek-beyond-react-16.html). Both simple data fetching solutions and libraries like Apollo and Relay will be able to use it under the hood. It is significantly less verbose than either of the above solutions, but will not be finalized in time for the 16.3 release.\n>\n> When supporting server rendering, it's currently necessary to provide the data synchronously – `componentWillMount` was often used for this purpose but the constructor can be used as a replacement. The upcoming suspense APIs will make async data fetching cleanly possible for both client and server rendering.\n\n### Adding event listeners (or subscriptions)\n\nHere is an example of a component that subscribes to an external event dispatcher when mounting:\n`embed:update-on-async-rendering/adding-event-listeners-before.js`\n\nUnfortunately, this can cause memory leaks for server rendering (where `componentWillUnmount` will never be called) and async rendering (where rendering might be interrupted before it completes, causing `componentWillUnmount` not to be called).\n\nPeople often assume that `componentWillMount` and `componentWillUnmount` are always paired, but that is not guaranteed. Only once `componentDidMount` has been called does React guarantee that `componentWillUnmount` will later be called for clean up.\n\nFor this reason, the recommended way to add listeners/subscriptions is to use the `componentDidMount` lifecycle:\n`embed:update-on-async-rendering/adding-event-listeners-after.js`\n\nSometimes it is important to update subscriptions in response to property changes. If you're using a library like Redux or MobX, the library's container component should handle this for you. For application authors, we've created a small library, [`create-subscription`](https://github.com/facebook/react/tree/master/packages/create-subscription), to help with this. We'll publish it along with React 16.3.\n\nRather than passing a subscribable `dataSource` prop as we did in the example above, we could use `create-subscription` to pass in the subscribed value:\n\n`embed:update-on-async-rendering/adding-event-listeners-create-subscription.js`\n\n> Note\n> \n> Libraries like Relay/Apollo should manage subscriptions manually with the same techniques as `create-subscription` uses under the hood (as referenced [here](https://gist.github.com/bvaughn/d569177d70b50b58bff69c3c4a5353f3)) in a way that is most optimized for their library usage.\n\n### Updating `state` based on `props`\n\nHere is an example of a component that uses the legacy `componentWillReceiveProps` lifecycle to update `state` based on new `props` values:\n`embed:update-on-async-rendering/updating-state-from-props-before.js`\n\nAlthough the above code is not problematic in itself, the `componentWillReceiveProps` lifecycle is often mis-used in ways that _do_ present problems. Because of this, the method will be deprecated.\n\nAs of version 16.3, the recommended way to update `state` in response to `props` changes is with the new `static getDerivedStateFromProps` lifecycle. (That lifecycle is called when a component is created and each time it receives new props):\n`embed:update-on-async-rendering/updating-state-from-props-after.js`\n\nYou may notice in the example above that `props.currentRow` is mirrored in state (as `state.lastRow`). This enables `getDerivedStateFromProps` to access the previous props value in the same way as is done in `componentWillReceiveProps`.\n\nYou may wonder why we don't just pass previous props as a parameter to `getDerivedStateFromProps`. We considered this option when designing the API, but ultimately decided against it for two reasons:\n* A `prevProps` parameter would be null the first time `getDerivedStateFromProps` was called (after instantiation), requiring an if-not-null check to be added any time `prevProps` was accessed.\n* Not passing the previous props to this function is a step toward freeing up memory in future versions of React. (If React does not need to pass previous props to lifecycles, then it does not need to keep the previous `props` object in memory.)\n\n> Note\n>\n> If you're writing a shared component, the [`react-lifecycles-compat`](https://github.com/reactjs/react-lifecycles-compat) polyfill enables the new `getDerivedStateFromProps` lifecycle to be used with older versions of React as well. [Learn more about how to use it below.](#open-source-project-maintainers)\n\n### Invoking external callbacks\n\nHere is an example of a component that calls an external function when its internal state changes:\n`embed:update-on-async-rendering/invoking-external-callbacks-before.js`\n\nSometimes people use `componentWillUpdate` out of a misplaced fear that by the time `componentDidUpdate` fires, it is \"too late\" to update the state of other components. This is not the case. React ensures that any `setState` calls that happen during `componentDidMount` and `componentDidUpdate` are flushed before the user sees the updated UI. In general, it is better to avoid cascading updates like this, but in some cases they are necessary (for example, if you need to position a tooltip after measuring the rendered DOM element).\n\nEither way, it is unsafe to use `componentWillUpdate` for this purpose in async mode, because the external callback might get called multiple times for a single update. Instead, the `componentDidUpdate` lifecycle should be used since it is guaranteed to be invoked only once per update:\n`embed:update-on-async-rendering/invoking-external-callbacks-after.js`\n\n### Side effects on props change\n\nSimilar to the [example above](#invoking-external-callbacks), sometimes components have side effects when `props` change.\n\n`embed:update-on-async-rendering/side-effects-when-props-change-before.js`\n\nLike `componentWillUpdate`, `componentWillReceiveProps` might get called multiple times for a single update. For this reason it is important to avoid putting side effects in this method. Instead, `componentDidUpdate` should be used since it is guaranteed to be invoked only once per update:\n\n`embed:update-on-async-rendering/side-effects-when-props-change-after.js`\n\n### Fetching external data when `props` change\n\nHere is an example of a component that fetches external data based on `props` values:\n`embed:update-on-async-rendering/updating-external-data-when-props-change-before.js`\n\nThe recommended upgrade path for this component is to move data updates into `componentDidUpdate`. You can also use the new `getDerivedStateFromProps` lifecycle to clear stale data before rendering the new props:\n`embed:update-on-async-rendering/updating-external-data-when-props-change-after.js`\n\n> Note\n>\n> If you're using an HTTP library that supports cancellation, like [axios](https://www.npmjs.com/package/axios), then it's simple to cancel an in-progress request when unmounting. For native Promises, you can use an approach like [the one shown here](https://gist.github.com/bvaughn/982ab689a41097237f6e9860db7ca8d6).\n\n### Reading DOM properties before an update\n\nHere is an example of a component that reads a property from the DOM before an update in order to maintain scroll position within a list:\n`embed:update-on-async-rendering/react-dom-properties-before-update-before.js`\n\nIn the above example, `componentWillUpdate` is used to read the DOM property. However with async rendering, there may be delays between \"render\" phase lifecycles (like `componentWillUpdate` and `render`) and \"commit\" phase lifecycles (like `componentDidUpdate`). If the user does something like resize the window during this time, the `scrollHeight` value read from `componentWillUpdate` will be stale.\n\nThe solution to this problem is to use the new \"commit\" phase lifecycle, `getSnapshotBeforeUpdate`. This method gets called _immediately before_ mutations are made (e.g. before the DOM is updated). It can return a value for React to pass as a parameter to `componentDidUpdate`, which gets called _immediately after_ mutations.\n\nThe two lifecycles can be used together like this:\n\n`embed:update-on-async-rendering/react-dom-properties-before-update-after.js`\n\n> Note\n>\n> If you're writing a shared component, the [`react-lifecycles-compat`](https://github.com/reactjs/react-lifecycles-compat) polyfill enables the new `getSnapshotBeforeUpdate` lifecycle to be used with older versions of React as well. [Learn more about how to use it below.](#open-source-project-maintainers)\n\n## Other scenarios\n\nWhile we tried to cover the most common use cases in this post, we recognize that we might have missed some of them. If you are using `componentWillMount`, `componentWillUpdate`, or `componentWillReceiveProps` in ways that aren't covered by this blog post, and aren't sure how to migrate off these legacy lifecycles, please [file a new issue against our documentation](https://github.com/reactjs/reactjs.org/issues/new) with your code examples and as much background information as you can provide. We will update this document with new alternative patterns as they come up.\n\n## Open source project maintainers\n\nOpen source maintainers might be wondering what these changes mean for shared components. If you implement the above suggestions, what happens with components that depend on the new static `getDerivedStateFromProps` lifecycle? Do you also have to release a new major version and drop compatibility for React 16.2 and older?\n\nFortunately, you do not!\n\nWhen React 16.3 is published, we'll also publish a new npm package, [`react-lifecycles-compat`](https://github.com/reactjs/react-lifecycles-compat). This package polyfills components so that the new `getDerivedStateFromProps` and `getSnapshotBeforeUpdate` lifecycles will also work with older versions of React (0.14.9+).\n\nTo use this polyfill, first add it as a dependency to your library:\n\n```bash\n# Yarn\nyarn add react-lifecycles-compat\n\n# NPM\nnpm install react-lifecycles-compat --save\n```\n\nNext, update your components to use the new lifecycles (as described above).\n\nLastly, use the polyfill to make your component backwards compatible with older versions of React:\n`embed:update-on-async-rendering/using-react-lifecycles-compat.js`\n",
        "type": "MarkdownRemark",
        "contentDigest": "b51d4972bfd4365c9abb83618e5e45fb",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Update on Async Rendering",
        "author": [
          "bvaughn"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2018-03-27-update-on-async-rendering.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2018-03-27-update-on-async-rendering.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2018-03-27-update-on-async-rendering.md",
      "fields": {
        "date": "2018-03-26T16:00:00.000Z",
        "slug": "/blog/2018/03/27/update-on-async-rendering.html",
        "path": "blog/2018-03-27-update-on-async-rendering.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2018-06-07-you-probably-dont-need-derived-state.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2018-06-07-you-probably-dont-need-derived-state.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2018-06-07-you-probably-dont-need-derived-state.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"You Probably Don't Need Derived State\"\nauthor: [bvaughn]\n---\n\nReact 16.4  [修复了一个关于 getDerivedStateFromProps 的 bug](/blog/2018/05/23/react-v-16-4.html#bugfix-for-getderivedstatefromprops)。若这篇文章提及了你应用中正在使用的反模式，并在修复后导致了无法正确工作，我们对此感到抱歉。在这篇文章，我们将对在派生状态下普遍使用的反模式以及我们倾向的选择方案进行说明。\n\n在很长的一段时间，生命周期 `componentWillReceiveProps` 是唯一的能够在 props 变更时更新状态而不触发渲染的唯一方式。在 16.3，[我们引入了一个替代的生命周期，`getDerivedStateFromProps`](https://reactjs.org/blog/2018/03/29/react-v-16-3.html#component-lifecycle-changes) 用以更安全的方式来解决同样的问题。同时，我们意识到有些用户可能会对如何使用这两个方法有很多误解，我们也发现了一些反模式会导致潜在的令人困惑的 bug。在 16.4 中修复的 `getDerivedStateFromProps` [使得派生状态会更容易预测](https://github.com/facebook/react/issues/12898)，因此一些错误的用例会更容易注意到。\n\n> 注意\n>\n> 本文所提及的反模式同时应用了 `componentWillReceivedProps` 和 `getDerivedStateFromProps` 两个方法。\n\n本文将涵盖以下主题：\n* [何时使用派生状态](#何时使用派生状态)\n* [使用派生状态的一些常见问题](#使用派生状态的一些常见问题)\n    * [反模式：无条件地将 props 拷贝到状态上](#反模式：无条件地将 props 拷贝到状态上)\n    * [反模式：当 props 更新时擦除状态](#反模式：当 props 更新时擦除状态)\n* [更好的解决方案](#更好的解决方案)\n* [记忆化（memoization）是否可行？](#记忆化（memoization）是否可行？)\n\n## 何时使用派生状态\n\n`getDerivedStateFromeProps` 存在仅有一个目的。其能够让组件在 **prop 变更时** 更新内部的状态。我们之前的博文提供了一些例子，例如[基于当前变更的偏移（offset）prop 记录当前的滚动方向](/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props) 或者 [通过资源 prop 加载额外的特定资源](/blog/2018/03/27/update-on-async-rendering.html#fetching-external-data-when-props-change)。 \n\n我们没有提供更多的例子，因为作为一个通用规则，**派生状态应谨慎使用**。我们所见过的所有的由派生状态导致的问题最终都可归结为（1）无条件的通过 props 来更新状态或（2）无论 props 是否和 状态匹配都更新状态。（我们将在接下来更为细致地探讨这两个问题。）\n\n* 若你仅通过当前的 props 使用派生状态来缓存一些计算操作，则没必要使用派生状态。可查看 [记忆化是否可行？](#what-about-memoization)一节。\n* 若你只是无条件的更新派生状态或无论 props 和状态是否匹配都进行更新，你的组件可能太过于频繁的重置它的内部状态。继续阅读了解更多细节。\n\n## 使用派生状态的一些常见问题 \n\n术语 [“受控”](/docs/forms.html#controlled-components) 和 [“非受控”](/docs/uncontrolled-components.html) 通常指的是表单的输入框，但它们也可用于描述组件的数据的生命周期。作为 props 传递组件可以认为是 **受控**的（因为父组件_控制_那ß些数据）。仅存在于内部状态的数据则可以认为是**非受控的**（因为父组件无法直接改变它）。\n\n派生组件最常见的错误是混淆了这两者；当一个派生状态的值也能通过 `setState` 调用来更新时，之前在[额外的数据加载例子](/blog/2018/03/27/update-on-async-rendering.html#fetching-external-data-when-props-change)可能听起来有些类似，但在一些重要的方式上存在着差异。在加载的例子中，对于 \"source\" prop 和 \"loading\" 状态都有一个清晰的来源。当 source prop 发生改变，loading 状态则应当**永远**被重写。反过来，仅当 prop **发生改变**并且由组件管理时，状态才会被重写。\n\n当这些约束的任何一条被改变都会引发问题。典型的情况是在两个表单下。让我们来看个例子。\n\n### 反模式：无条件地将 props 拷贝到状态上\n\n一个普遍的误解是 `getDerivedStateFromProps` 和 `componentWillReceiveProps` 仅在 props 改变时被调用。这些生命周期会在父组件重新渲染时被调用，无论其 props 是否和之前有不同。由于这一原因，总是_无条件_地使用这些生命周期重载状态是不安全的。**这么做可能会导致更新状态的丢失。**\n\n考虑一个描述了这一问题的例子。有一个将 email prop 复制到状态的 `EmailInput` 的组件：\n\n```js\nclass EmailInput extends Component {\n  state = { email: this.props.email };\n\n  render() {\n    return <input onChange={this.handleChange} value={this.state.email} />;\n  }\n\n  handleChange = event => {\n    this.setState({ email: event.target.value });\n  };\n\n  componentWillReceiveProps(nextProps) {\n    // This will erase any local state updates!\n    // Do not do this.\n    this.setState({ email: nextProps.email });\n  }\n}\n```\n\n首先，该组件看起来没问题。状态通过特定的 prop 进行初始化并当我们在 `<input>` 中输入时进行更新。但如果我们组件的父元素重渲，任何我们在 `<input>` 中的输入都将丢失！（[查看这一例子。](https://codesandbox.io/s/m3w9zn1z8x)）即使我们在重置前对 `nextProps.email !== this.state.email` 进行比较，仍返回真。\n\n在这一例子中，增加 `shouldComponentUpdate` 方法保证当且仅当 email prop 发生变更时才进行重渲可能能修复该问题。然而在实践中，组件通常可以接受多个 props；另一个 prop 的变更仍会导致重渲并进行错误的重置。函数和对象类型的 props 常通过内联的形式创建，使得其很难实现一个可靠的 `shouldComponentUpdate` 保证当且仅当元素变更时才返回真值。[这一例子描述了具体的内容。](https://codesandbox.io/s/jl0w6r9w59)最终，`shouldComponentUpdate` 最好用于性能优化，而不是保证派生状态的正确性。\n\n希望现在对于为何**无条件地将 prop 复制到状态是个糟糕的理念**已经解释清楚了。在回顾可行的解决方案前，先来看一个相关的问题模式：要是我们仅在 email prop 发生变更时才更新如何？\n\n### 反模式：当 props 更新时擦除状态\n\n继续之前的例子，我们可以仅当 `props.email` 变更时进行更新来避免意外的擦除状态：\n\n```js\nclass EmailInput extends Component {\n  state = {\n    email: this.props.email\n  };\n\n  componentWillReceiveProps(nextProps) {\n    // Any time props.email changes, update state.\n    if (nextProps.email !== this.props.email) {\n      this.setState({\n        email: nextProps.email\n      });\n    }\n  }\n  \n  // ...\n}\n```\n\n> 注意\n>\n> 即使之前的例子展示了 `componentWillReceiveProps`，其和使用 `getDerivedStateFromProps` 一样是反模式。\n\n我们做了一个巨大的提升。现在我们的组件仅当 props 真的改变时才会擦除我们的输入。\n\n这仍然存在一个潜在的问题。想象一个使用了之前输入框组件的密码管理应用。当定位到了使用相同邮箱的两个账户，输入框将无法进行重设。这是由于两个账户传递给组件的值都是相同的！这可能会让用户感到诧异，由于碰巧使用了相同的邮箱，对于一个账户的不安全变更的出现会影响到其他账户。（[点击查看案例。](https://codesandbox.io/s/mz2lnkjkrx)）\n\n这一设计存在潜在的缺陷，但却很容易犯。（[我自己也曾出错过！](https://twitter.com/brian_d_vaughn/status/959600888242307072)）幸运的是有两种替代方案效果更好。二者的关键在于 **对于数据的任何部分，你需要保证其是一个组件唯一数据源，并避免将其复制给其他组件。**现在来看一下每种替代的方案。\n\n## 更好的解决方案\n\n### 推荐方案：完全受控组件\n\n一种可以避免之前提到的问题的方式是将状态从我们的组件中完全移除。如果邮箱地址仅作为 prop 存在，而后我们就不需要担心和状态产生冲突的问题。我们甚至可以将 `EmailInput` 变为一个轻量的函数组件：\n\n```js\nfunction EmailInput(props) {\n  return <input onChange={props.onChange} value={props.email} />;\n}\n```\n\n这一方法简化了我们的组件实现，但如果仍想要保存一个临时的值，现在需要父组件去手动进行调整。（[点击查看这一模式示例。](https://codesandbox.io/s/7154w1l551)）\n\n### 推荐方案：带 `key` 的完全不受控组件\n\n另一个对于我们组件来说可行的替代方案是完全由我们的组件来“定义” email 状态。在这一情况下，我们的组件仍接受一个 prop 作为_初始_值，但其会忽略该 prop 可能的变更：\n\n```js\nclass EmailInput extends Component {\n  state = { email: this.props.defaultEmail };\n\n  handleChange = event => {\n    this.setState({ email: event.target.value });\n  };\n\n  render() {\n    return <input onChange={this.handleChange} value={this.state.email} />;\n  }\n}\n```\n\n为了保证当传入一个不同的内容时能重设该值（类似我们的密码管理器的场景），我们可以使用一个被称为 `key` 的特殊的 React 特性。当一个 `key` 变更时，React 将 [_创建_一个新的组件实例而不是更新当前组件](/docs/reconciliation.html#keys)。Keys 通常被用于动态列表但也适用于这里的场景。在我们的案例中，我们可以在任意时间上当新用户被选定时使用用户的 ID 重建邮件输入框：\n\n```js\n<EmailInput\n  defaultEmail={this.props.user.email}\n  key={this.props.user.id}\n/>\n```\n\n每次 ID 的变更，`EmailInput` 都会重新创建且它的内部状态将会被重设为最新的 `defaultEmail` 值。（[点击查看这一模式。](https://codesandbox.io/s/6v1znlxyxn)）通过这一方式，你不必给每个输入框添加一个 `key`。而给整个表单设置一个 `key` 似乎更有意义。每次 key 变更时，所有表单的内部组件将会重建并带有一个最新的初始值。\n\n在大多数场景下，这是最好的处理状态需要变更的方式。\n\n> 注意\n>\n> 这一方是听上去可能比较慢，但性能上并没有明显的差异。如果该组件包含了繁重的逻辑如通过对比传递给子树的 prop 来进行更新等， 使用 key 甚至会更快。\n\n#### 替代方案 1：通过 ID prop 重置非受控组件\n\n若 `key` 在某些情况下不生效（可能是乳尖在初始化时非常耗时），一个可行但非常笨重的解决方案是在 `getDerivedStateFromeProps` 方法里监听 “userID” 的变更：\n\n```js\nclass EmailInput extends Component {\n  state = {\n    email: this.props.defaultEmail,\n    prevPropsUserID: this.props.userID\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    // Any time the current user changes,\n    // Reset any parts of state that are tied to that user.\n    // In this simple example, that's just the email.\n    if (props.userID !== state.prevPropsUserID) {\n      return {\n        prevPropsUserID: props.userID,\n        email: props.defaultEmail\n      };\n    }\n    return null;\n  }\n\n  // ...\n}\n```\n\n如果我们选择了这一方式，其也提供了一种灵活的方式来仅重置我们组件内部的部分状态。（[点击查看这一模式。](https://codesandbox.io/s/rjyvp7l3rq)）\n\n> Note\n>\n> Even though the example above shows `getDerivedStateFromProps`, the same technique can be used with `componentWillReceiveProps`.\n\n> 注意\n>\n> 即使之前的例子使用了 `getDerivedStateFromProps`，其同样也可以使用 `componentWillReceiveProps`。\n\n#### 替代方案 2：通过实例方法重置非受控组件\n\n更少见的是，即使没有合适的 ID 作为 `key`，你也需要重置状态。一种解决方案是重设 key 为一个随机值或每次设置一个你期望的自增的数字。另一种可行的替代方案是暴露一个实例方法来强制重置内部状态：\n\n```js\nclass EmailInput extends Component {\n  state = {\n    email: this.props.defaultEmail\n  };\n\n  resetEmailForNewUser(newEmail) {\n    this.setState({ email: newEmail });\n  }\n\n  // ...\n}\n```\n\n父表单组件而后可以通过[使用 `ref` 来调用这一方法](/docs/glossary.html#refs)。([点击查看这一例子。](https://codesandbox.io/s/l70krvpykl))\n\nRef 在特定的情况下非常有用，如这一场景，但通常我们推荐你尽量不要使用。甚至在这一情况，这一强制的方法并不理想，因为会引发两次渲染而不是一次。\n\n-----\n\n### 总结\n\n作为概括，当在设计一个组件时，决定其数据是受控还是非受控非常关键。\n\n让组件变得**可控**，以及在父组件中将两个不同的值进行合并，而不是仅仅尝试将**prop 的值“复制”到状态中**。例如，与其让子组件接受一个“提交”的 `props.value` 并追踪“变更(draft)”的 `state.value`，不如让父组件同时管理 `state.draftValue` 和 `state.committedValue` 并直接控制子组件的值。这让数据流更为直接和可预测。\n\n对于**非受控**组件，如果你尝试当一个特殊的 prop（通常是 ID） 改变时重置状态，通常有以下一些选择：\n* **建议：使用 `key` 属性来重置_所有内部状态_。**\n* 方案1：监听一些特殊属性的变更（如：`props.userID`），重置_特定的状态_。\n* 方案2：可以考虑通过 refs 强制调用实例方法来进行刷新。\n\n## 记忆化（memoization）是否可行？\n\n我们已经看到了派生状态被用于确保在 `render` 方法中仅当输入改变时进行重新计算。这一技术也被认为是 [记忆化](https://en.wikipedia.org/wiki/Memoization)。\n\n对于记忆化来说，使用派生状态并不算糟糕，但通常来说也不算最佳的解决方案。在管理派生状态存在着内涵的复杂性，而这一复杂性随着增加的属性也在不断地提升。例如，如果我们给我们的组件增加了第二个派生状态，而后我们也将在分别跟踪这二者的变更。\n\n现在来看一个接受一个 props 的组件的例子-展示一系列内容的列表-并将与用户输入匹配的查询渲染出来。我们可以用派生状态来存储过滤后的列表：\n\n```js\nclass Example extends Component {\n  state = {\n    filterText: \"\",\n  };\n\n  // *******************************************************\n  // NOTE: this example is NOT the recommended approach.\n  // See the examples below for our recommendations instead.\n  // *******************************************************\n\n  static getDerivedStateFromProps(props, state) {\n    // Re-run the filter whenever the list array or filter text change.\n    // Note we need to store prevPropsList and prevFilterText to detect changes.\n    if (\n      props.list !== state.prevPropsList ||\n      state.prevFilterText !== state.filterText\n    ) {\n      return {\n        prevPropsList: props.list,\n        prevFilterText: state.filterText,\n        filteredList: props.list.filter(item => item.text.includes(state.filterText))\n      };\n    }\n    return null;\n  }\n\n  handleChange = event => {\n    this.setState({ filterText: event.target.value });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <input onChange={this.handleChange} value={this.state.filterText} />\n        <ul>{this.state.filteredList.map(item => <li key={item.id}>{item.text}</li>)}</ul>\n      </Fragment>\n    );\n  }\n}\n```\n\n该实现避免了更频繁地重复计算 `filteredList`。但其也更复杂，因为不得不单独地追踪和监测每一个 prop 和状态的变更以为了正确地更新过滤列表。在这一例子中，我们可以通过使用 `PureComponent` 以及将过滤操作放进渲染方法里来进行简化：\n\n```js\n// PureComponents only rerender if at least one state or prop value changes.\n// Change is determined by doing a shallow comparison of state and prop keys.\nclass Example extends PureComponent {\n  // State only needs to hold the current filter text value:\n  state = {\n    filterText: \"\"\n  };\n\n  handleChange = event => {\n    this.setState({ filterText: event.target.value });\n  };\n\n  render() {\n    // The render method on this PureComponent is called only if\n    // props.list or state.filterText has changed.\n    const filteredList = this.props.list.filter(\n      item => item.text.includes(this.state.filterText)\n    )\n\n    return (\n      <Fragment>\n        <input onChange={this.handleChange} value={this.state.filterText} />\n        <ul>{filteredList.map(item => <li key={item.id}>{item.text}</li>)}</ul>\n      </Fragment>\n    );\n  }\n}\n```\n\n之前提到的方法相较于派生状态的版本要更为的清晰和简单。有时，这对于大型列表来说这一方法就可能不那么好了有可能会比较慢，`PureComponent` 也有可能无法阻止重渲染若另外的 prop 发生了改变。为了处理这些问题，我们可以增加一个记忆化的帮助函数来避免不必要的重新过滤我们的列表项：\n\n```js\nimport memoize from \"memoize-one\";\n\nclass Example extends Component {\n  // State only needs to hold the current filter text value:\n  state = { filterText: \"\" };\n\n  // Re-run the filter whenever the list array or filter text changes:\n  filter = memoize(\n    (list, filterText) => list.filter(item => item.text.includes(filterText))\n  );\n\n  handleChange = event => {\n    this.setState({ filterText: event.target.value });\n  };\n\n  render() {\n    // Calculate the latest filtered list. If these arguments haven't changed\n    // since the last render, `memoize-one` will reuse the last return value.\n    const filteredList = this.filter(this.props.list, this.state.filterText);\n\n    return (\n      <Fragment> \n        <input onChange={this.handleChange} value={this.state.filterText} />\n        <ul>{filteredList.map(item => <li key={item.id}>{item.text}</li>)}</ul>\n      </Fragment>\n    );\n  }\n}\n```\n\n这一实现则更为简单且和之前派生状态的版本行为一致！\n\n当在使用记忆化时，记住几点限制：\n\n1. 大多数场景，你想要**记忆函数来标记组件实例**。这一行为阻止了组件多个实例通过每一个不同的 key 进行重置。\n2. 典型地你想要用一个缓存函数来**限制缓存大小**以避免时不时地内存泄露。（在前一个例子中，我们使用了 `memoize-one`，因为它仅缓存最新的参数和结果。）\n3. 如果在每次父组件渲染时 `prop.list` 都重新创建，那么本节提到的所有方法都将不会起作用。但大多数场景下，这一设置是合理的。\n\n## 尾声\n\n真是世界的应用里，组件通常混合了受控和非受控的行为。这是没问题的！如果每一个值都只有一个清晰的来源，则可以避免之前提及的反模式。\n\n值得重申的是 `getDerivedStateFromProps`（通常是派生状态）是一个高级特性，由于其 复杂性应尽可能地避免使用。如果你在使用这些模式中出现了我们未曾提及的问题，可以通过 [Github](https://github.com/reactjs/reactjs.org/issues/new) 或 [Tiwtter](https://twitter.com/reactjs) 与我们分享！\n",
        "type": "MarkdownRemark",
        "contentDigest": "f790b0dfcc79b7b18db6fa87d3aac9a3",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "You Probably Don't Need Derived State",
        "author": [
          "bvaughn"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2018-06-07-you-probably-dont-need-derived-state.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2018-06-07-you-probably-dont-need-derived-state.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2018-06-07-you-probably-dont-need-derived-state.md",
      "fields": {
        "date": "2018-06-06T16:00:00.000Z",
        "slug": "/blog/2018/06/07/you-probably-dont-need-derived-state.html",
        "path": "blog/2018-06-07-you-probably-dont-need-derived-state.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2018-11-27-react-16-roadmap.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2018-11-27-react-16-roadmap.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2018-11-27-react-16-roadmap.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React 16.x Roadmap\"\nauthor: [gaearon]\n---\n\nYou might have heard about features like \"Hooks\", \"Suspense\", and \"Concurrent Rendering\" in the previous blog posts and talks. In this post, we'll look at how they fit together and the expected timeline for their availability in a stable release of React.\n \n## tl;dr\n\nWe plan to split the rollout of new React features into the following milestones:\n\n* React 16.6 with [Suspense for Code Splitting](#react-166-shipped-the-one-with-suspense-for-code-splitting) (*already shipped*)\n* A minor 16.x release with [React Hooks](#react-16x-q1-2019-the-one-with-hooks) (~Q1 2019)\n* A minor 16.x release with [Concurrent Mode](#react-16x-q2-2019-the-one-with-concurrent-mode) (~Q2 2019)\n* A minor 16.x release with [Suspense for Data Fetching](#react-16x-mid-2019-the-one-with-suspense-for-data-fetching) (~mid 2019)\n\n*(The original version of this post used exact version numbers. We edited it to reflect that there might need to be a few other minor releases in the middle between these ones.)*\n\nThese are estimates, and the details may change as we're further along. There's at least two more projects we plan to complete in 2019. They require more exploration and aren't tied to a particular release yet:\n\n* [Modernizing React DOM](#modernizing-react-dom)\n* [Suspense for Server Rendering](#suspense-for-server-rendering)\n\nWe expect to get more clarity on their timeline in the coming months.\n\n>Note\n>\n>\n>This post is just a roadmap -- there is nothing in it that requires your immediate attention. When each of these features are released, we'll publish a full blog post announcing them.\n\n## Release Timeline\n\nWe have a single vision for how all of these features fit together, but we're releasing each part as soon as it is ready so that you can test and start using them sooner. The API design doesn't always make sense when looking at one piece in isolation; this post lays out the major parts of our plan to help you see the whole picture. (See our [versioning policy](/docs/faq-versioning.html) to learn more about our commitment to stability.)\n\nThe gradual release strategy helps us refine the APIs, but the transitional period when some things aren't ready can be confusing. Let's look at what these different features mean for your app, how they relate to each other, and when you can expect to start learning and using them.\n\n### [React 16.6](/blog/2018/10/23/react-v-16-6.html) (shipped): The One with Suspense for Code Splitting\n\n*Suspense* refers to React's new ability to \"suspend\" rendering while components are waiting for something, and display a loading indicator. In React 16.6, Suspense supports only one use case: lazy loading components with `React.lazy()` and `<React.Suspense>`.\n\n```js\n// This component is loaded dynamically\nconst OtherComponent = React.lazy(() => import('./OtherComponent'));\n\nfunction MyComponent() {\n  return (\n    <React.Suspense fallback={<Spinner />}>\n      <div>\n        <OtherComponent />\n      </div>\n    </React.Suspense>\n  );\n}\n```\n\nCode splitting with `React.lazy()` with `<React.Suspense>` is documented [in the Code Splitting guide](/docs/code-splitting.html#reactlazy). You can find another practical explanation in [this article](https://medium.com/@pomber/lazy-loading-and-preloading-components-in-react-16-6-804de091c82d).\n\nWe have been using Suspense for code splitting at Facebook since July, and expect it to be stable. There's been a few regressions in the initial public release in 16.6.0, but they were fixed in 16.6.3.\n\nCode splitting is just the first step for Suspense. Our longer term vision for Suspense involves letting it handle data fetching too (and integrate with libraries like Apollo). In addition to a convenient programming model, Suspense also provides better user experience in Concurrent Mode. You'll find information about these topics further below.\n\n**Status in React DOM:** Available since React 16.6.0.\n\n**Status in React DOM Server:** Suspense is not available in the server renderer yet. This isn't for the lack of attention. We've started work on a new asynchronous server renderer that will support Suspense, but it's a large project and will take a good chunk of 2019 to complete.\n\n**Status in React Native:** Bundle splitting isn't very useful in React Native, but there's nothing technically preventing `React.lazy()` and `<Suspense>` from working when given a Promise to a module.\n\n**Recommendation:** If you only do client rendering, we recommend widely adopting `React.lazy()` and `<React.Suspense>` for code splitting React components. If you do server rendering, you'll have to wait with adoption until the new server renderer is ready.\n\n### React 16.x (~Q1 2019): The One with Hooks\n\n*Hooks* let you use features like state and lifecycle from function components. They also let you reuse stateful logic between components without introducing extra nesting in your tree.\n\n```js\nfunction Example() {\n  // Declare a new state variable, which we'll call \"count\"\n  const [count, setCount] = useState(0);\n\n  return (\n   <div>\n     <p>You clicked {count} times</p>\n     <button onClick={() => setCount(count + 1)}>\n       Click me\n     </button>\n   </div>\n );\n}\n```\n\nHooks [introduction](/docs/hooks-intro.html) and [overview](/docs/hooks-overview.html) are good places to start. Watch [these talks](https://www.youtube.com/watch?v=V-QO-KO90iQ) for a video introduction and a deep dive. The [FAQ](/docs/hooks-faq.html) should answer most of your further questions. To learn more about the motivation behind Hooks, you can read [this article](https://medium.com/@dan_abramov/making-sense-of-react-hooks-fdbde8803889). Some of the rationale for the API design of Hooks is explained in [this RFC thread reply](https://github.com/reactjs/rfcs/pull/68#issuecomment-439314884).\n\nWe have been dogfooding Hooks at Facebook since September. We don't expect major bugs in the implementation. Hooks are only available in the 16.7 alpha versions of React. Some of their API is expected to change in the final version (see the end of [this comment](https://github.com/reactjs/rfcs/pull/68#issuecomment-439314884) for details). It is possible that the minor release with Hooks might not be React 16.7.\n\nHooks represent our vision for the future of React. They solve both problems that React users experience directly (\"wrapper hell\" of render props and higher-order components, duplication of logic in lifecycle methods), and the issues we've encountered optimizing React at scale (such as difficulties in inlining components with a compiler). Hooks don't deprecate classes. However, if Hooks are successful, it is possible that in a future *major* release class support might move to a separate package, reducing the default bundle size of React.\n\n**Status in React DOM:** The first version of `react` and `react-dom` supporting Hooks is `16.7.0-alpha.0`. We expect to publish more alphas over the next months (at the time of writing, the latest one is `16.7.0-alpha.2`). You can try them by installing `react@next` with `react-dom@next`. Don't forget to update `react-dom` -- otherwise Hooks won't work.\n\n**Status in React DOM Server:** The same 16.7 alpha versions of `react-dom` fully support Hooks with `react-dom/server`.\n\n**Status in React Native:** There is no officially supported way to try Hooks in React Native yet. If you're feeling adventurous, check out [this thread](https://github.com/facebook/react-native/issues/21967) for unofficial instructions. There is a known issue with `useEffect` firing too late which still needs to be solved.\n\n**Recommendation:** When you’re ready, we encourage you to start trying Hooks in new components you write. Make sure everyone on your team is on board with using them and familiar with this documentation. We don’t recommend rewriting your existing classes to Hooks unless you planned to rewrite them anyway (e.g. to fix bugs). Read more about the adoption strategy [here](/docs/hooks-faq.html#adoption-strategy).\n\n### React 16.x (~Q2 2019): The One with Concurrent Mode\n\n*Concurrent Mode* lets React apps be more responsive by rendering component trees without blocking the main thread. It is opt-in and allows React to interrupt a long-running render (for example, rendering a new feed story) to handle a high-priority event (for example, text input or hover). Concurrent Mode also improves the user experience of Suspense by skipping unnecessary loading states on fast connections.\n\n>Note\n>\n>You might have previously heard Concurrent Mode being referred to as [\"async mode\"](/blog/2018/03/27/update-on-async-rendering.html). We've changed the name to Concurrent Mode to highlight React's ability to perform work on different priority levels. This sets it apart from other approaches to async rendering.\n\n```js\n// Two ways to opt in:\n\n// 1. Part of an app (not final API)\n<React.unstable_ConcurrentMode>\n  <Something />\n</React.unstable_ConcurrentMode>\n\n// 2. Whole app (not final API)\nReactDOM.unstable_createRoot(domNode).render(<App />);\n```\n\nThere is no documentation written for the Concurrent Mode yet. It is important to highlight that the conceptual model will likely be unfamiliar at first. Documenting its benefits, how to use it efficiently, and its pitfalls is a high priority for us, and will be a prerequisite for calling it stable. Until then, [Andrew's talk](https://www.youtube.com/watch?v=ByBPyMBTzM0) is the best introduction available.\n\nConcurrent Mode is *much* less polished than Hooks. Some APIs aren't properly \"wired up\" yet and don't do what they're expected to. At the time of writing this post, we don't recommend using it for anything except very early experimentation. We don't expect many bugs in Concurrent Mode itself, but note that components that produce warnings in [`<React.StrictMode>`](https://reactjs.org/docs/strict-mode.html) may not work correctly. On a separate note, we've seen that Concurrent Mode *surfaces* performance problems in other code which can sometimes be mistaken for performance issues in Concurrent Mode itself. For example, a stray `setInterval(fn, 1)` call that runs every millisecond would have a worse effect in Concurrent Mode. We plan to publish more guidance about diagnosing and fixing issues like this as part of this release's documentation.\n\nConcurrent Mode is a big part of our vision for React. For CPU-bound work, it allows non-blocking rendering and keeps your app responsive while rendering complex component trees. That's demoed in the first part of [our JSConf Iceland talk](/blog/2018/03/01/sneak-peek-beyond-react-16.html). Concurrent Mode also makes Suspense better. It lets you avoid flickering a loading indicator if the network is fast enough. It's hard to explain without seeing so [Andrew's talk](https://www.youtube.com/watch?v=ByBPyMBTzM0) is the best resource available today. Concurrent Mode relies on a cooperative main thread [scheduler](https://github.com/facebook/react/tree/master/packages/scheduler), and we are [collaborating with the Chrome team](https://www.youtube.com/watch?v=mDdgfyRB5kg) to eventually move this functionality into the browser itself.\n\n**Status in React DOM:** A *very* unstable version of Concurrent Mode is available behind an `unstable_` prefix in React 16.6 but we don't recommend trying it unless you're willing to often run into walls or missing features. The 16.7 alphas include `React.ConcurrentMode` and `ReactDOM.createRoot` without an `unstable_` prefix, but we'll likely keep the prefix in 16.7, and only document and mark Concurrent Mode as stable in this future minor release.\n\n**Status in React DOM Server:** Concurrent Mode doesn't directly affect server rendering. It will work with the existing server renderer.\n\n**Status in React Native:** The current plan is to delay enabling Concurrent Mode in React Native until [React Fabric](https://github.com/react-native-community/discussions-and-proposals/issues/4) project is near completion.\n\n**Recommendation:** If you wish to adopt Concurrent Mode in the future, wrapping some component subtrees in [`<React.StrictMode>`](https://reactjs.org/docs/strict-mode.html) and fixing the resulting warnings is a good first step. In general it's not expected that legacy code would immediately be compatible. For example, at Facebook we mostly intend to use the Concurrent Mode in the more recently developed codebases, and keep the legacy ones running in the synchronous mode for the near future.\n\n### React 16.x (~mid 2019): The One with Suspense for Data Fetching\n\nAs mentioned earlier, *Suspense* refers to React's ability to \"suspend\" rendering while components are waiting for something, and display a loading indicator. In the already shipped React 16.6, the only supported use case for Suspense is code splitting. In this future minor release, we'd like to provide officially supported ways to use it for data fetching too. We'll provide a reference implementation of a basic \"React Cache\" that's compatible with Suspense, but you can also write your own. Data fetching libraries like Apollo and Relay will be able to integrate with Suspense by following a simple specification that we'll document.\n\n```js\n// React Cache for simple data fetching (not final API)\nimport {unstable_createResource} from 'react-cache';\n\n// Tell React Cache how to fetch your data\nconst TodoResource = unstable_createResource(fetchTodo);\n\nfunction Todo(props) {\n  // Suspends until the data is in the cache\n  const todo = TodoResource.read(props.id);\n  return <li>{todo.title}</li>;\n}\n\nfunction App() {\n  return (\n    // Same Suspense component you already use for code splitting\n    // would be able to handle data fetching too.\n    <React.Suspense fallback={<Spinner />}>\n      <ul>\n        {/* Siblings fetch in parallel */}\n        <Todo id=\"1\" />\n        <Todo id=\"2\" />\n      </ul>\n    </React.Suspense>\n  );\n}\n\n// Other libraries like Apollo and Relay can also\n// provide Suspense integrations with similar APIs.\n```\n\nThere is no official documentation for how to fetch data with Suspense yet, but you can find some early information in [this talk](https://youtu.be/ByBPyMBTzM0?t=1312) and [this small demo](https://github.com/facebook/react/tree/master/fixtures/unstable-async/suspense). We'll write documentation for React Cache (and how to write your own Suspense-compatible library) closer to this React release, but if you're curious, you can find its very early source code [here](https://github.com/facebook/react/blob/master/packages/react-cache/src/ReactCache.js).\n\nThe low-level Suspense mechanism (suspending rendering and showing a fallback) is expected to be stable even in React 16.6. We've used it for code splitting in production for months. However, the higher-level APIs for data fetching are very unstable. React Cache is rapidly changing, and will change at least a few more times. There are some low-level APIs that are [missing](https://github.com/reactjs/rfcs/pull/89) for a good higher-level API to be possible. We don't recommend using React Cache anywhere except very early experiments. Note that React Cache itself isn't strictly tied to React releases, but the current alphas lack basic features as cache invalidation, and you'll run into a wall very soon. We expect to have something usable with this React release.\n\nEventually we'd like most data fetching to happen through Suspense but it will take a long time until all integrations are ready. In practice we expect it to be adopted very incrementally, and often through layers like Apollo or Relay rather than directly. Missing higher level APIs aren't the only obstacle — there are also some important UI patterns we don't support yet such as [showing progress indicator outside of the loading view hierarchy](https://github.com/facebook/react/issues/14248). As always, we will communicate our progress in the release notes on this blog.\n\n**Status in React DOM and React Native:** Technically, a compatible cache would already work with `<React.Suspense>` in React 16.6. However, we don't expect to have a good cache implementation until this React minor release. If you're feeling adventurous, you can try to write your own cache by looking at the React Cache alphas. However, note that the mental model is sufficiently different that there's a high risk of misunderstanding it until the docs are ready.\n\n**Status in React DOM Server:** Suspense is not available in the server renderer yet. As we mentioned earlier, we've started work on a new asynchronous server renderer that will support Suspense, but it's a large project and will take a good chunk of 2019 to complete.\n\n**Recommendation:** Wait for this minor React release in order to use Suspense for data fetching. Don’t try to use Suspense features in 16.6 for it; it’s not supported. However, your existing `<Suspense>` components for code splitting will be able to show loading states for data too when Suspense for Data Fetching becomes officially supported.\n\n## Other Projects\n\n### Modernizing React DOM\n\nWe started an investigation into [simplifying and modernizing](https://github.com/facebook/react/issues/13525) ReactDOM, with a goal of reduced bundle size and aligning closer with the browser behavior. It is still early to say which specific bullet points will \"make it\" because the project is in an exploratory phase. We will communicate our progress on that issue.\n\n### Suspense for Server Rendering\n\nWe started designing a new server renderer that supports Suspense (including waiting for asynchronous data on the server without double rendering) and progressively loading and hydrating page content in chunks for best user experience. You can watch an overview of its early prototype in [this talk](https://www.youtube.com/watch?v=z-6JC0_cOns). The new server renderer is going to be our major focus in 2019, but it's too early to say anything about its release schedule. Its development, as always, [will happen on GitHub](https://github.com/facebook/react/pulls?utf8=%E2%9C%93&q=is%3Apr+is%3Aopen+fizz).\n\n-----\n\nAnd that's about it! As you can see, there's a lot here to keep us busy but we expect much progress in the coming months.\n\nWe hope this post gives you an idea of what we're working on, what you can use today, and what you can expect to use in the future. While there's a lot of discussion about new features on social media platforms, you won't miss anything important if you read this blog.\n\nWe're always open to feedback, and love to hear from you in the [RFC repository](https://github.com/reactjs/rfcs), [the issue tracker](https://github.com/facebook/react/issues), and [on Twitter](https://mobile.twitter.com/reactjs).\n\n\n\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "e027e703ee6a5b0251f17f134fd5a85b",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React 16.x Roadmap",
        "author": [
          "gaearon"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2018-11-27-react-16-roadmap.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2018-11-27-react-16-roadmap.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2018-11-27-react-16-roadmap.md",
      "fields": {
        "date": "2018-11-26T16:00:00.000Z",
        "slug": "/blog/2018/11/27/react-16-roadmap.html",
        "path": "blog/2018-11-27-react-16-roadmap.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/codebase-overview.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/codebase-overview.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/codebase-overview.md absPath of file",
      "internal": {
        "content": "---\nid: codebase-overview\ntitle: Codebase Overview\nlayout: contributing\npermalink: docs/codebase-overview.html\nprev: how-to-contribute.html\nnext: implementation-notes.html\nredirect_from: \"contributing/codebase-overview.html\"\n---\n\nThis section will give you an overview of the React codebase organization, its conventions, and the implementation.\n\nIf you want to [contribute to React](/docs/how-to-contribute.html) we hope that this guide will help you feel more comfortable making changes.\n\nWe don't necessarily recommend any of these conventions in React apps. Many of them exist for historical reasons and might change with time.\n\n### Custom Module System\n\nAt Facebook, internally we use a custom module system called \"Haste\". It is similar to [CommonJS](https://nodejs.org/docs/latest/api/modules.html) and also uses `require()` but has a few important differences that often confuse outside contributors.\n\nIn CommonJS, when you import a module, you need to specify its relative path:\n\n```js\n// Importing from the same folder:\nvar setInnerHTML = require('./setInnerHTML');\n\n// Importing from a different folder:\nvar setInnerHTML = require('../utils/setInnerHTML');\n\n// Importing from a deeply nested folder:\nvar setInnerHTML = require('../client/utils/setInnerHTML');\n```\n\nHowever, with Haste **all filenames are globally unique.** In the React codebase, you can import any module from any other module by its name alone:\n\n```js\nvar setInnerHTML = require('setInnerHTML');\n```\n\nHaste was originally developed for giant apps like Facebook. It's easy to move files to different folders and import them without worrying about relative paths. The fuzzy file search in any editor always takes you to the correct place thanks to globally unique names.\n\nReact itself was extracted from Facebook's codebase and uses Haste for historical reasons. In the future, we will probably [migrate React to use CommonJS or ES Modules](https://github.com/facebook/react/issues/6336) to be more aligned with the community. However, this requires changes in Facebook's internal infrastructure so it is unlikely to happen very soon.\n\n**Haste will make more sense to you if you remember a few rules:**\n\n* All filenames in the React source code are unique. This is why they're sometimes verbose.\n* When you add a new file, make sure you include a [license header](https://github.com/facebook/react/blob/87724bd87506325fcaf2648c70fc1f43411a87be/src/renderers/dom/client/utils/setInnerHTML.js#L1-L10). You can copy it from any existing file. A license header always includes [a line like this](https://github.com/facebook/react/blob/87724bd87506325fcaf2648c70fc1f43411a87be/src/renderers/dom/client/utils/setInnerHTML.js#L9). Change it to match the name of the file you created.\n* Don’t use relative paths when importing. Instead of `require('./setInnerHTML')`, write `require('setInnerHTML')`.\n\nWhen we compile React for npm, a script copies all the modules into [a single flat directory called `lib`](https://unpkg.com/react@15/lib/) and prepends all `require()` paths with `./`. This way Node, Browserify, webpack, and other tools can understand React build output without being aware of Haste.\n\n**If you're reading React source on GitHub and want to jump to a file, press \"t\".**\n\nThis is a GitHub shortcut for searching the current repo for fuzzy filename matches. Start typing the name of the file you are looking for, and it will show up as the first match.\n\n### External Dependencies\n\nReact has almost no external dependencies. Usually, a `require()` points to a file in React's own codebase. However, there are a few relatively rare exceptions.\n\nIf you see a `require()` that does not correspond to a file in the React repository, you can look in a special repository called [fbjs](https://github.com/facebook/fbjs). For example, `require('warning')` will resolve to the [`warning` module from fbjs](https://github.com/facebook/fbjs/blob/df9047fec0bbd1e64635ae369c045975777cba7c/packages/fbjs/src/__forks__/warning.js).\n\nThe [fbjs repository](https://github.com/facebook/fbjs) exists because React shares some small utilities with libraries like [Relay](https://github.com/facebook/relay), and we keep them in sync. We don't depend on equivalent small modules in the Node ecosystem because we want Facebook engineers to be able to make changes to them whenever necessary. None of the utilities inside fbjs are considered to be public API, and they are only intended for use by Facebook projects such as React.\n\n### Top-Level Folders\n\nAfter cloning the [React repository](https://github.com/facebook/react), you will see a few top-level folders in it:\n\n* [`src`](https://github.com/facebook/react/tree/master/src) is the source code of React. **If your change is related to the code, `src` is where you'll spend most of your time.**\n* [`docs`](https://github.com/reactjs/reactjs.org/tree/master/content) is the React documentation website. When you change APIs, make sure to update the relevant Markdown files.\n* [`fixtures`](https://github.com/facebook/react/tree/master/fixtures) contains a few small React test applications for contributors.\n* [`packages`](https://github.com/facebook/react/tree/master/packages) contains metadata (such as `package.json`) for all packages in the React repository. Nevertheless, their source code is still located inside [`src`](https://github.com/facebook/react/tree/master/src).\n* `build` is the build output of React. It is not in the repository but it will appear in your React clone after you [build it](/docs/how-to-contribute.html#development-workflow) for the first time.\n\nThere are a few other top-level folders but they are mostly used for the tooling and you likely won't ever encounter them when contributing.\n\n### Colocated Tests\n\nWe don't have a top-level directory for unit tests. Instead, we put them into a directory called `__tests__` relative to the files that they test.\n\nFor example, a test for [`setInnerHTML.js`](https://github.com/facebook/react/blob/87724bd87506325fcaf2648c70fc1f43411a87be/src/renderers/dom/client/utils/setInnerHTML.js) is located in [`__tests__/setInnerHTML-test.js`](https://github.com/facebook/react/blob/87724bd87506325fcaf2648c70fc1f43411a87be/src/renderers/dom/client/utils/__tests__/setInnerHTML-test.js) right next to it.\n\n### Shared Code\n\nEven though Haste allows us to import any module from anywhere in the repository, we follow a convention to avoid cyclic dependencies and other unpleasant surprises. By convention, a file may only import files in the same folder or in subfolders below.\n\nFor example, files inside [`src/renderers/dom/stack/client`](https://github.com/facebook/react/blob/f53854424b33692907234fe7a1f80b888fd80751/src/renderers/dom/stack/client) may import other files in the same folder or any folder below.\n\nHowever they can't import modules from [`src/renderers/dom/stack/server`](https://github.com/facebook/react/blob/f53854424b33692907234fe7a1f80b888fd80751/src/renderers/dom/stack/server) because it is not a child directory of [`src/renderers/dom/stack/client`](https://github.com/facebook/react/blob/f53854424b33692907234fe7a1f80b888fd80751/src/renderers/dom/stack/client).\n\nThere is an exception to this rule. Sometimes we *do* need to share functionality between two groups of modules. In this case, we hoist the shared module up to a folder called `shared` inside the closest common ancestor folder of the modules that need to rely on it.\n\nFor example, code shared between [`src/renderers/dom/stack/client`](https://github.com/facebook/react/blob/f53854424b33692907234fe7a1f80b888fd80751/src/renderers/dom/stack/client) and [`src/renderers/dom/stack/server`](https://github.com/facebook/react/blob/f53854424b33692907234fe7a1f80b888fd80751/src/renderers/dom/stack/server) lives in [`src/renderers/dom/shared`](https://github.com/facebook/react/blob/f53854424b33692907234fe7a1f80b888fd80751/src/renderers/dom/shared).\n\nBy the same logic, if [`src/renderers/dom/stack/client`](https://github.com/facebook/react/blob/f53854424b33692907234fe7a1f80b888fd80751/src/renderers/dom/stack/client) needs to share a utility with something in [`src/renderers/native`](https://github.com/facebook/react/blob/f53854424b33692907234fe7a1f80b888fd80751/src/renderers/native), this utility would be in [`src/renderers/shared`](https://github.com/facebook/react/blob/f53854424b33692907234fe7a1f80b888fd80751/src/renderers/shared).\n\nThis convention is not enforced but we check for it during a pull request review.\n\n### Warnings and Invariants\n\nThe React codebase uses the `warning` module to display warnings:\n\n```js\nvar warning = require('warning');\n\nwarning(\n  2 + 2 === 4,\n  'Math is not working today.'\n);\n```\n\n**The warning is shown when the `warning` condition is `false`.**\n\nOne way to think about it is that the condition should reflect the normal situation rather than the exceptional one.\n\nIt is a good idea to avoid spamming the console with duplicate warnings:\n\n```js\nvar warning = require('warning');\n\nvar didWarnAboutMath = false;\nif (!didWarnAboutMath) {\n  warning(\n    2 + 2 === 4,\n    'Math is not working today.'\n  );\n  didWarnAboutMath = true;\n}\n```\n\nWarnings are only enabled in development. In production, they are completely stripped out. If you need to forbid some code path from executing, use `invariant` module instead:\n\n```js\nvar invariant = require('invariant');\n\ninvariant(\n  2 + 2 === 4,\n  'You shall not pass!'\n);\n```\n\n**The invariant is thrown when the `invariant` condition is `false`.**\n\n\"Invariant\" is just a way of saying \"this condition always holds true\". You can think about it as making an assertion.\n\nIt is important to keep development and production behavior similar, so `invariant` throws both in development and in production. The error messages are automatically replaced with error codes in production to avoid negatively affecting the byte size.\n\n### Development and Production\n\nYou can use `__DEV__` pseudo-global variable in the codebase to guard development-only blocks of code.\n\nIt is inlined during the compile step, and turns into `process.env.NODE_ENV !== 'production'` checks in the CommonJS builds.\n\nFor standalone builds, it becomes `true` in the unminified build, and gets completely stripped out with the `if` blocks it guards in the minified build.\n\n```js\nif (__DEV__) {\n  // This code will only run in development.\n}\n```\n\n### JSDoc\n\nSome of the internal and public methods are annotated with [JSDoc annotations](http://usejsdoc.org/):\n\n```js\n/**\n  * Updates this component by updating the text content.\n  *\n  * @param {ReactText} nextText The next text content\n  * @param {ReactReconcileTransaction} transaction\n  * @internal\n  */\nreceiveComponent: function(nextText, transaction) {\n  // ...\n},\n```\n\nWe try to keep existing annotations up-to-date but we don't enforce them. We don't use JSDoc in the newly written code, and instead use Flow to document and enforce types.\n\n### Flow\n\nWe recently started introducing [Flow](https://flowtype.org/) checks to the codebase. Files marked with the `@flow` annotation in the license header comment are being typechecked.\n\nWe accept pull requests [adding Flow annotations to existing code](https://github.com/facebook/react/pull/7600/files). Flow annotations look like this:\n\n```js\nReactRef.detachRefs = function(\n  instance: ReactInstance,\n  element: ReactElement | string | number | null | false,\n): void {\n  // ...\n}\n```\n\nWhen possible, new code should use Flow annotations.\nYou can run `npm run flow` locally to check your code with Flow.\n\n### Classes and Mixins\n\nReact was originally written in ES5. We have since enabled ES6 features with [Babel](http://babeljs.io/), including classes. However, most of React code is still written in ES5.\n\nIn particular, you might see the following pattern quite often:\n\n```js\n// Constructor\nfunction ReactDOMComponent(element) {\n  this._currentElement = element;\n}\n\n// Methods\nReactDOMComponent.Mixin = {\n  mountComponent: function() {\n    // ...\n  }\n};\n\n// Put methods on the prototype\nObject.assign(\n  ReactDOMComponent.prototype,\n  ReactDOMComponent.Mixin\n);\n\nmodule.exports = ReactDOMComponent;\n```\n\nThe `Mixin` in this code has no relation to React `mixins` feature. It is just a way of grouping a few methods under an object. Those methods may later get attached to some other class. We use this pattern in a few places although we try to avoid it in the new code.\n\nThe equivalent code in ES6 would look like this:\n\n```js\nclass ReactDOMComponent {\n  constructor(element) {\n    this._currentElement = element;\n  }\n\n  mountComponent() {\n    // ...\n  }\n}\n\nmodule.exports = ReactDOMComponent;\n```\n\nSometimes we [convert old code to ES6 classes](https://github.com/facebook/react/pull/7647/files). However, this is not very important to us because there is an [ongoing effort](#fiber-reconciler) to replace the React reconciler implementation with a less object-oriented approach which wouldn't use classes at all.\n\n### Dynamic Injection\n\nReact uses dynamic injection in some modules. While it is always explicit, it is still unfortunate because it hinders understanding of the code. The main reason it exists is because React originally only supported DOM as a target. React Native started as a React fork. We had to add dynamic injection to let React Native override some behaviors.\n\nYou may see modules declaring their dynamic dependencies like this:\n\n```js\n// Dynamically injected\nvar textComponentClass = null;\n\n// Relies on dynamically injected value\nfunction createInstanceForText(text) {\n  return new textComponentClass(text);\n}\n\nvar ReactHostComponent = {\n  createInstanceForText,\n\n  // Provides an opportunity for dynamic injection\n  injection: {\n    injectTextComponentClass: function(componentClass) {\n      textComponentClass = componentClass;\n    },\n  },\n};\n\nmodule.exports = ReactHostComponent;\n```\n\nThe `injection` field is not handled specially in any way. But by convention, it means that this module wants to have some (presumably platform-specific) dependencies injected into it at runtime.\n\nIn React DOM, [`ReactDefaultInjection`](https://github.com/facebook/react/blob/4f345e021a6bd9105f09f3aee6d8762eaa9db3ec/src/renderers/dom/shared/ReactDefaultInjection.js) injects a DOM-specific implementation:\n\n```js\nReactHostComponent.injection.injectTextComponentClass(ReactDOMTextComponent);\n```\n\nIn React Native, [`ReactNativeDefaultInjection`](https://github.com/facebook/react/blob/4f345e021a6bd9105f09f3aee6d8762eaa9db3ec/src/renderers/native/ReactNativeDefaultInjection.js) injects its own implementation:\n\n```js\nReactHostComponent.injection.injectTextComponentClass(ReactNativeTextComponent);\n```\n\nThere are multiple injection points in the codebase. In the future, we intend to get rid of the dynamic injection mechanism and wire up all the pieces statically during the build.\n\n### Multiple Packages\n\nReact is a [monorepo](http://danluu.com/monorepo/). Its repository contains multiple separate packages so that their changes can be coordinated together, and documentation and issues live in one place.\n\nThe npm metadata such as `package.json` files is located in the [`packages`](https://github.com/facebook/react/tree/master/packages) top-level folder. However, there is almost no real code in it.\n\nFor example, [`packages/react/react.js`](https://github.com/facebook/react/blob/87724bd87506325fcaf2648c70fc1f43411a87be/packages/react/react.js) re-exports [`src/isomorphic/React.js`](https://github.com/facebook/react/blob/87724bd87506325fcaf2648c70fc1f43411a87be/src/isomorphic/React.js), the real npm entry point. Other packages mostly repeat this pattern. All the important code lives in [`src`](https://github.com/facebook/react/tree/master/src).\n\nWhile the code is separated in the source tree, the exact package boundaries are slightly different for npm packages and standalone browser builds.\n\n### React Core\n\nThe \"core\" of React includes all the [top-level `React` APIs](/docs/top-level-api.html#react), for example:\n\n* `React.createElement()`\n* `React.Component`\n* `React.Children`\n\n**React core only includes the APIs necessary to define components.** It does not include the [reconciliation](/docs/reconciliation.html) algorithm or any platform-specific code. It is used both by React DOM and React Native components.\n\nThe code for React core is located in [`src/isomorphic`](https://github.com/facebook/react/tree/master/src/isomorphic) in the source tree. It is available on npm as the [`react`](https://www.npmjs.com/package/react) package. The corresponding standalone browser build is called `react.js`, and it exports a global called `React`.\n\n>**Note:**\n>\n>Until very recently, `react` npm package and `react.js` standalone build contained all React code (including React DOM) rather than just the core. This was done for backward compatibility and historical reasons. Since React 15.4.0, the core is better separated in the build output.\n>\n>There is also an additional standalone browser build called `react-with-addons.js` which we will consider separately further below.\n\n### Renderers\n\nReact was originally created for the DOM but it was later adapted to also support native platforms with [React Native](http://facebook.github.io/react-native/). This introduced the concept of \"renderers\" to React internals.\n\n**Renderers manage how a React tree turns into the underlying platform calls.**\n\nRenderers are located in [`src/renderers`](https://github.com/facebook/react/tree/master/src/renderers/):\n\n* [React DOM Renderer](https://github.com/facebook/react/tree/master/src/renderers/dom) renders React components to the DOM. It implements [top-level `ReactDOM` APIs](/docs/top-level-api.html#reactdom) and is available as [`react-dom`](https://www.npmjs.com/package/react-dom) npm package. It can also be used as standalone browser bundle called `react-dom.js` that exports a `ReactDOM` global.\n* [React Native Renderer](https://github.com/facebook/react/tree/master/src/renderers/native) renders React components to native views. It is used internally by React Native via [`react-native-renderer`](https://www.npmjs.com/package/react-native-renderer) npm package. In the future a copy of it may get checked into the React Native [repository](https://github.com/facebook/react-native) so that React Native can update React at its own pace.\n* [React Test Renderer](https://github.com/facebook/react/tree/master/src/renderers/testing) renders React components to JSON trees. It is used by the [Snapshot Testing](https://facebook.github.io/jest/blog/2016/07/27/jest-14.html) feature of [Jest](https://facebook.github.io/jest) and is available as [react-test-renderer](https://www.npmjs.com/package/react-test-renderer) npm package.\n\nThe only other officially supported renderer is [`react-art`](https://github.com/reactjs/react-art). To avoid accidentally breaking it as we make changes to React, we checked it in as [`src/renderers/art`](https://github.com/facebook/react/tree/master/src/renderers/art) and run its test suite. Nevertheless, its [GitHub repository](https://github.com/reactjs/react-art) still acts as the source of truth.\n\nWhile it is [technically possible](https://github.com/iamdustan/tiny-react-renderer) to create custom React renderers, this is currently not officially supported. There is no stable public contract for custom renderers yet which is another reason why we keep them all in a single place.\n\n>**Note:**\n>\n>Technically the [`native`](https://github.com/facebook/react/tree/master/src/renderers/native) renderer is a very thin layer that teaches React to interact with React Native implementation. The real platform-specific code managing the native views lives in the [React Native repository](https://github.com/facebook/react-native) together with its components.\n\n### Reconcilers\n\nEven vastly different renderers like React DOM and React Native need to share a lot of logic. In particular, the [reconciliation](/docs/reconciliation.html) algorithm should be as similar as possible so that declarative rendering, custom components, state, lifecycle methods, and refs work consistently across platforms.\n\nTo solve this, different renderers share some code between them. We call this part of React a \"reconciler\". When an update such as `setState()` is scheduled, the reconciler calls `render()` on components in the tree and mounts, updates, or unmounts them.\n\nReconcilers are not packaged separately because they currently have no public API. Instead, they are exclusively used by renderers such as React DOM and React Native.\n\n### Stack Reconciler\n\nThe \"stack\" reconciler is the one powering all React production code today. It is located in [`src/renderers/shared/stack/reconciler`](https://github.com/facebook/react/tree/master/src/renderers/shared/stack) and is used by both React DOM and React Native.\n\nIt is written in an [object-oriented way](https://en.wikipedia.org/wiki/Composite_pattern) and maintains a separate tree of \"internal instances\" for all React components. The internal instances exist both for user-defined (\"composite\") and platform-specific (\"host\") components. The internal instances are inaccessible directly to the user, and their tree is never exposed.\n\nWhen a component mounts, updates, or unmounts, the stack reconciler calls a method on that internal instance. The methods are called `mountComponent(element)`, `receiveComponent(nextElement)`, and `unmountComponent(element)`.\n\n#### Host Components\n\nPlatform-specific (\"host\") components, such as `<div>` or a `<View>`, run platform-specific code. For example, React DOM instructs the stack reconciler to use [`ReactDOMComponent`](https://github.com/facebook/react/blob/87724bd87506325fcaf2648c70fc1f43411a87be/src/renderers/dom/shared/ReactDOMComponent.js) to handle [mounting](https://github.com/facebook/react/blob/87724bd87506325fcaf2648c70fc1f43411a87be/src/renderers/dom/shared/ReactDOMComponent.js#L517), [updates](https://github.com/facebook/react/blob/87724bd87506325fcaf2648c70fc1f43411a87be/src/renderers/dom/shared/ReactDOMComponent.js#L865), and [unmounting](https://github.com/facebook/react/blob/87724bd87506325fcaf2648c70fc1f43411a87be/src/renderers/dom/shared/ReactDOMComponent.js#L1140) of DOM components.\n\nRegardless of the platform, both `<div>` and `<View>` handle managing multiple children in a similar way. For convenience, the stack reconciler provides a helper called [`ReactMultiChild`](https://github.com/facebook/react/blob/87724bd87506325fcaf2648c70fc1f43411a87be/src/renderers/shared/stack/reconciler/ReactMultiChild.js) that both DOM and Native renderers [use](https://github.com/facebook/react/blob/87724bd87506325fcaf2648c70fc1f43411a87be/src/renderers/dom/shared/ReactDOMComponent.js#L1203).\n\n#### Composite Components\n\nUser-defined (\"composite\") components should behave the same way with all renderers. This is why the stack reconciler provides a shared implementation in [`ReactCompositeComponent`](https://github.com/facebook/react/blob/87724bd87506325fcaf2648c70fc1f43411a87be/src/renderers/shared/stack/reconciler/ReactCompositeComponent.js). It is always the same regardless of the renderer.\n\nComposite components also implement [mounting](https://github.com/facebook/react/blob/87724bd87506325fcaf2648c70fc1f43411a87be/src/renderers/shared/stack/reconciler/ReactCompositeComponent.js#L181), [updating](https://github.com/facebook/react/blob/87724bd87506325fcaf2648c70fc1f43411a87be/src/renderers/shared/stack/reconciler/ReactCompositeComponent.js#L703), and [unmounting](https://github.com/facebook/react/blob/87724bd87506325fcaf2648c70fc1f43411a87be/src/renderers/shared/stack/reconciler/ReactCompositeComponent.js#L524). However, unlike host components, `ReactCompositeComponent` needs to behave differently depending on the user's code. This is why it calls methods, such as `render()` and `componentDidMount()`, on the user-supplied class.\n\nDuring an update, `ReactCompositeComponent` checks whether the `render()` output has a different `type` or `key` than the last time. If neither `type` nor `key` has changed, it delegates the update to the existing child internal instance. Otherwise, it unmounts the old child instance and mounts a new one. This is described in the [reconciliation algorithm](/docs/reconciliation.html).\n\n#### Recursion\n\nDuring an update, the stack reconciler \"drills down\" through composite components, runs their `render()` methods, and decides whether to update or replace their single child instance. It executes platform-specific code as it passes through the host components like `<div>` and `<View>`. Host components may have multiple children which are also processed recursively.\n\nIt is important to understand that the stack reconciler always processes the component tree synchronously in a single pass. While individual tree branches may [bail out of reconciliation](/docs/advanced-performance.html#avoiding-reconciling-the-dom), the stack reconciler can't pause, and so it is suboptimal when the updates are deep and the available CPU time is limited.\n\n#### Learn More\n\n**The [next section](/docs/implementation-notes.html) describes the current implementation in more details.**\n\n### Fiber Reconciler\n\nThe \"fiber\" reconciler is a new effort aiming to resolve the problems inherent in the stack reconciler and fix a few long-standing issues.\n\nIt is a complete rewrite of the reconciler and is currently [in active development](https://github.com/facebook/react/pulls?utf8=✓&q=is:pr+is:open+fiber).\n\nIts main goals are:\n\n* Ability to split interruptible work in chunks.\n* Ability to prioritize, rebase and reuse work in progress.\n* Ability to yield back and forth between parents and children to support layout in React.\n* Ability to return multiple elements from `render()`.\n* Better support for error boundaries.\n\nYou can read more about it in [React Fiber Architecture](https://github.com/acdlite/react-fiber-architecture). At this moment, it is still very experimental, and far from feature parity with the stack reconciler.\n\nIts source code is located in [`src/renderers/shared/fiber`](https://github.com/facebook/react/tree/master/src/renderers/shared/fiber).\n\n### Event System\n\nReact implements a synthetic event system which is agnostic of the renderers and works both with React DOM and React Native. Its source code is located in [`src/renderers/shared/shared/event`](https://github.com/facebook/react/tree/master/src/renderers/shared/shared/event).\n\nThere is a [video with a deep code dive into it](https://www.youtube.com/watch?v=dRo_egw7tBc) (66 mins).\n\n### What Next?\n\nRead the [next section](/docs/implementation-notes.html) to learn about the current implementation of reconciler in more detail.\n",
        "type": "MarkdownRemark",
        "contentDigest": "4c2909985f3e750162fc708ae06bee33",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Codebase Overview",
        "id": "codebase-overview",
        "layout": "contributing",
        "permalink": "docs/codebase-overview.html",
        "prev": "how-to-contribute.html",
        "next": "implementation-notes.html",
        "redirect_from": "contributing/codebase-overview.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/codebase-overview.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/codebase-overview.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/codebase-overview.md",
      "fields": {
        "slug": "docs/codebase-overview.html",
        "path": "docs/codebase-overview.md",
        "redirect": "\"contributing/codebase-overview.html\""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/hooks-faq.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/hooks-faq.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/hooks-faq.md absPath of file",
      "internal": {
        "content": "---\nid: hooks-faq\ntitle: Hooks FAQ\npermalink: docs/hooks-faq.html\nprev: hooks-reference.html\n---\n\n*Hooks* 是一项新功能提案，可让你在不编写类的情况下使用状态(state)和其他React功能。它们目前处于React v16.7.0-alpha中，并在[此RFC中](https://github.com/reactjs/rfcs/pull/68)进行讨论。\n\n此页面回答了一些有关[Hooks](https://react.docschina.org/docs/hooks-overview.html)的常见问题。\n\n<!--\n  if you ever need to regenerate this, this snippet in the devtools console might help:\n\n  $$('.anchor').map(a =>\n    `${' '.repeat(2 * +a.parentNode.nodeName.slice(1))}` +\n    `[${a.parentNode.textContent}](${a.getAttribute('href')})`\n  ).join('\\n')\n-->\n\n- [采用策略](#%E9%87%87%E7%94%A8%E7%AD%96%E7%95%A5)\n  - [我是否需要重写所有类组件？](#%E6%88%91%E6%98%AF%E5%90%A6%E9%9C%80%E8%A6%81%E9%87%8D%E5%86%99%E6%89%80%E6%9C%89%E7%B1%BB%E7%BB%84%E4%BB%B6)\n  - [我的现有React知识中有多少能保持相关性？](#%E6%88%91%E7%9A%84%E7%8E%B0%E6%9C%89react%E7%9F%A5%E8%AF%86%E4%B8%AD%E6%9C%89%E5%A4%9A%E5%B0%91%E8%83%BD%E4%BF%9D%E6%8C%81%E7%9B%B8%E5%85%B3%E6%80%A7)\n  - [我应该使用Hooks，Class还是两者兼而有之？](#%E6%88%91%E5%BA%94%E8%AF%A5%E4%BD%BF%E7%94%A8hooksclass%E8%BF%98%E6%98%AF%E4%B8%A4%E8%80%85%E5%85%BC%E8%80%8C%E6%9C%89%E4%B9%8B)\n  - [Hooks涵盖了Class的所有用例吗？](#hooks%E6%B6%B5%E7%9B%96%E4%BA%86class%E7%9A%84%E6%89%80%E6%9C%89%E7%94%A8%E4%BE%8B%E5%90%97)\n  - [Hooks会替换render props和高阶组件吗？](#hooks%E4%BC%9A%E6%9B%BF%E6%8D%A2render-props%E5%92%8C%E9%AB%98%E9%98%B6%E7%BB%84%E4%BB%B6%E5%90%97)\n  - [Hook对流行框架的API来说意味着什么（Redux的`connect()`和React Router等）？](#hook%E5%AF%B9%E6%B5%81%E8%A1%8C%E6%A1%86%E6%9E%B6%E7%9A%84api%E6%9D%A5%E8%AF%B4%E6%84%8F%E5%91%B3%E7%9D%80%E4%BB%80%E4%B9%88redux%E7%9A%84connect%E5%92%8Creact-router%E7%AD%89)\n  - [Hooks可以使用静态类型吗？](#hooks%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%E9%9D%99%E6%80%81%E7%B1%BB%E5%9E%8B%E5%90%97)\n  - [如何测试使用Hooks的组件？](#%E5%A6%82%E4%BD%95%E6%B5%8B%E8%AF%95%E4%BD%BF%E7%94%A8hooks%E7%9A%84%E7%BB%84%E4%BB%B6)\n  - [lint规则究竟强制执行了什么？](#lint%E8%A7%84%E5%88%99%E7%A9%B6%E7%AB%9F%E5%BC%BA%E5%88%B6%E6%89%A7%E8%A1%8C%E4%BA%86%E4%BB%80%E4%B9%88)\n- [从 Classes 过渡到 Hooks](#%E4%BB%8E-classes-%E8%BF%87%E6%B8%A1%E5%88%B0-hooks)\n  - [Class中的生命周期与Hook的对应情况](#class%E4%B8%AD%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E4%B8%8Ehook%E7%9A%84%E5%AF%B9%E5%BA%94%E6%83%85%E5%86%B5)\n  - [是否有类似实例变量的东西？](#%E6%98%AF%E5%90%A6%E6%9C%89%E7%B1%BB%E4%BC%BC%E5%AE%9E%E4%BE%8B%E5%8F%98%E9%87%8F%E7%9A%84%E4%B8%9C%E8%A5%BF)\n  - [我应该使用一个还是多个状态变量？](#%E6%88%91%E5%BA%94%E8%AF%A5%E4%BD%BF%E7%94%A8%E4%B8%80%E4%B8%AA%E8%BF%98%E6%98%AF%E5%A4%9A%E4%B8%AA%E7%8A%B6%E6%80%81%E5%8F%98%E9%87%8F)\n  - [我可以仅在更新时运行Effect吗？](#%E6%88%91%E5%8F%AF%E4%BB%A5%E4%BB%85%E5%9C%A8%E6%9B%B4%E6%96%B0%E6%97%B6%E8%BF%90%E8%A1%8Ceffect%E5%90%97)\n  - [如何获得以前的props或state？](#%E5%A6%82%E4%BD%95%E8%8E%B7%E5%BE%97%E4%BB%A5%E5%89%8D%E7%9A%84props%E6%88%96state)\n  - [我该如何实现`getDerivedStateFromProps`？](#%E6%88%91%E8%AF%A5%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0getderivedstatefromprops)\n  - [我可以对函数组件进行引用吗？](#%E6%88%91%E5%8F%AF%E4%BB%A5%E5%AF%B9%E5%87%BD%E6%95%B0%E7%BB%84%E4%BB%B6%E8%BF%9B%E8%A1%8C%E5%BC%95%E7%94%A8%E5%90%97)\n  - [`const [thing, setThing] = useState()`是什么意思？](#const-thing-setthing--usestate%E6%98%AF%E4%BB%80%E4%B9%88%E6%84%8F%E6%80%9D)\n- [性能优化](#%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96)\n  - [我可以在更新的时候跳过一个effect吗？](#%E6%88%91%E5%8F%AF%E4%BB%A5%E5%9C%A8%E6%9B%B4%E6%96%B0%E7%9A%84%E6%97%B6%E5%80%99%E8%B7%B3%E8%BF%87%E4%B8%80%E4%B8%AAeffect%E5%90%97)\n  - [我该如何实现`shouldComponentUpdate`？](#%E6%88%91%E8%AF%A5%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0shouldcomponentupdate)\n  - [如何记忆计算？](#%E5%A6%82%E4%BD%95%E8%AE%B0%E5%BF%86%E8%AE%A1%E7%AE%97)\n  - [由于在渲染中创建函数，Hooks是否会变慢？](#%E7%94%B1%E4%BA%8E%E5%9C%A8%E6%B8%B2%E6%9F%93%E4%B8%AD%E5%88%9B%E5%BB%BA%E5%87%BD%E6%95%B0hooks%E6%98%AF%E5%90%A6%E4%BC%9A%E5%8F%98%E6%85%A2)\n  - [如何避免传递回调？](#%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E4%BC%A0%E9%80%92%E5%9B%9E%E8%B0%83)\n  - [如何从`useCallback`读取经常变化的值？](#%E5%A6%82%E4%BD%95%E4%BB%8Eusecallback%E8%AF%BB%E5%8F%96%E7%BB%8F%E5%B8%B8%E5%8F%98%E5%8C%96%E7%9A%84%E5%80%BC)\n- [底层实现（Under the Hood）](#%E5%BA%95%E5%B1%82%E5%AE%9E%E7%8E%B0under-the-hood)\n  - [React如何将Hook调用与组件相关联？](#react%E5%A6%82%E4%BD%95%E5%B0%86hook%E8%B0%83%E7%94%A8%E4%B8%8E%E7%BB%84%E4%BB%B6%E7%9B%B8%E5%85%B3%E8%81%94)\n  - [Hooks的现有技术是什么？](#hooks%E7%9A%84%E7%8E%B0%E6%9C%89%E6%8A%80%E6%9C%AF%E6%98%AF%E4%BB%80%E4%B9%88)\n\n## 采用策略\n\n### 我是否需要重写所有类组件？\n\n不需要，我们[没有计划](https://react.docschina.org/docs/hooks-intro.html#gradual-adoption-strategy)在React中删除Class——我们都需要保持出货的产品（ keep shipping products ），不可能承受重写的成本。我们建议你在新代码中尝试使用Hook。\n\n### 我的现有React知识中有多少能保持相关性？\n\nHooks给你提供了一种更加直接使用React相关功能——例如状态，生命周期，上下文和引用的方式。但它们并没有从根本上改变React的工作方式，因此你对组件，Props和自上而下数据流的了解也同样重要。\n\nHooks确实有自己的学习曲线。如果本文档中缺少某些内容，请[提出issue](https://github.com/reactjs/reactjs.org/issues/new)，我们会尽力提供帮助。\n\n### 我应该使用Hooks，Class还是两者兼而有之？\n\n当你准备好了，我们鼓励你开始尝试在你新组件中使用Hooks。请确保团队中的每个人都使用它们并熟悉本文档。我们不建议将现有Class重写为Hooks，除非你计划重写它们（例如修复bugs）。\n\n你不能在类组件*中*使用Hooks ，但你绝对可以在一棵组件树中将Class组件和使用Hooks的函数组件混合在一起。无论一个组件是Class还是使用Hook的函数，这只是该组件的实现细节。**当然从长远来看，我们希望Hooks成为人们编写React组件的主要方式。**\n\n### Hooks涵盖了Class的所有用例吗？\n\n我们的目标是让Hooks尽快涵盖Class的所有用例。对于不常见`getSnapshotBeforeUpdate`和`componentDidCatch`生命周期目前还没有对应的Hook，但我们计划会很快添加上。\n\n对于Hook来说，现在还是一个非常早的时期，因此一些方面的集成（如DevTools支持，或Flow/TypeScript类型）可能还没有准备好。某些第三方库也可能与Hook不兼容。\n\n### Hooks会替换render props和高阶组件吗？\n\n通常，render props和高阶组件只渲染一个children。我们认为使用Hooks实现这种用例将会更加简单。就目前而言，这两种模式仍然有其立足之地（例如，虚拟滚动组件可能具有`renderItem`prop，或者可视容器组件可能具有其自己的DOM结构）。但在大多数情况下，使用Hooks就足够了，它可以帮助你减少组件树中的嵌套。\n\n### Hook对流行框架的API来说意味着什么（Redux的`connect()`和React Router等）？\n\n首先，你还可以继续像以往一样使用这些API，没有任何影响。（毕竟函数组件和Class组件本质上没太多区别）\n\n其次，这些库的新版本也可能导出自定义Hook，例如，`useRedux()`或者`useRouter()`允许你使用相同的功能而不需要包装器组件。\n\n###  Hooks可以使用静态类型吗？\n\nHooks的设计考虑了静态类型。因为它们是函数，所以它们比高阶组件之类的模式更容易正确键入。我们已提前与Flow和TypeScript团队联系，他们计划在未来包含React Hooks的定义。\n\n重要的是，如果你想以某种方式更严格地键入React API，则可以考虑使用自定义Hook，它可以让你有权限制React API。React为你提供了原语，但你可以采用与我们提供的开箱即用方式所不同的方式将它们组合在一起。\n\n### 如何测试使用Hooks的组件？\n\n从React的角度来看，使用Hooks的组件也只是一个普通的组件。如果你的测试解决方案不依赖于React内部，则测试使用了Hooks的组件应与你正常测试组件的方式相同。\n\n如果你需要测试自定义Hook，可以通过在测试中创建一个组件并使用自定义Hook来实现。然后，你就可以测试你所编写的组件。\n\n### [lint规则](https://www.npmjs.com/package/eslint-plugin-react-hooks)究竟强制执行了什么？\n\n我们提供了一个[ESLint插件](https://www.npmjs.com/package/eslint-plugin-react-hooks)，它强制执行[Hooks规则](https://react.docschina.org/docs/hooks-rules.html)以避免错误。它假设任何以“ `use`” 开头的函数和紧跟在它之后的大写字母是一个Hook。我们认识到这种启发式方法并不完美，可能存在一些误报，但如果没有整个生态系统的约定，就没有办法让Hooks良好的运作 —— 更长的名字会阻止人们采用Hooks或遵循其惯例。\n\n特别是，该规则强制执行：\n\n- 对Hooks的调用要么在*Pascal*命名法（PascalCase）的函数内部（假设是一个组件），要么是另一个`useSomething`函数（假定为自定义Hook）。\n- 在每个渲染上以相同的顺序调用Hook。\n\n还有一些启发式方法，它们可能会随着时间的推移而改变，因为我们会对规则进行微调以寻求在发现错误和避免误报之间的平衡。\n\n## 从 Classes 过渡到 Hooks\n\n### Class中的生命周期与Hook的对应情况\n\n- `constructor`：函数组件不需要构造函数。你可以通过调用[`useState`](https://react.docschina.org/docs/hooks-reference.html#usestate)进行初始化。如果计算成本很高，你可以传递一个函数给`useState`。\n- `getDerivedStateFromProps`：改为[在渲染时](https://react.docschina.org/docs/hooks-faq.html#how-do-i-implement-getderivedstatefromprops)安排更新。\n- `shouldComponentUpdate`：通过 `React.memo` ，[下文](https://react.docschina.org/docs/hooks-faq.html#how-do-i-implement-shouldcomponentupdate)会介绍\n- `render`:就是函数本身。\n- `componentDidMount`，`componentDidUpdate`，`componentWillUnmount`：[`useEffect` Hook](https://react.docschina.org/docs/hooks-reference.html#useeffect)可表示所有这些组合（包括[不怎么常见](https://react.docschina.org/docs/hooks-faq.html#can-i-skip-an-effect-on-updates) 、[常见](https://react.docschina.org/docs/hooks-faq.html#can-i-run-an-effect-only-on-updates)用例）。\n- `componentDidCatch` and `getDerivedStateFromError`: 暂无，后续会加上。\n\n### 是否有类似实例变量的东西？\n\n有的! [`useRef()`](https://react.docschina.org/docs/hooks-reference.html#useref)Hook不只是可以用在DOM上。“ref”对象实际上是一个通用容器，其`current`属性是可变的，可以保存任何值，类似于类上的实例属性。\n\n你可以从`useEffect`从修改它：\n\n```js{2,8}\nfunction Timer() {\n  const intervalRef = useRef();\n\n  useEffect(() => {\n    const id = setInterval(() => {\n      // ...\n    });\n    intervalRef.current = id;\n    return () => {\n      clearInterval(intervalRef.current);\n    };\n  });\n\n  // ...\n}\n```\n\n如果我们只是想设置一个间隔，我们就不需要ref（`id`可以作为effect的local变量），但如果我们想从事件处理程序中清除间隔，它会很有用：\n\n```js{3}\n  // ...\n  function handleCancelClick() {\n    clearInterval(intervalRef.current);\n  }\n  // ...\n```\n\n从概念上讲，你可以将refs视为类中的实例变量。但是，请避免在渲染过程中设置引用 —— 这可能会导致出乎意料的行为。相反，你应该只在事件处理程序和Effect中的修改引用。\n\n### 我应该使用一个还是多个状态变量？\n\n如果你来自Class模式，你可能总是想要在`useState()`一次调用的时就候将所有状态放入一个对象中。如果你愿意，你可以这样做。以下是鼠标移动后的组件示例。我们在local保持其position和size：\n\n```js\nfunction Box() {\n  const [state, setState] = useState({ left: 0, top: 0, width: 100, height: 100 });\n  // ...\n}\n```\n\n现在我们想写当用户移动鼠标的的时候，改变`left`以及`top`的逻辑。请注意，我们必须**手动**将这些字段合并到以前的状态对象中：\n\n```js{4,5}\n  // ...\n  useEffect(() => {\n    function handleWindowMouseMove(e) {\n      // Spreading \"...state\" ensures we don't \"lose\" width and height\n      setState(state => ({ ...state, left: e.pageX, top: e.pageY }));\n    }\n    // Note: this implementation is a bit simplified\n    window.addEventListener('mousemove', handleWindowMouseMove);\n    return () => window.removeEventListener('mousemove', handleWindowMouseMove);\n  }, []);\n  // ...\n```\n\n这是因为当我们更新状态变量时，我们会*替换*它的值。这是不同于`this.setState`的一点，它会自动*合并*了更新的字段到对象。\n\n如果你怀念自动合并的方式，则可以编写自动合并对象状态更新的自定义Hook`useLegacyState`。但是，**我们建议根据哪些值趋于一同更改将状态拆分为多个状态变量。**\n\n例如，我们可以将组件状态拆分为`position`和`size`对象，并始终替换`position`而不需要合并\n\n```js{2,7}\nfunction Box() {\n  const [position, setPosition] = useState({ left: 0, top: 0 });\n  const [size, setSize] = useState({ width: 100, height: 100 });\n\n  useEffect(() => {\n    function handleWindowMouseMove(e) {\n      setPosition({ left: e.pageX, top: e.pageY });\n    }\n    // ...\n```\n\n分离独立的状态变量也有另一个好处。稍后可以轻松地将一些相关逻辑提取到自定义Hook中，例如：\n\n```js{2,7}\nfunction Box() {\n  const position = useWindowPosition();\n  const [size, setSize] = useState({ width: 100, height: 100 });\n  // ...\n}\n\nfunction useWindowPosition() {\n  const [position, setPosition] = useState({ left: 0, top: 0 });\n  useEffect(() => {\n    // ...\n  }, []);\n  return position;\n}\n```\n\n请注意我们如何在不更改代码的情况下，将与`position`状态变量相关的`useStateh`和Effect移动到自定义Hook中。如果所有状态都在单个对象中，提取它们将更加困难。\n\n将所有状态都放在一次`useState`调用中，亦或是将每个字段都使用一次`useState`调用，这两种方式都行的通。当你能在这两个极端之间找到平衡，将组相关状态分组为几个独立的状态变量时，组件往往最具可读性。如果状态逻辑变得复杂，我们建议[用reducer的方式](https://react.docschina.org/docs/hooks-reference.html#usereducer)或自定义Hook 管理它。\n\n### 我可以仅在更新时运行Effect吗？\n\n这是一个罕见的用例。如果需要，可以[使用手动操作ref](https://react.docschina.org/docs/hooks-faq.html#is-there-something-like-instance-variables)的方式，手动存储一个布尔值，该值对应于你是第一次还是后续渲染做判断，然后在Effect中检查该标志。（如果你发现自己经常这样做，可以为它创建一个自定义Hook。）\n\n### 如何获得以前的props或state？\n\n目前，你可以[使用ref](https://react.docschina.org/docs/hooks-faq.html#is-there-something-like-instance-variables)手动执行此操作：\n\n```js{6,8}\nfunction Counter() {\n  const [count, setCount] = useState(0);\n\n  const prevCountRef = useRef();\n  useEffect(() => {\n    prevCountRef.current = count;\n  });\n  const prevCount = prevCountRef.current;\n\n  return <h1>Now: {count}, before: {prevCount}</h1>;\n}\n```\n\n这可能有点复杂，但你可以将其提取到自定义Hook中：\n\n```js{3,7}\nfunction Counter() {\n  const [count, setCount] = useState(0);\n  const prevCount = usePrevious(count);\n  return <h1>Now: {count}, before: {prevCount}</h1>;\n}\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n```\n\n注意这种方式如何用在props，state或任何其他计算值。\n\n```js{5}\nfunction Counter() {\n  const [count, setCount] = useState(0);\n\n  const calculation = count * 100;\n  const prevCalculation = usePrevious(calculation);\n  // ...\n```\n\n未来React可能会提供`usePrevious`开箱即用的Hook，因为它是一个相对常见的用例。\n\n另请参见[派生状态的推荐模式](https://react.docschina.org/docs/hooks-faq.html#how-do-i-implement-getderivedstatefromprops)。\n\n### 我该如何实现`getDerivedStateFromProps`？\n\n虽然你可能[不需要它](https://react.docschina.org/blog/2018/06/07/you-probably-dont-need-derived-state.html)，但在极少数情况下（例如实现`<Transition>`组件），你可以在渲染期间更新状态。在退出第一个渲染后，React将立即重新运行具有更新状态的组件，因此它不会很昂贵。\n\n在这里，我们将`row`prop 的先前值存储在状态变量中，以便我们可以比较：\n\n```js\nfunction ScrollView({row}) {\n  let [isScrollingDown, setIsScrollingDown] = useState(false);\n  let [prevRow, setPrevRow] = useState(null);\n\n  if (row !== prevRow) {\n    // Row changed since last render. Update isScrollingDown.\n    setIsScrollingDown(prevRow !== null && row > prevRow);\n    setPrevRow(row);\n  }\n\n  return `Scrolling down: ${isScrollingDown}`;\n}\n```\n\n这看起来可能很奇怪，但其渲染过程中的更新过程正是与`getDerivedStateFromProps`在概念上一致的。\n\n### 我可以对函数组件进行引用吗？\n\n虽然你不应需要经常这样做，但你可以通过使用[`useImperativeMethods`](https://react.docschina.org/docs/hooks-reference.html#useimperativemethods)Hook 向父组件暴露一些命令性方法。\n\n### `const [thing, setThing] = useState()`是什么意思？\n\n如果你不熟悉这个语法，可以查看State Hook文档中的这个[解释](https://react.docschina.org/docs/hooks-state.html#tip-what-do-square-brackets-mean)。\n\n## 性能优化\n\n### 我可以在更新的时候跳过一个effect吗？\n\n是。请参阅[有条件地触发Effect](https://react.docschina.org/docs/hooks-reference.html#conditionally-firing-an-effect)。请注意，忘记处理更新通常会[引入错误](https://react.docschina.org/docs/hooks-effect.html#explanation-why-effects-run-on-each-update)，这就是为什么这不是一个默认行为。\n\n### 我该如何实现`shouldComponentUpdate`？\n\n你可以用`React.memo`包装一个函数组件，进而来浅显比较它的props：\n\n```js\nconst Button = React.memo((props) => {\n  // your component\n});\n```\n\n它不是一个Hook，因为它不像Hooks那样构成。`React.memo`相当于`PureComponent`，但它只比较props。（你还可以添加第二个参数来指定采用旧props和新props的自定义比较函数。如果它返回true，则跳过更新。）\n\n`React.memo`不比较状态，因为没有单个状态对象可以进行比较。但是你也可以让children变得纯粹(pure)，甚至可以[通过`useMemo`优化个别children](https://react.docschina.org/docs/hooks-faq.html#how-to-memoize-calculations)。\n\n### 如何记忆计算？\n\n[`useMemo`](https://react.docschina.org/docs/hooks-reference.html#usememo) Hook就可以让你在多次渲染的时候，缓存之前的计算结果\n\n```js\nconst memoizedValue = useMemo(() => computeExpensiveValue(a, b), [a, b]);\n```\n\n这段代码会调用`computeExpensiveValue(a, b)`。但是如果`[a, b]`自上一个值以来一直没有改变，则`useMemo`会跳过第二次调用它并简单地重用它返回的最后一个值。\n\n方便的是，它也允许你跳过重渲染一个代价昂贵的child：\n\n```js\nfunction Parent({ a, b }) {\n  // Only re-rendered if `a` changes:\n  const child1 = useMemo(() => <Child1 a={a} />, [a]);\n  // Only re-rendered if `b` changes:\n  const child2 = useMemo(() => <Child2 b={b} />, [b]);\n  return (\n    <>\n      {child1}\n      {child2}\n    </>\n  )\n}\n```\n\n**请注意，**这种方法在循环中不起作用，因为Hook调用[不能](https://react.docschina.org/docs/hooks-rules.html)放在循环中。但是你可以为列表项提取单独的组件，然后在那里调用`useMemo`。\n\n### 由于在渲染中创建函数，Hooks是否会变慢？\n\n答案是否定的，在现代浏览器中，除了极端情况之外，与类相比，使用闭包的原始性能并没有显着差异。\n\n此外，考虑到Hooks的设计在以下几个方面更有效：\n\n- Hooks避免了类所需的大量开销，例如在构造函数中创建类实例和绑定（binding）事件处理程序的成本。\n- **使用Hooks的惯用代码不需要深层组件树嵌套**，而这种嵌套在使用高阶组件，render props和Context的代码库中很常见。使用较小的组件树，React的工作量也会较少。\n\n传统上，React中内联函数的性能问题与每次渲染上传递新的回调会中断子组件中的`shouldComponentUpdate`优化有关。Hooks从三个方面解决了这个问题。\n\n- [`useCallback`](https://react.docschina.org/docs/hooks-reference.html#usecallback) Hook 可以让你在重渲染的时候依然保持对同一回调的引用，这样`shouldComponentUpdate`就能继续工作：\n\n```js{2}\n// Will not change unless `a` or `b` changes\nconst memoizedCallback = useCallback(() => {\n  doSomething(a, b);\n}, [a, b]);\n```\n\n* 当个别children更新时，通过使用[`useMemo`Hook](https://react.docschina.org/docs/hooks-faq.html#how-to-memoize-calculations)使得它更容易控制，同时也减少了对pure components的需求。\n* 最后，`useReducer`Hook减少了深度传递回调的需要，接下来会介绍。\n\n### 如何避免传递回调？\n\n我们发现大多数人不喜欢手动在组件树的每一层进行回调的传递。虽然它更明确，但它可能感觉做了很多“脏活累活（plumping）”。\n\n在大型组件树中，我们建议的另一种方法是通过从context的[`useReducer`](https://react.docschina.org/docs/hooks-reference.html#usereducer) Hook 中传递一个`dispatch`函数：\n\n```js{4,5}\nconst TodosDispatch = React.createContext(null);\n\nfunction TodosApp() {\n  // Tip: `dispatch` won't change between re-renders\n  const [todos, dispatch] = useReducer(todosReducer);\n\n  return (\n    <TodosDispatch.Provider value={dispatch}>\n      <DeepTree todos={todos} />\n    </TodosDispatch.Provider>\n  );\n}\n```\n\n`TodosApp`树里面的任何一个孩子都可以使用`dispatch`函数传递action到`TodosApp`：\n\n```js{2,3}\nfunction DeepChild(props) {\n  // If we want to perform an action, we can get dispatch from context.\n  const dispatch = useContext(TodosDispatch);\n\n  function handleClick() {\n    dispatch({ type: 'add', text: 'hello' });\n  }\n\n  return (\n    <button onClick={handleClick}>Add todo</button>\n  );\n}\n```\n\n从维护的角度来看这更方便（不需要保持转发回调），并且完全避免了回调问题。在深度更新`dispatch`像这样向下传递是深度更新的推荐模式。\n\n请注意，你仍然可以选择是将应用程序*状态*作为props（更明确）或是作为上下文传递（对于非常深的更新更方便）。如果你同时也使用上下文传递状态，请使用不同的上下文类型 —— `dispatch`的上下文永远不会更改，因此读取它的组件不需要重新渲染，除非它们还需要应用程序状态。\n\n### 如何从`useCallback`读取经常变化的值？\n\n>Also note that this pattern might cause problems in the [concurrent mode](/blog/2018/03/27/update-on-async-rendering.html). We plan to provide more ergonomic alternatives in the future, but the safest solution right now is to always invalidate the callback if some value it depends on changes.\n>\n>注意\n>\n>我们建议[从Context向下传递`dispatch`](https://react.docschina.org/docs/hooks-faq.html#how-to-avoid-passing-callbacks-down)而不是在props中传单个回调。下面的方法仅在此处提及只是为了完整性和预留逃生舱口（escape hatch）。\n>\n>另请注意，此模式可能会导致[并发模式](https://react.docschina.org/blog/2018/03/27/update-on-async-rendering.html)出现问题。我们计划在未来提供更符合人体工程学的替代方案，但现在最安全的解决方案是，如果某些值依赖于更改，则始终使回调无效。\n\n在极少数情况下，你可能需要使用[`useCallback`](https://react.docschina.org/docs/hooks-reference.html#usecallback)去memoize一个回调，但是因为内部函数必须经常重新创建，因此memoization不能很好地工作。如果你要记忆的函数是事件处理程序并且它在渲染期间并未使用，则可以使用[ref作为实例变量](https://react.docschina.org/docs/hooks-faq.html#is-there-something-like-instance-variables)，并将最后提交的值手动保存到其中：\n\n```js{6,10}\nfunction Form() {\n  const [text, updateText] = useState('');\n  const textRef = useRef();\n\n  useMutationEffect(() => {\n    textRef.current = text; // Write it to the ref\n  });\n\n  const handleSubmit = useCallback(() => {\n    const currentText = textRef.current; // Read it from the ref\n    alert(currentText);\n  }, [textRef]); // Don't recreate handleSubmit like [text] would do\n\n  return (\n    <>\n      <input value={text} onChange={e => updateText(e.target.value)} />\n      <ExpensiveTree onSubmit={handleSubmit} />\n    </>\n  );\n}\n```\n\n这是一个相当复杂的模式，它表明如果你需要的话你依然可以执行此逃逸舱口优化（escape hatch optimization）。当然，如果将其提取到自定义Hook就会更好点：\n\n```js{4,16}\nfunction Form() {\n  const [text, updateText] = useState('');\n  // Will be memoized even if `text` changes:\n  const handleSubmit = useEventCallback(() => {\n    alert(text);\n  }, [text]);\n\n  return (\n    <>\n      <input value={text} onChange={e => updateText(e.target.value)} />\n      <ExpensiveTree onSubmit={handleSubmit} />\n    </>\n  );\n}\n\nfunction useEventCallback(fn, dependencies) {\n  const ref = useRef(() => {\n    throw new Error('Cannot call an event handler while rendering.');\n  });\n\n  useMutationEffect(() => {\n    ref.current = fn;\n  }, [fn, ...dependencies]);\n\n  return useCallback(() => {\n    const fn = ref.current;\n    return fn();\n  }, [ref]);\n}\n```\n\n在任何一种情况下，我们**都不建议使用此模式**，仅在此处显示完整性。相反，你最好[避免向深处传递回调](https://react.docschina.org/docs/hooks-faq.html#how-to-avoid-passing-callbacks-down)。\n\n## 底层实现（Under the Hood）\n\n### React如何将Hook调用与组件相关联？\n\nReact跟踪当前渲染组件。由于[Hooks规则](https://react.docschina.org/docs/hooks-rules.html)，我们知道Hook只能从React组件（或自定义Hooks调用 ——它们也只能从React组件中调用）。\n\n每个组件都有一个与之相关联的“存储器单元（memory cells）”的内部列表（list）。它们只是一些可以放置一些数据的JavaScript对象。当你调用Hook时`useState()`，它会读取当前单元格（或在第一次渲染期间初始化它），然后将指针移动到下一个单元格。这就是多个`useState()`调用各自获得独立本地状态的方式。可以[参考](https://medium.com/@ryardley/react-hooks-not-magic-just-arrays-cd4f1857236e)\n\n### Hooks的现有技术是什么？\n\nHooks综合了几个不同来源的想法：\n\n- 我们旧的实验性的功能API在[react-future](https://github.com/reactjs/react-future/tree/master/07%20-%20Returning%20State)仓库中。\n- 与render props API 相关的React社区的实验，包括[Ryan Florence](https://github.com/ryanflorence)的[Reactions Component](https://github.com/reactions/component)。\n- [Dominic Gannaway](https://github.com/trueadm)提出了一个render props糖语法的[`adopt`关键字](https://gist.github.com/trueadm/17beb64288e30192f3aa29cad0218067)提案。\n- [DisplayScript中的](http://displayscript.org/introduction.html)状态变量和状态单元（ state cells ）。\n- ReasonReact中的[Reducer组件](https://reasonml.github.io/reason-react/docs/en/state-actions-reducer.html)。\n- Rx中的[Subscriptions](http://reactivex.io/rxjs/class/es6/Subscription.js~Subscription.html)。\n- 多核OCaml中的[代数效应(Algebraic effects)](https://github.com/ocamllabs/ocaml-effects-tutorial#2-effectful-computations-in-a-pure-setting)。\n\n[SebastianMarkbåge](https://github.com/sebmarkbage)提出了Hooks的原创设计，后来由[Andrew Clark](https://github.com/acdlite)，[Sophie Alpert](https://github.com/sophiebits)，[Dominic Gannaway](https://github.com/trueadm)以及React团队的其他成员完善。\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "62638d4370441d26176d7b01b76dc216",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Hooks FAQ",
        "id": "hooks-faq",
        "permalink": "docs/hooks-faq.html",
        "prev": "hooks-reference.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/hooks-faq.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/hooks-faq.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/hooks-faq.md",
      "fields": {
        "slug": "docs/hooks-faq.html",
        "path": "docs/hooks-faq.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/reference-react-component.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/reference-react-component.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/reference-react-component.md absPath of file",
      "internal": {
        "content": "---\nid: react-component\ntitle: React.Component\nlayout: docs\ncategory: Reference\npermalink: docs/react-component.html\nredirect_from:\n  - \"docs/component-api.html\"\n  - \"docs/component-specs.html\"\n  - \"docs/component-specs-ko-KR.html\"\n  - \"docs/component-specs-zh-CN.html\"\n  - \"tips/UNSAFE_componentWillReceiveProps-not-triggered-after-mounting.html\"\n  - \"tips/dom-event-listeners.html\"\n  - \"tips/initial-ajax.html\"\n  - \"tips/use-react-with-other-libraries.html\"\n---\n\n本页面包含详细的React组件类定义的API引用。假定你熟悉基本React概念，such as [Components and Props](/docs/components-and-props.html), as well as [State and Lifecycle](/docs/state-and-lifecycle.html). If you're not, read them first.\n\n## 概览\n\n定义React组件可以以类或者函数的方式。定义为类的组件目前提供更多特征，这一页将详细描述这些特征。为定义一个React组件类，你需要继承`React.Component`：\n\n```js\nclass Welcome extends React.Component {\n  render() {\n    return <h1>Hello, {this.props.name}</h1>;\n  }\n}\n```\n\n在`React.Component`子类中，你*必须*定义的唯一方法被叫做[`render()`](#render)。在本页面描述的所有其他方法都是可选的。\n\n**我们强烈反对你自己创建组件的基类。** In React components, [代码重用主要通过组合而非继承达成](/docs/composition-vs-inheritance.html)。\n\n> 注意：\n>\n>React doesn't force you to use the ES6 class syntax. If you prefer to avoid it, you may use the `create-react-class` module or a similar custom abstraction instead. Take a look at [Using React without ES6](/docs/react-without-es6.html) to learn more.\n\n### 组件生命周期\n\n每一个组件都有几个“生命周期方法”，你可以重写(override)他们，以在进程中的特定时期运行代码。**You can use [this lifecycle diagram](http://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/) as a cheat sheet.** In the list below, commonly used lifecycle methods are marked as **bold**. The rest of them exist for relatively rare use cases.\n\n#### 装载\n\n这些方法会按照下列顺序，在组件实例被创建并插入DOM中时被调用：\n\n- [**`constructor()`**](#constructor)\n- [`static getDerivedStateFromProps()`](#static-getderivedstatefromprops)\n- [**`render()`**](#render)\n- [**`componentDidMount()`**](#componentdidmount)\n\n>Note:\n>\n>这些代码是遗留的，你应该 [避免他们](/blog/2018/03/27/update-on-async-rendering.html) 被用在新代码中：\n>\n>- [`UNSAFE_componentWillMount()`](#unsafe_componentwillmount)\n\n#### 更新\n\n一次更新是由改变属性或状态引起的。当一个组件在被重新渲染时，这些方法将按照下列顺序被调用：\n\n- [`static getDerivedStateFromProps()`](#static-getderivedstatefromprops)\n- [`shouldComponentUpdate()`](#shouldcomponentupdate)\n- [**`render()`**](#render)\n- [`getSnapshotBeforeUpdate()`](#getsnapshotbeforeupdate)\n- [**`componentDidUpdate()`**](#componentdidupdate)\n\n>Note:\n>\n>这些代码是遗留的， and you should [avoid them](/blog/2018/03/27/update-on-async-rendering.html) in new code:\n>\n>- [`UNSAFE_componentWillUpdate()`](#unsafe_componentwillupdate)\n>- [`UNSAFE_componentWillReceiveProps()`](#unsafe_componentwillreceiveprops)\n\n#### 卸载\n\n当一个组件被从DOM中移除时，该方法被调用：\n\n- [`componentWillUnmount()`](#componentwillunmount)\n\n#### 错误处理\n\n当任何一个子组件在渲染过程中、在一个生命周期方法中、或在构造函数中发生错误时，这些方法会被调用。\n\n- [`static getDerivedStateFromError()`](#static-getderivedstatefromerror)\n- [`componentDidCatch()`](#componentdidcatch)\n\n### 其他API\n\n每一个组件还提供了其他的API：\n\n  - [`setState()`](#setstate)\n  - [`forceUpdate()`](#forceupdate)\n\n### 类属性\n\n  - [`defaultProps`](#defaultprops)\n  - [`displayName`](#displayname)\n\n### 实例属性\n\n  - [`props`](#props)\n  - [`state`](#state)\n\n* * *\n\n## 参考\n\n### 普遍被使用的生命周期方法\n\nThe methods in this section cover the vast majority of use cases you'll encounter creating React components. **For a visual reference, check out [this lifecycle diagram](http://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/).**\n\n### `render()`\n\n```javascript\nrender()\n```\n\n`render()`方法是类组件唯一必须的方法。\n\n当被调用时，其应该检查`this.props` 和 `this.state`并返回以下类型之一：\n\n- **React元素。**通常是由 [JSX](/docs/introducing-jsx.html) 创建。例如，`<div />` 和 `<MyComponent />` 是 React 元素，指示 React 渲染一个 DOM 节点，或是另一个用户定义的组件，各自分别地。 \n- **数组和fragments。**让你从渲染中返回多个元素。See the documentation on [fragments](/docs/fragments.html) for more details.\n- **Portals。**让你渲染孩子们到一个不同的DOM子树。See the documentation on [portals](/docs/portals.html) for more details.\n- **字符串和数字。**这些将被渲染为 DOM 中的文本节点。\n- **布尔或`null`。**什么都不渲染。（通常存在于 `return test && <Child />`模式，其中 `test` 是布尔值。）\n\n`render()`函数应该是纯的，意味着不应该改变组件的状态，其每次调用都应返回相同的结果，同时它不会直接和浏览器交互。\n\n若需要和浏览器交互，将任务放在`componentDidMount()`中或其他的生命周期方法中。保持`render()` 方法纯净使得组件更容易理解。\n\n> 注意\n>\n> 若 [`shouldComponentUpdate()`](#shouldcomponentupdate)返回false，`render()`函数将不会被调用。\n\n* * *\n\n### `constructor()`\n\n```javascript\nconstructor(props)\n```\n\n**如果你不初始化状态，也不绑定方法，那么你就不需要为React组件实现构造函数。**\n\nReact组件的构造函数将会在其装载之前被调用。当为一个`React.Component`子类定义构造函数时，你应该在任何其他的表达式之前调用`super(props)`。否则，`this.props`在构造函数中将是未定义的，这会导致臭虫。\n\n典型地, 在 React 中构造函数只用于两个目的：\n\n* 初始化[局部状态](/docs/state-and-lifecycle.html)，通过赋值一个对象到`this.state`。\n* 绑定[事件处理器](/docs/handling-events.html)方法到一个实例。\n\n在 `constructor()`中，你**不能调用 `setState()`** 。正确做法是，如果你的组件需要使用局部状态， 直接在构造函数中**将初始状态赋值给`this.state`**：\n\n```js\nconstructor(props) {\n  super(props);\n  // Don't call this.setState() here!\n  this.state = { counter: 0 };\n  this.handleClick = this.handleClick.bind(this);\n}\n```\n\n构造函数是你唯一可以直接赋值`this.state`的地方。在其他所有方法中，你需要使用`this.setState()`来代替。\n\n避免引入任何副作用或者是订阅到构造函数中。对于这些用例，使用`componentDidMount()`来代替。\n\n> 注意\n>\n> **避免拷贝属性(props)到状态！This is a common mistake:**\n>\n>```js\n>constructor(props) {\n>  super(props);\n>  // Don't do this!\n>  this.state = { color: props.color };\n>}\n>```\n>\n>这里的问题，一是不必要的(你可以直接使用 `this.props.color` 来代替)，二是创造臭虫 (更新属性 `color` 不会反映到状态中)。\n>\n>**此模式仅用于你希望故意忽略属性更新 。** 在此情况下， 比较合理的是重命名属性被叫作 `initialColor` 或是 `defaultColor`。然后你可以暴力地使组件“重置”它的初始状态 。通过[改变它的键`key`](/blog/2018/06/07/you-probably-dont-need-derived-state.html#recommendation-fully-uncontrolled-component-with-a-key)当必要时。\n>\n>Read our [blog post on avoiding derived state](/blog/2018/06/07/you-probably-dont-need-derived-state.html) to learn about what to do if you think you need 一些依赖属性的状态。\n\n* * *\n\n### `componentDidMount()`\n\n```javascript\ncomponentDidMount()\n```\n\n`componentDidMount()`紧跟在组件装载后（被插入树中）调用。要求的DOM节点初始化应该放到这里。若你需要从远端加载数据，这是一个适合实例化网络请求的好地方。\n\n这个方法是建立任何订阅的一个好地方。如果你那么做了，别忘了在`componentWillUnmount()`取消订阅。\n\n在`componentDidMount()`中，你 **可以立即调用`setState()`**。它将会触发一次额外的渲染，但是它将在浏览器刷新屏幕之前发生。这保证了在此情况下即使`render()`将会调用两次，用户也不会看到中间状态。谨慎使用这一模式，因为它常导致性能问题。在大多数情况下，你可以 在`constructor()`中使用赋值初始状态来代替。然而，有些情况下必须这样，比如像模态框和工具提示框。这时，你需要先测量这些DOM节点，才能渲染依赖尺寸或者位置的某些东西。\n\n* * *\n\n### `componentDidUpdate()`\n\n```javascript\ncomponentDidUpdate(prevProps, prevState, snapshot)\n```\n\n`componentDidUpdate()`紧跟在更新发生后调用。对于初次的渲染，该方法并不会调用。\n\n当组件被更新之后，使用此方法作为操作DOM的一次机会。这也是一个适合发送请求的地方，只要你对比了当前属性和前一次属性（例如，如果属性没有改变那么请求也就没必要了）。\n\n```js\ncomponentDidUpdate(prevProps) {\n  // Typical usage (don't forget to compare props):\n  if (this.props.userID !== prevProps.userID) {\n    this.fetchData(this.props.userID);\n  }\n}\n```\n\n在`componentDidUpdate()`中，你 **可以立即调用`setState()`**。 但是要注意 **必须把它包裹在一个条件中** 就像前面的例子中那样。否则你将引发一个无限循环。也会引发额外的重新渲染，此时对于用户不可见，会影响组件的性能。如果你想“如实镜像”一些状态到上面来的属性中，考虑直接使用属性来代替。Read more about [why copying props into state causes bugs](/blog/2018/06/07/you-probably-dont-need-derived-state.html).\n\n如果你的组件实现了 `getSnapshotBeforeUpdate()` 生命周期 (很罕见)，它的返回值将当作一个第三方快照参数被传递到 `componentDidUpdate()`。否则这个参数将是未定义undefined。\n\n> 注意\n>\n> 若[`shouldComponentUpdate()`](#shouldcomponentupdate)返回false，`componentDidUpdate()`将不会被调用。\n\n* * *\n\n### `componentWillUnmount()`\n\n```javascript\ncomponentWillUnmount()\n```\n\n`componentWillUnmount()`紧挨着在组件被卸载和销毁之前调用。可以在该方法里处理任何必要的清理工作，例如解绑定时器，取消网络请求，清理任何在`componentDidMount`环节创建的订阅。\n\n你 **不应该调用 `setState()`** 在 `componentWillUnmount()` 中，因为组件将永远不会被重新渲染了。一旦一个组件实例被卸载，它将永远不会再次装载。\n\n* * *\n\n### 很少使用的生命周期方法\n\nThe methods in this section correspond to uncommon use cases. They're handy once in a while, but most of your components probably don't need any of them. **You can see most of the methods below on [this lifecycle diagram](http://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/) if you click the \"Show less common lifecycles\" checkbox at the top of it.**\n\n\n### `shouldComponentUpdate()`\n\n```javascript\nshouldComponentUpdate(nextProps, nextState)\n```\n\n使用`shouldComponentUpdate()`以让React知道是否组件的输出不受当前状态或属性影响。默认行为是在每一次状态的改变重新渲染，在大部分情况下你应该依赖于默认行为。\n\n当接收到新属性或状态时，`shouldComponentUpdate()` 在渲染前被调用。默认为`true`。该方法在初始化渲染或当使用`forceUpdate()`时并不会被调用。\n\n这个方法的存在是作为一种**[性能优化](/docs/optimizing-performance.html)。** 不要依赖它去阻止一次渲染，因为这会导致臭虫。**考虑使用内建的 [`PureComponent`](/docs/react-api.html#reactpurecomponent)** 代替手写`shouldComponentUpdate()`。`PureComponent` 对属性和状态执行浅比较，因而降低你略过必要更新的机会。\n\n若你确信想要手写，你可能需要用`this.props`和`nextProps`以及`this.state` 和 `nextState`比较，并返回`false`以告诉React更新可以被忽略。注意，返回`false`不能阻止子组件当*他们的*状态改变时重新渲染。\n\n我们不推荐做深相等检测，或使用`JSON.stringify()`在`shouldComponentUpdate()`中。这是非常无效率的会伤害性能。\n\n当前，如果`shouldComponentUpdate()`返回`false`，那么[`UNSAFE_componentWillUpdate()`](#componentwillupdate)，[`render()`](#render)， 和 [`componentDidUpdate()`](#componentdidupdate)将不会被调用。注意，在未来React可能会将`shouldComponentUpdate()`作为一个线索而不是一个严格指令，返回`false`可能仍然使得组件重新渲染。\n\n* * *\n\n### `static getDerivedStateFromProps()`\n\n```js\nstatic getDerivedStateFromProps(nextProps, prevState)\n```\n\n组件实例化后和接受新属性时将会调用`getDerivedStateFromProps`。它应该返回一个对象来更新状态，或者返回null来表明新属性不需要更新任何状态。\n\n注意，如果父组件导致了组件的重新渲染，即使属性没有更新，这一方法也会被调用。如果你只想处理变化，你可能想去比较新旧值。\n\n调用`this.setState()` 通常不会触发 `getDerivedStateFromProps()`。\n\n* * *\n\n### `getSnapshotBeforeUpdate()`\n\n`getSnapshotBeforeUpdate()`在最新的渲染输出提交给DOM前将会立即调用。它让你的组件能在当前的值可能要改变前获得它们。这一生命周期返回的任何值将会\n作为参数被传递给`componentDidUpdate()`。\n\n例如：\n\n`embed:react-component-reference/get-snapshot-before-update.js`\n\n在上面的例子中，为了支持异步渲染，在`getSnapshotBeforeUpdate` 中读取`scrollHeight`而不是`componentWillUpdate`，这点很重要。由于异步渲染，在“渲染”时期（如`componentWillUpdate`和`render`）和“提交”时期（如`getSnapshotBeforeUpdate`和`componentDidUpdate`）间可能会存在延迟。如果一个用户在这期间做了像改变浏览器尺寸的事，从`componentWillUpdate`中读出的`scrollHeight`值将是滞后的。\n\n* * *\n\n### 错误边界\n\n[错误边界](/docs/error-boundaries.html)是一种React组件，能够捕捉在他们的子组件树中任意地方的JavaScript错误，记录这些错误，并且显示一个退路UI，而不是让组件树崩溃。错误边界捕捉的错误，位于其之下的整棵树中的在渲染期间、在生命周期方法中、和在构造函数中。\n\n如果一个类组件定义了生命周期方法`static getDerivedStateFromError()`或`componentDidCatch()`的任何一个或两个，将变成一个错误边界。从这些生命周期中更新状态让你能捕捉到在其之下的树中、未处理的JavaScript错误，并显示退路UI。\n\n只使用错误边界来恢复意外的异常；**不要尝试将它们用于控制流。**\n\n详情请见[*React 16中的错误处理*](/blog/2017/07/26/error-handling-in-react-16.html)。\n\n> 注意\n> \n> 错误边界捕捉的错误只能是在树中**低于**它们的组件里。一个错误边界并不能捕捉它自己内部的错误。\n\n* * *\n\n### `static getDerivedStateFromError()`\n\n```javascript\nstatic getDerivedStateFromError(error)\n```\n\n这个生命周期被调用是在某个后代组件已经抛出一个错误之后。\n\n它的一个参数接收被抛出的错误，并应该返回一个值去更新状态。\n\n```js{7-10,13-16}\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n\n    return this.props.children; \n  }\n}\n```\n\n> 注意\n>\n> `getDerivedStateFromError()` 被调用是在 \"渲染\" 阶段，所以不允许副作用。\n对于这些用例，使用`componentDidCatch()` 来代替。\n\n* * *\n\n### `componentDidCatch()`\n\n```javascript\ncomponentDidCatch(error, info)\n```\n\n这个生命周期被调用是在某个后代组件已经抛出一个错误之后。\n\n它收到两个参数：\n\n1. `error`——被扔出的错误。\n2. `info`——一个对象，带有一个`componentStack`键，详见[information about which component threw the error](/docs/error-boundaries.html#component-stack-traces)。\n\n`componentDidCatch()`被调用是在\"提交\"期间阶段，所以允许副作用。\n\n它应该用于的事情比如记录错误等：\n\n```js{12-19}\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, info) {\n    // Example \"componentStack\":\n    //   in ComponentThatThrows (created by App)\n    //   in ErrorBoundary (created by App)\n    //   in div (created by App)\n    //   in App\n    logComponentStackToMyService(info.componentStack);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n\n    return this.props.children; \n  }\n}\n```\n\n> 注意\n> \n> In the event of an error, you can render a fallback UI with `componentDidCatch()` by calling `setState`, 但是这将在未来的版本中被废弃。\n> 使用`static getDerivedStateFromError()`处理退路渲染来代替。\n\n* * *\n\n### Legacy Lifecycle Methods\n\nThe lifecycle methods below are marked as \"legacy\". They still work, but we don't recommend using them in the new code. You can learn more about migrating away from legacy lifecycle methods in [this blog post](/blog/2018/03/27/update-on-async-rendering.html).\n\n\n### `UNSAFE_componentWillMount()`\n\n```javascript\nUNSAFE_componentWillMount()\n```\n\n`UNSAFE_componentWillMount()`在装载发生前被立刻调用。其在`render()`之前被调用，因此在这方法里同步地设置状态将不会触发重新渲染。\n\n避免在该方法中引入任何的副作用或订阅。对于这些使用场景，我们推荐使用`constructor()`来替代。\n\n这是唯一的会在服务端渲染调起的生命周期钩子函数。\n\n> 注意\n>\n> 这一生命周期之前叫做`componentWillMount`。这一名字在17版前都有效。可以使用[`rename-unsafe-lifecycles` codemod](https://github.com/reactjs/react-codemod#rename-unsafe-lifecycles)来自动更新你的组件。\n\n* * *\n\n### `UNSAFE_componentWillReceiveProps()`\n\n```javascript\nUNSAFE_componentWillReceiveProps(nextProps)\n```\n\n> 注意\n>\n> 推荐你使用[`getDerivedStateFromProps`](#static-getderivedstatefromprops)生命周期而不是`UNSAFE_componentWillReceiveProps`。[关于此建议在此了解详情。](/blog/2018/03/29/react-v-16-3.html#component-lifecycle-changes)\n\n`UNSAFE_componentWillReceiveProps()`在装载了的组件接收到新属性前调用。若你需要更新状态响应属性改变（例如，重置它），你可能需对比`this.props`和`nextProps`并在该方法中使用`this.setState()`处理状态改变。\n\n注意即使属性未有任何改变，React可能也会调用该方法，因此若你想要处理改变，请确保比较当前和之后的值。这可能会发生在当父组件引起你的组件重新渲染。\n\n在 [装载](#mounting)期间，React并不会调用带有初始属性的`UNSAFE_componentWillReceiveProps`方法。其仅会调用该方法如果某些组件的属性可能更新。调用`this.setState`通常不会触发`UNSAFE_componentWillReceiveProps`。\n\n> 注意\n>\n> 这一生命周期之前叫做`componentWillReceiveProps`。这一名字在17版前都有效。可以使用[`rename-unsafe-lifecycles` codemod](https://github.com/reactjs/react-codemod#rename-unsafe-lifecycles)来自动更新你的组件。\n\n* * *\n\n### `UNSAFE_componentWillUpdate()`\n\n```javascript\nUNSAFE_componentWillUpdate(nextProps, nextState)\n```\n\n当接收到新属性或状态时，`UNSAFE_componentWillUpdate()`为在渲染前被立即调用。在更新发生前，使用该方法是一次准备机会。该方法不会在初始化渲染时调用。\n\n注意你不能在这调用`this.setState()`，若你需要更新状态响应属性的调整，使用[`getDerivedStateFromProps()`](#static-getderivedstatefromprops) 代替。\n\n> 注意\n>\n> 这一生命周期之前叫做`componentWillUpdate`。这一名字在17版前都有效。可以使用[`rename-unsafe-lifecycles` codemod](https://github.com/reactjs/react-codemod#rename-unsafe-lifecycles)来自动更新你的组件。\n\n> 注意\n>\n> 若[`shouldComponentUpdate()`](#shouldcomponentupdate)返回false，`UNSAFE_componentWillUpdate()`将不会被调用。\n\n* * *\n\n## 其他API\n\n不同于上面的生命周期方法 (React 替你调用它)，下面的方法是*你*从你的组件中调用的方法。\n\n只有两个方法：`setState()` 和 `forceUpdate()`。\n\n### `setState()`\n\n```javascript\nsetState(updater, [callback])\n```\n\n`setState()`将对组件状态的改变排队，并告诉该组件及其子组件需要用已经更新的状态来重新渲染。这个方法主要是用来更新用户界面以响应事件处理和服务器响应。\n\n>（译者注：setState源码中将一个需要改变的变化存放到组件的state对象中，采用队列处理）\n\n将`setState()`认为是一次*请求*而不是一次立即执行的命令来更新组件。为了更为可观的性能，React可能会推迟它，稍后会一次性更新这些组件。React不能保证状态改变被应用是立刻地。\n\n`setState()`不总是立刻更新组件。其可能是成批处理或推迟更新。这使得在调用`setState()`后立刻读取`this.state`变成一个潜在陷阱。代替地，使用`componentDidUpdate`或一个`setState`回调（`setState(updater, callback)`），当中的每个方法都会保证在更新被应用之后触发。若你需要基于前一个状态来设置状态，阅读下面关于`updater`参数的介绍。\n\n`setState()`永远都会导致重新渲染，除非`shouldComponentUpdate()` 返回`false`。如果使用了可变对象，并且在`shouldComponentUpdate()`中没有实现渲染条件逻辑，那么只有当新状态不同于前一个状态时才调用`setState()`，将会避免不必要的重新渲染。\n\n第一个参数是一个`updater`函数，签名为：\n\n```javascript\n(state, props) => stateChange\n```\n\n`state`是一个引用，指向当改变正在被应用时的组件状态。它不应该被直接改变。代替地，应该构建一个来自于`state` 和 `props`输入的新对象来表示改变。例如，假设我们想通过`props.step`在状态中增量值：\n\n```javascript\nthis.setState((state, props) => {\n  return {counter: state.counter + props.step};\n});\n```\n\nupdater函数接收到的`state` 和 `props`保证都是最新的。updater的输出被浅合并到`state`中。\n\n`setState()`的第二个参数是一个可选的回调函数，其执行将是在一旦`setState`完成，并且组件被重新渲染之后。通常，对于这类逻辑，我们推荐使用`componentDidUpdate`。\n\n可选地，你可以传递一个对象作为 `setState()`的第一个参数代替一个函数：\n\n```javascript\nsetState(stateChange, [callback])\n```\n\n其执行一次`stateChange`的浅合并到新状态中。例如，欲调整购物车中物品数量：\n\n```javascript\nthis.setState({quantity: 2})\n```\n\n这一形式的`setState()`也是异步的，并在相同的周期中多次调用可能会被成批处理到一起。例如，若你在同一周期中尝试增加物品的数量多次，其等价于：\n\n```javaScript\nObject.assign(\n  previousState,\n  {quantity: state.quantity + 1},\n  {quantity: state.quantity + 1},\n  ...\n)\n```\n\n之后的调用在同一周期中将会重写之前调用的值，因此数量仅会被加一次。若下一状态依赖于当前状态，我们推荐使用updater函数形式来代替：\n\n```js\nthis.setState((state) => {\n  return {counter: state.quantity + 1};\n});\n```\n\n更多细节，查看：\n\n* [State and Lifecycle guide](/docs/state-and-lifecycle.html)\n* [In depth: When and why are `setState()` calls batched?](https://stackoverflow.com/a/48610973/458193)\n* [In depth: Why isn't `this.state` updated immediately?](https://github.com/facebook/react/issues/11527#issuecomment-360199710)\n\n* * *\n\n### `forceUpdate()`\n\n```javascript\ncomponent.forceUpdate(callback)\n```\n\n默认情况，当你的组件或状态发生改变，你的组件将会重新渲染。若你的`render()`方法依赖其他数据，你可以通过调用`forceUpdate()`来告诉React组件需要重新渲染。\n\n调用`forceUpdate()`将会导致组件的 `render()`方法被调用，并忽略`shouldComponentUpdate()`。这将会触发每一个子组件的生命周期方法，涵盖，每个子组件的`shouldComponentUpdate()` 方法。若当标签改变，React仅会更新DOM。\n\n通常你应该尝试避免所有`forceUpdate()` 的用法并仅在`render()`函数里从`this.props`和`this.state`读取数据。\n\n* * *\n\n## 类属性\n\n### `defaultProps`\n\n`defaultProps`可以被定义为在组件类本身上的一个属性，为该类设置默认属性。这对于未定义（undefined）的属性来说有用，而对于设为空（null）的属性并没用。例如：\n\n```js\nclass CustomButton extends React.Component {\n  // ...\n}\n\nCustomButton.defaultProps = {\n  color: 'blue'\n};\n```\n\n若未设置`props.color`，其将被设置默认为`'blue'`:\n\n```js\n  render() {\n    return <CustomButton /> ; // props.color will be set to blue\n  }\n```\n\n若`props.color`设为null，则保持为null：\n\n```js\n  render() {\n    return <CustomButton color={null} /> ; // props.color will remain null\n  }\n```\n\n* * *\n\n### `displayName`\n\n`displayName`字符串被用在调试信息中。Usually, you don't need to set it explicitly because it's inferred from the name of the function or class that defines the component. You might want to set it explicitly if you want to display a different name for debugging purposes or when you create a higher-order component, see [Wrap the Display Name for Easy Debugging](/docs/higher-order-components.html#convention-wrap-the-display-name-for-easy-debugging) for details.\n\n* * *\n\n## 实例属性\n\n### `props`\n\n`this.props`包含了这个组件调用者所定义的属性。查看[组件 & Props](/docs/components-and-props.html)关于属性的介绍。\n\n特别地，`this.props.children`是一个特别属性，其通常由JSX表达式中的子标签定义，而不是在标签本身中定义。\n\n### `state`\n\n状态包含的数据专用于这个组件，组件可能随时间而改变。状态是用户定义的，且其应为普通JavaScript对象。\n\n如果某些值不用于渲染或者数据流（例如，一个计时器ID），你不必将它放到状态中。诸如此类的值可以被定义为组件实例的字段。\n\n查看[State & 生命周期](/docs/state-and-lifecycle.html)了解更多关于状态的信息。\n\n永远不要直接改变`this.state`，因为后面对`setState()`的调用可能替换掉你所做的改变。将`this.state`当成是不可变的。\n",
        "type": "MarkdownRemark",
        "contentDigest": "88168766d33c41a72068153acaec7368",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React.Component",
        "id": "react-component",
        "layout": "docs",
        "category": "Reference",
        "permalink": "docs/react-component.html",
        "redirect_from": [
          "docs/component-api.html",
          "docs/component-specs.html",
          "docs/component-specs-ko-KR.html",
          "docs/component-specs-zh-CN.html",
          "tips/UNSAFE_componentWillReceiveProps-not-triggered-after-mounting.html",
          "tips/dom-event-listeners.html",
          "tips/initial-ajax.html",
          "tips/use-react-with-other-libraries.html"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/reference-react-component.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/reference-react-component.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/reference-react-component.md",
      "fields": {
        "slug": "docs/react-component.html",
        "path": "docs/reference-react-component.md",
        "redirect": "[\"docs/component-api.html\",\"docs/component-specs.html\",\"docs/component-specs-ko-KR.html\",\"docs/component-specs-zh-CN.html\",\"tips/UNSAFE_componentWillReceiveProps-not-triggered-after-mounting.html\",\"tips/dom-event-listeners.html\",\"tips/initial-ajax.html\",\"tips/use-react-with-other-libraries.html\"]"
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2016-04-07-react-v15.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2016-04-07-react-v15.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2016-04-07-react-v15.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"React v15.0\"\nauthor: [gaearon]\n---\n\nWe would like to thank the React community for reporting issues and regressions in the release candidates on our [issue tracker](https://github.com/facebook/react/issues/). Over the last few weeks we fixed those issues, and now, after two release candidates, we are excited to finally release the stable version of React 15.\n\nAs a reminder, [we’re switching to major versions](/blog/2016/02/19/new-versioning-scheme.html) to indicate that we have been using React in production for a long time. This 15.0 release follows our previous 0.14 version and we’ll continue to follow semver like we’ve been doing since 2013. It’s also worth noting that [we no longer actively support Internet Explorer 8](/blog/2016/01/12/discontinuing-ie8-support.html). We believe React will work in its current form there but we will not be prioritizing any efforts to fix new issues that only affect IE8.\n\nReact 15 brings significant improvements to how we interact with the DOM:\n\n* We are now using `document.createElement` instead of setting `innerHTML` when mounting components. This allows us to get rid of the `data-reactid` attribute on every node and make the DOM lighter. Using `document.createElement` is also faster in modern browsers and fixes a number of edge cases related to SVG elements and running multiple copies of React on the same page.\n\n* Historically our support for SVG has been incomplete, and many tags and attributes were missing. We heard you, and in React 15 we [added support for all the SVG attributes that are recognized by today’s browsers](https://github.com/facebook/react/pull/6243). If we missed any of the attributes you’d like to use, please [let us know](https://github.com/facebook/react/issues/1657). As a bonus, thanks to using `document.createElement`, we no longer need to maintain a list of SVG tags, so any SVG tags that were previously unsupported should work just fine in React 15.\n\n* We received some amazing contributions from the community in this release, and we would like to highlight [this pull request](https://github.com/facebook/react/pull/5753) by [Michael Wiencek](https://github.com/mwiencek) in particular. Thanks to Michael’s work, React 15 no longer emits extra `<span>` nodes around the text, making the DOM output much cleaner. This was a longstanding annoyance for React users so it’s exciting to accept this as an outside contribution.\n\nWhile this isn’t directly related to the release, we understand that in order to receive more community contributions like Michael’s, we need to communicate our goals and priorities more openly, and review pull requests more decisively. As a first step towards this, we started publishing [React core team weekly meeting notes](https://github.com/reactjs/core-notes) again. We also intend to introduce an RFC process inspired by [Ember RFCs](https://github.com/emberjs/rfcs) so external contributors can have more insight and influence in the future development of React. We will keep you updated about this on our blog.\n\nWe are also experimenting with a new changelog format in this post. Every change now links to the corresponding pull request and mentions the author. Let us know whether you find this useful!\n\n## Upgrade Guide\n\nAs usual with major releases, React 15 will remove support for some of the patterns deprecated nine months ago in React 0.14. We know changes can be painful (the Facebook codebase has over 20,000 React components, and that’s not even counting React Native), so we always try to make changes gradually in order to minimize the pain.\n\nIf your code is free of warnings when running under React 0.14, upgrading should be easy. The bulk of changes in this release are actually behind the scenes, impacting the way that React interacts with the DOM. The other substantial change is that React now supports the full range of SVG elements and attributes. Beyond that we have a large number of incremental improvements and additional warnings aimed to aid developers. We’ve also laid some groundwork in the core to bring you some new capabilities in future releases.\n\nSee the changelog below for more details.\n\n## Installation\n\nWe recommend using React from `npm` and using a tool like browserify or webpack to build your code into a single bundle. To install the two packages:\n\n* `npm install --save react react-dom`\n\nRemember that by default, React runs extra checks and provides helpful warnings in development mode. When deploying your app, set the `NODE_ENV` environment variable to `production` to use the production build of React which does not include the development warnings and runs significantly faster.\n\nIf you can’t use `npm` yet, we provide pre-built browser builds for your convenience, which are also available in the `react` package on bower.\n\n* **React**  \n  Dev build with warnings: <https://fb.me/react-15.0.0.js>  \n  Minified build for production: <https://fb.me/react-15.0.0.min.js>  \n* **React with Add-Ons**  \n  Dev build with warnings: <https://fb.me/react-with-addons-15.0.0.js>  \n  Minified build for production: <https://fb.me/react-with-addons-15.0.0.min.js>  \n* **React DOM** (include React in the page before React DOM)  \n  Dev build with warnings: <https://fb.me/react-dom-15.0.0.js>  \n  Minified build for production: <https://fb.me/react-dom-15.0.0.min.js>  \n\n## Changelog\n\n### Major changes\n\n- #### `document.createElement` is in and `data-reactid` is out\n\n    There were a number of large changes to our interactions with the DOM. One of the most noticeable changes is that we no longer set the `data-reactid` attribute for each DOM node. While this will make it more difficult to know if a website is using React, the advantage is that the DOM is much more lightweight. This change was made possible by us switching to use `document.createElement` on initial render. Previously we would generate a large string of HTML and then set `node.innerHTML`. At the time, this was decided to be faster than using `document.createElement` for the majority of cases and browsers that we supported. Browsers have continued to improve and so overwhelmingly this is no longer true. By using `createElement` we can make other parts of React faster. The ids were used to map back from events to the original React component, meaning we had to do a bunch of work on every event, even though we cached this data heavily. As we’ve all experienced, caching and in particularly invalidating caches, can be error prone and we saw many hard to reproduce issues over the years as a result. Now we can build up a direct mapping at render time since we already have a handle on the node.  \n\n    **Note:** `data-reactid` is still present for server-rendered content, however it is much smaller than before and is simply an auto-incrementing counter.  \n\n    <small>[@sophiebits](https://github.com/sophiebits) in [#5205](https://github.com/facebook/react/pull/5205)</small>\n\n- #### No more extra `<span>`s\n\n    Another big change with our DOM interaction is how we render text blocks. Previously you may have noticed that React rendered a lot of extra `<span>`s. For example, in our most basic example on the home page we render `<div>Hello {this.props.name}</div>`, resulting in markup that contained 2 `<span>`s. Now we’ll render plain text nodes interspersed with comment nodes that are used for demarcation. This gives us the same ability to update individual pieces of text, without creating extra nested nodes. Very few people have depended on the actual markup generated here so it’s likely you are not impacted. However if you were targeting these `<span>`s in your CSS, you will need to adjust accordingly. You can always render them explicitly in your components.  \n\n    <small>[@mwiencek](https://github.com/mwiencek) in [#5753](https://github.com/facebook/react/pull/5753)</small>\n\n- #### Rendering `null` now uses comment nodes\n\n    We’ve also made use of these comment nodes to change what `null` renders to. Rendering to `null` was a feature we added in React 0.11 and was implemented by rendering `<noscript>` elements. By rendering to comment nodes now, there’s a chance some of your CSS will be targeting the wrong thing, specifically if you are making use of `:nth-child` selectors. React’s use of the `<noscript>` tag has always been considered an implementation detail of how React targets the DOM. We believe they are safe changes to make without going through a release with warnings detailing the subtle differences as they are details that should not be depended upon. Additionally, we have seen that these changes have improved React performance for many typical applications.  \n\n    <small>[@sophiebits](https://github.com/sophiebits) in [#5451](https://github.com/facebook/react/pull/5451)</small>\n\n- #### Functional components can now return `null` too\n\n    We added support for [defining stateless components as functions](/blog/2015/09/10/react-v0.14-rc1.html#stateless-function-components) in React 0.14. However, React 0.14 still allowed you to define a class component without extending `React.Component` or using `React.createClass()`, so [we couldn’t reliably tell if your component is a function or a class](https://github.com/facebook/react/issues/5355), and did not allow returning `null` from it. This issue is solved in React 15, and you can now return `null` from any component, whether it is a class or a function.  \n\n    <small>[@jimfb](https://github.com/jimfb) in [#5884](https://github.com/facebook/react/pull/5884)</small>\n\n- #### Improved SVG support\n\n    All SVG tags are now fully supported. (Uncommon SVG tags are not present on the `React.DOM` element helper, but JSX and `React.createElement` work on all tag names.) All SVG attributes that are implemented by the browsers should be supported too. If you find any attributes that we have missed, please [let us know in this issue](https://github.com/facebook/react/issues/1657).  \n\n    <small>[@zpao](https://github.com/zpao) in [#6243](https://github.com/facebook/react/pull/6243)</small>\n\n### Breaking changes\n\n- #### No more extra `<span>`s\n\n    It’s worth calling out the DOM structure changes above again, in particular the change from `<span>`s. In the course of updating the Facebook codebase, we found a very small amount of code that was depending on the markup that React generated. Some of these cases were integration tests like WebDriver which were doing very specific XPath queries to target nodes. Others were simply tests using `ReactDOM.renderToStaticMarkup` and comparing markup. Again, there were a very small number of changes that had to be made, but we don’t want anybody to be blindsided. We encourage everybody to run their test suites when upgrading and consider alternative approaches when possible. One approach that will work for some cases is to explicitly use `<span>`s in your `render` method.  \n\n    <small>[@mwiencek](https://github.com/mwiencek) in [#5753](https://github.com/facebook/react/pull/5753)</small>\n\n- #### `React.cloneElement()` now resolves `defaultProps`\n\n    We fixed a bug in `React.cloneElement()` that some components may rely on. If some of the `props` received by `cloneElement()` are `undefined`, it used to return an element with `undefined` values for those props. In React 15, we’re changing it to be consistent with `createElement()`. Now any `undefined` props passed to `cloneElement()` are resolved to the corresponding component’s `defaultProps`. Only one of our 20,000 React components was negatively affected by this so we feel comfortable releasing this change without keeping the old behavior for another release cycle.  \n\n    <small>[@truongduy134](https://github.com/truongduy134) in [#5997](https://github.com/facebook/react/pull/5997)</small>\n\n- #### `ReactPerf.getLastMeasurements()` is opaque\n\n    This change won’t affect applications but may break some third-party tools. We are [revamping `ReactPerf` implementation](https://github.com/facebook/react/pull/6046) and plan to release it during the 15.x cycle. The internal performance measurement format is subject to change so, for the time being, we consider the return value of `ReactPerf.getLastMeasurements()` an opaque data structure that should not be relied upon.  \n\n    <small>[@gaearon](https://github.com/gaearon) in [#6286](https://github.com/facebook/react/pull/6286)</small>\n\n- #### Removed deprecations\n\n    These deprecations were introduced nine months ago in v0.14 with a warning and are removed:\n\n    - Deprecated APIs are removed from the `React` top-level export: `findDOMNode`, `render`, `renderToString`, `renderToStaticMarkup`, and `unmountComponentAtNode`. As a reminder, they are now available on `ReactDOM` and `ReactDOMServer`.  \n    <small>[@jimfb](https://github.com/jimfb) in [#5832](https://github.com/facebook/react/pull/5832)</small>\n\n    - Deprecated addons are removed: `batchedUpdates` and `cloneWithProps`.  \n    <small>[@jimfb](https://github.com/jimfb) in [#5859](https://github.com/facebook/react/pull/5859), [@zpao](https://github.com/zpao) in [#6016](https://github.com/facebook/react/pull/6016)</small>\n\n    - Deprecated component instance methods are removed: `setProps`, `replaceProps`, and `getDOMNode`.  \n    <small>[@jimfb](https://github.com/jimfb) in [#5570](https://github.com/facebook/react/pull/5570)</small>\n\n    - Deprecated CommonJS `react/addons` entry point is removed. As a reminder, you should use separate `react-addons-*` packages instead. This only applies if you use the CommonJS builds.  \n    <small>[@gaearon](https://github.com/gaearon) in [#6285](https://github.com/facebook/react/pull/6285)</small>\n\n    - Passing `children` to void elements like `<input>` was deprecated, and now throws an error.  \n    <small>[@jonhester](https://github.com/jonhester) in [#3372](https://github.com/facebook/react/pull/3372)</small>\n\n    - React-specific properties on DOM `refs` (e.g. `this.refs.div.props`) were deprecated, and are removed now.  \n    <small>[@jimfb](https://github.com/jimfb) in [#5495](https://github.com/facebook/react/pull/5495)</small>\n\n### New deprecations, introduced with a warning\n\nEach of these changes will continue to work as before with a new warning until the release of React 16 so you can upgrade your code gradually.\n\n- `LinkedStateMixin` and `valueLink` are now deprecated due to very low popularity. If you need this, you can use a wrapper component that implements the same behavior: [react-linked-input](https://www.npmjs.com/package/react-linked-input).  \n<small>[@jimfb](https://github.com/jimfb) in [#6127](https://github.com/facebook/react/pull/6127)</small>\n\n- Future versions of React will treat `<input value={null}>` as a request to clear the input. However, React 0.14 has been ignoring `value={null}`. React 15 warns you on a `null` input value and offers you to clarify your intention. To fix the warning, you may explicitly pass an empty string to clear a controlled input, or pass `undefined` to make the input uncontrolled.  \n<small>[@antoaravinth](https://github.com/antoaravinth) in [#5048](https://github.com/facebook/react/pull/5048)</small>\n\n- `ReactPerf.printDOM()` was renamed to `ReactPerf.printOperations()`, and `ReactPerf.getMeasurementsSummaryMap()` was renamed to `ReactPerf.getWasted()`.  \n<small>[@gaearon](https://github.com/gaearon) in [#6287](https://github.com/facebook/react/pull/6287)</small>\n\n### New helpful warnings\n\n- If you use a minified copy of the _development_ build, React DOM kindly encourages you to use the faster production build instead.  \n<small>[@sophiebits](https://github.com/sophiebits) in [#5083](https://github.com/facebook/react/pull/5083)</small>\n\n- React DOM: When specifying a unit-less CSS value as a string, a future version will not add `px` automatically. This version now warns in this case (ex: writing `style={{width: '300'}}`. Unitless *number* values like `width: 300` are unchanged.  \n<small>[@pluma](https://github.com/pluma) in [#5140](https://github.com/facebook/react/pull/5140)</small>\n\n- Synthetic Events will now warn when setting and accessing properties (which will not get cleared appropriately), as well as warn on access after an event has been returned to the pool.  \n<small>[@kentcdodds](https://github.com/kentcdodds) in [#5940](https://github.com/facebook/react/pull/5940) and [@koba04](https://github.com/koba04) in [#5947](https://github.com/facebook/react/pull/5947)</small>\n\n- Elements will now warn when attempting to read `ref` and `key` from the props.  \n<small>[@prometheansacrifice](https://github.com/prometheansacrifice) in [#5744](https://github.com/facebook/react/pull/5744)</small>\n\n- React will now warn if you pass a different `props` object to `super()` in the constructor.  \n<small>[@prometheansacrifice](https://github.com/prometheansacrifice) in [#5346](https://github.com/facebook/react/pull/5346)</small>\n\n- React will now warn if you call `setState()` inside `getChildContext()`.  \n<small>[@raineroviir](https://github.com/raineroviir) in [#6121](https://github.com/facebook/react/pull/6121)</small>\n\n- React DOM now attempts to warn for mistyped event handlers on DOM elements, such as `onclick` which should be `onClick`.  \n<small>[@ali](https://github.com/ali) in [#5361](https://github.com/facebook/react/pull/5361)</small>\n\n- React DOM now warns about `NaN` values in `style`.  \n<small>[@jontewks](https://github.com/jontewks) in [#5811](https://github.com/facebook/react/pull/5811)</small>\n\n- React DOM now warns if you specify both `value` and `defaultValue` for an input.  \n<small>[@mgmcdermott](https://github.com/mgmcdermott) in [#5823](https://github.com/facebook/react/pull/5823)</small>\n\n- React DOM now warns if an input switches between being controlled and uncontrolled.  \n<small>[@TheBlasfem](https://github.com/TheBlasfem) in [#5864](https://github.com/facebook/react/pull/5864)</small>\n\n- React DOM now warns if you specify `onFocusIn` or `onFocusOut` handlers as they are unnecessary in React.  \n<small>[@jontewks](https://github.com/jontewks) in [#6296](https://github.com/facebook/react/pull/6296)</small>\n\n- React now prints a descriptive error message when you pass an invalid callback as the last argument to `ReactDOM.render()`, `this.setState()`, or `this.forceUpdate()`.  \n<small>[@conorhastings](https://github.com/conorhastings) in [#5193](https://github.com/facebook/react/pull/5193) and [@gaearon](https://github.com/gaearon) in [#6310](https://github.com/facebook/react/pull/6310)</small>\n\n- Add-Ons: `TestUtils.Simulate()` now prints a helpful message if you attempt to use it with shallow rendering.  \n<small>[@conorhastings](https://github.com/conorhastings) in [#5358](https://github.com/facebook/react/pull/5358)</small>\n\n- PropTypes: `arrayOf()` and `objectOf()` provide better error messages for invalid arguments.  \n<small>[@chicoxyzzy](https://github.com/chicoxyzzy) in [#5390](https://github.com/facebook/react/pull/5390)</small>\n\n### Notable bug fixes\n\n- Fixed multiple small memory leaks.  \n<small>[@sophiebits](https://github.com/sophiebits) in [#4983](https://github.com/facebook/react/pull/4983) and [@victor-homyakov](https://github.com/victor-homyakov) in [#6309](https://github.com/facebook/react/pull/6309)</small>\n\n- Input events are handled more reliably in IE 10 and IE 11; spurious events no longer fire when using a placeholder.  \n<small>[@jquense](https://github.com/jquense) in [#4051](https://github.com/facebook/react/pull/4051)</small>\n\n- The `componentWillReceiveProps()` lifecycle method is now consistently called when `context` changes.  \n<small>[@milesj](https://github.com/milesj) in [#5787](https://github.com/facebook/react/pull/5787)</small>\n\n- `React.cloneElement()` doesn’t append slash to an existing `key` when used inside `React.Children.map()`.  \n<small>[@ianobermiller](https://github.com/ianobermiller) in [#5892](https://github.com/facebook/react/pull/5892)</small>\n\n- React DOM now supports the `cite` and `profile` HTML attributes.  \n<small>[@AprilArcus](https://github.com/AprilArcus) in [#6094](https://github.com/facebook/react/pull/6094) and [@saiichihashimoto](https://github.com/saiichihashimoto) in [#6032](https://github.com/facebook/react/pull/6032)</small>\n\n- React DOM now supports `cssFloat`, `gridRow` and `gridColumn` CSS properties.  \n<small>[@stevenvachon](https://github.com/stevenvachon) in [#6133](https://github.com/facebook/react/pull/6133) and  [@mnordick](https://github.com/mnordick) in [#4779](https://github.com/facebook/react/pull/4779)</small>\n\n- React DOM now correctly handles `borderImageOutset`, `borderImageWidth`, `borderImageSlice`, `floodOpacity`, `strokeDasharray`, and `strokeMiterlimit` as unitless CSS properties.  \n<small>[@rofrischmann](https://github.com/rofrischmann) in [#6210](https://github.com/facebook/react/pull/6210) and [#6270](https://github.com/facebook/react/pull/6270)</small>\n\n- React DOM now supports the `onAnimationStart`, `onAnimationEnd`, `onAnimationIteration`, `onTransitionEnd`, and `onInvalid` events. Support for `onLoad` has been added to `object` elements.  \n<small>[@tomduncalf](https://github.com/tomduncalf) in [#5187](https://github.com/facebook/react/pull/5187),  [@milesj](https://github.com/milesj) in [#6005](https://github.com/facebook/react/pull/6005), and [@ara4n](https://github.com/ara4n) in [#5781](https://github.com/facebook/react/pull/5781)</small>\n\n- React DOM now defaults to using DOM attributes instead of properties, which fixes a few edge case bugs. Additionally the nullification of values (ex: `href={null}`) now results in the forceful removal, no longer trying to set to the default value used by browsers in the absence of a value.  \n<small>[@syranide](https://github.com/syranide) in [#1510](https://github.com/facebook/react/pull/1510)</small>\n\n- React DOM does not mistakingly coerce `children` to strings for Web Components.  \n<small>[@jimfb](https://github.com/jimfb) in [#5093](https://github.com/facebook/react/pull/5093)</small>\n\n- React DOM now correctly normalizes SVG `<use>` events.  \n<small>[@edmellum](https://github.com/edmellum) in [#5720](https://github.com/facebook/react/pull/5720)</small>\n\n- React DOM does not throw if a `<select>` is unmounted while its `onChange` handler is executing.  \n<small>[@sambev](https://github.com/sambev) in [#6028](https://github.com/facebook/react/pull/6028)</small>\n\n- React DOM does not throw in Windows 8 apps.  \n<small>[@Andrew8xx8](https://github.com/Andrew8xx8) in [#6063](https://github.com/facebook/react/pull/6063)</small>\n\n- React DOM does not throw when asynchronously unmounting a child with a `ref`.  \n<small>[@yiminghe](https://github.com/yiminghe) in [#6095](https://github.com/facebook/react/pull/6095)</small>\n\n- React DOM no longer forces synchronous layout because of scroll position tracking.  \n<small>[@syranide](https://github.com/syranide) in [#2271](https://github.com/facebook/react/pull/2271)</small>\n\n- `Object.is` is used in a number of places to compare values, which leads to fewer false positives, especially involving `NaN`. In particular, this affects the `shallowCompare` add-on.  \n<small>[@chicoxyzzy](https://github.com/chicoxyzzy) in [#6132](https://github.com/facebook/react/pull/6132)</small>\n\n- Add-Ons: ReactPerf no longer instruments adding or removing an event listener because they don’t really touch the DOM due to event delegation.  \n<small>[@antoaravinth](https://github.com/antoaravinth) in [#5209](https://github.com/facebook/react/pull/5209)</small>\n\n### Other improvements\n\n- React now uses `loose-envify` instead of `envify` so it installs fewer transitive dependencies.  \n<small>[@qerub](https://github.com/qerub) in [#6303](https://github.com/facebook/react/pull/6303)</small>\n\n- Shallow renderer now exposes `getMountedInstance()`.  \n<small>[@glenjamin](https://github.com/glenjamin) in [#4918](https://github.com/facebook/react/pull/4918)</small>\n\n- Shallow renderer now returns the rendered output from `render()`.  \n<small>[@simonewebdesign](https://github.com/simonewebdesign) in [#5411](https://github.com/facebook/react/pull/5411)</small>\n\n- React no longer depends on ES5 *shams* for `Object.create` and `Object.freeze` in older environments. It still, however, requires ES5 *shims* in those environments.  \n<small>[@dgreensp](https://github.com/dgreensp) in [#4959](https://github.com/facebook/react/pull/4959)</small>\n\n- React DOM now allows `data-` attributes with names that start with numbers.  \n<small>[@nLight](https://github.com/nLight) in [#5216](https://github.com/facebook/react/pull/5216)</small>\n\n- React DOM adds a new `suppressContentEditableWarning` prop for components like [Draft.js](https://facebook.github.io/draft-js/) that intentionally manage `contentEditable` children with React.  \n<small>[@mxstbr](https://github.com/mxstbr) in [#6112](https://github.com/facebook/react/pull/6112)</small>\n\n- React improves the performance for `createClass()` on complex specs.  \n<small>[@sophiebits](https://github.com/sophiebits) in [#5550](https://github.com/facebook/react/pull/5550)</small>\n",
        "type": "MarkdownRemark",
        "contentDigest": "2b24ac363bbb8cd49c501ea18e965d71",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "React v15.0",
        "author": [
          "gaearon"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2016-04-07-react-v15.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2016-04-07-react-v15.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2016-04-07-react-v15.md",
      "fields": {
        "date": "2016-04-06T16:00:00.000Z",
        "slug": "/blog/2016/04/07/react-v15.html",
        "path": "blog/2016-04-07-react-v15.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2016-07-13-mixins-considered-harmful.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2016-07-13-mixins-considered-harmful.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2016-07-13-mixins-considered-harmful.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Mixins Considered Harmful\"\nauthor: [gaearon]\n---\n\n“How do I share the code between several components?” is one of the first questions that people ask when they learn React. Our answer has always been to use component composition for code reuse. You can define a component and use it in several other components.\n\nIt is not always obvious how a certain pattern can be solved with composition. React is influenced by functional programming but it came into the field that was dominated by object-oriented libraries. It was hard for engineers both inside and outside of Facebook to give up on the patterns they were used to.\n\nTo ease the initial adoption and learning, we included certain escape hatches into React. The mixin system was one of those escape hatches, and its goal was to give you a way to reuse code between components when you aren’t sure how to solve the same problem with composition.\n\nThree years passed since React was released. The landscape has changed. Multiple view libraries now adopt a component model similar to React. Using composition over inheritance to build declarative user interfaces is no longer a novelty. We are also more confident in the React component model, and we have seen many creative uses of it both internally and in the community.\n\nIn this post, we will consider the problems commonly caused by mixins. Then we will suggest several alternative patterns for the same use cases. We have found those patterns to scale better with the complexity of the codebase than mixins.\n\n## Why Mixins are Broken\n\nAt Facebook, React usage has grown from a few components to thousands of them. This gives us a window into how people use React. Thanks to declarative rendering and top-down data flow, many teams were able to fix a bunch of bugs while shipping new features as they adopted React.\n\nHowever it’s inevitable that some of our code using React gradually became incomprehensible. Occasionally, the React team would see groups of components in different projects that people were afraid to touch. These components were too easy to break accidentally, were confusing to new developers, and eventually became just as confusing to the people who wrote them in the first place. Much of this confusion was caused by mixins. At the time, I wasn’t working at Facebook but I came to the [same conclusions](https://medium.com/@dan_abramov/mixins-are-dead-long-live-higher-order-components-94a0d2f9e750) after writing my fair share of terrible mixins.\n\nThis doesn’t mean that mixins themselves are bad. People successfully employ them in different languages and paradigms, including some functional languages. At Facebook, we extensively use traits in Hack which are fairly similar to mixins. Nevertheless, we think that mixins are unnecessary and problematic in React codebases. Here’s why.\n\n### Mixins introduce implicit dependencies\n\nSometimes a component relies on a certain method defined in the mixin, such as `getClassName()`. Sometimes it’s the other way around, and mixin calls a method like `renderHeader()` on the component. JavaScript is a dynamic language so it’s hard to enforce or document these dependencies.\n\nMixins break the common and usually safe assumption that you can rename a state key or a method by searching for its occurrences in the component file. You might write a stateful component and then your coworker might add a mixin that reads this state. In a few months, you might want to move that state up to the parent component so it can be shared with a sibling. Will you remember to update the mixin to read a prop instead? What if, by now, other components also use this mixin?\n\nThese implicit dependencies make it hard for new team members to contribute to a codebase. A component’s `render()` method might reference some method that isn’t defined on the class. Is it safe to remove? Perhaps it’s defined in one of the mixins. But which one of them? You need to scroll up to the mixin list, open each of those files, and look for this method. Worse, mixins can specify their own mixins, so the search can be deep.\n\nOften, mixins come to depend on other mixins, and removing one of them breaks the other. In these situations it is very tricky to tell how the data flows in and out of mixins, and what their dependency graph looks like. Unlike components, mixins don’t form a hierarchy: they are flattened and operate in the same namespace.\n\n### Mixins cause name clashes\n\nThere is no guarantee that two particular mixins can be used together. For example, if `FluxListenerMixin` defines `handleChange()` and `WindowSizeMixin` defines `handleChange()`, you can’t use them together. You also can’t define a method with this name on your own component.\n\nIt’s not a big deal if you control the mixin code. When you have a conflict, you can rename that method on one of the mixins. However it’s tricky because some components or other mixins may already be calling this method directly, and you need to find and fix those calls as well.\n\nIf you have a name conflict with a mixin from a third party package, you can’t just rename a method on it. Instead, you have to use awkward method names on your component to avoid clashes.\n\nThe situation is no better for mixin authors. Even adding a new method to a mixin is always a potentially breaking change because a method with the same name might already exist on some of the components using it, either directly or through another mixin. Once written, mixins are hard to remove or change. Bad ideas don’t get refactored away because refactoring is too risky.\n\n### Mixins cause snowballing complexity\n\nEven when mixins start out simple, they tend to become complex over time. The example below is based on a real scenario I’ve seen play out in a codebase.\n\nA component needs some state to track mouse hover. To keep this logic reusable, you might extract `handleMouseEnter()`, `handleMouseLeave()` and `isHovering()` into a `HoverMixin`. Next, somebody needs to implement a tooltip. They don’t want to duplicate the logic in `HoverMixin` so they create a `TooltipMixin` that uses `HoverMixin`. `TooltipMixin` reads `isHovering()` provided by `HoverMixin` in its `componentDidUpdate()` and either shows or hides the tooltip.\n\nA few months later, somebody wants to make the tooltip direction configurable. In an effort to avoid code duplication, they add support for a new optional method called `getTooltipOptions()` to `TooltipMixin`. By this time, components that show popovers also use `HoverMixin`. However popovers need a different hover delay. To solve this, somebody adds support for an optional `getHoverOptions()` method and implements it in `TooltipMixin`. Those mixins are now tightly coupled.\n\nThis is fine while there are no new requirements. However this solution doesn’t scale well. What if you want to support displaying multiple tooltips in a single component? You can’t define the same mixin twice in a component. What if the tooltips need to be displayed automatically in a guided tour instead of on hover? Good luck decoupling `TooltipMixin` from `HoverMixin`. What if you need to support the case where the hover area and the tooltip anchor are located in different components? You can’t easily hoist the state used by mixin up into the parent component. Unlike components, mixins don’t lend themselves naturally to such changes.\n\nEvery new requirement makes the mixins harder to understand. Components using the same mixin become increasingly coupled with time. Any new capability gets added to all of the components using that mixin. There is no way to split a “simpler” part of the mixin without either duplicating the code or introducing more dependencies and indirection between mixins. Gradually, the encapsulation boundaries erode, and since it’s hard to change or remove the existing mixins, they keep getting more abstract until nobody understands how they work.\n\nThese are the same problems we faced building apps before React. We found that they are solved by declarative rendering, top-down data flow, and encapsulated components. At Facebook, we have been migrating our code to use alternative patterns to mixins, and we are generally happy with the results. You can read about those patterns below.\n\n## Migrating from Mixins\n\nLet’s make it clear that mixins are not technically deprecated. If you use `React.createClass()`, you may keep using them. We only say that they didn’t work well for us, and so we won’t recommend using them in the future.\n\nEvery section below corresponds to a mixin usage pattern that we found in the Facebook codebase. For each of them, we describe the problem and a solution that we think works better than mixins. The examples are written in ES5 but once you don’t need mixins, you can switch to ES6 classes if you’d like.\n\nWe hope that you find this list helpful. Please let us know if we missed important use cases so we can either amend the list or be proven wrong!\n\n### Performance Optimizations\n\nOne of the most commonly used mixins is [`PureRenderMixin`](/docs/pure-render-mixin.html). You might be using it in some components to [prevent unnecessary re-renders](/docs/advanced-performance.html#shouldcomponentupdate-in-action) when the props and state are shallowly equal to the previous props and state:\n\n```javascript\nvar PureRenderMixin = require('react-addons-pure-render-mixin');\n\nvar Button = React.createClass({\n  mixins: [PureRenderMixin],\n\n  // ...\n\n});\n```\n\n#### Solution\n\nTo express the same without mixins, you can use the [`shallowCompare`](/docs/shallow-compare.html) function directly instead:\n\n```js\nvar shallowCompare = require('react-addons-shallow-compare');\n\nvar Button = React.createClass({\n  shouldComponentUpdate: function(nextProps, nextState) {\n    return shallowCompare(this, nextProps, nextState);\n  },\n\n  // ...\n\n});\n```\n\nIf you use a custom mixin implementing a `shouldComponentUpdate` function with different algorithm, we suggest exporting just that single function from a module and calling it directly from your components.\n\nWe understand that more typing can be annoying. For the most common case, we plan to [introduce a new base class](https://github.com/facebook/react/pull/7195) called `React.PureComponent` in the next minor release. It uses the same shallow comparison as `PureRenderMixin` does today.\n\n### Subscriptions and Side Effects\n\nThe second most common type of mixins that we encountered are mixins that subscribe a React component to a third-party data source. Whether this data source is a Flux Store, an Rx Observable, or something else, the pattern is very similar: the subscription is created in `componentDidMount`, destroyed in `componentWillUnmount`, and the change handler calls `this.setState()`.\n\n```javascript\nvar SubscriptionMixin = {\n  getInitialState: function() {\n    return {\n      comments: DataSource.getComments()\n    };\n  },\n\n  componentDidMount: function() {\n    DataSource.addChangeListener(this.handleChange);\n  },\n\n  componentWillUnmount: function() {\n    DataSource.removeChangeListener(this.handleChange);\n  },\n\n  handleChange: function() {\n    this.setState({\n      comments: DataSource.getComments()\n    });\n  }\n};\n\nvar CommentList = React.createClass({\n  mixins: [SubscriptionMixin],\n\n  render: function() {\n    // Reading comments from state managed by mixin.\n    var comments = this.state.comments;\n    return (\n      <div>\n        {comments.map(function(comment) {\n          return <Comment comment={comment} key={comment.id} />\n        })}\n      </div>\n    )\n  }\n});\n\nmodule.exports = CommentList;\n```\n\n#### Solution\n\nIf there is just one component subscribed to this data source, it is fine to embed the subscription logic right into the component. Avoid premature abstractions.\n\nIf several components used this mixin to subscribe to a data source, a nice way to avoid repetition is to use a pattern called [“higher-order components”](https://medium.com/@dan_abramov/mixins-are-dead-long-live-higher-order-components-94a0d2f9e750). It can sound intimidating so we will take a closer look at how this pattern naturally emerges from the component model.\n\n#### Higher-Order Components Explained\n\nLet’s forget about React for a second. Consider these two functions that add and multiply numbers, logging the results as they do that:\n\n```js\nfunction addAndLog(x, y) {\n  var result = x + y;\n  console.log('result:', result);\n  return result;\n}\n\nfunction multiplyAndLog(x, y) {\n  var result = x * y;\n  console.log('result:', result);\n  return result;\n}\n```\n\nThese two functions are not very useful but they help us demonstrate a pattern that we can later apply to components.\n\nLet’s say that we want to extract the logging logic out of these functions without changing their signatures. How can we do this? An elegant solution is to write a [higher-order function](https://en.wikipedia.org/wiki/Higher-order_function), that is, a function that takes a function as an argument and returns a function.\n\nAgain, it sounds more intimidating than it really is:\n\n```js\nfunction withLogging(wrappedFunction) {\n  // Return a function with the same API...\n  return function(x, y) {\n    // ... that calls the original function\n    var result = wrappedFunction(x, y);\n    // ... but also logs its result!\n    console.log('result:', result);\n    return result;\n  };\n}\n```\n\nThe `withLogging` higher-order function lets us write `add` and `multiply` without the logging statements, and later wrap them to get `addAndLog` and `multiplyAndLog` with exactly the same signatures as before:\n\n```js\nfunction add(x, y) {\n  return x + y;\n}\n\nfunction multiply(x, y) {\n  return x * y;\n}\n\nfunction withLogging(wrappedFunction) {\n  return function(x, y) {\n    var result = wrappedFunction(x, y);\n    console.log('result:', result);\n    return result;\n  };\n}\n\n// Equivalent to writing addAndLog by hand:\nvar addAndLog = withLogging(add);\n\n// Equivalent to writing multiplyAndLog by hand:\nvar multiplyAndLog = withLogging(multiply);\n```\n\nHigher-order components are a very similar pattern, but applied to components in React. We will apply this transformation from mixins in two steps.\n\nAs a first step, we will split our `CommentList` component in two, a child and a parent. The child will be only concerned with rendering the comments. The parent will set up the subscription and pass the up-to-date data to the child via props.\n\n```js\n// This is a child component.\n// It only renders the comments it receives as props.\nvar CommentList = React.createClass({\n  render: function() {\n    // Note: now reading from props rather than state.\n    var comments = this.props.comments;\n    return (\n      <div>\n        {comments.map(function(comment) {\n          return <Comment comment={comment} key={comment.id} />\n        })}\n      </div>\n    )\n  }\n});\n\n// This is a parent component.\n// It subscribes to the data source and renders <CommentList />.\nvar CommentListWithSubscription = React.createClass({\n  getInitialState: function() {\n    return {\n      comments: DataSource.getComments()\n    };\n  },\n\n  componentDidMount: function() {\n    DataSource.addChangeListener(this.handleChange);\n  },\n\n  componentWillUnmount: function() {\n    DataSource.removeChangeListener(this.handleChange);\n  },\n\n  handleChange: function() {\n    this.setState({\n      comments: DataSource.getComments()\n    });\n  },\n\n  render: function() {\n    // We pass the current state as props to CommentList.\n    return <CommentList comments={this.state.comments} />;\n  }\n});\n\nmodule.exports = CommentListWithSubscription;\n```\n\nThere is just one final step left to do.\n\nRemember how we made `withLogging()` take a function and return another function wrapping it? We can apply a similar pattern to React components.\n\nWe will write a new function called `withSubscription(WrappedComponent)`. Its argument could be any React component. We will pass `CommentList` as `WrappedComponent`, but we could also apply `withSubscription()` to any other component in our codebase.\n\nThis function would return another component. The returned component would manage the subscription and render `<WrappedComponent />` with the current data.\n\nWe call this pattern a “higher-order component”.\n\nThe composition happens at React rendering level rather than with a direct function call. This is why it doesn’t matter whether the wrapped component is defined with `createClass()`, as an ES6 class or a function. If `WrappedComponent` is a React component, the component created by `withSubscription()` can render it.\n\n```js\n// This function takes a component...\nfunction withSubscription(WrappedComponent) {\n  // ...and returns another component...\n  return React.createClass({\n    getInitialState: function() {\n      return {\n        comments: DataSource.getComments()\n      };\n    },\n\n    componentDidMount: function() {\n      // ... that takes care of the subscription...\n      DataSource.addChangeListener(this.handleChange);\n    },\n\n    componentWillUnmount: function() {\n      DataSource.removeChangeListener(this.handleChange);\n    },\n\n    handleChange: function() {\n      this.setState({\n        comments: DataSource.getComments()\n      });\n    },\n\n    render: function() {\n      // ... and renders the wrapped component with the fresh data!\n      return <WrappedComponent comments={this.state.comments} />;\n    }\n  });\n}\n```\n\nNow we can declare `CommentListWithSubscription` by applying `withSubscription` to `CommentList`:\n\n```js\nvar CommentList = React.createClass({\n  render: function() {\n    var comments = this.props.comments;\n    return (\n      <div>\n        {comments.map(function(comment) {\n          return <Comment comment={comment} key={comment.id} />\n        })}\n      </div>\n    )\n  }\n});\n\n// withSubscription() returns a new component that\n// is subscribed to the data source and renders\n// <CommentList /> with up-to-date data.\nvar CommentListWithSubscription = withSubscription(CommentList);\n\n// The rest of the app is interested in the subscribed component\n// so we export it instead of the original unwrapped CommentList.\nmodule.exports = CommentListWithSubscription;\n```\n\n#### Solution, Revisited\n\nNow that we understand higher-order components better, let’s take another look at the complete solution that doesn’t involve mixins. There are a few minor changes that are annotated with inline comments:\n\n```js\nfunction withSubscription(WrappedComponent) {\n  return React.createClass({\n    getInitialState: function() {\n      return {\n        comments: DataSource.getComments()\n      };\n    },\n\n    componentDidMount: function() {\n      DataSource.addChangeListener(this.handleChange);\n    },\n\n    componentWillUnmount: function() {\n      DataSource.removeChangeListener(this.handleChange);\n    },\n\n    handleChange: function() {\n      this.setState({\n        comments: DataSource.getComments()\n      });\n    },\n\n    render: function() {\n      // Use JSX spread syntax to pass all props and state down automatically.\n      return <WrappedComponent {...this.props} {...this.state} />;\n    }\n  });\n}\n\n// Optional change: convert CommentList to a functional component\n// because it doesn't use lifecycle hooks or state.\nfunction CommentList(props) {\n  var comments = props.comments;\n  return (\n    <div>\n      {comments.map(function(comment) {\n        return <Comment comment={comment} key={comment.id} />\n      })}\n    </div>\n  )\n}\n\n// Instead of declaring CommentListWithSubscription,\n// we export the wrapped component right away.\nmodule.exports = withSubscription(CommentList);\n```\n\nHigher-order components are a powerful pattern. You can pass additional arguments to them if you want to further customize their behavior. After all, they are not even a feature of React. They are just functions that receive components and return components that wrap them.\n\nLike any solution, higher-order components have their own pitfalls. For example, if you heavily use [refs](/docs/more-about-refs.html), you might notice that wrapping something into a higher-order component changes the ref to point to the wrapping component. In practice we discourage using refs for component communication so we don’t think it’s a big issue. In the future, we might consider adding [ref forwarding](https://github.com/facebook/react/issues/4213) to React to solve this annoyance.\n\n### Rendering Logic\n\nThe next most common use case for mixins that we discovered in our codebase is sharing rendering logic between components.\n\nHere is a typical example of this pattern:\n\n```js\nvar RowMixin = {\n  // Called by components from render()\n  renderHeader: function() {\n    return (\n      <div className='row-header'>\n        <h1>\n          {this.getHeaderText() /* Defined by components */}\n        </h1>\n      </div>\n    );\n  }\n};\n\nvar UserRow = React.createClass({\n  mixins: [RowMixin],\n\n  // Called by RowMixin.renderHeader()\n  getHeaderText: function() {\n    return this.props.user.fullName;\n  },\n\n  render: function() {\n    return (\n      <div>\n        {this.renderHeader() /* Defined by RowMixin */}\n        <h2>{this.props.user.biography}</h2>\n      </div>\n    )\n  }\n});\n```\n\nMultiple components may be sharing `RowMixin` to render the header, and each of them would need to define `getHeaderText()`.\n\n#### Solution\n\nIf you see rendering logic inside a mixin, it’s time to extract a component!\n\nInstead of `RowMixin`, we will define a `<RowHeader>` component. We will also replace the convention of defining a `getHeaderText()` method with the standard mechanism of top-data flow in React: passing props.\n\nFinally, since neither of those components currently need lifecycle hooks or state, we can declare them as simple functions:\n\n```js\nfunction RowHeader(props) {\n  return (\n    <div className='row-header'>\n      <h1>{props.text}</h1>\n    </div>\n  );\n}\n\nfunction UserRow(props) {\n  return (\n    <div>\n      <RowHeader text={props.user.fullName} />\n      <h2>{props.user.biography}</h2>\n    </div>\n  );\n}\n```\n\nProps keep component dependencies explicit, easy to replace, and enforceable with tools like [Flow](https://flowtype.org/) and [TypeScript](https://www.typescriptlang.org/).\n\n> **Note:**\n>\n> Defining components as functions is not required. There is also nothing wrong with using lifecycle hooks and state—they are first-class React features. We use functional components in this example because they are easier to read and we didn’t need those extra features, but classes would work just as fine.\n\n### Context\n\nAnother group of mixins we discovered were helpers for providing and consuming [React context](/docs/context.html). Context is an experimental unstable feature, has [certain issues](https://github.com/facebook/react/issues/2517), and will likely change its API in the future. We don’t recommend using it unless you’re confident there is no other way of solving your problem.\n\nNevertheless, if you already use context today, you might have been hiding its usage with mixins like this:\n\n```js\nvar RouterMixin = {\n  contextTypes: {\n    router: React.PropTypes.object.isRequired\n  },\n\n  // The mixin provides a method so that components\n  // don't have to use the context API directly.\n  push: function(path) {\n    this.context.router.push(path)\n  }\n};\n\nvar Link = React.createClass({\n  mixins: [RouterMixin],\n\n  handleClick: function(e) {\n    e.stopPropagation();\n\n    // This method is defined in RouterMixin.\n    this.push(this.props.to);\n  },\n\n  render: function() {\n    return (\n      <a onClick={this.handleClick}>\n        {this.props.children}\n      </a>\n    );\n  }\n});\n\nmodule.exports = Link;\n```\n\n#### Solution\n\nWe agree that hiding context usage from consuming components is a good idea until the context API stabilizes. However, we recommend using higher-order components instead of mixins for this.\n\nLet the wrapping component grab something from the context, and pass it down with props to the wrapped component:\n\n```js\nfunction withRouter(WrappedComponent) {\n  return React.createClass({\n    contextTypes: {\n      router: React.PropTypes.object.isRequired\n    },\n\n    render: function() {\n      // The wrapper component reads something from the context\n      // and passes it down as a prop to the wrapped component.\n      var router = this.context.router;\n      return <WrappedComponent {...this.props} router={router} />;\n    }\n  });\n};\n\nvar Link = React.createClass({\n  handleClick: function(e) {\n    e.stopPropagation();\n\n    // The wrapped component uses props instead of context.\n    this.props.router.push(this.props.to);\n  },\n\n  render: function() {\n    return (\n      <a onClick={this.handleClick}>\n        {this.props.children}\n      </a>\n    );\n  }\n});\n\n// Don't forget to wrap the component!\nmodule.exports = withRouter(Link);\n```\n\nIf you’re using a third party library that only provides a mixin, we encourage you to file an issue with them linking to this post so that they can provide a higher-order component instead. In the meantime, you can create a higher-order component around it yourself in exactly the same way.\n\n### Utility Methods\n\nSometimes, mixins are used solely to share utility functions between components:\n\n```js\nvar ColorMixin = {\n  getLuminance(color) {\n    var c = parseInt(color, 16);\n    var r = (c & 0xFF0000) >> 16;\n    var g = (c & 0x00FF00) >> 8;\n    var b = (c & 0x0000FF);\n    return (0.299 * r + 0.587 * g + 0.114 * b);\n  }\n};\n\nvar Button = React.createClass({\n  mixins: [ColorMixin],\n\n  render: function() {\n    var theme = this.getLuminance(this.props.color) > 160 ? 'dark' : 'light';\n    return (\n      <div className={theme}>\n        {this.props.children}\n      </div>\n    )\n  }\n});\n```\n\n#### Solution\n\nPut utility functions into regular JavaScript modules and import them. This also makes it easier to test them or use them outside of your components:\n\n```js\nvar getLuminance = require('../utils/getLuminance');\n\nvar Button = React.createClass({\n  render: function() {\n    var theme = getLuminance(this.props.color) > 160 ? 'dark' : 'light';\n    return (\n      <div className={theme}>\n        {this.props.children}\n      </div>\n    )\n  }\n});\n```\n\n### Other Use Cases\n\nSometimes people use mixins to selectively add logging to lifecycle hooks in some components. In the future, we intend to provide an [official DevTools API](https://github.com/facebook/react/issues/5306) that would let you implement something similar without touching the components. However it’s still very much a work in progress. If you heavily depend on logging mixins for debugging, you might want to keep using those mixins for a little longer.\n\nIf you can’t accomplish something with a component, a higher-order component, or a utility module, it could be mean that React should provide this out of the box. [File an issue](https://github.com/facebook/react/issues/new) to tell us about your use case for mixins, and we’ll help you consider alternatives or perhaps implement your feature request.\n\nMixins are not deprecated in the traditional sense. You can keep using them with `React.createClass()`, as we won’t be changing it further. Eventually, as ES6 classes gain more adoption and their usability problems in React are solved, we might split `React.createClass()` into a separate package because most people wouldn’t need it. Even in that case, your old mixins would keep working.\n\nWe believe that the alternatives above are better for the vast majority of cases, and we invite you to try writing React apps without using mixins.\n",
        "type": "MarkdownRemark",
        "contentDigest": "797c583b4f8b30c49caac47c04a5eca5",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Mixins Considered Harmful",
        "author": [
          "gaearon"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2016-07-13-mixins-considered-harmful.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2016-07-13-mixins-considered-harmful.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2016-07-13-mixins-considered-harmful.md",
      "fields": {
        "date": "2016-07-12T16:00:00.000Z",
        "slug": "/blog/2016/07/13/mixins-considered-harmful.html",
        "path": "blog/2016-07-13-mixins-considered-harmful.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/docs/implementation-notes.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/docs/implementation-notes.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/docs/implementation-notes.md absPath of file",
      "internal": {
        "content": "---\nid: implementation-notes\ntitle: Implementation Notes\nlayout: contributing\npermalink: docs/implementation-notes.html\nprev: codebase-overview.html\nnext: design-principles.html\nredirect_from: \"contributing/implementation-notes.html\"\n---\n\nThis section is a collection of implementation notes for the [stack reconciler](/docs/codebase-overview.html#stack-reconciler).\n\nIt is very technical and assumes a strong understanding of React public API as well as how it's divided into core, renderers, and the reconciler. If you're not very familiar with the React codebase, read [the codebase overview](/docs/codebase-overview.html) first.\n\nIt also assumes an understanding of the [differences between React components, their instances, and elements](/blog/2015/12/18/react-components-elements-and-instances.html).\n\nThe stack reconciler is powering all the React production code today. It is located in [`src/renderers/shared/stack/reconciler`](https://github.com/facebook/react/tree/master/src/renderers/shared/stack) and is used by both React DOM and React Native.\n\n### Video: Building React from Scratch\n\n[Paul O'Shannessy](https://twitter.com/zpao) gave a talk about [building React from scratch](https://www.youtube.com/watch?v=_MAD4Oly9yg) that largely inspired this document.\n\nBoth this document and his talk are simplifications of the real codebase so you might get a better understanding by getting familiar with both of them.\n\n### Overview\n\nThe reconciler itself doesn't have a public API. [Renderers](/docs/codebase-overview.html#stack-renderers) like React DOM and React Native use it to efficiently update the user interface according to the React components written by the user.\n\n### Mounting as a Recursive Process\n\nLet's consider the first time you mount a component:\n\n```js\nReactDOM.render(<App />, rootEl);\n```\n\nReact DOM will pass `<App />` along to the reconciler. Remember that `<App />` is a React element, that is, a description of *what* to render. You can think about it as a plain object:\n\n```js\nconsole.log(<App />);\n// { type: App, props: {} }\n```\n\nThe reconciler will check if `App` is a class or a function.\n\nIf `App` is a function, the reconciler will call `App(props)` to get the rendered element.\n\nIf `App` is a class, the reconciler will instantiate an `App` with `new App(props)`, call the `componentWillMount()` lifecycle method, and then will call the `render()` method to get the rendered element.\n\nEither way, the reconciler will learn the element `App` \"rendered to\".\n\nThis process is recursive. `App` may render to a `<Greeting />`, `Greeting` may render to a `<Button />`, and so on. The reconciler will \"drill down\" through user-defined components recursively as it learns what each component renders to.\n\nYou can imagine this process as a pseudocode:\n\n```js\nfunction isClass(type) {\n  // React.Component subclasses have this flag\n  return (\n    Boolean(type.prototype) &&\n    Boolean(type.prototype.isReactComponent)\n  );\n}\n\n// This function takes a React element (e.g. <App />)\n// and returns a DOM or Native node representing the mounted tree.\nfunction mount(element) {\n  var type = element.type;\n  var props = element.props;\n\n  // We will determine the rendered element\n  // by either running the type as function\n  // or creating an instance and calling render().\n  var renderedElement;\n  if (isClass(type)) {\n    // Component class\n    var publicInstance = new type(props);\n    // Set the props\n    publicInstance.props = props;\n    // Call the lifecycle if necessary\n    if (publicInstance.componentWillMount) {\n      publicInstance.componentWillMount();\n    }\n    // Get the rendered element by calling render()\n    renderedElement = publicInstance.render();\n  } else {\n    // Component function\n    renderedElement = type(props);\n  }\n\n  // This process is recursive because a component may\n  // return an element with a type of another component.\n  return mount(renderedElement);\n\n  // Note: this implementation is incomplete and recurses infinitely!\n  // It only handles elements like <App /> or <Button />.\n  // It doesn't handle elements like <div /> or <p /> yet.\n}\n\nvar rootEl = document.getElementById('root');\nvar node = mount(<App />);\nrootEl.appendChild(node);\n```\n\n>**Note:**\n>\n>This really *is* a pseudo-code. It isn't similar to the real implementation. It will also cause a stack overflow because we haven't discussed when to stop the recursion.\n\nLet's recap a few key ideas in the example above:\n\n* React elements are plain objects representing the component type (e.g. `App`) and the props.\n* User-defined components (e.g. `App`) can be classes or functions but they all \"render to\" elements.\n* \"Mounting\" is a recursive process that creates a DOM or Native tree given the top-level React element (e.g. `<App />`).\n\n### Mounting Host Elements\n\nThis process would be useless if we didn't render something to the screen as a result.\n\nIn addition to user-defined (\"composite\") components, React elements may also represent platform-specific (\"host\") components. For example, `Button` might return a `<div />` from its render method.\n\nIf element's `type` property is a string, we are dealing with a host element:\n\n```js\nconsole.log(<div />);\n// { type: 'div', props: {} }\n```\n\nThere is no user-defined code associated with host elements.\n\nWhen the reconciler encounters a host element, it lets the renderer take care of mounting it. For example, React DOM would create a DOM node.\n\nIf the host element has children, the reconciler recursively mounts them following the same algorithm as above. It doesn't matter whether children are host (like `<div><hr /></div>`), composite (like `<div><Button /></div>`), or both.\n\nThe DOM nodes produced by the child components will be appended to the parent DOM node, and recursively, the complete DOM structure will be assembled.\n\n>**Note:**\n>\n>The reconciler itself is not tied to the DOM. The exact result of mounting (sometimes called \"mount image\" in the source code) depends on the renderer, and can be a DOM node (React DOM), a string (React DOM Server), or a number representing a native view (React Native).\n\nIf we were to extend the code to handle host elements, it would look like this:\n\n```js\nfunction isClass(type) {\n  // React.Component subclasses have this flag\n  return (\n    Boolean(type.prototype) &&\n    Boolean(type.prototype.isReactComponent)\n  );\n}\n\n// This function only handles elements with a composite type.\n// For example, it handles <App /> and <Button />, but not a <div />.\nfunction mountComposite(element) {\n  var type = element.type;\n  var props = element.props;\n\n  var renderedElement;\n  if (isClass(type)) {\n    // Component class\n    var publicInstance = new type(props);\n    // Set the props\n    publicInstance.props = props;\n    // Call the lifecycle if necessary\n    if (publicInstance.componentWillMount) {\n      publicInstance.componentWillMount();\n    }\n    renderedElement = publicInstance.render();\n  } else if (typeof type === 'function') {\n    // Component function\n    renderedElement = type(props);\n  }\n\n  // This is recursive but we'll eventually reach the bottom of recursion when\n  // the element is host (e.g. <div />) rather than composite (e.g. <App />):\n  return mount(renderedElement);\n}\n\n// This function only handles elements with a host type.\n// For example, it handles <div /> and <p /> but not an <App />.\nfunction mountHost(element) {\n  var type = element.type;\n  var props = element.props;\n  var children = props.children || [];\n  if (!Array.isArray(children)) {\n    children = [children];\n  }\n  children = children.filter(Boolean);\n\n  // This block of code shouldn't be in the reconciler.\n  // Different renderers might initialize nodes differently.\n  // For example, React Native would create iOS or Android views.\n  var node = document.createElement(type);\n  Object.keys(props).forEach(propName => {\n    if (propName !== 'children') {\n      node.setAttribute(propName, props[propName]);\n    }\n  });\n\n  // Mount the children\n  children.forEach(childElement => {\n    // Children may be host (e.g. <div />) or composite (e.g. <Button />).\n    // We will also mount them recursively:\n    var childNode = mount(childElement);\n\n    // This line of code is also renderer-specific.\n    // It would be different depending on the renderer:\n    node.appendChild(childNode);\n  });\n\n  // Return the DOM node as mount result.\n  // This is where the recursion ends.\n  return node;\n}\n\nfunction mount(element) {\n  var type = element.type;\n  if (typeof type === 'function') {\n    // User-defined components\n    return mountComposite(element);\n  } else if (typeof type === 'string') {\n    // Platform-specific components\n    return mountHost(element);\n  }\n}\n\nvar rootEl = document.getElementById('root');\nvar node = mount(<App />);\nrootEl.appendChild(node);\n```\n\nThis is working but still far from how the reconciler is really implemented. The key missing ingredient is support for updates.\n\n### Introducing Internal Instances\n\nThe key feature of React is that you can re-render everything, and it won't recreate the DOM or reset the state:\n\n```js\nReactDOM.render(<App />, rootEl);\n// Should reuse the existing DOM:\nReactDOM.render(<App />, rootEl);\n```\n\nHowever, our implementation above only knows how to mount the initial tree. It can't perform updates on it because it doesn't store all the necessary information, such as all the `publicInstance`s, or which DOM `node`s correspond to which components.\n\nThe stack reconciler codebase solves this by making the `mount()` function a method and putting it on a class. There are drawbacks to this approach, and we are going in the opposite direction in the [ongoing rewrite of the reconciler](/docs/codebase-overview.html#fiber-reconciler). Nevertheless this is how it works now.\n\nInstead of separate `mountHost` and `mountComposite` functions, we will create two classes: `DOMComponent` and `CompositeComponent`.\n\nBoth classes have a constructor accepting the `element`, as well as a `mount()` method returning the mounted node. We will replace a top-level `mount()` function with a factory that instantiates the correct class:\n\n```js\nfunction instantiateComponent(element) {\n  var type = element.type;\n  if (typeof type === 'function') {\n    // User-defined components\n    return new CompositeComponent(element);\n  } else if (typeof type === 'string') {\n    // Platform-specific components\n    return new DOMComponent(element);\n  }  \n}\n```\n\nFirst, let's consider the implementation of `CompositeComponent`:\n\n```js\nclass CompositeComponent {\n  constructor(element) {\n    this.currentElement = element;\n    this.renderedComponent = null;\n    this.publicInstance = null;\n  }\n\n  getPublicInstance() {\n    // For composite components, expose the class instance.\n    return this.publicInstance;\n  }\n\n  mount() {\n    var element = this.currentElement;\n    var type = element.type;\n    var props = element.props;\n\n    var publicInstance;\n    var renderedElement;\n    if (isClass(type)) {\n      // Component class\n      publicInstance = new type(props);\n      // Set the props\n      publicInstance.props = props;\n      // Call the lifecycle if necessary\n      if (publicInstance.componentWillMount) {\n        publicInstance.componentWillMount();\n      }\n      renderedElement = publicInstance.render();\n    } else if (typeof type === 'function') {\n      // Component function\n      publicInstance = null;\n      renderedElement = type(props);\n    }\n\n    // Save the public instance\n    this.publicInstance = publicInstance;\n\n    // Instantiate the child internal instance according to the element.\n    // It would be a DOMComponent for <div /> or <p />,\n    // and a CompositeComponent for <App /> or <Button />:\n    var renderedComponent = instantiateComponent(renderedElement);\n    this.renderedComponent = renderedComponent;\n\n    // Mount the rendered output\n    return renderedComponent.mount();\n  }\n}\n```\n\nThis is not much different from our previous `mountComposite()` implementation, but now we can save some information, such as `this.currentElement`, `this.renderedComponent`, and `this.publicInstance`, for use during updates.\n\nNote that an instance of `CompositeComponent` is not the same thing as an instance of the user-supplied `element.type`. `CompositeComponent` is an implementation detail of our reconciler, and is never exposed to the user. The user-defined class is the one we read from `element.type`, and `CompositeComponent` creates an instance of it.\n\nTo avoid the confusion, we will call instances of `CompositeComponent` and `DOMComponent` \"internal instances\". They exist so we can associate some long-lived data with them. Only the renderer and the reconciler are aware that they exist.\n\nIn contrast, we call an instance of the user-defined class a \"public instance\". The public instance is what you see as `this` in the `render()` and other methods of your custom components.\n\nThe `mountHost()` function, refactored to be a `mount()` method on `DOMComponent` class, also looks familiar:\n\n```js\nclass DOMComponent {\n  constructor(element) {\n    this.currentElement = element;\n    this.renderedChildren = [];\n    this.node = null;\n  }\n\n  getPublicInstance() {\n    // For DOM components, only expose the DOM node.\n    return this.node;\n  }\n\n  mount() {\n    var element = this.currentElement;\n    var type = element.type;\n    var props = element.props;\n    var children = props.children || [];\n    if (!Array.isArray(children)) {\n      children = [children];\n    }\n\n    // Create and save the node\n    var node = document.createElement(type);\n    this.node = node;\n\n    // Set the attributes\n    Object.keys(props).forEach(propName => {\n      if (propName !== 'children') {\n        node.setAttribute(propName, props[propName]);\n      }\n    });\n\n    // Create and save the contained children.\n    // Each of them can be a DOMComponent or a CompositeComponent,\n    // depending on whether the element type is a string or a function.\n    var renderedChildren = children.map(instantiateComponent);\n    this.renderedChildren = renderedChildren;\n\n    // Collect DOM nodes they return on mount\n    var childNodes = renderedChildren.map(child => child.mount());\n    childNodes.forEach(childNode => node.appendChild(childNode));\n\n    // Return the DOM node as mount result\n    return node;\n  }\n}\n```\n\nThe main difference after refactoring from `mountHost()` is that we now keep `this.node` and `this.renderedChildren` associated with the internal DOM component instance. We will also use them for applying non-destructive updates in the future.\n\nAs a result, each internal instance, composite or host, now points to its child internal instances. To help visualize this, if a functional `<App>` component renders a `<Button>` class component, and `Button` class renders a `<div>`, the internal instance tree would look like this:\n\n```js\n[object CompositeComponent] {\n  currentElement: <App />,\n  publicInstance: null,\n  renderedComponent: [object CompositeComponent] {\n    currentElement: <Button />,\n    publicInstance: [object Button],\n    renderedComponent: [object DOMComponent] {\n      currentElement: <div />,\n      node: [object HTMLDivElement],\n      renderedChildren: []\n    }\n  }\n}\n```\n\nIn the DOM you would only see the `<div>`. However the internal instance tree contains both composite and host internal instances.\n\nThe composite internal instances need to store:\n\n* The current element.\n* The public instance if element type is a class.\n* The single rendered internal instance. It can be either a `DOMComponent` or a `CompositeComponent`.\n\nThe host internal instances need to store:\n\n* The current element.\n* The DOM node.\n* All the child internal instances. Each of them can be either a `DOMComponent` or a `CompositeComponent`.\n\nIf you're struggling to imagine how an internal instance tree is structured in more complex applications, [React DevTools](https://github.com/facebook/react-devtools) can give you a close approximation, as it highlights host instances with grey, and composite instances with purple:\n\n <img src=\"../images/docs/implementation-notes-tree.png\" width=\"500\" style=\"max-width: 100%\" alt=\"React DevTools tree\" />\n\nTo complete this refactoring, we will introduce a function that mounts a complete tree into a container node, just like `ReactDOM.render()`. It returns a public instance, also like `ReactDOM.render()`:\n\n```js\nfunction mountTree(element, containerNode) {\n  // Create the top-level internal instance\n  var rootComponent = instantiateComponent(element);\n\n  // Mount the top-level component into the container\n  var node = rootComponent.mount();\n  containerNode.appendChild(node);\n\n  // Return the public instance it provides\n  var publicInstance = rootComponent.getPublicInstance();\n  return publicInstance;\n}\n\nvar rootEl = document.getElementById('root');\nmountTree(<App />, rootEl);\n```\n\n### Unmounting\n\nNow that we have internal instances that hold onto their children and the DOM nodes, we can implement unmounting. For a composite component, unmounting calls a lifecycle hook and recurses.\n\n```js\nclass CompositeComponent {\n\n  // ...\n\n  unmount() {\n    // Call the lifecycle hook if necessary\n    var publicInstance = this.publicInstance;\n    if (publicInstance) {\n      if (publicInstance.componentWillUnmount) {\n        publicInstance.componentWillUnmount();\n      }\n    }\n\n    // Unmount the single rendered component\n    var renderedComponent = this.renderedComponent;\n    renderedComponent.unmount();\n  }\n}\n```\n\nFor `DOMComponent`, unmounting tells each child to unmount:\n\n```js\nclass DOMComponent {\n\n  // ...\n\n  unmount() {\n    // Unmount all the children\n    var renderedChildren = this.renderedChildren;\n    renderedChildren.forEach(child => child.unmount());\n  }\n}\n```\n\nIn practice, unmounting DOM components also removes the event listeners and clears some caches, but we will skip those details.\n\nWe can now add a new top-level function called `unmountTree(containerNode)` that is similar to `ReactDOM.unmountComponentAtNode()`:\n\n```js\nfunction unmountTree(containerNode) {\n  // Read the internal instance from a DOM node:\n  // (This doesn't work yet, we will need to change mountTree() to store it.)\n  var node = containerNode.firstChild;\n  var rootComponent = node._internalInstance;\n\n  // Unmount the tree and clear the container\n  rootComponent.unmount();\n  containerNode.innerHTML = '';\n}\n```\n\nIn order for this to work, we need to read an internal root instance from a DOM node. We will modify `mountTree()` to add the `_internalInstance` property to the root DOM node. We will also teach `mountTree()` to destroy any existing tree so it can be called multiple times:\n\n```js\nfunction mountTree(element, containerNode) {\n  // Destroy any existing tree\n  if (containerNode.firstChild) {\n    unmountTree(containerNode);\n  }\n\n  // Create the top-level internal instance\n  var rootComponent = instantiateComponent(element);\n\n  // Mount the top-level component into the container\n  var node = rootComponent.mount();\n  containerNode.appendChild(node);\n\n  // Save a reference to the internal instance\n  node._internalInstance = rootComponent;\n\n  // Return the public instance it provides\n  var publicInstance = rootComponent.getPublicInstance();\n  return publicInstance;\n}\n```\n\nNow, running `unmountTree()`, or running `mountTree()` repeatedly, removes the old tree and runs the `componentWillUnmount()` lifecycle hook on components.\n\n### Updating\n\nIn the previous section, we implemented unmounting. However React wouldn't be very useful if each prop change unmounted and mounted the whole tree. The goal of the reconciler is to reuse existing instances where possible to preserve the DOM and the state:\n\n```js\nvar rootEl = document.getElementById('root');\n\nmountTree(<App />, rootEl);\n// Should reuse the existing DOM:\nmountTree(<App />, rootEl);\n```\n\nWe will extend our internal instance contract with one more method. In addition to `mount()` and `unmount()`, both `DOMComponent` and `CompositeComponent` will implement a new method called `receive(nextElement)`:\n\n```js\nclass CompositeComponent {\n  // ...\n\n  receive(nextElement) {\n    // ...\n  }\n}\n\nclass DOMComponent {\n  // ...\n\n  receive(nextElement) {\n    // ...\n  }\n}\n```\n\nIts job is to do whatever is necessary to bring the component (and any of its children) up to date with the description provided by the `nextElement`.\n\nThis is the part that is often described as \"virtual DOM diffing\" although what really happens is that we walk the internal tree recursively and let each internal instance receive an update.\n\n### Updating Composite Components\n\nWhen a composite component receives a new element, we run the `componentWillUpdate()` lifecycle hook.\n\nThen we re-render the component with the new props, and get the next rendered element:\n\n```js\nclass CompositeComponent {\n\n  // ...\n\n  receive(nextElement) {\n    var prevProps = this.currentElement.props;\n    var publicInstance = this.publicInstance;\n    var prevRenderedComponent = this.renderedComponent;\n    var prevRenderedElement = prevRenderedComponent.currentElement;\n\n    // Update *own* element\n    this.currentElement = nextElement;\n    var type = nextElement.type;\n    var nextProps = nextElement.props;\n\n    // Figure out what the next render() output is\n    var nextRenderedElement;\n    if (isClass(type)) {\n      // Component class\n      // Call the lifecycle if necessary\n      if (publicInstance.componentWillUpdate) {\n        publicInstance.componentWillUpdate(nextProps);\n      }\n      // Update the props\n      publicInstance.props = nextProps;\n      // Re-render\n      nextRenderedElement = publicInstance.render();\n    } else if (typeof type === 'function') {\n      // Component function\n      nextRenderedElement = type(nextProps);\n    }\n\n    // ...\n```\n\nNext, we can look at the rendered element's `type`. If the `type` has not changed since the last render, the component below can also be updated in place.\n\nFor example, if it returned `<Button color=\"red\" />` the first time, and `<Button color=\"blue\" />` the second time, we can just tell the corresponding internal instance to `receive()` the next element:\n\n```js\n    // ...\n\n    // If the rendered element type has not changed,\n    // reuse the existing component instance and exit.\n    if (prevRenderedElement.type === nextRenderedElement.type) {\n      prevRenderedComponent.receive(nextRenderedElement);\n      return;\n    }\n\n    // ...\n```\n\nHowever, if the next rendered element has a different `type` than the previously rendered element, we can't update the internal instance. A `<button>` can't \"become\" an `<input>`.\n\nInstead, we have to unmount the existing internal instance and mount the new one corresponding to the rendered element type. For example, this is what happens when a component that previously rendered a `<button />` renders an `<input />`:\n\n```js\n    // ...\n\n    // If we reached this point, we need to unmount the previously\n    // mounted component, mount the new one, and swap their nodes.\n\n    // Find the old node because it will need to be replaced\n    var prevNode = prevRenderedComponent.getHostNode();\n\n    // Unmount the old child and mount a new child\n    prevRenderedComponent.unmount();\n    var nextRenderedComponent = instantiateComponent(nextRenderedElement);\n    var nextNode = nextRenderedComponent.mount();\n\n    // Replace the reference to the child\n    this.renderedComponent = nextRenderedComponent;\n\n    // Replace the old node with the new one\n    // Note: this is renderer-specific code and\n    // ideally should live outside of CompositeComponent:\n    prevNode.parentNode.replaceChild(nextNode, prevNode);\n  }\n}\n```\n\nTo sum this up, when a composite component receives a new element, it may either delegate the update to its rendered internal instance, or unmount it and mount a new one in its place.\n\nThere is another condition under which a component will re-mount rather than receive an element, and that is when the element's `key` has changed. We don't discuss `key` handling in this document because it adds more complexity to an already complex tutorial.\n\nNote that we needed to add a method called `getHostNode()` to the internal instance contract so that it's possible to locate the platform-specific node and replace it during the update. Its implementation is straightforward for both classes:\n\n```js\nclass CompositeComponent {\n  // ...\n\n  getHostNode() {\n    // Ask the rendered component to provide it.\n    // This will recursively drill down any composites.\n    return this.renderedComponent.getHostNode();\n  }\n}\n\nclass DOMComponent {\n  // ...\n\n  getHostNode() {\n    return this.node;\n  }  \n}\n```\n\n### Updating Host Components\n\nHost component implementations, such as `DOMComponent`, update differently. When they receive an element, they need to update the underlying platform-specific view. In case of React DOM, this means updating the DOM attributes:\n\n```js\nclass DOMComponent {\n  // ...\n\n  receive(nextElement) {\n    var node = this.node;\n    var prevElement = this.currentElement;\n    var prevProps = prevElement.props;\n    var nextProps = nextElement.props;    \n    this.currentElement = nextElement;\n\n    // Remove old attributes.\n    Object.keys(prevProps).forEach(propName => {\n      if (propName !== 'children' && !nextProps.hasOwnProperty(propName)) {\n        node.removeAttribute(propName);\n      }\n    });\n    // Set next attributes.\n    Object.keys(nextProps).forEach(propName => {\n      if (propName !== 'children') {\n        node.setAttribute(propName, nextProps[propName]);\n      }\n    });\n\n    // ...\n```\n\nThen, host components need to update their children. Unlike composite components, they might contain more than a single child.\n\nIn this simplified example, we use an array of internal instances and iterate over it, either updating or replacing the internal instances depending on whether the received `type` matches their previous `type`. The real reconciler also takes element's `key` in the account and track moves in addition to insertions and deletions, but we will omit this logic.\n\nWe collect DOM operations on children in a list so we can execute them in batch:\n\n```js\n    // ...\n\n    // These are arrays of React elements:\n    var prevChildren = prevProps.children || [];\n    if (!Array.isArray(prevChildren)) {\n      prevChildren = [prevChildren];\n    }\n    var nextChildren = nextProps.children || [];\n    if (!Array.isArray(nextChildren)) {\n      nextChildren = [nextChildren];\n    }\n    // These are arrays of internal instances:\n    var prevRenderedChildren = this.renderedChildren;\n    var nextRenderedChildren = [];\n\n    // As we iterate over children, we will add operations to the array.\n    var operationQueue = [];\n\n    // Note: the section below is extremely simplified!\n    // It doesn't handle reorders, children with holes, or keys.\n    // It only exists to illustrate the overall flow, not the specifics.\n\n    for (var i = 0; i < nextChildren.length; i++) {\n      // Try to get an existing internal instance for this child\n      var prevChild = prevRenderedChildren[i];\n\n      // If there is no internal instance under this index,\n      // a child has been appended to the end. Create a new\n      // internal instance, mount it, and use its node.\n      if (!prevChild) {\n        var nextChild = instantiateComponent(nextChildren[i]);\n        var node = nextChild.mount();\n\n        // Record that we need to append a node\n        operationQueue.push({type: 'ADD', node});\n        nextRenderedChildren.push(nextChild);\n        continue;\n      }\n\n      // We can only update the instance if its element's type matches.\n      // For example, <Button size=\"small\" /> can be updated to\n      // <Button size=\"large\" /> but not to an <App />.\n      var canUpdate = prevChildren[i].type === nextChildren[i].type;\n\n      // If we can't update an existing instance, we have to unmount it\n      // and mount a new one instead of it.\n      if (!canUpdate) {\n        var prevNode = prevChild.node;\n        prevChild.unmount();\n\n        var nextChild = instantiateComponent(nextChildren[i]);\n        var nextNode = nextChild.mount();\n\n        // Record that we need to swap the nodes\n        operationQueue.push({type: 'REPLACE', prevNode, nextNode});\n        nextRenderedChildren.push(nextChild);\n        continue;\n      }\n\n      // If we can update an existing internal instance,\n      // just let it receive the next element and handle its own update.\n      prevChild.receive(nextChildren[i]);\n      nextRenderedChildren.push(prevChild);\n    }\n\n    // Finally, unmount any children that don't exist:\n    for (var j = nextChildren.length; j < prevChildren.length; j++) {\n     var prevChild = prevRenderedChildren[j];\n     var node = prevChild.node;\n     prevChild.unmount();\n\n     // Record that we need to remove the node\n     operationQueue.push({type: 'REMOVE', node});\n    }\n\n    // Point the list of rendered children to the updated version.\n    this.renderedChildren = nextRenderedChildren;\n\n    // ...\n```\n\nAs the last step, we execute the DOM operations. Again, the real reconciler code is more complex because it also handles moves:\n\n```js\n    // ...\n\n    // Process the operation queue.\n    while (operationQueue.length > 0) {\n      var operation = operationQueue.shift();\n      switch (operation.type) {\n      case 'ADD':\n        this.node.appendChild(operation.node);\n        break;\n      case 'REPLACE':\n        this.node.replaceChild(operation.nextNode, operation.prevNode);\n        break;\n      case 'REMOVE':\n        this.node.removeChild(operation.node);\n        break;\n      }\n    }\n  }\n}\n```\n\nAnd that is it for updating host components.\n\n### Top-Level Updates\n\nNow that both `CompositeComponent` and `DOMComponent` implement the `receive(nextElement)` method, we can change the top-level `mountTree()` function to use it when the element `type` is the same as it was the last time:\n\n```js\nfunction mountTree(element, containerNode) {\n  // Check for an existing tree\n  if (containerNode.firstChild) {\n    var prevNode = containerNode.firstChild;\n    var prevRootComponent = prevNode._internalInstance;\n    var prevElement = prevRootComponent.currentElement;\n\n    // If we can, reuse the existing root component\n    if (prevElement.type === element.type) {\n      prevRootComponent.receive(element);\n      return;\n    }\n\n    // Otherwise, unmount the existing tree\n    unmountTree(containerNode);\n  }\n\n  // ...\n\n}\n```\n\nNow calling `mountTree()` two times with the same type isn't destructive:\n\n```js\nvar rootEl = document.getElementById('root');\n\nmountTree(<App />, rootEl);\n// Reuses the existing DOM:\nmountTree(<App />, rootEl);\n```\n\nThese are the basics of how React works internally.\n\n### What We Left Out\n\nThis document is simplified compared to the real codebase. There are a few important aspects we didn't address:\n\n* Components can render `null`, and the reconciler can handle \"empty slots\" in arrays and rendered output.\n\n* The reconciler also reads `key` from the elements, and uses it to establish which internal instance corresponds to which element in an array. A bulk of complexity in the actual React implementation is related to that.\n\n* In addition to composite and host internal instance classes, there are also classes for \"text\" and \"empty\" components. They represent text nodes and the \"empty slots\" you get by rendering `null`.\n\n* Renderers use [injection](/docs/codebase-overview.html#dynamic-injection) to pass the host internal class to the reconciler. For example, React DOM tells the reconciler to use `ReactDOMComponent` as the host internal instance implementation.\n\n* The logic for updating the list of children is extracted into a mixin called `ReactMultiChild` which is used by the host internal instance class implementations both in React DOM and React Native.\n\n* The reconciler also implements support for `setState()` in composite components. Multiple updates inside event handlers get batched into a single update.\n\n* The reconciler also takes care of attaching and detaching refs to composite components and host nodes.\n\n* Lifecycle hooks that are called after the DOM is ready, such as `componentDidMount()` and `componentDidUpdate()`, get collected into \"callback queues\" and are executed in a single batch.\n\n* React puts information about the current update into an internal object called \"transaction\". Transactions are useful for keeping track of the queue of pending lifecycle hooks, the current DOM nesting for the warnings, and anything else that is \"global\" to a specific update. Transactions also ensure React \"cleans everything up\" after updates. For example, the transaction class provided by React DOM restores the input selection after any update.\n\n### Jumping into the Code\n\n* [`ReactMount`](https://github.com/facebook/react/blob/83381c1673d14cd16cf747e34c945291e5518a86/src/renderers/dom/client/ReactMount.js) is where the code like `mountTree()` and `unmountTree()` from this tutorial lives. It takes care of mounting and unmounting top-level components. [`ReactNativeMount`](https://github.com/facebook/react/blob/83381c1673d14cd16cf747e34c945291e5518a86/src/renderers/native/ReactNativeMount.js) is its React Native analog.\n* [`ReactDOMComponent`](https://github.com/facebook/react/blob/83381c1673d14cd16cf747e34c945291e5518a86/src/renderers/dom/shared/ReactDOMComponent.js) is the equivalent of `DOMComponent` in this tutorial. It implements the host component class for React DOM renderer. [`ReactNativeBaseComponent`](https://github.com/facebook/react/blob/83381c1673d14cd16cf747e34c945291e5518a86/src/renderers/native/ReactNativeBaseComponent.js) is its React Native analog.\n* [`ReactCompositeComponent`](https://github.com/facebook/react/blob/83381c1673d14cd16cf747e34c945291e5518a86/src/renderers/shared/stack/reconciler/ReactCompositeComponent.js) is the equivalent of `CompositeComponent` in this tutorial. It handles calling user-defined components and maintaining their state.\n* [`instantiateReactComponent`](https://github.com/facebook/react/blob/83381c1673d14cd16cf747e34c945291e5518a86/src/renderers/shared/stack/reconciler/instantiateReactComponent.js) contains the switch that picks the right internal instance class to construct for an element. It is equivalent to `instantiateComponent()` in this tutorial.\n\n* [`ReactReconciler`](https://github.com/facebook/react/blob/83381c1673d14cd16cf747e34c945291e5518a86/src/renderers/shared/stack/reconciler/ReactReconciler.js) is a wrapper with `mountComponent()`, `receiveComponent()`, and `unmountComponent()` methods. It calls the underlying implementations on the internal instances, but also includes some code around them that is shared by all internal instance implementations.\n\n* [`ReactChildReconciler`](https://github.com/facebook/react/blob/83381c1673d14cd16cf747e34c945291e5518a86/src/renderers/shared/stack/reconciler/ReactChildReconciler.js) implements the logic for mounting, updating, and unmounting children according to the `key` of their elements.\n\n* [`ReactMultiChild`](https://github.com/facebook/react/blob/83381c1673d14cd16cf747e34c945291e5518a86/src/renderers/shared/stack/reconciler/ReactMultiChild.js) implements processing the operation queue for child insertions, deletions, and moves independently of the renderer.\n\n* `mount()`, `receive()`, and `unmount()` are really called `mountComponent()`, `receiveComponent()`, and `unmountComponent()` in React codebase for legacy reasons, but they receive elements.\n\n* Properties on the internal instances start with an underscore, e.g. `_currentElement`. They are considered to be read-only public fields throughout the codebase.\n\n### Future Directions\n\nStack reconciler has inherent limitations such as being synchronous and unable to interrupt the work or split it in chunks. There is a work in progress on the [new Fiber reconciler](/docs/codebase-overview.html#fiber-reconciler) with a [completely different architecture](https://github.com/acdlite/react-fiber-architecture). In the future, we intend to replace stack reconciler with it, but at the moment it is far from feature parity.\n\n### Next Steps\n\nRead the [next section](/docs/design-principles.html) to learn about the guiding principles we use for React development.\n",
        "type": "MarkdownRemark",
        "contentDigest": "a75c9f13e0e45f7ee90066b5ccf5b555",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Implementation Notes",
        "id": "implementation-notes",
        "layout": "contributing",
        "permalink": "docs/implementation-notes.html",
        "prev": "codebase-overview.html",
        "next": "design-principles.html",
        "redirect_from": "contributing/implementation-notes.html",
        "_PARENT": "/Users/yubolun/Desktop/react/content/docs/implementation-notes.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/docs/implementation-notes.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/docs/implementation-notes.md",
      "fields": {
        "slug": "docs/implementation-notes.html",
        "path": "docs/implementation-notes.md",
        "redirect": "\"contributing/implementation-notes.html\""
      }
    },
    "/Users/yubolun/Desktop/react/content/tutorial/tutorial.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/tutorial/tutorial.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/tutorial/tutorial.md absPath of file",
      "internal": {
        "content": "---\nid: tutorial\ntitle: \"入门教程\"\nlayout: tutorial\nsectionid: tutorial\npermalink: tutorial/tutorial.html\nredirect_from:\n  - \"docs/tutorial.html\"\n  - \"docs/why-react.html\"\n  - \"docs/tutorial-ja-JP.html\"\n  - \"docs/tutorial-ko-KR.html\"\n  - \"docs/tutorial-zh-CN.html\"\n---\n\n## 课前准备\n\n### 教程简介\n\n接下来，我们会一起开发一个 [tic-tac-toe](https://zh.wikipedia.org/wiki/%E4%BA%95%E5%AD%97%E6%A3%8B) 井字棋游戏。\n\n在开始教程之前如果你想预览一下这个游戏会是什么样子的话可以点击 [效果预览](https://codepen.io/gaearon/pen/gWWZgR?editors=0010) 查看。 如果里面的代码你现在一点也看不懂，很多语法都不熟悉也不需要着急，接下来教程会一步一步教你编写出这个小游戏所有的代码。\n\n你可以先试着玩一下这个游戏。除了下棋之外，还可以通过点击旁边的列表，返回到某一步棋时候的棋局状态。\n\n等到你玩得差不多了，大概了解了我们要实现什么样的功能，关掉它准备开始学习编码吧！我们会在一个简单的模板上开始写起。\n\n### 前置知识\n\n在这里我们已经假设你对 HTML 和 JavaScript 都比较熟悉了，不过即使你之前都没有了解过也可以接着跟着教程试试看。\n\n如果你想重新了解一下 JavaScript 的新特性，我们推荐你阅读 [这篇教程](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/A_re-introduction_to_JavaScript)。要注意我们在编码的时候已经开始使用 ES6 最新版本的 JavaScript, 在这篇教程里我们主要使用了 [arrow functions](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/Arrow_functions), [classes](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Classes), [`let`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/let), and [`const`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/const) 几个新的语法和关键字。你也可以使用 <a href=\"http://babeljs.io/repl/#?babili=false&evaluate=true&lineWrap=false&presets=es2015%2Creact&experimental=false&loose=false&spec=false&code=const%20element%20%3D%20%3Ch1%3EHello%2C%20world!%3C%2Fh1%3E%3B%0Aconst%20container%20%3D%20document.getElementById('root')%3B%0AReactDOM.render(element%2C%20container)%3B%0A\">Babel REPL</a> 在线预览一下这些ES6的代码被编译后的效果。\n\n### 如何编写代码\n\n你可以选择在本地的代码编辑器软件里或者是直接在浏览器里跟着编写本教程的代码，你甚至可以试着在本地配置一下开发运行环境。选择你开心的一种方式就好。\n\n#### 在浏览器中编写本教程代码\n\n这是上手最快的一种方式了！\n\n首先在新的浏览器选项卡中打开这个 [初始模板](https://codepen.io/gaearon/pen/oWWQNa?editors=0010)。 你可以看到一个井字棋的棋盘。我们接下来会在这一基础上进行游戏交互功能的开发。\n\n如果你选择这种方式，就可以直接从 [总览](#总览) 开始阅读教程啦。\n\n#### 在代码编辑器中编写本教程代码\n\n同样，你也可以试着在自己的电脑上搭建起开发运行环境来。\n\n注意： **本地搭建React的开发运行环境并不是本教程强制要求的，根据你的实际情况自行考量。**\n\n虽然在本地搭建环境要费一些功夫，但好处是你可以任意选择你惯用的编辑器来完成开发。\n\n如果你已经决定了，那么跟着下面的步骤开始搭建吧：\n\n1. 确保你电脑上安装了最新版本的 [Node.js](https://nodejs.org/zh-cn/).\n2. 跟着 [安装指南](/docs/installation.html#creating-a-new-application) 创建一个新的 React 项目。\n3. 删除掉生成项目中 `src/` 文件夹下的所有文件。\n4. 在 `src/` 文件夹下新建一个名为 `index.css` 的文件并拷贝 [这里的 CSS 代码](https://codepen.io/gaearon/pen/oWWQNa?editors=0100) 到文件中。\n5. 在 `src/` 文件夹下新建一个名为 `index.js` 的文件并拷贝 [这里的 JS 代码](https://codepen.io/gaearon/pen/oWWQNa?editors=0010) 到文件中, 并在此文件的最开头加上下面几行代码：\n\n```javascript\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n```\n\n接下来通过命令行在你的项目目录下运行 `npm start` 命令并在浏览器中打开 `http://localhost:3000` 你就能够看到空的井字棋棋盘了。\n\n我们推荐根据 [这篇教程](http://babeljs.io/docs/editors) 配置你代码编辑器的代码高亮指示。\n\n### 寻求帮助\n\n如果你遇到了任何困难，可以在 [community support resources](https://facebook.github.io/community/support.html) 寻求帮助。 加入我们的 [Reactiflux chat](/community/support.html#reactiflux-chat) 也是一个很不错的选择。如果通过上述方式还是解决不了你的问题，你也可以给我们提一个 issue.\n\n废话不多说，我们开始动手编码吧！\n\n## 总览\n\n### React 是什么？\n\nReact 是一个采用声明式，高效而且灵活的用来构建用户界面的框架。\n\nReact 当中包含了一些不同的组件，我们从使用 `React.Component` 开始：\n\n```javascript\nclass ShoppingList extends React.Component {\n  render() {\n    return (\n      <div className=\"shopping-list\">\n        <h1>Shopping List for {this.props.name}</h1>\n        <ul>\n          <li>Instagram</li>\n          <li>WhatsApp</li>\n          <li>Oculus</li>\n        </ul>\n      </div>\n    );\n  }\n}\n\n// 通过这种标签语法来使用我们上面声明的组件: <ShoppingList name=\"Mark\" />\n```\n\n这样我们就拿到了一个很有趣的看起来像 XML/HTML 的标签。你的组件向 React 描述了你想要渲染的内容。之后 React 会根据你开发应用数据的变化自动渲染和更新组件。\n\n这里的 ShoppingList 是一种 **React 组件类**，或者叫 **React 组件类型** 之类的。一个组件会接受名为 `props` 的参数，并通过名为 `render` 的方法返回一个嵌套结构的视图。\n\n`render` 返回的是你对你想要渲染内容的**描述**。React 会根据你的描述将对应的内容在屏幕上渲染出来。讲得更具体一点，`render` 返回的是一个 **React 元素**，是一种对渲染内容比较简洁的描述。大部分 React 开发者都会使用一种名为 JSX 的语法扩展来更方便地书写这种描述。比方说里面的 `<div />` 会被编译为 `React.createElement('div')` 。上面的那个例子就等同于：\n\n```javascript\nreturn React.createElement('div', {className: 'shopping-list'},\n  React.createElement('h1', /* ... h1 children ... */),\n  React.createElement('ul', /* ... ul children ... */)\n);\n```\n\n[查看完整代码。](https://babeljs.io/repl/#?babili=false&evaluate=false&lineWrap=false&presets=react&targets=&browsers=&builtIns=false&debug=false&experimental=false&loose=false&spec=false&playground=true&code=%3Cdiv%20className%3D%22shopping-list%22%3E%0A%20%20%3Ch1%3EShopping%20List%20for%20%7Bprops.name%7D%3C%2Fh1%3E%0A%20%20%3Cul%3E%0A%20%20%20%20%3Cli%3EInstagram%3C%2Fli%3E%0A%20%20%20%20%3Cli%3EWhatsApp%3C%2Fli%3E%0A%20%20%20%20%3Cli%3EOculus%3C%2Fli%3E%0A%20%20%3C%2Ful%3E%0A%3C%2Fdiv%3E)\n\n如果你对这个比较感兴趣，可以在 [API 参考](/docs/react-api.html#createelement) 查阅对 `createElement()` 方法更详细的介绍。但在我们接下来的教程中，并不会直接使用这个方法，而是继续使用 JSX.\n\n在 JSX 中你可以任意使用 JavaScript 表达式，只需要用一个大括号把表达式括起来。每一个 React 元素事实上都是一个 JavaScript 对象，你可以在你的应用中把它当保存在变量中或者作为参数传递。\n\n我们定义的 `ShoppingList` 组件只会渲染一些内置的 DOM 组件（`<div>`等），但是使用自定义的 React 组件也很简单，通过 `<ShoppingList />` 这样的标签你就可以在 React 当中调用整个 `ShoppingList` 组件。每个组件都是独立包装好的，这样也就方便你像搭积木一样组合各种组件来构建复杂的UI界面。\n\n### 开始编码\n\n你可以从这个 [模板代码](https://codepen.io/gaearon/pen/oWWQNa?editors=0010) 开始尝试本教程代码的编写。\n\n模板已经包含了我们要开发的井字棋游戏的基本骨架，而且已经定义好了样式，所以你需要关注的就只有编写 JavaScript 代码。\n\n讲得更具体一点，我们现在有3个组件：\n\n* Square\n* Board\n* Game\n\nSquare 组件代表一个单独的 `<button>`，Board 组件包含了9个squares，也就是棋盘的9个格子。Game 组件则为我们即将要编写的代码预留了一些位置。现在这几个组件都是不具备任何的交互功能的。\n\n### 通过 Props 传递数据\n\n我们先来试着从 Board 组件传递一些数据到 Square 组件。\n\n\n在 Board 组件的 `renderSquare` 方法中，我们将代码改写成下面这样，传递一个名为 `value` 的 prop 到 Square 当中：\n\n```js{3}\nclass Board extends React.Component {\n  renderSquare(i) {\n    return <Square value={i} />;\n  }\n```\n\n之后再修改 Square 组件的 `render` 方法，把其中的 `{/* TODO */}` 注释替换为 `{this.props.value}`:\n\n```js{5}\nclass Square extends React.Component {\n  render() {\n    return (\n      <button className=\"square\">\n        {this.props.value}\n      </button>\n    );\n  }\n}\n```\n\n修改前：\n\n![React Devtools](/images/tutorial/tictac-empty.png)\n\n修改后： 在每个格子当中你都能看到一个渲染出来的数字。\n\n\n![React Devtools](/images/tutorial/tictac-numbers.png)\n\n[查看此步完整代码示例。](https://codepen.io/gaearon/pen/aWWQOG?editors=0010)\n\n### 给组件添加交互功能\n\n接下来我们试着让棋盘的每一个格子在点击之后能落下一颗 \"X\" 作为棋子。我们试着把 `render()` 方法修改为如下内容：\n\n```javascript{4}\nclass Square extends React.Component {\n  render() {\n    return (\n      <button className=\"square\" onClick={() => alert('click')}>\n        {this.props.value}\n      </button>\n    );\n  }\n}\n```\n\n现在你试着点击一下某个格子，在浏览器里就会弹出一个警示框。\n\n在这里呢，我们使用了 JavaScript 当中一种新的名为 箭头函数 [arrow function](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/Arrow_functions) 的语法。注意到这里我们传给 `onClick`属性的是一个函数方法，假如我们写的是 `onClick={alert('click')}` 警示框是会立即弹出的。\n\n在 React 组件的构造方法 `constructor` 当中，你可以通过 `this.state` 为该组件设置自身的状态数据。我们来试着把棋盘格子变化的数据储存在组件的 state  当中吧：\n\n首先，我们为组件添加构造函数并初始化 state：\n\n```javascript{2-7}\nclass Square extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      value: null,\n    };\n  }\n\n  render() {\n    return (\n      <button className=\"square\" onClick={() => alert('click')}>\n        {this.props.value}\n      </button>\n    );\n  }\n}\n```\n在使用 [JavaScript classes](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes) 时，你必须调用  `super();` 方法才能在继承父类的子类中正确获取到类型的 `this` 。\n\n现在我们试着通过点击事件触发 state 的改变来更新棋盘格子显示的内容：\n\n* 将 `<button>` 当中的 `this.props.value` 替换为 `this.state.value` 。\n* 将 `() => alert()` 方法替换为 `() => this.setState({value: 'X'})` 。\n\n现在我们的 `<button>` 标签就变成了下面这样：\n\n```javascript{10-12}\nclass Square extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      value: null,\n    };\n  }\n\n  render() {\n    return (\n      <button className=\"square\" onClick={() => this.setState({value: 'X'})}>\n        {this.state.value}\n      </button>\n    );\n  }\n}\n```\n\n每当  `this.setState` 方法被触发时，组件都会开始准备更新，React 通过比较状态的变化来更新组件当中跟随数据改变了的内容。当组件重新渲染时，`this.state.value` 会变成 `'X'` ，所以你也就能够在格子里看到 X 的字样。\n\n现在你试着点击任何一个格子，都能够看到 X 出现在格子当中。\n\n[查看此步完整代码示例。](https://codepen.io/gaearon/pen/VbbVLg?editors=0010)\n\n### 开发工具\n\n在 [Chrome](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?hl=en) 或 [Firefox](https://addons.mozilla.org/en-US/firefox/addon/react-devtools/) 上安装 React 开发者工具可以让你在浏览器的开发控制台里看到 React 渲染出来的组件树。\n\n<img src=\"/images/tutorial/devtools.png\" alt=\"React Devtools\" style=\"max-width: 100%\">\n\n你同样可以在开发工具中观察到各个组件的 props 和 state.\n\n安装好开发工具之后，你可以在任意页面元素上面右键选择 “审查元素”，之后在弹出的控制台选项卡最右边会看到名为 React 的选项卡。\n\n**不过，如果你使用的是Codepen在线编辑器的话，还需要几步操作才能正确使用开发工具**\n\n1. 注册一个正式的 Codepen 账号。\n2. 点击代码编辑器页面右上角的 \"Fork\" 按钮，将代码示例拷贝为你自己的 pen.\n3. 点击右上角的 \"Change View\" 按钮并选择 \"Debug mode\".\n4. 在新打开的页面中，你就可以正常地使用 React 开发工具啦。\n\n## 状态提升\n\n我们现在已经编写好了井字棋游戏最基本的可以落子的棋盘。但是现在应用的状态是独立保存在棋盘上每个格子的 Square 组件当中的。想要编写出来一个真正能玩的游戏，我们还需要判断哪个玩家获胜，并在 X 或 O 两方之间交替落子。想要检查某个玩家是否获胜，需要获取所有9个格子上面的棋子分布的数据，现在这些数据分散在各个格子当中显然是很麻烦的。\n\n你可能会想着说，我们也可以在棋盘 Board 组件中收集各个格子 Square 组件当中的数据。虽然技术上来讲是可以实现的，但是代码这么写的话会让人很难理解，并且我们以后想要修改重构时也会非常困难。\n\n所以，最好的解决方式是直接将所有的 state 状态数据存储在 Board 组件当中。之后 Board 组件可以将这些数据传递给各个 Square 组件。\n\n**当你遇到需要同时获取多个子组件数据，或者两个组件之间需要相互通讯的情况时，把子组件的 state 数据提升至其共同的父组件当中保存。之后父组件可以通过 props 将状态数据传递到子组件当中。这样应用当中的状态数据就能够更方便地交流共享了。**\n\n像这种提升组件状态的情形在重构 React 组件时经常会遇到。我们趁现在也就来实践一下，在 Board 组件的构造函数中初始化一个包含9个空值的数组作为状态数据，并将这个数组中的9个元素分别传递到对应的9个 Square 组件当中。\n\n```javascript{2-7}\nclass Board extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      squares: Array(9).fill(null),\n    };\n  }\n\n  renderSquare(i) {\n    return <Square value={i} />;\n  }\n\n  render() {\n    const status = 'Next player: X';\n\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n```\n\n现在传入的都是空数据，井字棋游戏进行会把数组填充成类似下面这样：\n\n```javascript\n[\n  'O', null, 'X',\n  'X', 'X', 'O',\n  'O', null, null,\n]\n```\n\nBoard 现在的 `renderSquare` 方法看起来像下面这样：\n\n```javascript\n  renderSquare(i) {\n    return <Square value={i} />;\n  }\n```\n\n我们在 value 属性中传递对应 state 数组元素的值。\n\n```javascript{2}\n  renderSquare(i) {\n    return <Square value={this.state.squares[i]} />;\n  }\n```\n\n[查看此步完整代码示例。](https://codepen.io/gaearon/pen/gWWQPY?editors=0010)\n\n现在我们需要修改当某个格子被点击时触发的事件处理函数。现在每个格子当中的数据是存储在整个棋盘当中的，所以我们就需要通过一些方法，让格子组件能够修改整个棋盘组件数据的内容。因为每个组件的 state 都是它私有的，所以我们不可以直接在格子组件当中进行修改。\n\n惯例的做法是，我们再通过 props 传递一个父组件当中的事件处理函数到子组件当中。也就是从 Board 组件里传递一个事件处理函数到 Square 当中，我们来把 `renderSquare` 方法改成下面这样：\n\n```javascript{5}\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.state.squares[i]}\n        onClick={() => this.handleClick(i)}\n      />\n    );\n  }\n```\n\n注意到我们在写代码的时候，在各个属性直接换了行，这样可以改善我们代码的可读性。并且我们在 JSX 元素的最外层套上了一小括号，以防止 JavaScript 代码在解析时自动在换行处添加分号。\n\n现在我们从 Board 组件向 Square 组件中传递两个 props 参数：`value` 和 `onClick`. `onClick` 里传递的是一个之后在 Square 组件中能够触发的方法函数。我们动手来修改代码吧：\n\n* 将 Square 组件的 `render` 方法中的 `this.state.value` 替换为 `this.props.value` 。\n* 将 Square 组件的 `render` 方法中的 `this.setState()` 替换为 `this.props.onClick()` 。\n* 删掉 Square  组件中的 构造函数 `constructor` ，因为它现在已经不需要保存 state 了。\n\n进行如上修改之后，代码会变成下面这样：\n\n```javascript{1,2,4,5}\nclass Square extends React.Component {\n  render() {\n    return (\n      <button className=\"square\" onClick={() => this.props.onClick()}>\n        {this.props.value}\n      </button>\n    );\n  }\n}\n```\n\n现在每次格子被点击时就会触发传入的 `onClick` 方法。我们来捋一下这其中发生了什么：\n\n1. 添加 `onClick` 属性到内置的 DOM 元素 `<button>` 上让 React 开启了对点击事件的监听。\n2. 当按钮，也就是棋盘格子被点击时, React 会调用 Square 组件的 `render()` 方法中的 `onClick` 事件处理函数。\n3. 事件处理函数触发了传入其中的 `this.props.onClick()` 方法。这个方法是由 Board 传递给 Square 的。\n4. Board 传递了 `onClick={() => this.handleClick(i)}` 给 Square，所以当 Square 中的事件处理函数触发时，其实就是触发的 Board 当中的 `this.handleClick(i)` 方法。\n5. 现在我们还没有编写 `handleClick()` 方法，所以代码还不能正常工作。\n\n注意到这里的 `onClick` 事件是 React 组件当中所特有的。不过 `handleClick` 这些方法则只是我们编写事件处理函数时候的命名习惯。\n\n现在我们来动手编写 `handleClick` 方法吧：\n\n```javascript{9-13}\nclass Board extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      squares: Array(9).fill(null),\n    };\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n    squares[i] = 'X';\n    this.setState({squares: squares});\n  }\n\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.state.squares[i]}\n        onClick={() => this.handleClick(i)}\n      />\n    );\n  }\n\n  render() {\n    const status = 'Next player: X';\n\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n```\n\n[查看此步完整代码示例。](https://codepen.io/gaearon/pen/ybbQJX?editors=0010)\n\n我们使用了 `.slice()` 方法来将之前的数组数据**浅拷贝**到了一个新的数组中，而不是修改已有的数组。你可以在 [这个章节](/tutorial/tutorial.html#为什么不可变性在React当中非常重要) 来了解为什么不可变性在 React 当中的重要性。\n\n现在你点击棋盘上的格子应该就能够正常落子了。而且状态数据是统一保管在棋盘组件 Board 当中的。你应该注意到了，当事件处理函数触发棋盘父组件的状态数据改变时，格子子组件会自动重新渲染。\n\n现在格子组件 Square 不再拥有自身的状态数据了。它从棋盘父组件 Board 接收数据，并且当自己被点击时通知触发父组件改变状态数据，我们称这类的组件为 **受控组件**。\n\n### 为什么不可变性在React当中非常重要\n\n在上一节内容当中，我们通过使用 `.slice()` 方法对已有的数组数据进行了浅拷贝，以此来防止对已有数据的改变。接下来我们稍微了解一下为什么这样的操作是一种非常重要的概念。\n\n改变应用数据的方式一般分为两种。第一种是直接修改已有的变量的值。第二种则是将已有的变量替换为一个新的变量。\n\n#### 直接修改数据\n\n```javascript\nvar player = {score: 1, name: 'Jeff'};\nplayer.score = 2;\n// Now player is {score: 2, name: 'Jeff'}\n```\n\n#### 替换修改数据\n\n```javascript\nvar player = {score: 1, name: 'Jeff'};\n\nvar newPlayer = Object.assign({}, player, {score: 2});\n// Now player is unchanged, but newPlayer is {score: 2, name: 'Jeff'}\n\n// 或者使用最新的对象分隔符语法，你可以这么写：\n// var newPlayer = {...player, score: 2};\n```\n两种方式的结果是一样的，但是第二种并没有改变之前已有的数据。通过这样的方式，我们可以得到以下几点好处：\n\n#### 很轻松地实现 撤销/重做以及时间旅行\n\n运用不可变性原则可以让我们很容易实现一些复杂的功能。例如我们在这个教程中会实现的，通过点击列表中的某一项直接返回当某一步棋时的状态。不改变已有的数据内容可以让我们在需要的时候随时切换回历史数据。\n\n#### 记录变化\n\n在我们直接修改一个对象的内容之后，是很难判断它哪里发生了改变的。我们想要判断一个对象的改变，必须拿当前的对象和改变之前的对象相互比较，遍历整个对象树，比较每一个值，这样的操作复杂度是非常高的。\n\n而运用不可变性原则之后则要轻松得多。因为我们每次都是返回一个新的对象，所以只要判断这个对象被替换了，那么其中数据肯定是改变了的。\n\n#### 在 React 当中判定何时重新渲染\n\n运用不可变性原则给 React 带来最大的好处是，既然我们现在可以很方便地判断对象数据是否发生改变了，那么也就很好决定何时根据数据的改变重新渲染组件。尤其是当我们编写的都属于 **纯组件 pure components** 的时候，这种好处的效果更为明显。\n\n了解更多有关 `shouldComponentUpdate()` 以及如何编写 *pure components* 的内容，你可以查阅 [性能优化](/docs/optimizing-performance.html#examples) 这一篇。\n\n### 函数定义组件\n\n我们刚才已经去掉了 Square 的构造函数，事实上，更进一步的，React 专门为像 Square 组件这种只有 `render` 方法的组件提供了一种更简便的定义组件的方法： **函数定义组件** 。只需要简单写一个以 `props` 为参数的 `function` 返回 JSX 元素就搞定了。\n\n下面我们以函数定义的方式重写 Square 组件：\n\n```javascript\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n```\n\n记得把所有的 `this.props` 替换成参数 `props`. 我们应用中的大部分简单组件都可以通过函数定义的方式来编写，并且 React 在将来还会对函数定义组件做出更多优化。\n\n另外一部分简化的内容则是事件处理函数的写法，这里我们把 `onClick={() => props.onClick()}` 直接修改为 `onClick={props.onClick}` , 注意不能写成 `onClick={props.onClick()}` 否则 `props.onClick` 方法会在 Square 组件渲染时被直接触发而不是等到 Board 组件渲染完成时通过点击触发，又因为此时 Board 组件正在渲染中（即 Board 组件的 `render()` 方法正在调用），又触发 `handleClick(i)` 方法调用 `setState()` 会再次调用 `render()` 方法导致死循环。\n\n[查看此步完整代码示例。](https://codepen.io/gaearon/pen/QvvJOv?editors=0010)\n\n### 轮流落子\n\n很明显现在我们点击棋盘只后落子的只有 X 。 下面我们要开发出 X 和 O 轮流落子的功能。\n\n我们将 X 默认设置为先手棋：\n\n```javascript{6}\nclass Board extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true,\n    };\n  }\n```\n接下来，我们每走一步棋，都需要切换 `xIsNext` 的值以此来实现轮流落子的功能，接下来在 `handleClick` 方法中添加修改 `xIsNext` 的语句。\n\n```javascript{3,6}\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n```\n\n到这里我们就实现了 X 和 O 轮流落子的效果了。我们再到 `render` 方法里添加一点内容来显示当前执子的一方：\n\n```javascript{2}\n  render() {\n    const status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n\n    return (\n      // the rest has not changed\n```\n\n现在你整个的 Board 组件的代码应该是下面这样的：\n\n```javascript{6,11-16,29}\nclass Board extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true,\n    };\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.state.squares[i]}\n        onClick={() => this.handleClick(i)}\n      />\n    );\n  }\n\n  render() {\n    const status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n```\n\n[查看此步完整代码示例。](https://codepen.io/gaearon/pen/KmmrBy?editors=0010)\n\n### 判断赢家\n\n接下来我们来编写判断游戏获胜方的代码，首先在你的代码里添加下面这个判断获胜方的算法函数：\n\n```javascript\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n```\n\n然后你就可以在 Board 组件的 `render` 方法里调用它，来检查是否有人获胜并根据判断显示出  \"Winner: [X/O]\" 来表示获胜方。\n\n将 `render` 中的 `status` 替换为如下内容：\n\n```javascript{2-8}\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      // the rest has not changed\n```\n\n继续完善游戏规则，我们在 `handleClick` 里添加当前方格内已经落子/有一方获胜就就无法继续落子的判断逻辑：\n\n```javascript{3-5}\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n```\n\n可喜可贺！现在你已经编写好了一个游戏规则逻辑完整的井字棋游戏了。并且你也已经掌握了一些基本的 React 知识。所以坚持到这一步的你才是真正的赢家呀！\n\n[查看此步完整代码示例。](https://codepen.io/gaearon/pen/LyyXgK?editors=0010)\n\n## 保存历史记录\n\n接下来我们一起来实现保存棋局每一步的历史记录的功能。在现有的代码逻辑中，我们已经是在每走一步棋之后就返回一个新的 `squares` 数组了，所以想要保存历史记录也非常简单。\n\n我们计划通过一个数组对象来保存每一步的状态数据：\n\n```javascript\nhistory = [\n  {\n    squares: [\n      null, null, null,\n      null, null, null,\n      null, null, null,\n    ]\n  },\n  {\n    squares: [\n      null, null, null,\n      null, 'X', null,\n      null, null, null,\n    ]\n  },\n  // ...\n]\n```\n\n我们期望在顶层的 Game 组件中展示一个链接每一步历史记录的列表。所以就像我们之前将 state 从 Square 组件提升到 Board 中一样，现在我们把 Board 中的状态数据再提升到 Game 组件中来。\n\n首先在 Game 组件的构造函数中初始化我们需要的状态数据：\n\n```javascript{2-10}\nclass Game extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      xIsNext: true,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n```\n\n接下来，就好像我们之前对 Square 组件的操作一样。我们将 Board 中的状态数据全都移动到 Game 组件当中。Board 现在通过 `props` 获取从 Game 传递下来的数据和事件处理函数。\n\n* 删除 Board 的构造方法 `constructor` 。\n* 把 Board 的 `renderSquare` 方法中的 `this.state.squares[i]` 替换为 `this.props.squares[i]` 。\n* 把 Board 的 `renderSquare` 方法中的 `this.handleClick(i)` 替换为 `this.props.onClick(i)` 。\n\n现在我们的 Board 组件变成了下面这样：\n\n```javascript{17,18}\nclass Board extends React.Component {\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n```\n\nGame 组件的 `render` 方法现在则要负责获取最近一步的历史记录（当前棋局状态），以及计算出游戏进行的状态（是否有人获胜）。\n\n```javascript{2-11,16-19,22}\n  render() {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = calculateWinner(current.squares);\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n```\n\n既然现在由 Game 组件负责渲染游戏状态，我们可以直接把 Board 组件的 `render` 方法里的 `<div className=\"status\">{status}</div>` 删掉：\n\n```js{1-4}\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n```\n\n之后，我们需要将 Board 组件里的 `handleClick` 移动到 Game 组件当中。你可以直接把它剪切粘贴过来。\n\n不过为了实现我们新的历史记录的功能，还需要稍微修改一下我们的代码，让 `handleClick` 在每次触发时，添加当前的棋局状态数据到 `histroy` 当中。\n\n```javascript{2-4,10-12}\n  handleClick(i) {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n```\n\n代码编写到这一步，Board 组件当中现在应该只有 `renderSquare` 和 `render` 两个方法；应用状态 state 以及事件处理函数现在都定义在 Game 组件当中。\n\n[查看此步完整代码示例。](https://codepen.io/gaearon/pen/EmmOqJ?editors=0010)\n\n### 展示每步历史记录链接\n\n现在我们来试着展示每一步棋的历史记录链接。在教程的开始我们提到过，React 元素事实上都是 JS 当中的对象，我们可以把元素当作参数或定义到变量中使用。在 React 当中渲染多个重复的项目时，我们一般都以数组的方式传递 React 元素。最基本的方法是使用数组的 map 方法，我们试着来修改 Game 组件的 `render` 方法吧：\n\n```javascript{6-15,34}\n  render() {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Move #' + move :\n        'Game start';\n      return (\n        <li>\n          <a href=\"#\" onClick={() => this.jumpTo(move)}>{desc}</a>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n```\n\n[查看此步完整代码示例。](https://codepen.io/gaearon/pen/EmmGEa?editors=0010)\n\n对于每一步的历史记录，我们都创建了一个带 `<a>` 链接的 `<li>` 列表项。目前链接还没指向任何地方，别着急我们后面会继续实现切换至对应棋步的功能。有了我们现有的代码，已经能渲染出一个列表了，不过你留心的话，就会在控制台看到警告：\n\n>  Warning:\n>  Each child in an array or iterator should have a unique \"key\" prop. Check the render method of \"Game\".\n\n我们先来了解一下这条警告是什么情况。\n\n### Keys\n\n当你在 React 当中渲染列表项时，React 都会试着存储对应每个单独项的相关信息。如果你的组件包含 state 状态数据，那么这些状态数据必须被排序，不管你组件是怎么编写实现的。\n\n当你想要更新这些列表项时，React 必须能够知道是那一项改变了。这样你才能够在列表中增删改查项目。\n\n比方说下面这个例子，从前一个表单\n\n```html\n<li>Alexa: 7 tasks left</li>\n<li>Ben: 5 tasks left</li>\n```\n\n变成下面这个表单\n\n```html\n<li>Ben: 9 tasks left</li>\n<li>Claudia: 8 tasks left</li>\n<li>Alexa: 5 tasks left</li>\n```\n\n你用肉眼可以很轻易地分辨，Alexa 被移到了最后，多出来一个 Claudia。可是 React 只是电脑里运行地程序，它无从知晓这些改变。所以我们必须为列表中的每一项添加一个 *key* 作为唯一的标识符。标识符必须是唯一的，比方说刚才这个例子中的 `alexa`, `ben`, `claudia` 就可以用来做标识符。更普遍的一种情况，假如我们的数据是从数据库获取的话，表单每一项的 ID 就很适合当作它的 *key* ：\n\n```html\n<li key={user.id}>{user.name}: {user.taskCount} tasks left</li>\n```\n\n `key` 是 React 当中使用的一种特殊的属性（除此之外还有 `ref` 属性）。当元素被创建时，React 会将元素的 `key` 值和对应元素绑定存储起来。尽管 `key` 看起来像是 props 的一部分，可是事实上我们无法通过 `this.props.key` 获取到 `key` 的值。React 会自动的在判断元素更新时使用 `key` ，而组件自己是无法获取到 `key` 的。\n\n当一个列表被重新渲染时，React 会根据较新的元素内容依据相应的 key 值来匹配之前的元素内容。当一个新的 key 值添加到列表当中时，表示有一个组件被创建；被删除时表示有一个组件被销毁。Key 值可以让 React 明确标识每个组件，这样它才能在每次重新渲染时保有对应的状态数据。假如你去改变某个组件的 key 值的话，它会在下次渲染时被销毁并当作新的组件重新渲染进来。\n\n**强烈建议你在渲染列表项时添加 keys 值。** 假如你没有现成可以作为唯一 key 值的数据使用的话，你可能需要考虑重新组织设计你的数据了。\n\n假如你不提供任何 key 值，React 会提示警告，并且默认使用数组的索引作为默认的 key ，但只要你想在列表中对项目进行重新排列、添加或删除的话，这都不是一个好选择（因为对应的键值都会改变，也就会出现我们上面提到的组件key值被改变就会被当作新创建的组件处理那种情况）。手动添加列表索引值 `key={i}` 可以消除警告，但也会存在相同的问题，因此在大多数情况下都不推荐这种做法。\n\n组件的 keys 值并不需要在全局都保证唯一，只需要在当前的节点里保证唯一即可。\n\n### 实现时间旅行\n\n在我们的棋步的列表中，已经有了现成的唯一 key 值，也就是每一次 move 的记录值。我们通过  `<li key={move}>` 来添加一下。\n\n```js{6}\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Move #' + move :\n        'Game start';\n      return (\n        <li key={move}>\n          <a href=\"#\" onClick={() => this.jumpTo(move)}>{desc}</a>\n        </li>\n      );\n    });\n```\n\n[查看此步完整代码示例。](https://codepen.io/gaearon/pen/PmmXRE?editors=0010)\n\n在上面的代码中，我们同样为每一个 `<a>` 添加了一个 `jumpTo` 方法，用来将棋盘的状态切换至对应的棋步时的状态。接下来我们来着手实现这个方法：\n\n首先在 Game 组件的初始状态中多设置一项 `stepNumber: 0` ：\n\n```js{8}\nclass Game extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n    };\n  }\n```\n\n接下来，我们正是编写 `jumpTo` 来切换 `stepNumber` 的值。根据游戏的逻辑，与此同时我们还需要修改 `xIsNext` 来保证对应棋步时，执子的一方是能对应上的。我们可以根据棋步计算出是谁在执子。\n\n我们把 `jumpTo` 编写在 Game 组件中：\n\n```javascript{5-10}\n  handleClick(i) {\n    // this method has not changed\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) ? false : true,\n    });\n  }\n\n  render() {\n    // this method has not changed\n  }\n```\n\n接下来，我们在 `handleClick` 方法中对 `stepNumber` 进行更新，添加 `stepNumber: history.length` 保证每走一步 `stepNumber` 会跟着改变：\n\n```javascript{2,13}\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n```\n\n现在你可以直接在 Game 组件的 `render` 方法里根据当前的棋步获取对应的棋局状态了：\n\n```javascript{3}\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    // the rest has not changed\n```\n\n[查看此步完整代码示例。](https://codepen.io/gaearon/pen/gWWZgR?editors=0010)\n\n现在你试着点击每一步棋记录的列表中的一项，棋盘会自动更新到对应项时的棋局状态。\n\n### 总结\n\n现在你已经有了一个功能相当丰富的井字棋游戏：\n\n* 实现了井字棋游戏的基本规则并可以进行游戏，\n* 能够判断一方获胜，\n* 能够存储每一步时的棋局状态，\n* 允许玩家切换至之前的某一步“悔棋”。\n\n干得不错！我们希望你至此已经基本掌握了 React 的使用。\n\n在这里你可以查看游戏代码 [最终的成果](https://codepen.io/gaearon/pen/gWWZgR?editors=0010)。\n\n如果你之后还会有充裕的时间并且想练习你刚掌握的新技能的话，这里有一些可以完善的游戏功能实现供你参考，列表是由易到难排序的：\n\n1. 以 \"(1, 3)\" 坐标的方式记录每一步，而不是格子序号 \"6\"。\n2. 在棋步记录列表里加粗显示当前选中的项目。\n3. 在 Board 组件中用两个循环渲染出 9 个 Square 格子组件。\n4. 添加一个切换按钮来升序或降序显示棋步记录列表。\n5. 当一方获胜时，高亮显示连成一线的3颗棋子。\n\n> 译者注：如果你在实现上述功能时遇到了问题，也可以参考[React井字棋游戏完整功能示例](https://codepen.io/discountry/pen/ENrZzV)。\n\n通过这一篇教程，我们大概了解了 React 当中包含 元素、组件、props、state 在内的一些概念。想要更深入地了解每一个关键概念，你可以继续阅读 [文档](/docs/hello-world.html)。想要更详细地了解 React 组件，可以查阅 [`React.Component` API 参考](/docs/react-component.html)。\n\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "cd5aa7533a192ec77b3d2769295362de",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "入门教程",
        "id": "tutorial",
        "layout": "tutorial",
        "sectionid": "tutorial",
        "permalink": "tutorial/tutorial.html",
        "redirect_from": [
          "docs/tutorial.html",
          "docs/why-react.html",
          "docs/tutorial-ja-JP.html",
          "docs/tutorial-ko-KR.html",
          "docs/tutorial-zh-CN.html"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/tutorial/tutorial.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/tutorial/tutorial.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/tutorial/tutorial.md",
      "fields": {
        "slug": "tutorial/tutorial.html",
        "path": "tutorial/tutorial.md",
        "redirect": "[\"docs/tutorial.html\",\"docs/why-react.html\",\"docs/tutorial-ja-JP.html\",\"docs/tutorial-ko-KR.html\",\"docs/tutorial-zh-CN.html\"]"
      }
    },
    "/Users/yubolun/Desktop/react/content/blog/2017-12-15-improving-the-repository-infrastructure.md absPath of file >>> MarkdownRemark": {
      "id": "/Users/yubolun/Desktop/react/content/blog/2017-12-15-improving-the-repository-infrastructure.md absPath of file >>> MarkdownRemark",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/blog/2017-12-15-improving-the-repository-infrastructure.md absPath of file",
      "internal": {
        "content": "---\ntitle: \"Behind the Scenes: Improving the Repository Infrastructure\"\nauthor: [gaearon, bvaughn]\n---\n\n随着我们不断地在 [React 16](/blog/2017/09/26/react-v16.0.html) 的投入，我们在 React 仓库中对其目录结构和大量的构建工具进行了改版。此外，我们将类似 [Rollup](https://rollupjs.org/)， [Prettier](https://prettier.io/)，和 [Google Closure Compiler](https://developers.google.com/closure/compiler/) 引入到我们的工作流中。其他开发者通常会问我们在项目中如何使用这些工具等问题。在本篇博客中，我们将分享一些我们在 2017 年在构建工具和测试等基础架构上所做的一些改变，以及激励他们尝试的原因。\n\n尽管这些改变帮助我们将 React 变得更好，但他们并不会直接影响大多数 React 用户。然而，我们希望能够在博客中将其记录下来以能够帮助到其他库的作者来解决类似问题。我们的贡献者可能也会发现这些记录非常有用。\n\n## 通过 Prettier 格式化代码\n\nReact 是第一个[完全拥抱](https://github.com/facebook/react/pull/9101)[Prettier](https://prettier.io/)的大型软件库之一，通过其来自动格式化代码。我们当前的 Prettier 配置组成：\n\n* [使用 Prettier Node API 的](https://github.com/facebook/react/blob/cc52e06b490e0dc2482b345aa5d0d65fae931095/scripts/prettier/index.js#L71-L77)本地的 [`yarn prettier`](https://github.com/facebook/react/blob/cc52e06b490e0dc2482b345aa5d0d65fae931095/package.json#L115) 命令来格式化文件。我们一般在提交变更之前运行。其非常快，因为其仅检查[之前从远程服务器下发的变更文件](https://github.com/facebook/react/blob/cc52e06b490e0dc2482b345aa5d0d65fae931095/scripts/shared/listChangedFiles.js#L29-L33)。\n* [运行 Prettier](https://github.com/facebook/react/blob/cc52e06b490e0dc2482b345aa5d0d65fae931095/scripts/prettier/index.js#L79-L90) 脚本是我们[持续集成检查](https://github.com/facebook/react/blob/d906de7f602df810c38aa622c83023228b047db6/scripts/circleci/test_entry_point.sh#L10)的一部分。其不会尝试重写文件，但其仍有可能构建失败若任何文件和 Prettier 输出的文件不同。这确保了除非其已经被完全格式化，否则我们无法合并提交请求。\n\n一部分团队成员也已经将其设置为[编译器集成](https://prettier.io/docs/en/editors.html)。我们对 Prettier 的体验非常棒，我们也推荐给其他任何写 JavaScript 的团队。\n\n## 重组成单一仓库\n\n自从 React 被分解成包，其已经成为了的[独立库（monorepo）](https://danluu.com/monorepo/)：一系列的包被放在一个单独的库下。这使得其更容易进行调整和共用工具，但我们的目录结构嵌套过深以致于难以理解。哪个文件归属于哪个包并不是很清晰。自 React 16 发布之后，我们决定完全重新调整仓库结构。这就是我们的成果。\n\n### 迁移到 Yarn\n\nYarn 包管理工具在几个月前[引入了一种称为工作间（Workspaces）的特性](https://yarnpkg.com/blog/2017/08/02/introducing-workspaces/)。这一特性能够让你告诉 Yarn 你的独立库的包在文件目录的什么位置。每一次你运行 `yarn`，除了安装你的依赖它还会设置从你项目的 `node_modules` 指向你的包的资源文件的符号链接（symlink）。\n\n由于有工作间，我们自己的包之间的完全引入（例如从 `react-dom` 中引入 `react`）仅能够和任何支持 Node 解析机制的工具一起使用。我们遇到的唯一问题则是 Jest 没有在链接包内部进行转换，但我们[发现了修复办法](https://github.com/facebook/jest/pull/4761)，并将其合并到 Jest 中。\n\n为支持 Yarn 工作间，我们增加了 `\"workspaces\": [\"packages/*\"]` 到我们的 [`package.json`](https://github.com/facebook/react/blob/cc52e06b490e0dc2482b345aa5d0d65fae931095/package.json#L4-L6) 中，并将所有的代码移入到[顶层的 `packages/*` 文件夹中](https://github.com/facebook/react/tree/cc52e06b490e0dc2482b345aa5d0d65fae931095/packages)，每个都有单独的 `package.json` 文件\n\n每个包以相同的方式组织。对于每一个公开的 API 入口如 `react-dom` 或 `react-dom/server`，在包的根目录下有一个文件对来自 `/src/` 下的子目录重新暴露。将入口指向源代码而不是构建版本是有意而为之。通常，我们在开发期间会在每一次变更后重新运行部分测试。必须进行构建项目来运行测试会出奇的慢。当我们将包发布到 npm 时，我们再在 `/npm/` 文件夹下将入口文件指向构建版本。\n\n并不是所有包都要发布到 npm 上。例如，我们保留一些很小的工具函数并可以安全地复制到一个[称为 `shared` 的伪包](https://github.com/facebook/react/tree/cc52e06b490e0dc2482b345aa5d0d65fae931095/packages/shared)。我们的打包器被配置成[仅会将声明在 `package.json` 的 `dependencies` 中的项目作为第三方库](https://github.com/facebook/react/blob/cc52e06b490e0dc2482b345aa5d0d65fae931095/scripts/rollup/build.js#L326-L329)，因此其可以很顺利地将 `shared` 的代码打包到 `react` 和 `react-dom` 中而不会在构建版本中留下任何对 `shared/` 的引用。因此你也可以使用 Yarn 工作间即使你不打算发布实际的 npm 包！\n\n### 移除自定义模块系统\n\n过去，我们使用了一个称为 \"Haste\" 的非标准模块系统，其能够让我们通过唯一的 `@providesModule` 从其他文件引用在其他任何地方的任何文件。其完全避免了类似 `../../../../` 相对路径过深的引用问题并且对于生产代码来说很棒。然而，这使得在包之间很难理解其依赖关系。我们也不得不重新调整这一黑科技使其能和不同的工具一同运行。\n\n我们决定 [移除 Haste](https://github.com/facebook/react/pull/11303) 并使用 Node 的相对引用的解析机制来代替。为避免相对路径过深的问题，我们将[我们的仓库结构进行扁平化处理](https://github.com/facebook/react/pull/11304) 所以在每个包内部之多有一层深度：\n\n```\n|-react\n|  |-npm\n|  |-src\n|-react-dom\n|  |-npm\n|  |-src\n|  |  |-client\n|  |  |-events\n|  |  |-server\n|  |  |-shared\n```\n\n这样，其相对路径只会包含一个 `./` 或 `../`，后跟文件名。若一个包需要引入另外一个，其可以通过绝对路径从顶层入口来引入。\n\n实践中，我们仍然会有[一些跨包间的“内部”引入](https://github.com/facebook/react/blob/cc52e06b490e0dc2482b345aa5d0d65fae931095/packages/react-dom/src/client/ReactDOMFiberComponent.js#L10-L11)。其打破了这一原则，但很明确，我们计划逐渐摆脱这一方式。\n\n## 编译成扁平化的包\n\n历史上，React 被分成两种不同的形式：作为一个单文件构建版本以让你能够在浏览器中通过一个 `<script>` 标签引用，和作为 CommonJS 模块的集合以让你能够通过类似 webpack 或 Browserify 来进行打包。\n\nReact 16 之前，作为 npm 包发布的组成部分的每个 React 源文件对应着一个 CommonJS 模块。导入 `react` 或 `react-dom` 使得打包器从它们通过 CommonJS 模块在[内部的 `lib` 文件夹](https://unpkg.com/react@15/lib/)构建的依赖树作为[入口](https://unpkg.com/react@15/lib/)。\n\n然而，这一方式有诸多缺点：\n\n* **不一致** 不同的工具对于引入相同的 React 代码会产生不同的尺寸，相差最多会达到 30 kB（gzip 之前）。\n* **对于打包器用户来说非常低效** 现今大多数打包器会在模块边界产生大量的 “胶水代码”。其让模块间能够相互独立，但增加了解析时间，包的尺寸以及构建时间。\n* **对于 Node 用户来说非常低效** 当在 Node 环境下运行时，在针对开发模式的代码执行前运行 `process.env.NODE_ENV` 会由于其检查环境变量而带来二娃的开销。这拖慢了 React 服务端渲染。我们也无法缓存到一个变量内，因为其妨碍了 Uglify 进行无用代码的擦除。\n* **破坏了封装** React 内部文件同时被暴露在开源社区（通过 `react-dom/lib/*` 引入）和 Facebook 内部。首先其是一种非常方便在项目内共享工具函数的方式，但同时这也增加了维护成本，因为重命名或改变内部函数的参数类型都可能会破坏不相关的项目。\n* **妨碍新特性实验** 对于 React 团队来说没有其他方式来实验任何新的编译技术。例如，理论上，我们可能会想要应用[新的 Google Closure Compiler](https://developers.google.com/closure/compiler/docs/api-tutorial3) 压缩或 [Prepack](https://prepack.io/) 来处理我们的部分代码，但他们被设计成是针对完整的包而不是我们曾经发布到 npm 的小的独立模块。\n\n由于这样那样的问题，我们在 React 16 调整了策略。对于 Node.js 和打包器我们仍发布到 CommonJS 模块，每一个入口我们仅发布两个 CommonJS 包而不是在 npm 包中发布许多独立的文件\n\n例如，当你在 React 16 引入 `react` 时，打包器会发现[入口](https://unpkg.com/react@16/index.js)，只需要重新导出两个文件中的一个：\n\n```js\n'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n```\n\n在 React 提供的每个包里， [`cjs` 文件夹](https://unpkg.com/react@16/cjs/) (\"CommonJS\" 的简写) 下面包含了为每个入口起点提供的开发版本和预发布版本的 bundle。\n\n比如说，[`react.development.js`](https://unpkg.com/react@16/cjs/react.development.js) 是供开发版使用的。它具有较强的可读性并且有一些注释。另一方面，[`react.production.min.js`](https://unpkg.com/react@16/cjs/react.production.min.js) 在被发布到 npm 之前是经过压缩优化的。\n\n注意这和我们之前使用的单文件的浏览器构建策略实质上是非常相似的（现在仅是重新规划到 [`umd` 目录](https://unpkg.com/react@16/umd/)下，[通用模块定义（Universal Module Definition）](https://www.davidbcalhoun.com/2014/what-is-amd-commonjs-and-umd/)的缩写）。现在我们也对 CommonJS 构建采用同样的策略。\n\n### 迁移至 Rollup\n\n仅仅是将 CommonJS 模块编译成单文件包并不能解决之前的所有问题。而真正标志性的胜利是将我们的打包系统从 Browserify 到 [Rollup](https://rollupjs.org/)[迁移](https://github.com/facebook/react/pull/9327)。\n\n[Rollup 本质上被设计成针对库而不是应用](https://medium.com/webpack/webpack-and-rollup-the-same-but-different-a41ad427058c)，其非常适合 React 这样的用例。它非常好的解决了一个问题：如何将多个模块的代码通过非常小的垃圾代码整合到一个扁平化文件中。为了达到这一要求，其将所有的代码放到同一作用域下并重命名变量以保证他们不会冲突，而非像其他打包器一样将模块变成函数。这样产生的代码更易于 JavaScript 引擎解析，易于阅读，也易于压缩器优化。\n\nRollup 目前还不支持一些对于应用构建来说非常重要的特性，例如代码分隔。然而，其并不算致力于替换掉诸如非常擅长处理这类工作的 webpack。Rollup 非常适合如 React 等 *框架*，因为其能够被预构建而后被集成到应用中。\n\n你可以在[这里](https://github.com/facebook/react/blob/8ec146c38ee4f4c84b6ecf59f52de3371224e8bd/scripts/rollup/build.js#L336-L362)找到我们的 Rollup 构建配置，和[当前我们在用的一系列插件](https://github.com/facebook/react/blob/8ec146c38ee4f4c84b6ecf59f52de3371224e8bd/scripts/rollup/build.js#L196-L273)。\n\n### 迁移至 Google Closure Compiler\n\n在迁移至扁平化包之后，我们开始在 [JavaScript 版本的 Google Closure Compiler](https://github.com/google/closure-compiler-js) 下使用它的“简单”模式。根据我们的经验，即使先进的压缩技术不可用，其仍然能够明显优于 Uglify，由于其能够更好的消除无用代码和在适当的时候内联函数。\n\n首先，我们可以对我们发布到开源社区仅使用 Google Closure Compiler。在 Facebook，我们仍然需要检查包来解压，以让我们能够在 React 生产环境崩溃时候能够通过我们的错误报告工具进行定位（symbolicate）。我们通过设置了一个完全禁止编译器重命名的[标志](https://github.com/google/closure-compiler/pull/2707)来完成开发。这使得我们应用其他如函数内联（function inlining），但为 Facebook 特定的 React 构建版本保留了完整的代码可读性。为了提高输出的可读性，我们[也使用 Prettier 来自定义构建](https://github.com/facebook/react/blob/cc52e06b490e0dc2482b345aa5d0d65fae931095/scripts/rollup/build.js#L249-L250)。有趣的是，在调试构建的过程时运行生产版本的构建包是在构建包里发现无用代码的一种很好的方式。\n\n当前，所有 React 的产品包 [通过在 Google Closure Compiler 简单模式下运行](https://github.com/facebook/react/blob/cc52e06b490e0dc2482b345aa5d0d65fae931095/scripts/rollup/build.js#L235-L248)，同时我们也期望能够在未来支持更先进的优化方案。\n\n### 防止若无用代码被擦除\n\n当我们在 React 上使用一个有效的[无用代码擦除](https://en.wikipedia.org/wiki/Dead_code_elimination)方案时，我们无法对 React 用户使用的工具做许多的假设。\n\n通常，当你[在为生产环境配置一个打包器](/docs/optimizing-performance.html#use-the-production-build)时，你需要告诉它通过 `\"production\"`字符串替换掉 `process.env.NODE_ENV`。这一环节有时候被称为“环境检查（envification）”。思考这一代码：\n\n```js\nif (process.env.NODE_ENV !== \"production\") {\n  // development-only code\n}\n```\n\n在环境检查后，这一判断条件将会永远为 `false`，并会被大多数压缩器完全擦除：\n\n```js\nif (\"production\" !== \"production\") {\n  // development-only code\n}\n```\n\n然而，若打包器被误配置，你可能意外地将开发版本的代码发布到生产环境中。我们无法阻止这一问题，但当发生时，我们可以设置一些步骤减少一些常见的用例。\n\n#### 防止过晚环境检查\n\n如之前提到，我们的入口现在看起来像这样：\n\n```js\n'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n```\n\n然而，一些打包器会在环境检查之前执行 `require`。在这样的情况，即使 `else` 无法执行，文件 `cjs/react.development.js` 仍然会被打包。\n\n为了防止这一情况，我们也将整个开发版本的 `cjs/react.development.js`  包内容包裹在另外一个 `process.env.NODE_ENV` 检查：\n\n```js\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n    // bundle code\n  })();\n}\n```\n\n这一方式，即使应用打包了开发版本和生产版本的文件，开发版本的文件在环境检查后将会是空。\n\n额外的 [IIFE](https://en.wikipedia.org/wiki/Immediately-invoked_function_expression) 包裹是有必要的，因为在 JavaScript 中 `if` 语句内部的一些声明（如函数）无法被替换。\n\n#### 检测错误的无用代码擦除\n\n即使[环境变更](https://twitter.com/iamakulov/status/941336777188696066)，许多流行的打包器目前仍无法强制用户指定是开发模式或生产模式。在这样的情况，`process.env.NODE_ENV` 通常由运行时的 polyfill 设置，但无用代码擦除检测并不会有效。\n\n我们无法完全阻止 React 用户错误配置他们的打包器，但我们可以在 [React DevTools](https://github.com/facebook/react-devtools) 里引入一些额外的检查。\n\n若执行的是开发包，[React DOM 会报告给 React 开发工具](https://github.com/facebook/react/blob/d906de7f602df810c38aa622c83023228b047db6/packages/react-dom/src/client/ReactDOM.js#L1333-L1335)：\n\n<br>\n\n<img src=\"../images/docs/devtools-dev.png\" style=\"max-width:100%\" alt=\"React DevTools on a website with development version of React\">\n\n仍然有一些更糟糕的场景。有时，`process.env.NODE_ENV` 在运行时被设置为 `\"production\"` 而不是在构建时间。这在 Node.js 是正常的，但对于客户端构建来说则很糟糕，因为无用的开发代码也被打包进去了，即使其永远不会执行。这更难被检测到，但我们发现了在大多数情况下效果不错的一个试探性方法并且貌似不会产生误差。\n\n我们可以写一个函数，仅在[开发分支](https://github.com/facebook/react/blob/d906de7f602df810c38aa622c83023228b047db6/packages/react-dom/npm/index.js#L11-L20)下包含任意字符串。而后，若 `process.env.NODE_ENV` 被设置为 `\"production\"`，我们可以在[那个函数里调用 `toString()`](https://github.com/facebook/react-devtools/blob/b370497ba6e873c63479408f11d784095523a630/backend/installGlobalHook.js#L143)并去验证仅会在开发模式下才会被抛出的字符串。若仍然在这里，无用代码的擦除并不会生效，而且我们也需要警告开发者。由于开发可能不会注意到 React DevTool 在生产页面发出的警告。 我们也在 React DevTool 从 [`setTimeout` 扔出一个错误](https://github.com/facebook/react-devtools/blob/b370497ba6e873c63479408f11d784095523a630/backend/installGlobalHook.js#L143)并希望能够被错误分析工具捕获。\n\n我们意识到这方法有些脆弱。`toString()` 方法并不可靠并且可能在未来有些浏览器上会改变它的行为。这就是为什么我们将这些逻辑放到 React DevTool 里而不是 React 里。如果在之后出现了问题，这允许我们能移除它。我们也会发出警告仅当我们*发现*特别的字符串而不是我们*没*发现它。这一方式，如果 `toString()` 的输出变得不可测，或被重写，这一警告也不会触发。\n\n## 尽早捕获错误\n\n我们想要尽早地捕获错误。然而，即使扩展我们的测试覆盖率，我们偶尔还是会犯错误。今年我们在我们的构建和测试环节做了些调整以使其更难出错。\n\n### 迁移至 ES 模块\n\n通过 CommonsJS 的 `require()` 和 `module.exports`，其很容易引入一个实际上并不存在的函数，且直到你调用才会意识到。然而，若你输入错了一个引入的方法名称，类似 Rollup 这样原生支持 [`import`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import) 和 [`export`](https://developer.mozilla.org/en-US/docs/web/javascript/reference/statements/export) 语法的工具将会构建失败。在 React 16 发布后，我们将整个 React 的源码调整成为了 ES 模块语法。\n\n不仅提供了额外的保护，也缩小了构建包的体积。许多 React 模块仅暴露工具函数，但 CommonJS 强制要求我们将它们包装到对象里。通过将这些工具函数转换成命名的暴露并消除包装它们的对象，我们让 Rollup 将其放置在顶层作用于，这样能够让压缩器在生产版本压缩它们的名称。\n\n目前，仅决定将源代码转换成 ES 模块，但不包括测试代码。我们使用类似 `jest.resetModules()` 这样强有力的工具并想要在测试中当模块初始化时能有更紧密的控制力。为了在测试中使用 ES 模块，我们支持了 [Babel CommonJS transform](https://github.com/facebook/react/blob/cc52e06b490e0dc2482b345aa5d0d65fae931095/scripts/jest/preprocessor.js#L28-L29) 插件，但仅针对测试环境。\n\n### 在生产模式下运行测试\n\n过去，我们在开发环境下运行所有测试。这让我们对 React 所产生的警告信息进行测试，并且貌似有一种普通的意义。然而，即使我们尝试在开发环境和生产环境上保持代码路径最小化的差异，但我们仍然会意外地在仅针对生产环境的代码上出现未被测试覆盖的错误，并且会产生一个 issues 在 Facebook 的 React 仓库上。x\n\n为了解决这一问题，我们在CI（持续集成）上增减了运行所有 pull request 的 [`yarn test-prod`](https://github.com/facebook/react/blob/cc52e06b490e0dc2482b345aa5d0d65fae931095/package.json#L110) 的新命令，[在生产环境下执行所有的测试用例](https://github.com/facebook/react/pull/11616)。我们将所有测试里任何有关警告信息的测试断言都包裹在开发模式的条件分支下，因此在两种环境下，他们仍然可以检测其预期行为。由于我们自定义了一个 通过[错误代码](/blog/2016/07/11/introducing-reacts-error-code-system.html)来替换生产环境的错误信息的 Babel 转换插件，我们也加入了一个[逆向转换](https://github.com/facebook/react/blob/cc52e06b490e0dc2482b345aa5d0d65fae931095/scripts/jest/setupTests.js#L91-L126)作为生产环境测试运行的一部分。\n\n### 在测试环境下使用公共 API\n\n当我们[重写 React reconciler](https://code.facebook.com/posts/1716776591680069/react-16-a-look-inside-an-api-compatible-rewrite-of-our-frontend-ui-library/)，我们意识到了对公共 API 而不是针对对内部模块编写测试的重要性。若针对公共 API 编写测试，其从用户视角来看什么需要被测试是非常清晰的，即使你完全从零开始重新实现，你也可以运行它。\n\n我们到非常棒的 React 社区[寻求帮助](https://github.com/facebook/react/issues/11299)将剩余的测试调整为测试公共 API。目前大部分的测试都已经被调整了。这一过程并不容易。有时一个单元测试仅调用一个内部方法，并且从用户地角度来看很难明确指出其期望测试的行为。我们找寻出了一些策略来解决这一问题。第一件事就是尝试从 git 的历史记录中找出该测试被添加的时间点，并从 issue 和 提交（pull request）的描述中发现一些线索。通常比原有的测试文件更有价值！一个很好验证猜测的方式是注释掉被测试的代码中某一行。若测试失败，我们便可以确定其在特定代码路径的重要性。\n\n我们想要给[每一位贡献过的伙伴](https://github.com/facebook/react/issues?q=is%3Apr+11299+is%3Aclosed)献上我们深深地感谢。\n\n### 对编译后的包运行测试\n\n这也是对公共 API 编写测试的额外收益：现在我们可以[对编译后的包运行测试](https://github.com/facebook/react/pull/11633)。\n\n这帮助我们确保类似 Babel、Rollup 和 Google Closure Compiler 不会引人任何的 bug。这也为之后更为激进的优化方式打开了一扇门，只要我们能够确保 React 被优化之后能和之前预期的行为保持一致。\n\n为了实现这一效果，我们创建了[第二个 Jest 配置](https://github.com/facebook/react/blob/cc52e06b490e0dc2482b345aa5d0d65fae931095/scripts/jest/config.build.js)。它重写我们默认的配置，把入口指向了 `react`、`react-dom`，并将其他入口指向 `/build/packages/` 文件夹。该文件夹并不包含任何 React 的源码，并反应了发布到 npm 上的内容。其在你运行 `yarn build` 之后生成。\n\n这使得我们能够像我们通常在源代码运行的测试一样进行精准的测试，但使用开发环境和通过 Rollup 和 Google Closure Compiler 构建的生产环境的预发布的 React 包来执行。\n\n不同于普通的测试，包测试依赖于构建产品，因此其无法很好的快速迭代。然而，其仍然能够通过在 CI 服务上运行，因此若出现崩溃，测试将会显示测试失败，我们也将会知道无法安全地将其合并到 master 分支上。\n\n仍有一些测试文件我们故意没有在编译包上运行。有时我们想要模拟（mock）一个内部模块或重写一个目前不希望公开的特性标记。对于这些情况，我们通过将文件名从 `MyModule-test.js` 重命名为 `MyModule-test.internal.js` 来将其列入测试文件的黑名单。\n\n目前，在 2,650 个 React 测试中有超过 93% 的测试是针对编译后的包。\n\n### 格式化编译后的包\n\n除了格式化我们的源代码，我们在编译后的包上运行了更多一系列的格式化规则检查（实际上，[仅有两个](https://github.com/facebook/react/blob/cc52e06b490e0dc2482b345aa5d0d65fae931095/scripts/rollup/validate/eslintrc.cjs.js#L26-L27)）。这在底层工具上给了我们额外的保护防止引入异常并[确保](https://github.com/facebook/react/blob/cc52e06b490e0dc2482b345aa5d0d65fae931095/scripts/rollup/validate/eslintrc.cjs.js#L22)包没有使用更老的浏览器不支持的任何语言特性。\n\n### 模拟包发布\n\n甚至在构建后的包上运行测试也无法避免引入破坏的更新。例如，我们在我们的 `package.json` 文件中使用 `files` 字段来指向应该被发布到 npm 上的关于具体的文件夹和文件的白名单。然而，其很容易增加一个新的入口指向一个包但是忘记将其添加到白名单内。甚至包的测试已经通过，但在发布之后其入口则会丢失。\n\n为了避免类似的情况，现在，在构建之后我们[通过运行 `npm pack` 和 快速解压](https://github.com/facebook/react/blob/cc52e06b490e0dc2482b345aa5d0d65fae931095/scripts/rollup/packaging.js#L129-L134)来模拟 npm 发布。类似 `npm publish`，这一命令过滤了任何不在 `files` 白名单内的任何东西。通过这一方式，若我们忘记添加一个入口到列表中，其将会在构建文件夹中缺失，而依赖于它的包测试将会失败。\n\n### 创建手动测试文件\n\n我们的单元测试仅在 Node 环境下运行，但不在浏览器环境下。这是有意而为之，因为在我们的经验中基于浏览器的测试工具非常奇怪，并且无法捕获许多问题。\n\n我们可以摆脱这一问题，因为访问 DOM 的代码是固定的在少数几个文件中，并且通常不会改变。每周，我们将 Facebook.com 的 master 分支代码更新到 React 的最新提交。在 Facebook，对于重要的产品流程，我们使用了一系列内部的 [WebDriver](http://www.seleniumhq.org/projects/webdriver/) 测试，并能够捕获一些异常。React 更新首先会被员工使用，因此紧急的 bug 会在它们到达 200 万的用户前被报告。\n\n其仍然很难评审 DOM 相关的变更，而且我们偶尔也会犯错误。尤其是，很难记住所有代码必须要处理的边界条件，为什么要被添加，以及何时能将它们安全地移除。我们考虑增加些在浏览器上运行的自动化测试，但我们不想拖慢整个开发周期并处理一个脆弱的 CI 环境。自动化测试并不是永远都能捕获 DOM 异常。例如，一个显示在浏览器上的输入值可能和它所报告的 DOM 属性不匹配。\n\n我们就这个问题和 [Brandon Dail](https://github.com/aweary)、 [Jason Quense](https://github.com/jquense) 以及 [Nathan Hunzaker](https://github.com/nhunzaker) 进行了交谈。他们之前为 ReactDOM 提交了大量的补丁但很遗憾的是我们没有及时地进行审阅。我们决定给他们提交的权限，但要求他们对于类似输入管理的 DOM 相关的区域创建[一系列的手工测试](https://github.com/facebook/react/pull/8589)。这一整套手动的测试文件在过去一年[不断增长](https://github.com/facebook/react/commits/master/fixtures/dom)。\n\n这些测试文件作为 React 应用的设施放在 [`fixtures/dom`](https://github.com/facebook/react/tree/d906de7f602df810c38aa622c83023228b047db6/fixtures/dom) 里。增加一个测试文件涉及编写一个代码有预期行为说明的 React 组件和相关问题及浏览器怪异行为（quirks）的链接，类似[这个例子](https://github.com/facebook/react/pull/11760)：\n\n<img src=\"https://user-images.githubusercontent.com/590904/33555298-dd52fb4e-d8cd-11e7-80e9-8369538eb633.png\" style=\"max-width:100%\" alt=\"DOM fixture example\">\n\n这个测试文件应用能够让你选择一个方便对比改变前后的 React 版本（本地或已发布到 npm 的版本）。当我们改变 DOM 交互的相关行为时，我们能够通过在不同的浏览器运行相关的测试文件验证其是否还存在问题。\n\n在某些情况，一个改变复杂到需要一个单独的并基于此专门构建的测试文件来进行验证。例如，[在 React 16 中处理 DOM 属性](/blog/2017/09/08/dom-attributes-in-react-16.html)很难在一开始就能自信地实现。我们尝试挖掘不同滴边界条件，并为 React 16 的及时发布几乎放弃了它。然而，我们构建了一份 用于在之前 React 版本和下一版本 React 渲染所有支持的属性和错误拼写的属性的[\"属性表测试文件（attribute table fixture）\"](https://github.com/facebook/react/tree/d906de7f602df810c38aa622c83023228b047db6/fixtures/attribute-behavior) ，并显示两者的不同。其耗费了一些循环（关键的特性是将相似的行为组合到一起）但其最终能够让我们在几天时间内修复所有主要的问题。\n\n<br>\n\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">We went through the table to vet the new behavior for every case (and discovered some old bugs too) <a href=\"https://t.co/cmF2qnK9Q9\">pic.twitter.com/cmF2qnK9Q9</a></p>&mdash; Dan Abramov (@dan_abramov) <a href=\"https://twitter.com/dan_abramov/status/906244378066345984?ref_src=twsrc%5Etfw\">September 8, 2017</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n运行测试文件仍然有大量的工作，我们考虑将其中一部分自动化。测试应用仍然是非常宝贵的，甚至是对 React 目前存在的行为和所有的边界条件以及浏览器 bug 的一个文档。使我们有信心在不破坏重要的用例的条件下对逻辑进行重大的调整。我们考虑的另外一个调整是增加一个 Github 机器人构建 并对每一次涉及相关文件的提交自动地部署测试文件，因此每个人都可以进行浏览器测试。\n\n### 预防死循环\n\nReact 16 代码包含了大量的 `while` 循环。它们让我们避免发生在早期 React 版本的可怕的过深的调用栈路径，但使得 React 开发变得非常难。每次退出条件出现错误时我们的测试将会被挂起，并花费一些时间来找出哪个循环引发了这一问题。\n\n受到 [Repl.it 所采用策略的](https://repl.it/site/blog/infinite-loops) 启发，我们在测试环境增加了一个[防止死循环的 Babel 插件](https://github.com/facebook/react/blob/d906de7f602df810c38aa622c83023228b047db6/scripts/babel/transform-prevent-infinite-loops.js)。若某些循环超过了循环允许的最大数值，我们将会抛出一个错误并立刻失效以让 Jest 能够准确地显示确切的发生位置。\n\n这一方式有一个缺陷。若一个错误从 Babel 插件中产生并忽略函数调用栈，测试将会通过即使是死循环。这真的、真的非常糟糕。为解决这一问题，我们在抛出错误之前[设置了一个全局区域](https://github.com/facebook/react/blob/d906de7f602df810c38aa622c83023228b047db6/scripts/jest/setupTests.js#L42-L56)。而后，在每次测试运行之后，如果全局区域已经被设置了我们将重新爆出错误。这一方式下任何死循环将会造成测试失败，无论错误是否是由 Babel 插件引起。\n\n## 自定义构建\n\n在引入新的构建流程后，仍然有一些东西我们必须进行微调。其花费了我们一些时间来处理，但我们对于我们所能找到的解决方案表示满意。\n\n### 消除无用代码\n\nRollup 和 Google Closure Compiler 的结合已经能够让我们在生产包中仅将开发的代码剥离。我们在构建期间将 `__DEV__` 字符串[替换](https://github.com/facebook/react/blob/cc52e06b490e0dc2482b345aa5d0d65fae931095/scripts/rollup/build.js#L223-L226)为一个布尔类型的常量，Rollup 和 Google Closure Compiler 都能够将 `if (false) {}` 的代码分支以及一些更复杂的模式给移除。然而，仍然存在一个非常讨厌的情况：\n\n```js\nimport warning from 'fbjs/lib/warning';\n\nif (__DEV__) {\n  warning(false, 'Blimey!');\n}\n```\n\n这一模式在 React 源码中非常常见。然而 `fbjs/lib/warning` 是一个外部引入的库，而不是 Rollup 打包的 CommonJS 包。因此，即使 `warning()` 完全被移除，Rollup 仍然不知道能否安全地移除整个引入。要是模块在初始化期间有副作用？那移除操作将会变得不安全。\n\n为解决这一问题，我们使用了 [Rollup 的 `treeshake.pureExternalModules` 选项](https://github.com/facebook/react/blob/cc52e06b490e0dc2482b345aa5d0d65fae931095/scripts/rollup/build.js#L338-L340)，将确保不会产生副作用的模块保存在一个数组里。这能够让 Rollup 知道如果 `fbjs/lib/warning` 引入未被使用，能够完全安全地将它从代码中剥离。然而， 如果它*正在*被使用（例如我们决定在生产版本中增加警告），import 则将会被保留。这就是为什么这一方式比替换成空模块更为安全。\n\n当我们进行某些优化，我们需要确保其不会在之后引入 bug。要是某人引入了一个新的仅在开发模式下可用的额外的库，并且未意识也到需要添加到 `pureExternalModules` 里？Rollup 在这样的情况会打印出一个警告，但我们[决定让整个构建环节都失效](https://github.com/facebook/react/blob/cc52e06b490e0dc2482b345aa5d0d65fae931095/scripts/rollup/build.js#L395-L412)。这强制人们每次增加一个仅在开发模式下可用的包就需要直接地声明[而无论其是否具有副作用](https://github.com/facebook/react/blob/cc52e06b490e0dc2482b345aa5d0d65fae931095/scripts/rollup/modules.js#L10-L22) 。\n\n### Fork 模块\n\n在某些情况，不同的包需要包含些稍微不同的代码。例如，React Native 有不同的错误处理机制，即展示一个红框而不是打印一条信息到控制台。然而，通过模块调用将差异串联起来非常地不方便。\n\n类似这样的问题通常通过运行时配置进行解决。然而，有时候则无法处理：例如，React DOM 包甚至不应该去引入 React Native 的 redbox 函数。将从未在指定环境运行下使用的代码进行打包也是非常糟糕的。\n\n另一种方式是使用动态依赖注入。然而，这通常会使得代码难以理解并可能造成严重的依赖。这也使得一些优化的机会落空。\n\n从代码的角度来看，理想情况下我们仅希望将不同的模块重新指向特定的包。这一 “fork” 和原来的模块一样有相同的 API，但处理的方式不同。我们发现这一模型非常直观，并[创建了一个 fork 配置文件](https://github.com/facebook/react/blob/cc52e06b490e0dc2482b345aa5d0d65fae931095/scripts/rollup/forks.js) 来对如何与他们原始的模块进行映射以及在哪些条件下会发生进行详细说明。\n\n例如，fork 配置入口对于不同的包指定了不同的 [特性标志](https://github.com/facebook/react/blob/cc52e06b490e0dc2482b345aa5d0d65fae931095/packages/shared/ReactFeatureFlags.js)：\n\n```js\n'shared/ReactFeatureFlags': (bundleType, entry) => {\n  switch (entry) {\n    case 'react-native-renderer':\n      return 'shared/forks/ReactFeatureFlags.native.js';\n    case 'react-cs-renderer':\n      return 'shared/forks/ReactFeatureFlags.native-cs.js';\n    default:\n      switch (bundleType) {\n        case FB_DEV:\n        case FB_PROD:\n          return 'shared/forks/ReactFeatureFlags.www.js';\n      }\n  }\n  return null;\n},\n```\n\n在构建期间，若条件满足，[我们自定义的 Rollup 插件](https://github.com/facebook/react/blob/cc52e06b490e0dc2482b345aa5d0d65fae931095/scripts/rollup/plugins/use-forks-plugin.js#L40)将会用它们 fork 的模块来替换。由于原始模块和 fork 的模块都由 ES 模块写成， Rollup 和 Google Closure Compiler 可以内嵌（inline）类似数字或布尔值等常量，并因此对于不支持的特性标志能够有效地移除。在测试中，当需要时，我们[使用 `jest.mock()`](https://github.com/facebook/react/blob/cc52e06b490e0dc2482b345aa5d0d65fae931095/packages/react-cs-renderer/src/__tests__/ReactNativeCS-test.internal.js#L15-L17) 指向指向特定的 fork 版本。\n\n作为回报，我们可能想要验证原始模块的导出类型和 fork 模块的导出类型是否完全匹配。我们可以使用一个[有些奇怪但完全能够正常运转的 Flow 技巧](https://github.com/facebook/react/blob/cc52e06b490e0dc2482b345aa5d0d65fae931095/packages/shared/forks/ReactFeatureFlags.native.js#L32-L36)来实现：\n\n```js\nimport typeof * as FeatureFlagsType from 'shared/ReactFeatureFlags';\nimport typeof * as FeatureFlagsShimType from './ReactFeatureFlags.native';\ntype Check<_X, Y: _X, X: Y = _X> = null;\n(null: Check<FeatureFlagsShimType, FeatureFlagsType>);\n```\n\n这一方式通过强制 Flow 去验证两个模块是否能互相赋值（因此是相等的）。现在，如果我们在不改变其他文件的情况下修改原始模块或 fork 模块的导出，类型检查将会失败。这可能有点愚蠢，但我们发现在实践中非常有帮助。\n\n概括一下这一章，注意如果你在 npm 上来使用 React 则无法指定你自己的 fork 模块。这是有意的，因为这些文件中没有公开的 API，而且它们并没有被 [semver](https://semver.org/) 所覆盖。然而，如果你不介意不稳定性和差异性风险，我们欢迎你从 master 分支上来构建 React 甚至是 fork 它。我们希望这篇文章对于记录从单个 JavaScript 库角度出发定位于不同的环境能提供帮助。\n\n### 追踪包尺寸\n\n作为构建的最后一步，我们现在[记录所有构建包的构建大小](https://github.com/facebook/react/blob/d906de7f602df810c38aa622c83023228b047db6/scripts/rollup/build.js#L264-L272)并将它们写入到一个[类似这样](https://github.com/facebook/react/blob/d906de7f602df810c38aa622c83023228b047db6/scripts/rollup/results.json)的文件里。当运行 `yarn build`，其会打印一个结果的表格：\n\n<br>\n\n<img src=\"https://user-images.githubusercontent.com/1519870/28427900-80487dbc-6d6f-11e7-828d-1b594bd1ddb5.png\" style=\"max-width:100%\" alt=\"Build results after running GCC\">\n\n*（其并不是一直都这样好。这次提交是将 React 从 Uglify 迁移到 Google Closure Compiler。）*\n\n记录文件大小对于每个人追踪包尺寸变化和激励着去发现优化的机会都十分有帮助。\n\n我们对这一策略并不完全满意，因为 JSON 文件通常会在更大的分支中造成合并冲突。当前并不是强制进行更新，因此其可能会过时。之后，我们考虑将其集成到自动化中，在每次的提交中都会带有文件大小的变化。\n\n## 简化发布换件\n\n我们经常喜欢向开源社区发布更新。不幸的是，旧的流程在处理发布时非常的慢且通常会耗费一整天。在对这一流程做了些改变后，我们现在能够在一个小时内完成整个发布。这就是我们所做的调整。\n\n### 分支策略\n\n由于我们的分支策略，在旧的发布流程中消耗了大多数的时间。`master` 分支被认为不可靠的且通常会包含一些破坏性的更新。发布通常从一个稳定分支完成，且更新需要在发布前手动低将其挑选到这一分支中去。我们有[工具来帮助自动化](https://github.com/facebook/react/pull/7330)其中一些流程，但使用仍然[相当复杂](https://github.com/facebook/react/blob/b5a2a1349d6e804d534f673612357c0be7e1d701/scripts/release-manager/Readme.md)。\n\n随 16 版本，我们现在从 `master` 分支上进行发布。实验特性和一些破坏性更新也被允许，但必须隐藏在[特性标记](https://github.com/facebook/react/blob/cc52e06b490e0dc2482b345aa5d0d65fae931095/packages/shared/ReactFeatureFlags.js)之后，所以他们能够在构建环节被移除。新的扁平化包和无用代码擦除使得我们不用担心将任何不想公开的代码泄露到开源版本中。\n\n### 自动化脚本\n\n将变更迁入到稳定的 `master` 后，我们创建了一个新的 [发布流程清单](https://github.com/facebook/react/issues/10620)。尽管比之前的环节更简单，这仍然包含了大量的步骤且遗忘了一个可能会导致一次异常的发布。\n\n为解决这一问题，我们创建了一个新的 [自动地发布流程](https://github.com/facebook/react/pull/11223)，其[更容易使用](https://github.com/facebook/react/tree/master/scripts/release#react-release-script)并包含了几项构建检查以确保我们发布了一次有效的构建。新的流程被分隔为两步：_构建_ 和 _发布_。这是你第一次运行的样子：\n\n![Release Script overview](../images/blog/release-script-build-overview.png)\n\n_构建_ 环节做了大量的工作 - 验证许可，运行测试和检查 CI 状态。一旦其完成，其将会输出一个梯形清单到 CHANGELOG 并使用之前提到的 [手工装置](#creating-manual-test-fixtures) 来进行包验证。\n\n![Release Script build confirmation screen](../images/blog/release-script-build-confirmation.png)\n\n剩下的就是进行标记（tag）并使用_发布_脚本发布到 NPM 上。\n\n![Release Script publish confirmation screen](../images/blog/release-script-publish-confirmation.png)\n\n（你可能在之前的截图中注意到了 `--dry` 标记。该标记允许我们运行一次端到端的发布，而不会实际发布到 NPM。这对于处理发布脚本自身时非常有用。）\n\n## 总结\n\n这篇博客是否激励你让你在你自己的项目中尝试一些想法？我们确实希望如此。若你有其他关于如何构建 React，测试，或贡献工作流的提升，请在[我们的问题追踪器]上让我们知道(https://github.com/facebook/react/issues)。\n\n你可以通过[构建基础设施标签](https://github.com/facebook/react/labels/Component%3A%20Build%20Infrastructure) 找到相关问题。这些通常是第一次贡献的好机会！\n\n## 感谢\n\n我们想要感谢：\n\n* [Rich Harris](https://github.com/Rich-Harris) 和 [Lukas Taegert](https://github.com/lukastaegert) 对于 Rollup 的为何以及帮助我们迁移到那。\n* [Dimitris Vardoulakis](https://github.com/dimvar)， [Chad Killingsworth](https://github.com/ChadKillingsworth) 和 [Tyler Breisacher](https://github.com/MatrixFrog) 对于他们在 Google Closure Compilre 上的工作以及及时的建议。\n* [Adrian Carolli](https://github.com/watadarkstar)，[Adams Au](https://github.com/rivenhk)，[Alex Cordeiro](https://github.com/accordeiro), [Jordan Tepper](https://github.com/HeroProtagonist)，[Johnson](https://github.com/sjy)，[Soo Jae Hwang](https://github.com/misoguy)，[Joe Lim](https://github.com/xjlim)，[Yu Tian](https://github.com/yu-tian113) 和其他人帮助在原型和实现中所做的相关的改进。\n* [Anushree Subramani](https://github.com/anushreesubramani)，[Abid Uzair](https://github.com/abiduzz420)，[Sotiris Kiritsis](https://github.com/skiritsis)，[Tim Jacobi](https://github.com/timjacobi), [Anton Arboleda](https://github.com/aarboleda1)，[Jeremias Menichelli](https://github.com/jeremenichelli)，[Audy Tanudjaja](https://github.com/audyodi)，[Gordon Dent](https://github.com/gordyd), [Iacami Gevaerd\n](https://github.com/enapupe)，[Lucas Lentz](https://github.com/sadpandabear), [Jonathan Silvestri](https://github.com/silvestrijonathan)，[Mike Wilcox](https://github.com/mjw56)，[Bernardo Smaniotto](https://github.com/smaniotto)，[Douglas Gimli](https://github.com/douglasgimli)，[Ethan Arrowood](https://github.com/ethan-arrowood)，以及其他人来帮助完成移植 React 测试套件使用公共的 API。\n",
        "type": "MarkdownRemark",
        "contentDigest": "8c7ad8d13192fb32a1eac701bb96e866",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "date": "default-site-plugin",
          "slug": "default-site-plugin",
          "path": "default-site-plugin",
          "redirect": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Behind the Scenes: Improving the Repository Infrastructure",
        "author": [
          "gaearon",
          "bvaughn"
        ],
        "_PARENT": "/Users/yubolun/Desktop/react/content/blog/2017-12-15-improving-the-repository-infrastructure.md absPath of file",
        "parent": "/Users/yubolun/Desktop/react/content/blog/2017-12-15-improving-the-repository-infrastructure.md absPath of file"
      },
      "excerpt": "",
      "fileAbsolutePath": "/Users/yubolun/Desktop/react/content/blog/2017-12-15-improving-the-repository-infrastructure.md",
      "fields": {
        "date": "2017-12-14T16:00:00.000Z",
        "slug": "/blog/2017/12/15/improving-the-repository-infrastructure.html",
        "path": "blog/2017-12-15-improving-the-repository-infrastructure.md",
        "redirect": ""
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/monkeys.gif absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/monkeys.gif absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "59f1cd505fd0b91572fffed4d86685bb",
        "mediaType": "image/gif",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/monkeys.gif",
      "relativePath": "images/blog/monkeys.gif",
      "extension": "gif",
      "size": 544763,
      "prettySize": "545 kB",
      "modifiedTime": "2019-05-08T09:41:08.675Z",
      "accessTime": "2019-05-08T09:41:12.705Z",
      "changeTime": "2019-05-08T09:41:08.675Z",
      "birthTime": "2019-05-08T09:41:08.675Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "monkeys.gif",
      "ext": ".gif",
      "name": "monkeys",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226162,
      "blocks": 1064,
      "atimeMs": 1557308472705.4788,
      "mtimeMs": 1557308468675.161,
      "ctimeMs": 1557308468675.161,
      "birthtimeMs": 1557308468674.9854,
      "atime": "2019-05-08T09:41:12.705Z",
      "mtime": "2019-05-08T09:41:08.675Z",
      "ctime": "2019-05-08T09:41:08.675Z",
      "birthtime": "2019-05-08T09:41:08.675Z"
    },
    "/Users/yubolun/Desktop/react/content/images/docs/react-devtools-state.gif absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/docs/react-devtools-state.gif absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "ef94afc3447d75cdc245c77efb0d63be",
        "mediaType": "image/gif",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/docs/react-devtools-state.gif",
      "relativePath": "images/docs/react-devtools-state.gif",
      "extension": "gif",
      "size": 580901,
      "prettySize": "581 kB",
      "modifiedTime": "2019-05-08T09:41:08.741Z",
      "accessTime": "2019-05-08T09:41:12.759Z",
      "changeTime": "2019-05-08T09:41:08.741Z",
      "birthTime": "2019-05-08T09:41:08.740Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/docs",
      "base": "react-devtools-state.gif",
      "ext": ".gif",
      "name": "react-devtools-state",
      "relativeDirectory": "images/docs",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226235,
      "blocks": 1136,
      "atimeMs": 1557308472758.687,
      "mtimeMs": 1557308468740.6536,
      "ctimeMs": 1557308468740.6536,
      "birthtimeMs": 1557308468740.443,
      "atime": "2019-05-08T09:41:12.759Z",
      "mtime": "2019-05-08T09:41:08.741Z",
      "ctime": "2019-05-08T09:41:08.741Z",
      "birthtime": "2019-05-08T09:41:08.740Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/react-50k-tshirt.jpg absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/react-50k-tshirt.jpg absPath of file",
      "children": [
        "/Users/yubolun/Desktop/react/content/images/blog/react-50k-tshirt.jpg absPath of file >> ImageSharp"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "dd4bfca3eacb85dc3c81fe91fb2e1c10",
        "mediaType": "image/jpeg",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/react-50k-tshirt.jpg",
      "relativePath": "images/blog/react-50k-tshirt.jpg",
      "extension": "jpg",
      "size": 648553,
      "prettySize": "649 kB",
      "modifiedTime": "2019-05-08T09:41:08.682Z",
      "accessTime": "2019-05-08T09:41:12.712Z",
      "changeTime": "2019-05-08T09:41:08.682Z",
      "birthTime": "2019-05-08T09:41:08.682Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "react-50k-tshirt.jpg",
      "ext": ".jpg",
      "name": "react-50k-tshirt",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226172,
      "blocks": 1272,
      "atimeMs": 1557308472711.7024,
      "mtimeMs": 1557308468682.1296,
      "ctimeMs": 1557308468682.1296,
      "birthtimeMs": 1557308468681.912,
      "atime": "2019-05-08T09:41:12.712Z",
      "mtime": "2019-05-08T09:41:08.682Z",
      "ctime": "2019-05-08T09:41:08.682Z",
      "birthtime": "2019-05-08T09:41:08.682Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/react-50k-tshirt.jpg absPath of file >> ImageSharp": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/react-50k-tshirt.jpg absPath of file >> ImageSharp",
      "children": [],
      "parent": "/Users/yubolun/Desktop/react/content/images/blog/react-50k-tshirt.jpg absPath of file",
      "internal": {
        "contentDigest": "dd4bfca3eacb85dc3c81fe91fb2e1c10",
        "type": "ImageSharp",
        "owner": "gatsby-transformer-sharp"
      }
    },
    "/Users/yubolun/Desktop/react/content/images/blog/gpu-cursor-move.gif absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/gpu-cursor-move.gif absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "815dd214138d96c3144488df6f6e6c69",
        "mediaType": "image/gif",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/gpu-cursor-move.gif",
      "relativePath": "images/blog/gpu-cursor-move.gif",
      "extension": "gif",
      "size": 808516,
      "prettySize": "809 kB",
      "modifiedTime": "2019-05-08T09:41:08.665Z",
      "accessTime": "2019-05-08T09:41:12.695Z",
      "changeTime": "2019-05-08T09:41:08.665Z",
      "birthTime": "2019-05-08T09:41:08.664Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "gpu-cursor-move.gif",
      "ext": ".gif",
      "name": "gpu-cursor-move",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226151,
      "blocks": 1584,
      "atimeMs": 1557308472694.5347,
      "mtimeMs": 1557308468664.6145,
      "ctimeMs": 1557308468664.6145,
      "birthtimeMs": 1557308468664.3628,
      "atime": "2019-05-08T09:41:12.695Z",
      "mtime": "2019-05-08T09:41:08.665Z",
      "ctime": "2019-05-08T09:41:08.665Z",
      "birthtime": "2019-05-08T09:41:08.664Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/cra-jest-search.gif absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/cra-jest-search.gif absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "bf7aa2c62ad1f43fca436bfb4d8b3a0f",
        "mediaType": "image/gif",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/cra-jest-search.gif",
      "relativePath": "images/blog/cra-jest-search.gif",
      "extension": "gif",
      "size": 928706,
      "prettySize": "929 kB",
      "modifiedTime": "2019-05-08T09:41:08.621Z",
      "accessTime": "2019-05-08T09:41:12.659Z",
      "changeTime": "2019-05-08T09:41:08.621Z",
      "birthTime": "2019-05-08T09:41:08.621Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "cra-jest-search.gif",
      "ext": ".gif",
      "name": "cra-jest-search",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226132,
      "blocks": 1816,
      "atimeMs": 1557308472658.5945,
      "mtimeMs": 1557308468621.1584,
      "ctimeMs": 1557308468621.1584,
      "birthtimeMs": 1557308468620.8572,
      "atime": "2019-05-08T09:41:12.659Z",
      "mtime": "2019-05-08T09:41:08.621Z",
      "ctime": "2019-05-08T09:41:08.621Z",
      "birthtime": "2019-05-08T09:41:08.621Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/devtools-search.gif absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/devtools-search.gif absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "9e5f4fcd1569e0ff017320590aafbc85",
        "mediaType": "image/gif",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/devtools-search.gif",
      "relativePath": "images/blog/devtools-search.gif",
      "extension": "gif",
      "size": 951506,
      "prettySize": "952 kB",
      "modifiedTime": "2019-05-08T09:41:08.658Z",
      "accessTime": "2019-05-08T09:41:12.687Z",
      "changeTime": "2019-05-08T09:41:08.658Z",
      "birthTime": "2019-05-08T09:41:08.657Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "devtools-search.gif",
      "ext": ".gif",
      "name": "devtools-search",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226143,
      "blocks": 1864,
      "atimeMs": 1557308472686.9692,
      "mtimeMs": 1557308468657.7893,
      "ctimeMs": 1557308468657.7893,
      "birthtimeMs": 1557308468657.472,
      "atime": "2019-05-08T09:41:12.687Z",
      "mtime": "2019-05-08T09:41:08.658Z",
      "ctime": "2019-05-08T09:41:08.658Z",
      "birthtime": "2019-05-08T09:41:08.657Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/modus-create.gif absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/modus-create.gif absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "0183b8a57a7dac85055377b28438e013",
        "mediaType": "image/gif",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/modus-create.gif",
      "relativePath": "images/blog/modus-create.gif",
      "extension": "gif",
      "size": 1016073,
      "prettySize": "1.02 MB",
      "modifiedTime": "2019-05-08T09:41:08.672Z",
      "accessTime": "2019-05-08T09:41:12.700Z",
      "changeTime": "2019-05-08T09:41:08.672Z",
      "birthTime": "2019-05-08T09:41:08.672Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "modus-create.gif",
      "ext": ".gif",
      "name": "modus-create",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226161,
      "blocks": 1992,
      "atimeMs": 1557308472700.1216,
      "mtimeMs": 1557308468671.857,
      "ctimeMs": 1557308468671.857,
      "birthtimeMs": 1557308468671.505,
      "atime": "2019-05-08T09:41:12.700Z",
      "mtime": "2019-05-08T09:41:08.672Z",
      "ctime": "2019-05-08T09:41:08.672Z",
      "birthtime": "2019-05-08T09:41:08.672Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/devtools-full.gif absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/devtools-full.gif absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "f57ae67cfaa1fe76880654e2eddbf71f",
        "mediaType": "image/gif",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/devtools-full.gif",
      "relativePath": "images/blog/devtools-full.gif",
      "extension": "gif",
      "size": 1411979,
      "prettySize": "1.41 MB",
      "modifiedTime": "2019-05-08T09:41:08.651Z",
      "accessTime": "2019-05-08T09:41:12.680Z",
      "changeTime": "2019-05-08T09:41:08.651Z",
      "birthTime": "2019-05-08T09:41:08.651Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "devtools-full.gif",
      "ext": ".gif",
      "name": "devtools-full",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226142,
      "blocks": 2760,
      "atimeMs": 1557308472679.8494,
      "mtimeMs": 1557308468651.3438,
      "ctimeMs": 1557308468651.3438,
      "birthtimeMs": 1557308468650.8462,
      "atime": "2019-05-08T09:41:12.680Z",
      "mtime": "2019-05-08T09:41:08.651Z",
      "ctime": "2019-05-08T09:41:08.651Z",
      "birthtime": "2019-05-08T09:41:08.651Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/cra-update-exports.gif absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/cra-update-exports.gif absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "d9aaae3589e6a7b6076b64de79f4bd13",
        "mediaType": "image/gif",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/cra-update-exports.gif",
      "relativePath": "images/blog/cra-update-exports.gif",
      "extension": "gif",
      "size": 1426094,
      "prettySize": "1.43 MB",
      "modifiedTime": "2019-05-08T09:41:08.639Z",
      "accessTime": "2019-05-08T09:41:12.671Z",
      "changeTime": "2019-05-08T09:41:08.639Z",
      "birthTime": "2019-05-08T09:41:08.639Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "cra-update-exports.gif",
      "ext": ".gif",
      "name": "cra-update-exports",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226135,
      "blocks": 2792,
      "atimeMs": 1557308472670.7986,
      "mtimeMs": 1557308468639.0886,
      "ctimeMs": 1557308468639.0886,
      "birthtimeMs": 1557308468638.6038,
      "atime": "2019-05-08T09:41:12.671Z",
      "mtime": "2019-05-08T09:41:08.639Z",
      "ctime": "2019-05-08T09:41:08.639Z",
      "birthtime": "2019-05-08T09:41:08.639Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/cra-runtime-error.gif absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/cra-runtime-error.gif absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "a0c1e436d1ea034c8ecaf48e8bcb2890",
        "mediaType": "image/gif",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/cra-runtime-error.gif",
      "relativePath": "images/blog/cra-runtime-error.gif",
      "extension": "gif",
      "size": 1826225,
      "prettySize": "1.83 MB",
      "modifiedTime": "2019-05-08T09:41:08.629Z",
      "accessTime": "2019-05-08T09:41:12.663Z",
      "changeTime": "2019-05-08T09:41:08.629Z",
      "birthTime": "2019-05-08T09:41:08.629Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "cra-runtime-error.gif",
      "ext": ".gif",
      "name": "cra-runtime-error",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226134,
      "blocks": 3568,
      "atimeMs": 1557308472662.6707,
      "mtimeMs": 1557308468629.269,
      "ctimeMs": 1557308468629.269,
      "birthtimeMs": 1557308468628.7808,
      "atime": "2019-05-08T09:41:12.663Z",
      "mtime": "2019-05-08T09:41:08.629Z",
      "ctime": "2019-05-08T09:41:08.629Z",
      "birthtime": "2019-05-08T09:41:08.629Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/cra-dynamic-import.gif absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/cra-dynamic-import.gif absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "b967396662319e6aa6170dab232f0286",
        "mediaType": "image/gif",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/cra-dynamic-import.gif",
      "relativePath": "images/blog/cra-dynamic-import.gif",
      "extension": "gif",
      "size": 1736236,
      "prettySize": "1.74 MB",
      "modifiedTime": "2019-05-08T09:41:08.618Z",
      "accessTime": "2019-05-08T09:41:12.651Z",
      "changeTime": "2019-05-08T09:41:08.618Z",
      "birthTime": "2019-05-08T09:41:08.618Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "cra-dynamic-import.gif",
      "ext": ".gif",
      "name": "cra-dynamic-import",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226131,
      "blocks": 3392,
      "atimeMs": 1557308472650.629,
      "mtimeMs": 1557308468618.0598,
      "ctimeMs": 1557308468618.0598,
      "birthtimeMs": 1557308468617.5652,
      "atime": "2019-05-08T09:41:12.651Z",
      "mtime": "2019-05-08T09:41:08.618Z",
      "ctime": "2019-05-08T09:41:08.618Z",
      "birthtime": "2019-05-08T09:41:08.618Z"
    },
    "/Users/yubolun/Desktop/react/content/images/blog/steve_reverse.gif absPath of file": {
      "id": "/Users/yubolun/Desktop/react/content/images/blog/steve_reverse.gif absPath of file",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "9a234bbe4d23c11a99f5b334b3f25f9b",
        "mediaType": "image/gif",
        "type": "File",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "packages",
      "absolutePath": "/Users/yubolun/Desktop/react/content/images/blog/steve_reverse.gif",
      "relativePath": "images/blog/steve_reverse.gif",
      "extension": "gif",
      "size": 5657828,
      "prettySize": "5.66 MB",
      "modifiedTime": "2019-05-08T09:41:08.724Z",
      "accessTime": "2019-05-08T09:41:12.720Z",
      "changeTime": "2019-05-08T09:41:08.724Z",
      "birthTime": "2019-05-08T09:41:08.723Z",
      "root": "/",
      "dir": "/Users/yubolun/Desktop/react/content/images/blog",
      "base": "steve_reverse.gif",
      "ext": ".gif",
      "name": "steve_reverse",
      "relativeDirectory": "images/blog",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 4319226196,
      "blocks": 11056,
      "atimeMs": 1557308472720.325,
      "mtimeMs": 1557308468724.0396,
      "ctimeMs": 1557308468724.0396,
      "birthtimeMs": 1557308468722.6228,
      "atime": "2019-05-08T09:41:12.720Z",
      "mtime": "2019-05-08T09:41:08.724Z",
      "ctime": "2019-05-08T09:41:08.724Z",
      "birthtime": "2019-05-08T09:41:08.723Z"
    },
    "SitePage /redirect-to-codepen/16-3-release-blog-post/context-example": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-16-3-release-blog-post-context-example.json",
      "internalComponentName": "ComponentRedirectToCodepen163ReleaseBlogPostContextExample",
      "path": "/redirect-to-codepen/16-3-release-blog-post/context-example",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"// highlight-next-line\\nconst ThemeContext = React.createContext('light');\\n\\nclass ThemeProvider extends React.Component {\\n  state = {theme: 'light'};\\n\\n  render() {\\n    // highlight-range{2-4}\\n    return (\\n      <ThemeContext.Provider value={this.state.theme}>\\n        {this.props.children}\\n      </ThemeContext.Provider>\\n    );\\n  }\\n}\\n\\nclass ThemedButton extends React.Component {\\n  render() {\\n    // highlight-range{2-4}\\n    return (\\n      <ThemeContext.Consumer>\\n        {theme => <Button theme={theme} />}\\n      </ThemeContext.Consumer>\\n    );\\n  }\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/16-3-release-blog-post/context-example",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "7bb0b5d322a88885b1e876326d430486",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/16-3-release-blog-post/create-ref-example": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-16-3-release-blog-post-create-ref-example.json",
      "internalComponentName": "ComponentRedirectToCodepen163ReleaseBlogPostCreateRefExample",
      "path": "/redirect-to-codepen/16-3-release-blog-post/create-ref-example",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"class MyComponent extends React.Component {\\n  constructor(props) {\\n    super(props);\\n\\n    // highlight-next-line\\n    this.inputRef = React.createRef();\\n  }\\n\\n  render() {\\n    // highlight-next-line\\n    return <input type=\\\"text\\\" ref={this.inputRef} />;\\n  }\\n\\n  componentDidMount() {\\n    // highlight-next-line\\n    this.inputRef.current.focus();\\n  }\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/16-3-release-blog-post/create-ref-example",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "8c9a42d6b7b111298fc10f76fad6fe1b",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/16-3-release-blog-post/fancy-button-example": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-16-3-release-blog-post-fancy-button-example.json",
      "internalComponentName": "ComponentRedirectToCodepen163ReleaseBlogPostFancyButtonExample",
      "path": "/redirect-to-codepen/16-3-release-blog-post/fancy-button-example",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"class FancyButton extends React.Component {\\n  buttonRef = React.createRef();\\n\\n  focus() {\\n    this.buttonRef.current.focus();\\n  }\\n\\n  render() {\\n    // highlight-next-line\\n    const {label, theme, ...rest} = this.props;\\n    // highlight-range{5}\\n    return (\\n      <button\\n        {...rest}\\n        className={`${theme}-button`}\\n        ref={this.buttonRef}>\\n        {label}\\n      </button>\\n    );\\n  }\\n}\\n\\n// highlight-next-line\\nconst FancyThemedButton = withTheme(FancyButton);\\n\\n// We can render FancyThemedButton as if it were a FancyButton\\n// It will automatically receive the current \\\"theme\\\",\\n// And the HOC will pass through our other props.\\n<FancyThemedButton\\n  label=\\\"Click me!\\\"\\n  onClick={handleClick}\\n/>;\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/16-3-release-blog-post/fancy-button-example",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "ccbfbdc7a1d9f19d78d9de07050603ba",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/16-3-release-blog-post/forward-ref-example": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-16-3-release-blog-post-forward-ref-example.json",
      "internalComponentName": "ComponentRedirectToCodepen163ReleaseBlogPostForwardRefExample",
      "path": "/redirect-to-codepen/16-3-release-blog-post/forward-ref-example",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"function withTheme(Component) {\\n  // Note the second param \\\"ref\\\" provided by React.forwardRef.\\n  // We can attach this to Component directly.\\n  // highlight-range{1,5}\\n  function ThemedComponent(props, ref) {\\n    return (\\n      <ThemeContext.Consumer>\\n        {theme => (\\n          <Component {...props} ref={ref} theme={theme} />\\n        )}\\n      </ThemeContext.Consumer>\\n    );\\n  }\\n\\n  // These next lines are not necessary,\\n  // But they do give the component a better display name in DevTools,\\n  // e.g. \\\"ForwardRef(withTheme(MyComponent))\\\"\\n  // highlight-range{1-2}\\n  const name = Component.displayName || Component.name;\\n  ThemedComponent.displayName = `withTheme(${name})`;\\n\\n  // Tell React to pass the \\\"ref\\\" to ThemedComponent.\\n  // highlight-next-line\\n  return React.forwardRef(ThemedComponent);\\n}\\n\\n// highlight-next-line\\nconst fancyButtonRef = React.createRef();\\n\\n// fancyButtonRef will now point to FancyButton\\n// highlight-range{4}\\n<FancyThemedButton\\n  label=\\\"Click me!\\\"\\n  onClick={handleClick}\\n  ref={fancyButtonRef}\\n/>;\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/16-3-release-blog-post/forward-ref-example",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "5524766d5eba16a200e07b2f37d25960",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/16-3-release-blog-post/hoc-theme-example": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-16-3-release-blog-post-hoc-theme-example.json",
      "internalComponentName": "ComponentRedirectToCodepen163ReleaseBlogPostHocThemeExample",
      "path": "/redirect-to-codepen/16-3-release-blog-post/hoc-theme-example",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"function withTheme(Component) {\\n  return function ThemedComponent(props) {\\n    // highlight-range{2-4}\\n    return (\\n      <ThemeContext.Consumer>\\n        {theme => <Component {...props} theme={theme} />}\\n      </ThemeContext.Consumer>\\n    );\\n  };\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/16-3-release-blog-post/hoc-theme-example",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "c2dd1166822cca69ab256bceb3252ef2",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/16-4-release-blog-post/pointer-events-example": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-16-4-release-blog-post-pointer-events-example.json",
      "internalComponentName": "ComponentRedirectToCodepen164ReleaseBlogPostPointerEventsExample",
      "path": "/redirect-to-codepen/16-4-release-blog-post/pointer-events-example",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\n\\nconst CIRCLE_SIZE = 85;\\n\\nclass DragBox extends React.Component {\\n  state = {\\n    hasCapture: false,\\n    circleLeft: 80,\\n    circleTop: 80,\\n  };\\n  isDragging = false;\\n  previousLeft = 0;\\n  previousTop = 0;\\n\\n  onDown = event => {\\n    this.isDragging = true;\\n    event.target.setPointerCapture(event.pointerId);\\n\\n    // We store the initial coordinates to be able to calculate the changes\\n    // later on.\\n    this.extractPositionDelta(event);\\n  };\\n\\n  onMove = event => {\\n    if (!this.isDragging) {\\n      return;\\n    }\\n    const {left, top} = this.extractPositionDelta(event);\\n\\n    this.setState(({circleLeft, circleTop}) => ({\\n      circleLeft: circleLeft + left,\\n      circleTop: circleTop + top,\\n    }));\\n  };\\n\\n  onUp = event => (this.isDragging = false);\\n  onGotCapture = event => this.setState({hasCapture: true});\\n  onLostCapture = event =>\\n    this.setState({hasCapture: false});\\n\\n  extractPositionDelta = event => {\\n    const left = event.pageX;\\n    const top = event.pageY;\\n    const delta = {\\n      left: left - this.previousLeft,\\n      top: top - this.previousTop,\\n    };\\n    this.previousLeft = left;\\n    this.previousTop = top;\\n    return delta;\\n  };\\n\\n  render() {\\n    const {hasCapture, circleLeft, circleTop} = this.state;\\n\\n    const boxStyle = {\\n      border: '1px solid #d9d9d9',\\n      margin: '10px 0 20px',\\n      minHeight: 400,\\n      width: '100%',\\n      position: 'relative',\\n    };\\n\\n    const circleStyle = {\\n      width: CIRCLE_SIZE,\\n      height: CIRCLE_SIZE,\\n      borderRadius: CIRCLE_SIZE / 2,\\n      position: 'absolute',\\n      left: circleLeft,\\n      top: circleTop,\\n      backgroundColor: hasCapture ? 'blue' : 'green',\\n      touchAction: 'none',\\n    };\\n\\n    return (\\n      <div style={boxStyle}>\\n        <div\\n          style={circleStyle}\\n          onPointerDown={this.onDown}\\n          onPointerMove={this.onMove}\\n          onPointerUp={this.onUp}\\n          onPointerCancel={this.onUp}\\n          onGotPointerCapture={this.onGotCapture}\\n          onLostPointerCapture={this.onLostCapture}\\n        />\\n      </div>\\n    );\\n  }\\n}\\n\\nReactDOM.render(\\n  <DragBox />,\\n  document.getElementById('root')\\n);\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/16-4-release-blog-post/pointer-events-example",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "ffe21556cece2047020096661164b6a1",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/components-and-props/composing-components": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-components-and-props-composing-components.json",
      "internalComponentName": "ComponentRedirectToCodepenComponentsAndPropsComposingComponents",
      "path": "/redirect-to-codepen/components-and-props/composing-components",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"function Welcome(props) {\\n  return <h1>Hello, {props.name}</h1>;\\n}\\n\\nfunction App() {\\n  return (\\n    <div>\\n      <Welcome name=\\\"Sara\\\" />\\n      <Welcome name=\\\"Cahal\\\" />\\n      <Welcome name=\\\"Edite\\\" />\\n    </div>\\n  );\\n}\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/components-and-props/composing-components",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "cc129e5255c28156f9567efdf0a587d0",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/components-and-props/extracting-components-continued": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-components-and-props-extracting-components-continued.json",
      "internalComponentName": "ComponentRedirectToCodepenComponentsAndPropsExtractingComponentsContinued",
      "path": "/redirect-to-codepen/components-and-props/extracting-components-continued",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"function formatDate(date) {\\n  return date.toLocaleDateString();\\n}\\n\\nfunction Avatar(props) {\\n  return (\\n    <img\\n      className=\\\"Avatar\\\"\\n      src={props.user.avatarUrl}\\n      alt={props.user.name}\\n    />\\n  );\\n}\\n\\nfunction UserInfo(props) {\\n  return (\\n    <div className=\\\"UserInfo\\\">\\n      <Avatar user={props.user} />\\n      <div className=\\\"UserInfo-name\\\">{props.user.name}</div>\\n    </div>\\n  );\\n}\\n\\nfunction Comment(props) {\\n  return (\\n    <div className=\\\"Comment\\\">\\n      <UserInfo user={props.author} />\\n      <div className=\\\"Comment-text\\\">{props.text}</div>\\n      <div className=\\\"Comment-date\\\">\\n        {formatDate(props.date)}\\n      </div>\\n    </div>\\n  );\\n}\\n\\nconst comment = {\\n  date: new Date(),\\n  text: 'I hope you enjoy learning React!',\\n  author: {\\n    name: 'Hello Kitty',\\n    avatarUrl: 'http://placekitten.com/g/64/64',\\n  },\\n};\\nReactDOM.render(\\n  <Comment\\n    date={comment.date}\\n    text={comment.text}\\n    author={comment.author}\\n  />,\\n  document.getElementById('root')\\n);\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/components-and-props/extracting-components-continued",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "d747a4bd1a7f4a4b4a51e70ca58f9345",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/components-and-props/extracting-components": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-components-and-props-extracting-components.json",
      "internalComponentName": "ComponentRedirectToCodepenComponentsAndPropsExtractingComponents",
      "path": "/redirect-to-codepen/components-and-props/extracting-components",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"function formatDate(date) {\\n  return date.toLocaleDateString();\\n}\\n\\nfunction Comment(props) {\\n  return (\\n    <div className=\\\"Comment\\\">\\n      <div className=\\\"UserInfo\\\">\\n        <img\\n          className=\\\"Avatar\\\"\\n          src={props.author.avatarUrl}\\n          alt={props.author.name}\\n        />\\n        <div className=\\\"UserInfo-name\\\">\\n          {props.author.name}\\n        </div>\\n      </div>\\n      <div className=\\\"Comment-text\\\">{props.text}</div>\\n      <div className=\\\"Comment-date\\\">\\n        {formatDate(props.date)}\\n      </div>\\n    </div>\\n  );\\n}\\n\\nconst comment = {\\n  date: new Date(),\\n  text: 'I hope you enjoy learning React!',\\n  author: {\\n    name: 'Hello Kitty',\\n    avatarUrl: 'http://placekitten.com/g/64/64',\\n  },\\n};\\nReactDOM.render(\\n  <Comment\\n    date={comment.date}\\n    text={comment.text}\\n    author={comment.author}\\n  />,\\n  document.getElementById('root')\\n);\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/components-and-props/extracting-components",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "8716876468ed09661df43cd50205444c",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/components-and-props/rendering-a-component": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-components-and-props-rendering-a-component.json",
      "internalComponentName": "ComponentRedirectToCodepenComponentsAndPropsRenderingAComponent",
      "path": "/redirect-to-codepen/components-and-props/rendering-a-component",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"function Welcome(props) {\\n  return <h1>Hello, {props.name}</h1>;\\n}\\n\\nconst element = <Welcome name=\\\"Sara\\\" />;\\nReactDOM.render(element, document.getElementById('root'));\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/components-and-props/rendering-a-component",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "2759fee999550aae63520671c00dc9f2",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/context/app-nested": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-context-app-nested.json",
      "internalComponentName": "ComponentRedirectToCodepenContextAppNested",
      "path": "/redirect-to-codepen/context/app-nested",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"import {ThemeContext, themes} from './theme-context';\\nimport ThemeTogglerButton from './theme-toggler-button';\\n\\nclass App extends React.Component {\\n  constructor(props) {\\n    super(props);\\n\\n    this.toggleTheme = () => {\\n      this.setState(state => ({\\n        theme:\\n          state.theme === themes.dark\\n            ? themes.light\\n            : themes.dark,\\n      }));\\n    };\\n    // State 包含了 updater 函数 所以它可以传递给底层的 context Provider\\n    this.state = {\\n      theme: themes.light,\\n      toggleTheme: this.toggleTheme,\\n    };\\n  }\\n\\n  render() {\\n    // 入口 state 传递给 provider\\n    return (\\n      <ThemeContext.Provider value={this.state}>\\n        <Content />\\n      </ThemeContext.Provider>\\n    );\\n  }\\n}\\n\\nfunction Content() {\\n  return (\\n    <div>\\n      <ThemeTogglerButton />\\n    </div>\\n  );\\n}\\n\\nReactDOM.render(<App />, document.root);\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/context/app-nested",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "2beaf63e734907dbcc57527cfa2a7985",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/context/forwarding-refs-app": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-context-forwarding-refs-app.json",
      "internalComponentName": "ComponentRedirectToCodepenContextForwardingRefsApp",
      "path": "/redirect-to-codepen/context/forwarding-refs-app",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"import FancyButton from './fancy-button';\\n\\nconst ref = React.createRef();\\n\\n// ref属性将指向 FancyButton 组件,\\n// ThemeContext.Consumer 没有包裹它\\n// 这意味着我们可以调用 FancyButton 的方法就像这样 ref.current.focus()\\n// highlight-next-line\\n<FancyButton ref={ref} onClick={handleClick}>\\n  Click me!\\n</FancyButton>;\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/context/forwarding-refs-app",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "85fbec825c1f2fc80e47fb85c15939b2",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/context/forwarding-refs-fancy-button": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-context-forwarding-refs-fancy-button.json",
      "internalComponentName": "ComponentRedirectToCodepenContextForwardingRefsFancyButton",
      "path": "/redirect-to-codepen/context/forwarding-refs-fancy-button",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"class FancyButton extends React.Component {\\n  focus() {\\n    // ...\\n  }\\n\\n  // ...\\n}\\n\\n// 使用 context 传递当前的 \\\"theme\\\" 给 FancyButton.\\n// 使用 forwardRef 传递 refs 给 FancyButton 也是可以的.\\n// highlight-range{1,3}\\nexport default React.forwardRef((props, ref) => (\\n  <ThemeContext.Consumer>\\n    {theme => (\\n      <FancyButton {...props} theme={theme} ref={ref} />\\n    )}\\n  </ThemeContext.Consumer>\\n));\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/context/forwarding-refs-fancy-button",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "f51fcfd2cc19d323cba7cd61d886e0c2",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/context/higher-order-component-before": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-context-higher-order-component-before.json",
      "internalComponentName": "ComponentRedirectToCodepenContextHigherOrderComponentBefore",
      "path": "/redirect-to-codepen/context/higher-order-component-before",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"const ThemeContext = React.createContext('light');\\n\\nfunction ThemedButton(props) {\\n  // highlight-range{2-4}\\n  return (\\n    <ThemeContext.Consumer>\\n      {theme => <button className={theme} {...props} />}\\n    </ThemeContext.Consumer>\\n  );\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/context/higher-order-component-before",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "ca640062d7632d4a255740c30fe11af9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/context/higher-order-component-usage": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-context-higher-order-component-usage.json",
      "internalComponentName": "ComponentRedirectToCodepenContextHigherOrderComponentUsage",
      "path": "/redirect-to-codepen/context/higher-order-component-usage",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"function Button({theme, ...rest}) {\\n  // highlight-next-line\\n  return <button className={theme} {...rest} />;\\n}\\n\\n// highlight-next-line\\nconst ThemedButton = withTheme(Button);\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/context/higher-order-component-usage",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "22683f675d9d4fb8b256432f6302cab6",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/context/higher-order-component": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-context-higher-order-component.json",
      "internalComponentName": "ComponentRedirectToCodepenContextHigherOrderComponent",
      "path": "/redirect-to-codepen/context/higher-order-component",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"const ThemeContext = React.createContext('light');\\n\\n// 在函数中引入组件\\n// highlight-next-line\\nexport function withTheme(Component) {\\n  // 然后返回另一个组件\\n  // highlight-next-line\\n  return function ThemedComponent(props) {\\n    // 最后使用context theme渲染这个被封装组件\\n    // 注意我们照常引用了被添加的属性\\n    // highlight-range{2-4}\\n    return (\\n      <ThemeContext.Consumer>\\n        {theme => <Component {...props} theme={theme} />}\\n      </ThemeContext.Consumer>\\n    );\\n  };\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/context/higher-order-component",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "5ace0b744a7baa6aaed01c5ccf694cf2",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/context/lifecycles": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-context-lifecycles.json",
      "internalComponentName": "ComponentRedirectToCodepenContextLifecycles",
      "path": "/redirect-to-codepen/context/lifecycles",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"class Button extends React.Component {\\n  componentDidMount() {\\n    // highlight-next-line\\n    // ThemeContext value is this.props.theme\\n  }\\n\\n  componentDidUpdate(prevProps, prevState) {\\n    // highlight-range{1-2}\\n    // Previous ThemeContext value is prevProps.theme\\n    // New ThemeContext value is this.props.theme\\n  }\\n\\n  render() {\\n    const {theme, children} = this.props;\\n    return (\\n      <button className={theme ? 'dark' : 'light'}>\\n        {children}\\n      </button>\\n    );\\n  }\\n}\\n\\n// highlight-range{3}\\nexport default props => (\\n  <ThemeContext.Consumer>\\n    {theme => <Button {...props} theme={theme} />}\\n  </ThemeContext.Consumer>\\n);\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/context/lifecycles",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "b80a0e7b9add85f3a10714d9d3c85c5d",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/context/motivation-problem": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-context-motivation-problem.json",
      "internalComponentName": "ComponentRedirectToCodepenContextMotivationProblem",
      "path": "/redirect-to-codepen/context/motivation-problem",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"function ThemedButton(props) {\\n  //highlight-range{1}\\n  return <Button theme={props.theme} />;\\n}\\n\\n// 中间组件\\nfunction Toolbar(props) {\\n  // highlight-range{1-2,5}\\n  // Toolbar 组件必须添加一个额外的 theme 属性\\n  // 然后传递它给 ThemedButton 组件\\n  return (\\n    <div>\\n      <ThemedButton theme={props.theme} />\\n    </div>\\n  );\\n}\\n\\nclass App extends React.Component {\\n  render() {\\n    // highlight-range{1}\\n    return <Toolbar theme=\\\"dark\\\" />;\\n  }\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/context/motivation-problem",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "67ca4d2f8bc0c29ef1a6e3931c661631",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/context/motivation-solution": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-context-motivation-solution.json",
      "internalComponentName": "ComponentRedirectToCodepenContextMotivationSolution",
      "path": "/redirect-to-codepen/context/motivation-solution",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"// 创建一个 theme Context,  默认 theme 的值为 light\\n// highlight-next-line\\nconst ThemeContext = React.createContext('light');\\n\\nfunction ThemedButton(props) {\\n  // highlight-range{1,3-5}\\n  // ThemedButton 组件从 context 接收 theme\\n  return (\\n    <ThemeContext.Consumer>\\n      {theme => <Button {...props} theme={theme} />}\\n    </ThemeContext.Consumer>\\n  );\\n}\\n\\n// 中间组件\\nfunction Toolbar(props) {\\n  return (\\n    <div>\\n      <ThemedButton />\\n    </div>\\n  );\\n}\\n\\nclass App extends React.Component {\\n  render() {\\n    // highlight-range{2,4}\\n    return (\\n      <ThemeContext.Provider value=\\\"dark\\\">\\n        <Toolbar />\\n      </ThemeContext.Provider>\\n    );\\n  }\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/context/motivation-solution",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "478b5afd169bd5477280dc01e0ad95be",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/context/multiple-contexts": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-context-multiple-contexts.json",
      "internalComponentName": "ComponentRedirectToCodepenContextMultipleContexts",
      "path": "/redirect-to-codepen/context/multiple-contexts",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"// 主题上下文, 默认light\\n// highlight-next-line\\nconst ThemeContext = React.createContext('light');\\n\\n// 登陆用户上下文\\n// highlight-next-line\\nconst UserContext = React.createContext();\\n\\n// 一个依赖于两个上下文的中间组件\\nfunction Toolbar(props) {\\n  // highlight-range{2-10}\\n  return (\\n    <ThemeContext.Consumer>\\n      {theme => (\\n        <UserContext.Consumer>\\n          {user => (\\n            <ProfilePage user={user} theme={theme} />\\n          )}\\n        </UserContext.Consumer>\\n      )}\\n    </ThemeContext.Consumer>\\n  );\\n}\\n\\nclass App extends React.Component {\\n  render() {\\n    const {signedInUser, theme} = this.props;\\n\\n    // App组件提供上下文的初始值\\n    // highlight-range{2-3,5-6}\\n    return (\\n      <ThemeContext.Provider value={theme}>\\n        <UserContext.Provider value={signedInUser}>\\n          <Toolbar />\\n        </UserContext.Provider>\\n      </ThemeContext.Provider>\\n    );\\n  }\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/context/multiple-contexts",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "74bc6af6fe07390c48999ed24dd96cde",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/context/reference-caveats-problem": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-context-reference-caveats-problem.json",
      "internalComponentName": "ComponentRedirectToCodepenContextReferenceCaveatsProblem",
      "path": "/redirect-to-codepen/context/reference-caveats-problem",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"class App extends React.Component {\\n  render() {\\n    // highlight-range{2}\\n    return (\\n      <Provider value={{something: 'something'}}>\\n        <Toolbar />\\n      </Provider>\\n    );\\n  }\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/context/reference-caveats-problem",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "7fecd867abe667857cbead4b39c47fd5",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/context/reference-caveats-solution": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-context-reference-caveats-solution.json",
      "internalComponentName": "ComponentRedirectToCodepenContextReferenceCaveatsSolution",
      "path": "/redirect-to-codepen/context/reference-caveats-solution",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"class App extends React.Component {\\n  constructor(props) {\\n    // highlight-range{2}\\n    this.state = {\\n      value: {something: 'something'},\\n    };\\n  }\\n\\n  render() {\\n    // highlight-range{2}\\n    return (\\n      <Provider value={this.state.value}>\\n        <Toolbar />\\n      </Provider>\\n    );\\n  }\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/context/reference-caveats-solution",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "69de22a9947d344cbf81346037e50678",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/context/theme-detailed-app": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-context-theme-detailed-app.json",
      "internalComponentName": "ComponentRedirectToCodepenContextThemeDetailedApp",
      "path": "/redirect-to-codepen/context/theme-detailed-app",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"import {ThemeContext, themes} from './theme-context';\\nimport ThemedButton from './themed-button';\\n\\n// 一个使用到ThemedButton组件的中间组件\\nfunction Toolbar(props) {\\n  return (\\n    <ThemedButton onClick={props.changeTheme}>\\n      Change Theme\\n    </ThemedButton>\\n  );\\n}\\n\\nclass App extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      theme: themes.light,\\n    };\\n\\n    this.toggleTheme = () => {\\n      this.setState(state => ({\\n        theme:\\n          state.theme === themes.dark\\n            ? themes.light\\n            : themes.dark,\\n      }));\\n    };\\n  }\\n\\n  render() {\\n    //highlight-range{1-3}\\n    // ThemedButton 位于 ThemeProvider 内\\n    // 在外部使用时使用来自 state 里面的 theme\\n    // 默认 dark theme\\n    //highlight-range{3-5,7}\\n    return (\\n      <Page>\\n        <ThemeContext.Provider value={this.state.theme}>\\n          <Toolbar changeTheme={this.toggleTheme} />\\n        </ThemeContext.Provider>\\n        <Section>\\n          <ThemedButton />\\n        </Section>\\n      </Page>\\n    );\\n  }\\n}\\n\\nReactDOM.render(<App />, document.root);\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/context/theme-detailed-app",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "12702e9a7b559e494fdba79f83540277",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/context/theme-detailed-theme-context": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-context-theme-detailed-theme-context.json",
      "internalComponentName": "ComponentRedirectToCodepenContextThemeDetailedThemeContext",
      "path": "/redirect-to-codepen/context/theme-detailed-theme-context",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"export const themes = {\\n  light: {\\n    foreground: '#ffffff',\\n    background: '#222222',\\n  },\\n  dark: {\\n    foreground: '#000000',\\n    background: '#eeeeee',\\n  },\\n};\\n\\n// highlight-range{1-3}\\nexport const ThemeContext = React.createContext(\\n  themes.dark // 默认值\\n);\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/context/theme-detailed-theme-context",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "04086bb5d3da02a5ef3028093a20c8dd",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/context/theme-detailed-themed-button": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-context-theme-detailed-themed-button.json",
      "internalComponentName": "ComponentRedirectToCodepenContextThemeDetailedThemedButton",
      "path": "/redirect-to-codepen/context/theme-detailed-themed-button",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"import {ThemeContext} from './theme-context';\\n\\nfunction ThemedButton(props) {\\n  // highlight-range{2-9}\\n  return (\\n    <ThemeContext.Consumer>\\n      {theme => (\\n        <button\\n          {...props}\\n          style={{backgroundColor: theme.background}}\\n        />\\n      )}\\n    </ThemeContext.Consumer>\\n  );\\n}\\n\\nexport default ThemedButton;\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/context/theme-detailed-themed-button",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "930ba11ff0d97eafd1eff9cfdad23825",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/context/theme-nested-context": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-context-theme-nested-context.json",
      "internalComponentName": "ComponentRedirectToCodepenContextThemeNestedContext",
      "path": "/redirect-to-codepen/context/theme-nested-context",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"// 确保默认值按类型传递\\n// createContext() 匹配的属性是 Consumers 所期望的\\nexport const ThemeContext = React.createContext({\\n  theme: themes.dark,\\n  toggleTheme: () => {},\\n});\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/context/theme-nested-context",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "f124730326e5de5e24629d1231f2ed6f",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/context/theme-nested-toggler-button": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-context-theme-nested-toggler-button.json",
      "internalComponentName": "ComponentRedirectToCodepenContextThemeNestedTogglerButton",
      "path": "/redirect-to-codepen/context/theme-nested-toggler-button",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"import {ThemeContext} from './theme-context';\\n\\nfunction ThemeTogglerButton() {\\n  // Theme Toggler 按钮不仅接收 theme 属性\\n  // 也接收了一个来自 context 的 toggleTheme 函数\\n  return (\\n    <ThemeContext.Consumer>\\n      {({theme, toggleTheme}) => (\\n        <button\\n          onClick={toggleTheme}\\n          style={{backgroundColor: theme.background}}>\\n          Toggle Theme\\n        </button>\\n      )}\\n    </ThemeContext.Consumer>\\n  );\\n}\\n\\nexport default ThemeTogglerButton;\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/context/theme-nested-toggler-button",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "aa5dd40e91b2b82bf28e121eefa30721",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/es5-syntax-example": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-es-5-syntax-example.json",
      "internalComponentName": "ComponentRedirectToCodepenEs5SyntaxExample",
      "path": "/redirect-to-codepen/es5-syntax-example",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"const element = <h1>Hello, world!</h1>;\\nconst container = document.getElementById('root');\\nReactDOM.render(element, container);\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/es5-syntax-example",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "c8c9ec005becb8f79171046b61a78dee",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/forwarding-refs/fancy-button-ref": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-forwarding-refs-fancy-button-ref.json",
      "internalComponentName": "ComponentRedirectToCodepenForwardingRefsFancyButtonRef",
      "path": "/redirect-to-codepen/forwarding-refs/fancy-button-ref",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"import FancyButton from './FancyButton';\\n\\n// highlight-next-line\\nconst ref = React.createRef();\\n\\n// The FancyButton component we imported is the LogProps HOC.\\n// Even though the rendered output will be the same,\\n// Our ref will point to LogProps instead of the inner FancyButton component!\\n// This means we can't call e.g. ref.current.focus()\\n// highlight-range{4}\\n<FancyButton\\n  label=\\\"Click Me\\\"\\n  handleClick={handleClick}\\n  ref={ref}\\n/>;\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/forwarding-refs/fancy-button-ref",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "a68cdb93a979e68f6fa78b8eadccbf1d",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/forwarding-refs/fancy-button": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-forwarding-refs-fancy-button.json",
      "internalComponentName": "ComponentRedirectToCodepenForwardingRefsFancyButton",
      "path": "/redirect-to-codepen/forwarding-refs/fancy-button",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"class FancyButton extends React.Component {\\n  focus() {\\n    // ...\\n  }\\n\\n  // ...\\n}\\n\\n// Rather than exporting FancyButton, we export LogProps.\\n// It will render a FancyButton though.\\n// highlight-next-line\\nexport default logProps(FancyButton);\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/forwarding-refs/fancy-button",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "79511304b11a1e47480a70aa88decdab",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/forwarding-refs/log-props-after": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-forwarding-refs-log-props-after.json",
      "internalComponentName": "ComponentRedirectToCodepenForwardingRefsLogPropsAfter",
      "path": "/redirect-to-codepen/forwarding-refs/log-props-after",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"function logProps(Component) {\\n  class LogProps extends React.Component {\\n    componentDidUpdate(prevProps) {\\n      console.log('old props:', prevProps);\\n      console.log('new props:', this.props);\\n    }\\n\\n    render() {\\n      // highlight-next-line\\n      const {forwardedRef, ...rest} = this.props;\\n\\n      // Assign the custom prop \\\"forwardedRef\\\" as a ref\\n      // highlight-next-line\\n      return <Component ref={forwardedRef} {...rest} />;\\n    }\\n  }\\n\\n  // Note the second param \\\"ref\\\" provided by React.forwardRef.\\n  // We can pass it along to LogProps as a regular prop, e.g. \\\"forwardedRef\\\"\\n  // And it can then be attached to the Component.\\n  // highlight-range{1-3}\\n  function forwardRef(props, ref) {\\n    return <LogProps {...props} forwardedRef={ref} />;\\n  }\\n\\n  // These next lines are not necessary,\\n  // But they do give the component a better display name in DevTools,\\n  // e.g. \\\"ForwardRef(logProps(MyComponent))\\\"\\n  // highlight-range{1-2}\\n  const name = Component.displayName || Component.name;\\n  forwardRef.displayName = `logProps(${name})`;\\n\\n  return React.forwardRef(forwardRef);\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/forwarding-refs/log-props-after",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "027c3c06ff943f613c8f8f36236f7368",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/forwarding-refs/log-props-before": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-forwarding-refs-log-props-before.json",
      "internalComponentName": "ComponentRedirectToCodepenForwardingRefsLogPropsBefore",
      "path": "/redirect-to-codepen/forwarding-refs/log-props-before",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"// highlight-next-line\\nfunction logProps(WrappedComponent) {\\n  class LogProps extends React.Component {\\n    componentDidUpdate(prevProps) {\\n      console.log('old props:', prevProps);\\n      console.log('new props:', this.props);\\n    }\\n\\n    render() {\\n      // highlight-next-line\\n      return <WrappedComponent {...this.props} />;\\n    }\\n  }\\n\\n  return LogProps;\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/forwarding-refs/log-props-before",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "dafc5ef86e2e13398f805af1d9aaabca",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/hello-world": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-hello-world.json",
      "internalComponentName": "ComponentRedirectToCodepenHelloWorld",
      "path": "/redirect-to-codepen/hello-world",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"ReactDOM.render(\\n  <h1>Hello, world!</h1>,\\n  document.getElementById('root')\\n);\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/hello-world",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "6999f22984c97e884ae46a52c1d213b9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/introducing-jsx": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-introducing-jsx.json",
      "internalComponentName": "ComponentRedirectToCodepenIntroducingJsx",
      "path": "/redirect-to-codepen/introducing-jsx",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"function formatName(user) {\\n  return user.firstName + ' ' + user.lastName;\\n}\\n\\nconst user = {\\n  firstName: 'Harper',\\n  lastName: 'Perez',\\n};\\n\\nconst element = <h1>Hello, {formatName(user)}!</h1>;\\n\\nReactDOM.render(element, document.getElementById('root'));\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/introducing-jsx",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "5c3d9bc6dcedd0b936c12ced4d7d9764",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/jsx-simple-example": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-jsx-simple-example.json",
      "internalComponentName": "ComponentRedirectToCodepenJsxSimpleExample",
      "path": "/redirect-to-codepen/jsx-simple-example",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"function hello() {\\n  return <div>Hello world!</div>;\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/jsx-simple-example",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "4d6bf79fbb62801b6c32dee91486078c",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/react-component-reference/get-snapshot-before-update": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-react-component-reference-get-snapshot-before-update.json",
      "internalComponentName": "ComponentRedirectToCodepenReactComponentReferenceGetSnapshotBeforeUpdate",
      "path": "/redirect-to-codepen/react-component-reference/get-snapshot-before-update",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"class ScrollingList extends React.Component {\\n  listRef = React.createRef();\\n\\n  getSnapshotBeforeUpdate(prevProps, prevState) {\\n    // Are we adding new items to the list?\\n    // Capture the current height of the list so we can adjust scroll later.\\n    if (prevProps.list.length < this.props.list.length) {\\n      return this.listRef.current.scrollHeight;\\n    }\\n    return null;\\n  }\\n\\n  componentDidUpdate(prevProps, prevState, snapshot) {\\n    // If we have a snapshot value, we've just added new items.\\n    // Adjust scroll so these new items don't push the old ones out of view.\\n    if (snapshot !== null) {\\n      this.listRef.current.scrollTop +=\\n        this.listRef.current.scrollHeight - snapshot;\\n    }\\n  }\\n\\n  render() {\\n    return (\\n      <div ref={this.listRef}>{/* ...contents... */}</div>\\n    );\\n  }\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/react-component-reference/get-snapshot-before-update",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "3f8786fb2ec6ad9e28ee31fef584a84e",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/reconciliation/index-used-as-key": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-reconciliation-index-used-as-key.json",
      "internalComponentName": "ComponentRedirectToCodepenReconciliationIndexUsedAsKey",
      "path": "/redirect-to-codepen/reconciliation/index-used-as-key",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"const ToDo = props => (\\n  <tr>\\n    <td>\\n      <label>{props.id}</label>\\n    </td>\\n    <td>\\n      <input />\\n    </td>\\n    <td>\\n      <label>{props.createdAt.toTimeString()}</label>\\n    </td>\\n  </tr>\\n);\\n\\nclass ToDoList extends React.Component {\\n  constructor() {\\n    super();\\n    const date = new Date();\\n    const todoCounter = 1;\\n    this.state = {\\n      todoCounter: todoCounter,\\n      list: [\\n        {\\n          id: todoCounter,\\n          createdAt: date,\\n        },\\n      ],\\n    };\\n  }\\n\\n  sortByEarliest() {\\n    const sortedList = this.state.list.sort((a, b) => {\\n      return a.createdAt - b.createdAt;\\n    });\\n    this.setState({\\n      list: [...sortedList],\\n    });\\n  }\\n\\n  sortByLatest() {\\n    const sortedList = this.state.list.sort((a, b) => {\\n      return b.createdAt - a.createdAt;\\n    });\\n    this.setState({\\n      list: [...sortedList],\\n    });\\n  }\\n\\n  addToEnd() {\\n    const date = new Date();\\n    const nextId = this.state.todoCounter + 1;\\n    const newList = [\\n      ...this.state.list,\\n      {id: nextId, createdAt: date},\\n    ];\\n    this.setState({\\n      list: newList,\\n      todoCounter: nextId,\\n    });\\n  }\\n\\n  addToStart() {\\n    const date = new Date();\\n    const nextId = this.state.todoCounter + 1;\\n    const newList = [\\n      {id: nextId, createdAt: date},\\n      ...this.state.list,\\n    ];\\n    this.setState({\\n      list: newList,\\n      todoCounter: nextId,\\n    });\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <code>key=index</code>\\n        <br />\\n        <button onClick={this.addToStart.bind(this)}>\\n          Add New to Start\\n        </button>\\n        <button onClick={this.addToEnd.bind(this)}>\\n          Add New to End\\n        </button>\\n        <button onClick={this.sortByEarliest.bind(this)}>\\n          Sort by Earliest\\n        </button>\\n        <button onClick={this.sortByLatest.bind(this)}>\\n          Sort by Latest\\n        </button>\\n        <table>\\n          <tr>\\n            <th>ID</th>\\n            <th />\\n            <th>created at</th>\\n          </tr>\\n          {this.state.list.map((todo, index) => (\\n            <ToDo key={index} {...todo} />\\n          ))}\\n        </table>\\n      </div>\\n    );\\n  }\\n}\\n\\nReactDOM.render(\\n  <ToDoList />,\\n  document.getElementById('root')\\n);\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/reconciliation/index-used-as-key",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "32f7c5cc789696b222b58ee20d90a9cf",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/reconciliation/no-index-used-as-key": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-reconciliation-no-index-used-as-key.json",
      "internalComponentName": "ComponentRedirectToCodepenReconciliationNoIndexUsedAsKey",
      "path": "/redirect-to-codepen/reconciliation/no-index-used-as-key",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"const ToDo = props => (\\n  <tr>\\n    <td>\\n      <label>{props.id}</label>\\n    </td>\\n    <td>\\n      <input />\\n    </td>\\n    <td>\\n      <label>{props.createdAt.toTimeString()}</label>\\n    </td>\\n  </tr>\\n);\\n\\nclass ToDoList extends React.Component {\\n  constructor() {\\n    super();\\n    const date = new Date();\\n    const toDoCounter = 1;\\n    this.state = {\\n      list: [\\n        {\\n          id: toDoCounter,\\n          createdAt: date,\\n        },\\n      ],\\n      toDoCounter: toDoCounter,\\n    };\\n  }\\n\\n  sortByEarliest() {\\n    const sortedList = this.state.list.sort((a, b) => {\\n      return a.createdAt - b.createdAt;\\n    });\\n    this.setState({\\n      list: [...sortedList],\\n    });\\n  }\\n\\n  sortByLatest() {\\n    const sortedList = this.state.list.sort((a, b) => {\\n      return b.createdAt - a.createdAt;\\n    });\\n    this.setState({\\n      list: [...sortedList],\\n    });\\n  }\\n\\n  addToEnd() {\\n    const date = new Date();\\n    const nextId = this.state.toDoCounter + 1;\\n    const newList = [\\n      ...this.state.list,\\n      {id: nextId, createdAt: date},\\n    ];\\n    this.setState({\\n      list: newList,\\n      toDoCounter: nextId,\\n    });\\n  }\\n\\n  addToStart() {\\n    const date = new Date();\\n    const nextId = this.state.toDoCounter + 1;\\n    const newList = [\\n      {id: nextId, createdAt: date},\\n      ...this.state.list,\\n    ];\\n    this.setState({\\n      list: newList,\\n      toDoCounter: nextId,\\n    });\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <code>key=id</code>\\n        <br />\\n        <button onClick={this.addToStart.bind(this)}>\\n          Add New to Start\\n        </button>\\n        <button onClick={this.addToEnd.bind(this)}>\\n          Add New to End\\n        </button>\\n        <button onClick={this.sortByEarliest.bind(this)}>\\n          Sort by Earliest\\n        </button>\\n        <button onClick={this.sortByLatest.bind(this)}>\\n          Sort by Latest\\n        </button>\\n        <table>\\n          <tr>\\n            <th>ID</th>\\n            <th />\\n            <th>created at</th>\\n          </tr>\\n          {this.state.list.map((todo, index) => (\\n            <ToDo key={todo.id} {...todo} />\\n          ))}\\n        </table>\\n      </div>\\n    );\\n  }\\n}\\n\\nReactDOM.render(\\n  <ToDoList />,\\n  document.getElementById('root')\\n);\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/reconciliation/no-index-used-as-key",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "e90b3b6a41ea46de88baebf66b935b31",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/reference-react-forward-ref": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-reference-react-forward-ref.json",
      "internalComponentName": "ComponentRedirectToCodepenReferenceReactForwardRef",
      "path": "/redirect-to-codepen/reference-react-forward-ref",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"function enhance(Component) {\\n  class Enhanced extends React.Component {\\n    // ...\\n\\n    render() {\\n      const {forwardedRef, ...rest} = this.props;\\n\\n      // Assign the custom prop \\\"forwardedRef\\\" as a ref\\n      // highlight-next-line\\n      return <Component ref={forwardedRef} {...rest} />;\\n    }\\n  }\\n\\n  // Intercept the \\\"ref\\\" and pass it as a custom prop, e.g. \\\"forwardedRef\\\"\\n  // highlight-range{1-3}\\n  function enhanceForwardRef(props, ref) {\\n    return <Enhanced {...props} forwardedRef={ref} />;\\n  }\\n\\n  // These next lines are not necessary,\\n  // But they do give the component a better display name in DevTools,\\n  // e.g. \\\"ForwardRef(withTheme(MyComponent))\\\"\\n  const name = Component.displayName || Component.name;\\n  enhanceForwardRef.displayName = `enhance(${name})`;\\n\\n  // highlight-next-line\\n  return React.forwardRef(enhanceForwardRef);\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/reference-react-forward-ref",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "42b114005c7c913916a6e98dfebb679e",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/rendering-elements/render-an-element": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-rendering-elements-render-an-element.json",
      "internalComponentName": "ComponentRedirectToCodepenRenderingElementsRenderAnElement",
      "path": "/redirect-to-codepen/rendering-elements/render-an-element",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"const element = <h1>Hello, world</h1>;\\nReactDOM.render(element, document.getElementById('root'));\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/rendering-elements/render-an-element",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "da094f58e36c72f9b889f2e501ad2c54",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/rendering-elements/update-rendered-element": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-rendering-elements-update-rendered-element.json",
      "internalComponentName": "ComponentRedirectToCodepenRenderingElementsUpdateRenderedElement",
      "path": "/redirect-to-codepen/rendering-elements/update-rendered-element",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"function tick() {\\n  const element = (\\n    <div>\\n      <h1>Hello, world!</h1>\\n      <h2>It is {new Date().toLocaleTimeString()}.</h2>\\n    </div>\\n  );\\n  // highlight-next-line\\n  ReactDOM.render(element, document.getElementById('root'));\\n}\\n\\nsetInterval(tick, 1000);\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/rendering-elements/update-rendered-element",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "ed6450fccad81c5bfc18f80b8fc14d13",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/strict-mode/enabling-strict-mode": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-strict-mode-enabling-strict-mode.json",
      "internalComponentName": "ComponentRedirectToCodepenStrictModeEnablingStrictMode",
      "path": "/redirect-to-codepen/strict-mode/enabling-strict-mode",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"import React from 'react';\\n\\nfunction ExampleApplication() {\\n  return (\\n    <div>\\n      <Header />\\n      {/* highlight-next-line */}\\n      <React.StrictMode>\\n        <div>\\n          <ComponentOne />\\n          <ComponentTwo />\\n        </div>\\n        {/* highlight-next-line */}\\n      </React.StrictMode>\\n      <Footer />\\n    </div>\\n  );\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/strict-mode/enabling-strict-mode",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "fff0791195b525f7b580674a0da15150",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/strict-mode/side-effects-in-constructor": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-strict-mode-side-effects-in-constructor.json",
      "internalComponentName": "ComponentRedirectToCodepenStrictModeSideEffectsInConstructor",
      "path": "/redirect-to-codepen/strict-mode/side-effects-in-constructor",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"class TopLevelRoute extends React.Component {\\n  constructor(props) {\\n    super(props);\\n\\n    SharedApplicationState.recordEvent('ExampleComponent');\\n  }\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/strict-mode/side-effects-in-constructor",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "3ebfb85d68e79044f8f9d110d3a1c575",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/tutorial-expanded-version": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-tutorial-expanded-version.json",
      "internalComponentName": "ComponentRedirectToCodepenTutorialExpandedVersion",
      "path": "/redirect-to-codepen/tutorial-expanded-version",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"<div className=\\\"shopping-list\\\">\\n  <h1>Shopping List for {props.name}</h1>\\n  <ul>\\n    <li>Instagram</li>\\n    <li>WhatsApp</li>\\n    <li>Oculus</li>\\n  </ul>\\n</div>;\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/tutorial-expanded-version",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "17be69e18d4c5578ffa1abe6ff8f2e17",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/uncontrolled-components/input-type-file": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-uncontrolled-components-input-type-file.json",
      "internalComponentName": "ComponentRedirectToCodepenUncontrolledComponentsInputTypeFile",
      "path": "/redirect-to-codepen/uncontrolled-components/input-type-file",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"class FileInput extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.handleSubmit = this.handleSubmit.bind(this);\\n  }\\n  // highlight-range{4}\\n  handleSubmit(event) {\\n    event.preventDefault();\\n    alert(\\n      `Selected file - ${this.fileInput.files[0].name}`\\n    );\\n  }\\n\\n  render() {\\n    return (\\n      <form onSubmit={this.handleSubmit}>\\n        <label>\\n          Upload file:\\n          {/* highlight-range{1-6} */}\\n          <input\\n            type=\\\"file\\\"\\n            ref={input => {\\n              this.fileInput = input;\\n            }}\\n          />\\n        </label>\\n        <br />\\n        <button type=\\\"submit\\\">Submit</button>\\n      </form>\\n    );\\n  }\\n}\\n\\nReactDOM.render(\\n  <FileInput />,\\n  document.getElementById('root')\\n);\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/uncontrolled-components/input-type-file",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "0401b0aebeb8088fb9df46401c851708",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/update-on-async-rendering/adding-event-listeners-after": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-update-on-async-rendering-adding-event-listeners-after.json",
      "internalComponentName": "ComponentRedirectToCodepenUpdateOnAsyncRenderingAddingEventListenersAfter",
      "path": "/redirect-to-codepen/update-on-async-rendering/adding-event-listeners-after",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"// After\\nclass ExampleComponent extends React.Component {\\n  // highlight-range{1-3}\\n  state = {\\n    subscribedValue: this.props.dataSource.value,\\n  };\\n  // highlight-line\\n  // highlight-range{1-18}\\n  componentDidMount() {\\n    // Event listeners are only safe to add after mount,\\n    // So they won't leak if mount is interrupted or errors.\\n    this.props.dataSource.subscribe(\\n      this.handleSubscriptionChange\\n    );\\n\\n    // External values could change between render and mount,\\n    // In some cases it may be important to handle this case.\\n    if (\\n      this.state.subscribedValue !==\\n      this.props.dataSource.value\\n    ) {\\n      this.setState({\\n        subscribedValue: this.props.dataSource.value,\\n      });\\n    }\\n  }\\n\\n  componentWillUnmount() {\\n    this.props.dataSource.unsubscribe(\\n      this.handleSubscriptionChange\\n    );\\n  }\\n\\n  handleSubscriptionChange = dataSource => {\\n    this.setState({\\n      subscribedValue: dataSource.value,\\n    });\\n  };\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/update-on-async-rendering/adding-event-listeners-after",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "dedd1d299f47dc69c8e3aab83b325a87",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/update-on-async-rendering/adding-event-listeners-before": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-update-on-async-rendering-adding-event-listeners-before.json",
      "internalComponentName": "ComponentRedirectToCodepenUpdateOnAsyncRenderingAddingEventListenersBefore",
      "path": "/redirect-to-codepen/update-on-async-rendering/adding-event-listeners-before",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"// Before\\nclass ExampleComponent extends React.Component {\\n  // highlight-range{1-10}\\n  componentWillMount() {\\n    this.setState({\\n      subscribedValue: this.props.dataSource.value,\\n    });\\n\\n    // This is not safe; it can leak!\\n    this.props.dataSource.subscribe(\\n      this.handleSubscriptionChange\\n    );\\n  }\\n\\n  componentWillUnmount() {\\n    this.props.dataSource.unsubscribe(\\n      this.handleSubscriptionChange\\n    );\\n  }\\n\\n  handleSubscriptionChange = dataSource => {\\n    this.setState({\\n      subscribedValue: dataSource.value,\\n    });\\n  };\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/update-on-async-rendering/adding-event-listeners-before",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "8df50114f54a3b3c9497ea8d61320e8e",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/update-on-async-rendering/adding-event-listeners-create-subscription": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-update-on-async-rendering-adding-event-listeners-create-subscription.json",
      "internalComponentName": "ComponentRedirectToCodepenUpdateOnAsyncRenderingAddingEventListenersCreateSubscription",
      "path": "/redirect-to-codepen/update-on-async-rendering/adding-event-listeners-create-subscription",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"import {createSubscription} from 'create-subscription';\\n\\nconst Subscription = createSubscription({\\n  getCurrentValue(sourceProp) {\\n    // Return the current value of the subscription (sourceProp).\\n    return sourceProp.value;\\n  },\\n\\n  subscribe(sourceProp, callback) {\\n    function handleSubscriptionChange() {\\n      callback(sourceProp.value);\\n    }\\n\\n    // Subscribe (e.g. add an event listener) to the subscription (sourceProp).\\n    // Call callback(newValue) whenever a subscription changes.\\n    sourceProp.subscribe(handleSubscriptionChange);\\n\\n    // Return an unsubscribe method.\\n    return function unsubscribe() {\\n      sourceProp.unsubscribe(handleSubscriptionChange);\\n    };\\n  },\\n});\\n\\n// Rather than passing the subscribable source to our ExampleComponent,\\n// We could just pass the subscribed value directly:\\n<Subscription source={dataSource}>\\n  {value => <ExampleComponent subscribedValue={value} />}\\n</Subscription>;\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/update-on-async-rendering/adding-event-listeners-create-subscription",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "258651f16e47653454b336b41ce47d63",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/update-on-async-rendering/definition-getderivedstatefromprops": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-update-on-async-rendering-definition-getderivedstatefromprops.json",
      "internalComponentName": "ComponentRedirectToCodepenUpdateOnAsyncRenderingDefinitionGetderivedstatefromprops",
      "path": "/redirect-to-codepen/update-on-async-rendering/definition-getderivedstatefromprops",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"class Example extends React.Component {\\n  static getDerivedStateFromProps(nextProps, prevState) {\\n    // ...\\n  }\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/update-on-async-rendering/definition-getderivedstatefromprops",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "1cde7b07b947484185ab6b5e7ec93c49",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/update-on-async-rendering/definition-getsnapshotbeforeupdate": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-update-on-async-rendering-definition-getsnapshotbeforeupdate.json",
      "internalComponentName": "ComponentRedirectToCodepenUpdateOnAsyncRenderingDefinitionGetsnapshotbeforeupdate",
      "path": "/redirect-to-codepen/update-on-async-rendering/definition-getsnapshotbeforeupdate",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"class Example extends React.Component {\\n  getSnapshotBeforeUpdate(prevProps, prevState) {\\n    // ...\\n  }\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/update-on-async-rendering/definition-getsnapshotbeforeupdate",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "7d23b18e01ee474713d424475802eeb4",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/update-on-async-rendering/fetching-external-data-after": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-update-on-async-rendering-fetching-external-data-after.json",
      "internalComponentName": "ComponentRedirectToCodepenUpdateOnAsyncRenderingFetchingExternalDataAfter",
      "path": "/redirect-to-codepen/update-on-async-rendering/fetching-external-data-after",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"// After\\nclass ExampleComponent extends React.Component {\\n  state = {\\n    externalData: null,\\n  };\\n\\n  // highlight-range{1-8}\\n  componentDidMount() {\\n    this._asyncRequest = asyncLoadData().then(\\n      externalData => {\\n        this._asyncRequest = null;\\n        this.setState({externalData});\\n      }\\n    );\\n  }\\n\\n  componentWillUnmount() {\\n    if (this._asyncRequest) {\\n      this._asyncRequest.cancel();\\n    }\\n  }\\n\\n  render() {\\n    if (this.state.externalData === null) {\\n      // Render loading state ...\\n    } else {\\n      // Render real UI ...\\n    }\\n  }\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/update-on-async-rendering/fetching-external-data-after",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "20a023eb0bda71f853533d7f8e6e92d0",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/update-on-async-rendering/fetching-external-data-before": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-update-on-async-rendering-fetching-external-data-before.json",
      "internalComponentName": "ComponentRedirectToCodepenUpdateOnAsyncRenderingFetchingExternalDataBefore",
      "path": "/redirect-to-codepen/update-on-async-rendering/fetching-external-data-before",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"// Before\\nclass ExampleComponent extends React.Component {\\n  state = {\\n    externalData: null,\\n  };\\n\\n  // highlight-range{1-8}\\n  componentWillMount() {\\n    this._asyncRequest = asyncLoadData().then(\\n      externalData => {\\n        this._asyncRequest = null;\\n        this.setState({externalData});\\n      }\\n    );\\n  }\\n\\n  componentWillUnmount() {\\n    if (this._asyncRequest) {\\n      this._asyncRequest.cancel();\\n    }\\n  }\\n\\n  render() {\\n    if (this.state.externalData === null) {\\n      // Render loading state ...\\n    } else {\\n      // Render real UI ...\\n    }\\n  }\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/update-on-async-rendering/fetching-external-data-before",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "8a67514dcfc69fe143531937a5c264f5",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/update-on-async-rendering/initializing-state-after": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-update-on-async-rendering-initializing-state-after.json",
      "internalComponentName": "ComponentRedirectToCodepenUpdateOnAsyncRenderingInitializingStateAfter",
      "path": "/redirect-to-codepen/update-on-async-rendering/initializing-state-after",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"// After\\nclass ExampleComponent extends React.Component {\\n  // highlight-range{1-4}\\n  state = {\\n    currentColor: this.props.defaultColor,\\n    palette: 'rgb',\\n  };\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/update-on-async-rendering/initializing-state-after",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "618ccb79b5a09c756bc90cd6b4efe128",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/update-on-async-rendering/initializing-state-before": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-update-on-async-rendering-initializing-state-before.json",
      "internalComponentName": "ComponentRedirectToCodepenUpdateOnAsyncRenderingInitializingStateBefore",
      "path": "/redirect-to-codepen/update-on-async-rendering/initializing-state-before",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"// Before\\nclass ExampleComponent extends React.Component {\\n  state = {};\\n\\n  // highlight-range{1-6}\\n  componentWillMount() {\\n    this.setState({\\n      currentColor: this.props.defaultColor,\\n      palette: 'rgb',\\n    });\\n  }\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/update-on-async-rendering/initializing-state-before",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "68b0391b0dcd892a2006f21821ba17aa",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/update-on-async-rendering/invoking-external-callbacks-after": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-update-on-async-rendering-invoking-external-callbacks-after.json",
      "internalComponentName": "ComponentRedirectToCodepenUpdateOnAsyncRenderingInvokingExternalCallbacksAfter",
      "path": "/redirect-to-codepen/update-on-async-rendering/invoking-external-callbacks-after",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"// After\\nclass ExampleComponent extends React.Component {\\n  // highlight-range{1-8}\\n  componentDidUpdate(prevProps, prevState) {\\n    if (\\n      this.state.someStatefulValue !==\\n      prevState.someStatefulValue\\n    ) {\\n      this.props.onChange(this.state.someStatefulValue);\\n    }\\n  }\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/update-on-async-rendering/invoking-external-callbacks-after",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "7bdbf3dfbc3877321e63c40528e0c8f0",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/update-on-async-rendering/invoking-external-callbacks-before": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-update-on-async-rendering-invoking-external-callbacks-before.json",
      "internalComponentName": "ComponentRedirectToCodepenUpdateOnAsyncRenderingInvokingExternalCallbacksBefore",
      "path": "/redirect-to-codepen/update-on-async-rendering/invoking-external-callbacks-before",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"// Before\\nclass ExampleComponent extends React.Component {\\n  // highlight-range{1-8}\\n  componentWillUpdate(nextProps, nextState) {\\n    if (\\n      this.state.someStatefulValue !==\\n      nextState.someStatefulValue\\n    ) {\\n      nextProps.onChange(nextState.someStatefulValue);\\n    }\\n  }\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/update-on-async-rendering/invoking-external-callbacks-before",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "aebad53a357c293ad7c56e0caca0eac5",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/update-on-async-rendering/react-dom-properties-before-update-after": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-update-on-async-rendering-react-dom-properties-before-update-after.json",
      "internalComponentName": "ComponentRedirectToCodepenUpdateOnAsyncRenderingReactDomPropertiesBeforeUpdateAfter",
      "path": "/redirect-to-codepen/update-on-async-rendering/react-dom-properties-before-update-after",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"class ScrollingList extends React.Component {\\n  listRef = null;\\n\\n  // highlight-range{1-8}\\n  getSnapshotBeforeUpdate(prevProps, prevState) {\\n    // Are we adding new items to the list?\\n    // Capture the current height of the list so we can adjust scroll later.\\n    if (prevProps.list.length < this.props.list.length) {\\n      return this.listRef.scrollHeight;\\n    }\\n    return null;\\n  }\\n\\n  // highlight-range{1-8}\\n  componentDidUpdate(prevProps, prevState, snapshot) {\\n    // If we have a snapshot value, we've just added new items.\\n    // Adjust scroll so these new items don't push the old ones out of view.\\n    // (snapshot here is the value returned from getSnapshotBeforeUpdate)\\n    if (snapshot !== null) {\\n      this.listRef.scrollTop +=\\n        this.listRef.scrollHeight - snapshot;\\n    }\\n  }\\n\\n  render() {\\n    return (\\n      <div ref={this.setListRef}>\\n        {/* ...contents... */}\\n      </div>\\n    );\\n  }\\n\\n  setListRef = ref => {\\n    this.listRef = ref;\\n  };\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/update-on-async-rendering/react-dom-properties-before-update-after",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "9696810b1b79467c81707ecf7aaab9c4",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/update-on-async-rendering/react-dom-properties-before-update-before": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-update-on-async-rendering-react-dom-properties-before-update-before.json",
      "internalComponentName": "ComponentRedirectToCodepenUpdateOnAsyncRenderingReactDomPropertiesBeforeUpdateBefore",
      "path": "/redirect-to-codepen/update-on-async-rendering/react-dom-properties-before-update-before",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"class ScrollingList extends React.Component {\\n  listRef = null;\\n  previousScrollHeight = null;\\n\\n  // highlight-range{1-7}\\n  componentWillUpdate(nextProps, nextState) {\\n    // Are we adding new items to the list?\\n    // Capture the current height of the list so we can adjust scroll later.\\n    if (this.props.list.length < nextProps.list.length) {\\n      this.previousScrollHeight = this.listRef.scrollHeight;\\n    }\\n  }\\n\\n  // highlight-range{1-10}\\n  componentDidUpdate(prevProps, prevState) {\\n    // If previousScrollHeight is set, we've just added new items.\\n    // Adjust scroll so these new items don't push the old ones out of view.\\n    if (this.previousScrollHeight !== null) {\\n      this.listRef.scrollTop +=\\n        this.listRef.scrollHeight -\\n        this.previousScrollHeight;\\n      this.previousScrollHeight = null;\\n    }\\n  }\\n\\n  render() {\\n    return (\\n      <div ref={this.setListRef}>\\n        {/* ...contents... */}\\n      </div>\\n    );\\n  }\\n\\n  setListRef = ref => {\\n    this.listRef = ref;\\n  };\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/update-on-async-rendering/react-dom-properties-before-update-before",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "bdda3171f9016731bc4dde6f924ef930",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/update-on-async-rendering/side-effects-when-props-change-after": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-update-on-async-rendering-side-effects-when-props-change-after.json",
      "internalComponentName": "ComponentRedirectToCodepenUpdateOnAsyncRenderingSideEffectsWhenPropsChangeAfter",
      "path": "/redirect-to-codepen/update-on-async-rendering/side-effects-when-props-change-after",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"// After\\nclass ExampleComponent extends React.Component {\\n  // highlight-range{1-5}\\n  componentDidUpdate(prevProps, prevState) {\\n    if (this.props.isVisible !== prevProps.isVisible) {\\n      logVisibleChange(this.props.isVisible);\\n    }\\n  }\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/update-on-async-rendering/side-effects-when-props-change-after",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "d89bf41226fc0dbc59d1da81f6f208ad",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/update-on-async-rendering/side-effects-when-props-change-before": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-update-on-async-rendering-side-effects-when-props-change-before.json",
      "internalComponentName": "ComponentRedirectToCodepenUpdateOnAsyncRenderingSideEffectsWhenPropsChangeBefore",
      "path": "/redirect-to-codepen/update-on-async-rendering/side-effects-when-props-change-before",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"// Before\\nclass ExampleComponent extends React.Component {\\n  // highlight-range{1-5}\\n  componentWillReceiveProps(nextProps) {\\n    if (this.props.isVisible !== nextProps.isVisible) {\\n      logVisibleChange(nextProps.isVisible);\\n    }\\n  }\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/update-on-async-rendering/side-effects-when-props-change-before",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "50f5a76cf5a0864d0bdfb1451aea5ac6",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/update-on-async-rendering/updating-external-data-when-props-change-after": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-update-on-async-rendering-updating-external-data-when-props-change-after.json",
      "internalComponentName": "ComponentRedirectToCodepenUpdateOnAsyncRenderingUpdatingExternalDataWhenPropsChangeAfter",
      "path": "/redirect-to-codepen/update-on-async-rendering/updating-external-data-when-props-change-after",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"// After\\nclass ExampleComponent extends React.Component {\\n  state = {\\n    externalData: null,\\n  };\\n\\n  // highlight-range{1-13}\\n  static getDerivedStateFromProps(nextProps, prevState) {\\n    // Store prevId in state so we can compare when props change.\\n    // Clear out previously-loaded data (so we don't render stale stuff).\\n    if (nextProps.id !== prevState.prevId) {\\n      return {\\n        externalData: null,\\n        prevId: nextProps.id,\\n      };\\n    }\\n\\n    // No state update necessary\\n    return null;\\n  }\\n\\n  componentDidMount() {\\n    this._loadAsyncData(this.props.id);\\n  }\\n\\n  // highlight-range{1-5}\\n  componentDidUpdate(prevProps, prevState) {\\n    if (this.state.externalData === null) {\\n      this._loadAsyncData(this.props.id);\\n    }\\n  }\\n\\n  componentWillUnmount() {\\n    if (this._asyncRequest) {\\n      this._asyncRequest.cancel();\\n    }\\n  }\\n\\n  render() {\\n    if (this.state.externalData === null) {\\n      // Render loading state ...\\n    } else {\\n      // Render real UI ...\\n    }\\n  }\\n\\n  _loadAsyncData(id) {\\n    this._asyncRequest = asyncLoadData(id).then(\\n      externalData => {\\n        this._asyncRequest = null;\\n        this.setState({externalData});\\n      }\\n    );\\n  }\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/update-on-async-rendering/updating-external-data-when-props-change-after",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "d95012da4e095ece5f3c57e5fd769d89",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/update-on-async-rendering/updating-external-data-when-props-change-before": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-update-on-async-rendering-updating-external-data-when-props-change-before.json",
      "internalComponentName": "ComponentRedirectToCodepenUpdateOnAsyncRenderingUpdatingExternalDataWhenPropsChangeBefore",
      "path": "/redirect-to-codepen/update-on-async-rendering/updating-external-data-when-props-change-before",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"// Before\\nclass ExampleComponent extends React.Component {\\n  state = {\\n    externalData: null,\\n  };\\n\\n  componentDidMount() {\\n    this._loadAsyncData(this.props.id);\\n  }\\n\\n  // highlight-range{1-6}\\n  componentWillReceiveProps(nextProps) {\\n    if (nextProps.id !== this.props.id) {\\n      this.setState({externalData: null});\\n      this._loadAsyncData(nextProps.id);\\n    }\\n  }\\n\\n  componentWillUnmount() {\\n    if (this._asyncRequest) {\\n      this._asyncRequest.cancel();\\n    }\\n  }\\n\\n  render() {\\n    if (this.state.externalData === null) {\\n      // Render loading state ...\\n    } else {\\n      // Render real UI ...\\n    }\\n  }\\n\\n  _loadAsyncData(id) {\\n    this._asyncRequest = asyncLoadData(id).then(\\n      externalData => {\\n        this._asyncRequest = null;\\n        this.setState({externalData});\\n      }\\n    );\\n  }\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/update-on-async-rendering/updating-external-data-when-props-change-before",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "344cb9e133ea15fe914d297bb2ccf013",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/update-on-async-rendering/updating-state-from-props-after": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-update-on-async-rendering-updating-state-from-props-after.json",
      "internalComponentName": "ComponentRedirectToCodepenUpdateOnAsyncRenderingUpdatingStateFromPropsAfter",
      "path": "/redirect-to-codepen/update-on-async-rendering/updating-state-from-props-after",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"// After\\nclass ExampleComponent extends React.Component {\\n  // Initialize state in constructor,\\n  // Or with a property initializer.\\n  // highlight-range{1-4}\\n  state = {\\n    isScrollingDown: false,\\n    lastRow: null,\\n  };\\n\\n  // highlight-range{1-8}\\n  static getDerivedStateFromProps(nextProps, prevState) {\\n    if (nextProps.currentRow !== prevState.lastRow) {\\n      return {\\n        isScrollingDown:\\n          nextProps.currentRow > prevState.lastRow,\\n        lastRow: nextProps.currentRow,\\n      };\\n    }\\n\\n    // Return null to indicate no change to state.\\n    return null;\\n  }\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/update-on-async-rendering/updating-state-from-props-after",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "6cf548809805ab0669e7dd52ce715f62",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/update-on-async-rendering/updating-state-from-props-before": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-update-on-async-rendering-updating-state-from-props-before.json",
      "internalComponentName": "ComponentRedirectToCodepenUpdateOnAsyncRenderingUpdatingStateFromPropsBefore",
      "path": "/redirect-to-codepen/update-on-async-rendering/updating-state-from-props-before",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"// Before\\nclass ExampleComponent extends React.Component {\\n  state = {\\n    isScrollingDown: false,\\n  };\\n\\n  // highlight-range{1-8}\\n  componentWillReceiveProps(nextProps) {\\n    if (this.props.currentRow !== nextProps.currentRow) {\\n      this.setState({\\n        isScrollingDown:\\n          nextProps.currentRow > this.props.currentRow,\\n      });\\n    }\\n  }\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/update-on-async-rendering/updating-state-from-props-before",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "f683eefe9f8730c37f808b34aeeef932",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /redirect-to-codepen/update-on-async-rendering/using-react-lifecycles-compat": {
      "layout": "index",
      "jsonName": "redirect-to-codepen-update-on-async-rendering-using-react-lifecycles-compat.json",
      "internalComponentName": "ComponentRedirectToCodepenUpdateOnAsyncRenderingUsingReactLifecyclesCompat",
      "path": "/redirect-to-codepen/update-on-async-rendering/using-react-lifecycles-compat",
      "component": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "componentChunkName": "component---src-templates-codepen-example-js",
      "context": {
        "action": "https://codepen.io/pen/define",
        "payload": "{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"import React from 'react';\\n// highlight-next-line\\nimport polyfill from 'react-lifecycles-compat';\\n\\nclass ExampleComponent extends React.Component {\\n  // highlight-next-line\\n  static getDerivedStateFromProps(nextProps, prevState) {\\n    // Your state update logic here ...\\n  }\\n}\\n\\n// Polyfill your component to work with older versions of React:\\n// highlight-next-line\\npolyfill(ExampleComponent);\\n\\nexport default ExampleComponent;\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"
      },
      "pluginCreator___NODE": "Plugin gatsby-remark-code-repls",
      "pluginCreatorId": "Plugin gatsby-remark-code-repls",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/codepen-example.js",
      "id": "SitePage /redirect-to-codepen/update-on-async-rendering/using-react-lifecycles-compat",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "6ef8e555d07a433873a33a93a0bcbf5e",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /community/articles.html": {
      "layout": "index",
      "jsonName": "community-articles-html.json",
      "internalComponentName": "ComponentCommunityArticlesHtml",
      "path": "/community/articles.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "componentChunkName": "component---src-templates-community-js",
      "context": {
        "slug": "community/articles.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "id": "SitePage /community/articles.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "647efec1c63698a4cc0e937c67acd6de",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/complementary-tools-it-IT.html": {
      "layout": "index",
      "jsonName": "docs-complementary-tools-it-it-html.json",
      "internalComponentName": "ComponentDocsComplementaryToolsItItHtml",
      "path": "/docs/complementary-tools-it-IT.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/complementary-tools-it-IT.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/complementary-tools-it-IT.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "9acce5b2f5466d74265c9027f6a7c3df",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/complementary-tools-zh-CN.html": {
      "layout": "index",
      "jsonName": "docs-complementary-tools-zh-cn-html.json",
      "internalComponentName": "ComponentDocsComplementaryToolsZhCnHtml",
      "path": "/docs/complementary-tools-zh-CN.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/complementary-tools-zh-CN.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/complementary-tools-zh-CN.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "199af049c0efed89177bafe8860e368b",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/complementary-tools-ko-KR.html": {
      "layout": "index",
      "jsonName": "docs-complementary-tools-ko-kr-html.json",
      "internalComponentName": "ComponentDocsComplementaryToolsKoKrHtml",
      "path": "/docs/complementary-tools-ko-KR.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/complementary-tools-ko-KR.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/complementary-tools-ko-KR.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "065c6514f40f07216fd497c0df98a342",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/conferences-it-IT.html": {
      "layout": "index",
      "jsonName": "docs-conferences-it-it-html.json",
      "internalComponentName": "ComponentDocsConferencesItItHtml",
      "path": "/docs/conferences-it-IT.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/conferences-it-IT.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/conferences-it-IT.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "caa84f07a15a552795683642fc47f1ec",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/complementary-tools.html": {
      "layout": "index",
      "jsonName": "docs-complementary-tools-html.json",
      "internalComponentName": "ComponentDocsComplementaryToolsHtml",
      "path": "/docs/complementary-tools.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/complementary-tools.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/complementary-tools.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "c9630679420d25df73afdd9351c8aacf",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/conferences-ko-KR.html": {
      "layout": "index",
      "jsonName": "docs-conferences-ko-kr-html.json",
      "internalComponentName": "ComponentDocsConferencesKoKrHtml",
      "path": "/docs/conferences-ko-KR.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/conferences-ko-KR.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/conferences-ko-KR.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "bba4980cff1488e9db013fafe24486fc",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/conferences-zh-CN.html": {
      "layout": "index",
      "jsonName": "docs-conferences-zh-cn-html.json",
      "internalComponentName": "ComponentDocsConferencesZhCnHtml",
      "path": "/docs/conferences-zh-CN.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/conferences-zh-CN.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/conferences-zh-CN.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "7c7f00ee0cfa9aebcf6a0fcf1da1bd69",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /community/courses.html": {
      "layout": "index",
      "jsonName": "community-courses-html.json",
      "internalComponentName": "ComponentCommunityCoursesHtml",
      "path": "/community/courses.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "componentChunkName": "component---src-templates-community-js",
      "context": {
        "slug": "community/courses.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "id": "SitePage /community/courses.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "1ddea6e4a2b81cfd597bb6a4425d50b5",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/examples-it-IT.html": {
      "layout": "index",
      "jsonName": "docs-examples-it-it-html.json",
      "internalComponentName": "ComponentDocsExamplesItItHtml",
      "path": "/docs/examples-it-IT.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/examples-it-IT.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/examples-it-IT.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "6c151e6d33b3fc1d08c255e68ac01c19",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/examples-ko-KR.html": {
      "layout": "index",
      "jsonName": "docs-examples-ko-kr-html.json",
      "internalComponentName": "ComponentDocsExamplesKoKrHtml",
      "path": "/docs/examples-ko-KR.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/examples-ko-KR.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/examples-ko-KR.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "746460e5aac14e93a8e482501115a8bf",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /community/examples.html": {
      "layout": "index",
      "jsonName": "community-examples-html.json",
      "internalComponentName": "ComponentCommunityExamplesHtml",
      "path": "/community/examples.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "componentChunkName": "component---src-templates-community-js",
      "context": {
        "slug": "community/examples.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "id": "SitePage /community/examples.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "16454d87beb850f26e2cc239f8199253",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/examples-zh-CN.html": {
      "layout": "index",
      "jsonName": "docs-examples-zh-cn-html.json",
      "internalComponentName": "ComponentDocsExamplesZhCnHtml",
      "path": "/docs/examples-zh-CN.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/examples-zh-CN.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/examples-zh-CN.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "7462dc484f20369d6add9538ba7bcd3a",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /community/external-resources.html": {
      "layout": "index",
      "jsonName": "community-external-resources-html.json",
      "internalComponentName": "ComponentCommunityExternalResourcesHtml",
      "path": "/community/external-resources.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "componentChunkName": "component---src-templates-community-js",
      "context": {
        "slug": "community/external-resources.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "id": "SitePage /community/external-resources.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "3b3ba6e19e0823351040197dcf991e54",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /community/meetups.html": {
      "layout": "index",
      "jsonName": "community-meetups-html.json",
      "internalComponentName": "ComponentCommunityMeetupsHtml",
      "path": "/community/meetups.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "componentChunkName": "component---src-templates-community-js",
      "context": {
        "slug": "community/meetups.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "id": "SitePage /community/meetups.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "45c59a9bda4651d0c6c00b76b6b073f3",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /community/podcasts.html": {
      "layout": "index",
      "jsonName": "community-podcasts-html.json",
      "internalComponentName": "ComponentCommunityPodcastsHtml",
      "path": "/community/podcasts.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "componentChunkName": "component---src-templates-community-js",
      "context": {
        "slug": "community/podcasts.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "id": "SitePage /community/podcasts.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "edac31af78f86b30f1c881c8d425583b",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /community/support.html": {
      "layout": "index",
      "jsonName": "community-support-html.json",
      "internalComponentName": "ComponentCommunitySupportHtml",
      "path": "/community/support.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "componentChunkName": "component---src-templates-community-js",
      "context": {
        "slug": "community/support.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "id": "SitePage /community/support.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "b91387bed34f7ae1992944bdb7c77b31",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /community/component-workbenches.html": {
      "layout": "index",
      "jsonName": "community-component-workbenches-html.json",
      "internalComponentName": "ComponentCommunityComponentWorkbenchesHtml",
      "path": "/community/component-workbenches.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "componentChunkName": "component---src-templates-community-js",
      "context": {
        "slug": "community/component-workbenches.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "id": "SitePage /community/component-workbenches.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "5b38203eabc857a836730bea8e96bc8d",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /community/data-fetching.html": {
      "layout": "index",
      "jsonName": "community-data-fetching-html.json",
      "internalComponentName": "ComponentCommunityDataFetchingHtml",
      "path": "/community/data-fetching.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "componentChunkName": "component---src-templates-community-js",
      "context": {
        "slug": "community/data-fetching.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "id": "SitePage /community/data-fetching.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "2170e9fc5fc0ee4add44520ef1d26e83",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /community/debugging-tools.html": {
      "layout": "index",
      "jsonName": "community-debugging-tools-html.json",
      "internalComponentName": "ComponentCommunityDebuggingToolsHtml",
      "path": "/community/debugging-tools.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "componentChunkName": "component---src-templates-community-js",
      "context": {
        "slug": "community/debugging-tools.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "id": "SitePage /community/debugging-tools.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "24a178428da74fb782369a9946f1e2ac",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /community/jsx-integrations.html": {
      "layout": "index",
      "jsonName": "community-jsx-integrations-html.json",
      "internalComponentName": "ComponentCommunityJsxIntegrationsHtml",
      "path": "/community/jsx-integrations.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "componentChunkName": "component---src-templates-community-js",
      "context": {
        "slug": "community/jsx-integrations.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "id": "SitePage /community/jsx-integrations.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "213087ecd6e8a0ec13cd8ad0ba715343",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /community/misc.html": {
      "layout": "index",
      "jsonName": "community-misc-html.json",
      "internalComponentName": "ComponentCommunityMiscHtml",
      "path": "/community/misc.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "componentChunkName": "component---src-templates-community-js",
      "context": {
        "slug": "community/misc.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "id": "SitePage /community/misc.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "9896f31810a22e07107a5019c9a500c6",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /community/model-management.html": {
      "layout": "index",
      "jsonName": "community-model-management-html.json",
      "internalComponentName": "ComponentCommunityModelManagementHtml",
      "path": "/community/model-management.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "componentChunkName": "component---src-templates-community-js",
      "context": {
        "slug": "community/model-management.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "id": "SitePage /community/model-management.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "cf3809877528a0ba45bed3aef4f76313",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /community/routing.html": {
      "layout": "index",
      "jsonName": "community-routing-html.json",
      "internalComponentName": "ComponentCommunityRoutingHtml",
      "path": "/community/routing.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "componentChunkName": "component---src-templates-community-js",
      "context": {
        "slug": "community/routing.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "id": "SitePage /community/routing.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "2b77e808f1a535dbbb63ec3b107b716b",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /community/starter-kits.html": {
      "layout": "index",
      "jsonName": "community-starter-kits-html.json",
      "internalComponentName": "ComponentCommunityStarterKitsHtml",
      "path": "/community/starter-kits.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "componentChunkName": "component---src-templates-community-js",
      "context": {
        "slug": "community/starter-kits.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "id": "SitePage /community/starter-kits.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "c9b8ca639dddb4b44a665b9b2136203f",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /community/testing.html": {
      "layout": "index",
      "jsonName": "community-testing-html.json",
      "internalComponentName": "ComponentCommunityTestingHtml",
      "path": "/community/testing.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "componentChunkName": "component---src-templates-community-js",
      "context": {
        "slug": "community/testing.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "id": "SitePage /community/testing.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "7c7ab7119226d0bc10a067cfcb90ea1f",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /community/videos.html": {
      "layout": "index",
      "jsonName": "community-videos-html.json",
      "internalComponentName": "ComponentCommunityVideosHtml",
      "path": "/community/videos.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "componentChunkName": "component---src-templates-community-js",
      "context": {
        "slug": "community/videos.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "id": "SitePage /community/videos.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "140fc22a487f68d82a295714f60e5a9e",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/videos-zh-CN.html": {
      "layout": "index",
      "jsonName": "docs-videos-zh-cn-html.json",
      "internalComponentName": "ComponentDocsVideosZhCnHtml",
      "path": "/docs/videos-zh-CN.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/videos-zh-CN.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/videos-zh-CN.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "cc039573c7ac35f75a4bfc2da6a10e69",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /warnings/dont-call-proptypes.html": {
      "layout": "index",
      "jsonName": "warnings-dont-call-proptypes-html.json",
      "internalComponentName": "ComponentWarningsDontCallProptypesHtml",
      "path": "/warnings/dont-call-proptypes.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "warnings/dont-call-proptypes.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /warnings/dont-call-proptypes.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "f0bb448a5bba53c61c367acaeddf5fad",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /warnings/invalid-aria-prop.html": {
      "layout": "index",
      "jsonName": "warnings-invalid-aria-prop-html.json",
      "internalComponentName": "ComponentWarningsInvalidAriaPropHtml",
      "path": "/warnings/invalid-aria-prop.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "warnings/invalid-aria-prop.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /warnings/invalid-aria-prop.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "57e40172315e327480c6d1371c685fa9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /warnings/legacy-factories.html": {
      "layout": "index",
      "jsonName": "warnings-legacy-factories-html.json",
      "internalComponentName": "ComponentWarningsLegacyFactoriesHtml",
      "path": "/warnings/legacy-factories.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "warnings/legacy-factories.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /warnings/legacy-factories.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "8bc51206c67d5fc0c4a9869488e9efa3",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /warnings/refs-must-have-owner.html": {
      "layout": "index",
      "jsonName": "warnings-refs-must-have-owner-html.json",
      "internalComponentName": "ComponentWarningsRefsMustHaveOwnerHtml",
      "path": "/warnings/refs-must-have-owner.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "warnings/refs-must-have-owner.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /warnings/refs-must-have-owner.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "84bc5f6df58e96b50d6b03bc6fe2c11a",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /warnings/special-props.html": {
      "layout": "index",
      "jsonName": "warnings-special-props-html.json",
      "internalComponentName": "ComponentWarningsSpecialPropsHtml",
      "path": "/warnings/special-props.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "warnings/special-props.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /warnings/special-props.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "cb310637fa237fb3ac124b3dfed0b672",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /warnings/unknown-prop.html": {
      "layout": "index",
      "jsonName": "warnings-unknown-prop-html.json",
      "internalComponentName": "ComponentWarningsUnknownPropHtml",
      "path": "/warnings/unknown-prop.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "warnings/unknown-prop.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /warnings/unknown-prop.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "c3a1decaa2c67a04fc1bed07796428f0",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/add-react-to-a-new-app.html": {
      "layout": "index",
      "jsonName": "docs-add-react-to-a-new-app-html.json",
      "internalComponentName": "ComponentDocsAddReactToANewAppHtml",
      "path": "/docs/add-react-to-a-new-app.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/add-react-to-a-new-app.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/add-react-to-a-new-app.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "15ed402cb16d51ec75ac72d6f2b122fb",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/add-react-to-an-existing-app.html": {
      "layout": "index",
      "jsonName": "docs-add-react-to-an-existing-app-html.json",
      "internalComponentName": "ComponentDocsAddReactToAnExistingAppHtml",
      "path": "/docs/add-react-to-an-existing-app.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/add-react-to-an-existing-app.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/add-react-to-an-existing-app.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "91256a0052348b1ae2abb306650683e5",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/create-fragment.html": {
      "layout": "index",
      "jsonName": "docs-create-fragment-html.json",
      "internalComponentName": "ComponentDocsCreateFragmentHtml",
      "path": "/docs/create-fragment.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/create-fragment.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/create-fragment.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "c3f5d1652e91d8d02d80a9e564d28dd8",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/perf.html": {
      "layout": "index",
      "jsonName": "docs-perf-html.json",
      "internalComponentName": "ComponentDocsPerfHtml",
      "path": "/docs/perf.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/perf.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/perf.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "b2d1710f27458cb019c74dab283615f2",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/pure-render-mixin.html": {
      "layout": "index",
      "jsonName": "docs-pure-render-mixin-html.json",
      "internalComponentName": "ComponentDocsPureRenderMixinHtml",
      "path": "/docs/pure-render-mixin.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/pure-render-mixin.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/pure-render-mixin.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "a6e2e6dc1e36ebb5ad8fe9fa13c58e6f",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/shallow-compare.html": {
      "layout": "index",
      "jsonName": "docs-shallow-compare-html.json",
      "internalComponentName": "ComponentDocsShallowCompareHtml",
      "path": "/docs/shallow-compare.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/shallow-compare.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/shallow-compare.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "a027713b4bc75a5a6cfadeb04e2ff9a8",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/shallow-renderer.html": {
      "layout": "index",
      "jsonName": "docs-shallow-renderer-html.json",
      "internalComponentName": "ComponentDocsShallowRendererHtml",
      "path": "/docs/shallow-renderer.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/shallow-renderer.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/shallow-renderer.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "3b4a5900318e8d13da6193220bac8392",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/test-utils.html": {
      "layout": "index",
      "jsonName": "docs-test-utils-html.json",
      "internalComponentName": "ComponentDocsTestUtilsHtml",
      "path": "/docs/test-utils.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/test-utils.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/test-utils.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "5c2f221459e34233547269084f8b2ca4",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/two-way-binding-helpers.html": {
      "layout": "index",
      "jsonName": "docs-two-way-binding-helpers-html.json",
      "internalComponentName": "ComponentDocsTwoWayBindingHelpersHtml",
      "path": "/docs/two-way-binding-helpers.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/two-way-binding-helpers.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/two-way-binding-helpers.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "1d08e610ae2d6c5cd0938c547f52603b",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/update.html": {
      "layout": "index",
      "jsonName": "docs-update-html.json",
      "internalComponentName": "ComponentDocsUpdateHtml",
      "path": "/docs/update.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/update.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/update.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "9cd49c1b0cfff921907cc1084cc0790e",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/addons.html": {
      "layout": "index",
      "jsonName": "docs-addons-html.json",
      "internalComponentName": "ComponentDocsAddonsHtml",
      "path": "/docs/addons.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/addons.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/addons.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "14ad15f55123958e723d4649065ea4f3",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/cdn-links.html": {
      "layout": "index",
      "jsonName": "docs-cdn-links-html.json",
      "internalComponentName": "ComponentDocsCdnLinksHtml",
      "path": "/docs/cdn-links.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/cdn-links.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/cdn-links.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "082a48f8097c474b662226f4d316dfb1",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/code-splitting.html": {
      "layout": "index",
      "jsonName": "docs-code-splitting-html.json",
      "internalComponentName": "ComponentDocsCodeSplittingHtml",
      "path": "/docs/code-splitting.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/code-splitting.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/code-splitting.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "a1e671d54be2c4969ed9cfb8944e70e4",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/components-and-props.html": {
      "layout": "index",
      "jsonName": "docs-components-and-props-html.json",
      "internalComponentName": "ComponentDocsComponentsAndPropsHtml",
      "path": "/docs/components-and-props.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/components-and-props.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/components-and-props.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "0a2c6e5c038b046ad529fcd0f55901bd",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/composition-vs-inheritance.html": {
      "layout": "index",
      "jsonName": "docs-composition-vs-inheritance-html.json",
      "internalComponentName": "ComponentDocsCompositionVsInheritanceHtml",
      "path": "/docs/composition-vs-inheritance.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/composition-vs-inheritance.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/composition-vs-inheritance.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "4876c49d597ac1910347d4956cc7ece6",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/conditional-rendering.html": {
      "layout": "index",
      "jsonName": "docs-conditional-rendering-html.json",
      "internalComponentName": "ComponentDocsConditionalRenderingHtml",
      "path": "/docs/conditional-rendering.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/conditional-rendering.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/conditional-rendering.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "30a0083902da4c761040ef460d280147",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/context.html": {
      "layout": "index",
      "jsonName": "docs-context-html.json",
      "internalComponentName": "ComponentDocsContextHtml",
      "path": "/docs/context.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/context.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/context.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "d74eb2c1a5fb75449c2da9731829fcb9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/cross-origin-errors.html": {
      "layout": "index",
      "jsonName": "docs-cross-origin-errors-html.json",
      "internalComponentName": "ComponentDocsCrossOriginErrorsHtml",
      "path": "/docs/cross-origin-errors.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/cross-origin-errors.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/cross-origin-errors.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "2606bb055529138d9fe5e88affc841a4",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/create-a-new-react-app.html": {
      "layout": "index",
      "jsonName": "docs-create-a-new-react-app-html.json",
      "internalComponentName": "ComponentDocsCreateANewReactAppHtml",
      "path": "/docs/create-a-new-react-app.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/create-a-new-react-app.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/create-a-new-react-app.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "d5ac7ff9fb59e2835d31e0203dd0f8be",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/faq-ajax.html": {
      "layout": "index",
      "jsonName": "docs-faq-ajax-html.json",
      "internalComponentName": "ComponentDocsFaqAjaxHtml",
      "path": "/docs/faq-ajax.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/faq-ajax.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/faq-ajax.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "8eed9bf0d16d9aa1567acab5381436d0",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/faq-build.html": {
      "layout": "index",
      "jsonName": "docs-faq-build-html.json",
      "internalComponentName": "ComponentDocsFaqBuildHtml",
      "path": "/docs/faq-build.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/faq-build.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/faq-build.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "7500f5dd7889b1065dacdc4db8b17466",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/faq-internals.html": {
      "layout": "index",
      "jsonName": "docs-faq-internals-html.json",
      "internalComponentName": "ComponentDocsFaqInternalsHtml",
      "path": "/docs/faq-internals.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/faq-internals.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/faq-internals.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "15268e76820f600f3feb64feaf50c260",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/faq-state.html": {
      "layout": "index",
      "jsonName": "docs-faq-state-html.json",
      "internalComponentName": "ComponentDocsFaqStateHtml",
      "path": "/docs/faq-state.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/faq-state.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/faq-state.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "73a463742bd89a6f216d54e4b893d25b",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/faq-structure.html": {
      "layout": "index",
      "jsonName": "docs-faq-structure-html.json",
      "internalComponentName": "ComponentDocsFaqStructureHtml",
      "path": "/docs/faq-structure.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/faq-structure.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/faq-structure.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "a2d6785329252f901b2b012cdb32ec8a",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/faq-styling.html": {
      "layout": "index",
      "jsonName": "docs-faq-styling-html.json",
      "internalComponentName": "ComponentDocsFaqStylingHtml",
      "path": "/docs/faq-styling.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/faq-styling.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/faq-styling.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "edef802b013a5a15939b72a43b41aa9c",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/forwarding-refs.html": {
      "layout": "index",
      "jsonName": "docs-forwarding-refs-html.json",
      "internalComponentName": "ComponentDocsForwardingRefsHtml",
      "path": "/docs/forwarding-refs.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/forwarding-refs.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/forwarding-refs.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "4672dca66d0714ab8389154b21753c46",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/fragments.html": {
      "layout": "index",
      "jsonName": "docs-fragments-html.json",
      "internalComponentName": "ComponentDocsFragmentsHtml",
      "path": "/docs/fragments.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/fragments.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/fragments.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "eaaf5981fbd4f4e7a08e84602af78525",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/getting-started.html": {
      "layout": "index",
      "jsonName": "docs-getting-started-html.json",
      "internalComponentName": "ComponentDocsGettingStartedHtml",
      "path": "/docs/getting-started.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/getting-started.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/getting-started.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "12599b8df6ed89aee7767bf6ea3960b5",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/handling-events.html": {
      "layout": "index",
      "jsonName": "docs-handling-events-html.json",
      "internalComponentName": "ComponentDocsHandlingEventsHtml",
      "path": "/docs/handling-events.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/handling-events.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/handling-events.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "3eb44b804dbf04e97775eec5b4bf0efc",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/hello-world.html": {
      "layout": "index",
      "jsonName": "docs-hello-world-html.json",
      "internalComponentName": "ComponentDocsHelloWorldHtml",
      "path": "/docs/hello-world.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/hello-world.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/hello-world.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "755afa4fae8d7848bb59c0068400ebc0",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/hooks-rules.html": {
      "layout": "index",
      "jsonName": "docs-hooks-rules-html.json",
      "internalComponentName": "ComponentDocsHooksRulesHtml",
      "path": "/docs/hooks-rules.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/hooks-rules.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/hooks-rules.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "f88aeb758ba7acabc64f344b3a6ba102",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/installation.html": {
      "layout": "index",
      "jsonName": "docs-installation-html.json",
      "internalComponentName": "ComponentDocsInstallationHtml",
      "path": "/docs/installation.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "/docs/installation.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/installation.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "c4d1cb5fc764807c44e126364ad02859",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/introducing-jsx.html": {
      "layout": "index",
      "jsonName": "docs-introducing-jsx-html.json",
      "internalComponentName": "ComponentDocsIntroducingJsxHtml",
      "path": "/docs/introducing-jsx.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/introducing-jsx.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/introducing-jsx.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "894e6ec0d494608792062fef7ad6ab59",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/legacy-context.html": {
      "layout": "index",
      "jsonName": "docs-legacy-context-html.json",
      "internalComponentName": "ComponentDocsLegacyContextHtml",
      "path": "/docs/legacy-context.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/legacy-context.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/legacy-context.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "acf812851b5d9ad24eca334841822b79",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/portals.html": {
      "layout": "index",
      "jsonName": "docs-portals-html.json",
      "internalComponentName": "ComponentDocsPortalsHtml",
      "path": "/docs/portals.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/portals.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/portals.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "fd396cb7b8098cc8cac7bdf2993b86ff",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/react-without-es6.html": {
      "layout": "index",
      "jsonName": "docs-react-without-es-6-html.json",
      "internalComponentName": "ComponentDocsReactWithoutEs6Html",
      "path": "/docs/react-without-es6.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/react-without-es6.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/react-without-es6.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "038633f9b47bfecca3c6a51afac77715",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/react-without-jsx.html": {
      "layout": "index",
      "jsonName": "docs-react-without-jsx-html.json",
      "internalComponentName": "ComponentDocsReactWithoutJsxHtml",
      "path": "/docs/react-without-jsx.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/react-without-jsx.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/react-without-jsx.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "e254091141f40e6258e66c9914e19c1b",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/reconciliation.html": {
      "layout": "index",
      "jsonName": "docs-reconciliation-html.json",
      "internalComponentName": "ComponentDocsReconciliationHtml",
      "path": "/docs/reconciliation.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/reconciliation.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/reconciliation.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "e49c007a8f5c12018cbce9216bf9ca16",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/events.html": {
      "layout": "index",
      "jsonName": "docs-events-html.json",
      "internalComponentName": "ComponentDocsEventsHtml",
      "path": "/docs/events.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/events.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/events.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "493a8498829b977e8ad84b35604da2df",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/javascript-environment-requirements.html": {
      "layout": "index",
      "jsonName": "docs-javascript-environment-requirements-html.json",
      "internalComponentName": "ComponentDocsJavascriptEnvironmentRequirementsHtml",
      "path": "/docs/javascript-environment-requirements.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/javascript-environment-requirements.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/javascript-environment-requirements.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "c1c67bdb5148e3133235a8a399f7ba21",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/react-dom-server.html": {
      "layout": "index",
      "jsonName": "docs-react-dom-server-html.json",
      "internalComponentName": "ComponentDocsReactDomServerHtml",
      "path": "/docs/react-dom-server.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/react-dom-server.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/react-dom-server.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "2903207d64f8be42d53412e4b154f937",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/react-dom.html": {
      "layout": "index",
      "jsonName": "docs-react-dom-html.json",
      "internalComponentName": "ComponentDocsReactDomHtml",
      "path": "/docs/react-dom.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/react-dom.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/react-dom.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "af394998eff07c967ef329fcb1b35a9c",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/test-renderer.html": {
      "layout": "index",
      "jsonName": "docs-test-renderer-html.json",
      "internalComponentName": "ComponentDocsTestRendererHtml",
      "path": "/docs/test-renderer.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/test-renderer.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/test-renderer.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "3d7ad7feec7afa2eaf7317978eeca28d",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/rendering-elements.html": {
      "layout": "index",
      "jsonName": "docs-rendering-elements-html.json",
      "internalComponentName": "ComponentDocsRenderingElementsHtml",
      "path": "/docs/rendering-elements.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/rendering-elements.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/rendering-elements.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "c74013a0c412bf1f4b5cfb5222c03b20",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/strict-mode.html": {
      "layout": "index",
      "jsonName": "docs-strict-mode-html.json",
      "internalComponentName": "ComponentDocsStrictModeHtml",
      "path": "/docs/strict-mode.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/strict-mode.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/strict-mode.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "85b5e892c1dbb885bf035dd2205aba4b",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/typechecking-with-proptypes.html": {
      "layout": "index",
      "jsonName": "docs-typechecking-with-proptypes-html.json",
      "internalComponentName": "ComponentDocsTypecheckingWithProptypesHtml",
      "path": "/docs/typechecking-with-proptypes.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/typechecking-with-proptypes.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/typechecking-with-proptypes.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "0afd79181111c4b2688bddac53ac83f4",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/uncontrolled-components.html": {
      "layout": "index",
      "jsonName": "docs-uncontrolled-components-html.json",
      "internalComponentName": "ComponentDocsUncontrolledComponentsHtml",
      "path": "/docs/uncontrolled-components.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/uncontrolled-components.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/uncontrolled-components.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "cbcdbc6fa4eccb6a37361d5301e57852",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/web-components.html": {
      "layout": "index",
      "jsonName": "docs-web-components-html.json",
      "internalComponentName": "ComponentDocsWebComponentsHtml",
      "path": "/docs/web-components.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/web-components.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/web-components.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "ffcb710148235e9ae670f6e10960cf27",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2013/06/02/jsfiddle-integration.html": {
      "layout": "index",
      "jsonName": "blog-2013-06-02-jsfiddle-integration-html.json",
      "internalComponentName": "ComponentBlog20130602JsfiddleIntegrationHtml",
      "path": "/blog/2013/06/02/jsfiddle-integration.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2013/06/02/jsfiddle-integration.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2013/06/02/jsfiddle-integration.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "11187d5bef70862f7d2c0abe9479a9c9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2013/06/05/why-react.html": {
      "layout": "index",
      "jsonName": "blog-2013-06-05-why-react-html.json",
      "internalComponentName": "ComponentBlog20130605WhyReactHtml",
      "path": "/blog/2013/06/05/why-react.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2013/06/05/why-react.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2013/06/05/why-react.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "18df2abd73e2dc16d22e998c1c4095fb",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2013/06/12/community-roundup.html": {
      "layout": "index",
      "jsonName": "blog-2013-06-12-community-roundup-html.json",
      "internalComponentName": "ComponentBlog20130612CommunityRoundupHtml",
      "path": "/blog/2013/06/12/community-roundup.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2013/06/12/community-roundup.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2013/06/12/community-roundup.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "d146be2b4e4c6ea30e193d4166de23b9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2013/06/19/community-roundup-2.html": {
      "layout": "index",
      "jsonName": "blog-2013-06-19-community-roundup-2-html.json",
      "internalComponentName": "ComponentBlog20130619CommunityRoundup2Html",
      "path": "/blog/2013/06/19/community-roundup-2.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2013/06/19/community-roundup-2.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2013/06/19/community-roundup-2.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "96e39aaa21f652c6be959baea39394fa",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2013/06/21/react-v0-3-3.html": {
      "layout": "index",
      "jsonName": "blog-2013-06-21-react-v-0-3-3-html.json",
      "internalComponentName": "ComponentBlog20130621ReactV033Html",
      "path": "/blog/2013/06/21/react-v0-3-3.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2013/06/21/react-v0-3-3.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2013/06/21/react-v0-3-3.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "be59b7098e66fd5e3877a4e246a000a3",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2013/06/27/community-roundup-3.html": {
      "layout": "index",
      "jsonName": "blog-2013-06-27-community-roundup-3-html.json",
      "internalComponentName": "ComponentBlog20130627CommunityRoundup3Html",
      "path": "/blog/2013/06/27/community-roundup-3.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2013/06/27/community-roundup-3.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2013/06/27/community-roundup-3.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "add19d21290e47784f3353d832733255",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2013/07/02/react-v0-4-autobind-by-default.html": {
      "layout": "index",
      "jsonName": "blog-2013-07-02-react-v-0-4-autobind-by-default-html.json",
      "internalComponentName": "ComponentBlog20130702ReactV04AutobindByDefaultHtml",
      "path": "/blog/2013/07/02/react-v0-4-autobind-by-default.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2013/07/02/react-v0-4-autobind-by-default.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2013/07/02/react-v0-4-autobind-by-default.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "4318ca9616ce76cefbbb96dd2253aac6",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2013/07/11/react-v0-4-prop-validation-and-default-values.html": {
      "layout": "index",
      "jsonName": "blog-2013-07-11-react-v-0-4-prop-validation-and-default-values-html.json",
      "internalComponentName": "ComponentBlog20130711ReactV04PropValidationAndDefaultValuesHtml",
      "path": "/blog/2013/07/11/react-v0-4-prop-validation-and-default-values.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2013/07/11/react-v0-4-prop-validation-and-default-values.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2013/07/11/react-v0-4-prop-validation-and-default-values.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "ecd5c2504552c09d67422180a32373ce",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2013/07/03/community-roundup-4.html": {
      "layout": "index",
      "jsonName": "blog-2013-07-03-community-roundup-4-html.json",
      "internalComponentName": "ComponentBlog20130703CommunityRoundup4Html",
      "path": "/blog/2013/07/03/community-roundup-4.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2013/07/03/community-roundup-4.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2013/07/03/community-roundup-4.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "d757ccc055a59c3372fefb2a0a02f6e8",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2013/07/17/react-v0-4-0.html": {
      "layout": "index",
      "jsonName": "blog-2013-07-17-react-v-0-4-0-html.json",
      "internalComponentName": "ComponentBlog20130717ReactV040Html",
      "path": "/blog/2013/07/17/react-v0-4-0.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2013/07/17/react-v0-4-0.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2013/07/17/react-v0-4-0.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "812254c605193bb57f49d45d5a09be45",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2013/07/23/community-roundup-5.html": {
      "layout": "index",
      "jsonName": "blog-2013-07-23-community-roundup-5-html.json",
      "internalComponentName": "ComponentBlog20130723CommunityRoundup5Html",
      "path": "/blog/2013/07/23/community-roundup-5.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2013/07/23/community-roundup-5.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2013/07/23/community-roundup-5.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "5f6dbd4cbda1f5f10fb97b93843c91b0",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2013/07/26/react-v0-4-1.html": {
      "layout": "index",
      "jsonName": "blog-2013-07-26-react-v-0-4-1-html.json",
      "internalComponentName": "ComponentBlog20130726ReactV041Html",
      "path": "/blog/2013/07/26/react-v0-4-1.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2013/07/26/react-v0-4-1.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2013/07/26/react-v0-4-1.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "5b8c45a237fb122be42b616accb1ca9c",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2013/07/30/use-react-and-jsx-in-ruby-on-rails.html": {
      "layout": "index",
      "jsonName": "blog-2013-07-30-use-react-and-jsx-in-ruby-on-rails-html.json",
      "internalComponentName": "ComponentBlog20130730UseReactAndJsxInRubyOnRailsHtml",
      "path": "/blog/2013/07/30/use-react-and-jsx-in-ruby-on-rails.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2013/07/30/use-react-and-jsx-in-ruby-on-rails.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2013/07/30/use-react-and-jsx-in-ruby-on-rails.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "2cb1a82a6891e4dc7a359f76fcf8826f",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2013/08/05/community-roundup-6.html": {
      "layout": "index",
      "jsonName": "blog-2013-08-05-community-roundup-6-html.json",
      "internalComponentName": "ComponentBlog20130805CommunityRoundup6Html",
      "path": "/blog/2013/08/05/community-roundup-6.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2013/08/05/community-roundup-6.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2013/08/05/community-roundup-6.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "fd982eb48110f8a5f82c5884f25157f7",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2013/08/19/use-react-and-jsx-in-python-applications.html": {
      "layout": "index",
      "jsonName": "blog-2013-08-19-use-react-and-jsx-in-python-applications-html.json",
      "internalComponentName": "ComponentBlog20130819UseReactAndJsxInPythonApplicationsHtml",
      "path": "/blog/2013/08/19/use-react-and-jsx-in-python-applications.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2013/08/19/use-react-and-jsx-in-python-applications.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2013/08/19/use-react-and-jsx-in-python-applications.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "467137fa7fac28472849d7745f0c170a",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2013/08/26/community-roundup-7.html": {
      "layout": "index",
      "jsonName": "blog-2013-08-26-community-roundup-7-html.json",
      "internalComponentName": "ComponentBlog20130826CommunityRoundup7Html",
      "path": "/blog/2013/08/26/community-roundup-7.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2013/08/26/community-roundup-7.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2013/08/26/community-roundup-7.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "d00bc30286bf98c2ad0b5a1361f36b0b",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2013/09/24/community-roundup-8.html": {
      "layout": "index",
      "jsonName": "blog-2013-09-24-community-roundup-8-html.json",
      "internalComponentName": "ComponentBlog20130924CommunityRoundup8Html",
      "path": "/blog/2013/09/24/community-roundup-8.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2013/09/24/community-roundup-8.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2013/09/24/community-roundup-8.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "82a2569b4d978ba18050eff8b4ffed5c",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2013/10/16/react-v0.5.0.html": {
      "layout": "index",
      "jsonName": "blog-2013-10-16-react-v-0-5-0-html.json",
      "internalComponentName": "ComponentBlog20131016ReactV050Html",
      "path": "/blog/2013/10/16/react-v0.5.0.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2013/10/16/react-v0.5.0.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2013/10/16/react-v0.5.0.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "6a74ab26949eda124746f3c1497e9bb3",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2013/10/29/react-v0-5-1.html": {
      "layout": "index",
      "jsonName": "blog-2013-10-29-react-v-0-5-1-html.json",
      "internalComponentName": "ComponentBlog20131029ReactV051Html",
      "path": "/blog/2013/10/29/react-v0-5-1.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2013/10/29/react-v0-5-1.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2013/10/29/react-v0-5-1.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "c01662cdb9b32faffe7d975620c54c4e",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2013/10/3/community-roundup-9.html": {
      "layout": "index",
      "jsonName": "blog-2013-10-3-community-roundup-9-html.json",
      "internalComponentName": "ComponentBlog2013103CommunityRoundup9Html",
      "path": "/blog/2013/10/3/community-roundup-9.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2013/10/3/community-roundup-9.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2013/10/3/community-roundup-9.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "37a5458c890a6bd679ff00a00d758ba9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2013/11/18/community-roundup-11.html": {
      "layout": "index",
      "jsonName": "blog-2013-11-18-community-roundup-11-html.json",
      "internalComponentName": "ComponentBlog20131118CommunityRoundup11Html",
      "path": "/blog/2013/11/18/community-roundup-11.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2013/11/18/community-roundup-11.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2013/11/18/community-roundup-11.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "e380675b4f2fe000f9ce3c7aa491431a",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2013/12/18/react-v0.5.2-v0.4.2.html": {
      "layout": "index",
      "jsonName": "blog-2013-12-18-react-v-0-5-2-v-0-4-2-html.json",
      "internalComponentName": "ComponentBlog20131218ReactV052V042Html",
      "path": "/blog/2013/12/18/react-v0.5.2-v0.4.2.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2013/12/18/react-v0.5.2-v0.4.2.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2013/12/18/react-v0.5.2-v0.4.2.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "8f4d6a3d5db021795c68822048e184f0",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2013/12/19/react-v0.8.0.html": {
      "layout": "index",
      "jsonName": "blog-2013-12-19-react-v-0-8-0-html.json",
      "internalComponentName": "ComponentBlog20131219ReactV080Html",
      "path": "/blog/2013/12/19/react-v0.8.0.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2013/12/19/react-v0.8.0.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2013/12/19/react-v0.8.0.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "cc591f86ae1cfcee73f846f6a60f354f",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2013/12/23/community-roundup-12.html": {
      "layout": "index",
      "jsonName": "blog-2013-12-23-community-roundup-12-html.json",
      "internalComponentName": "ComponentBlog20131223CommunityRoundup12Html",
      "path": "/blog/2013/12/23/community-roundup-12.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2013/12/23/community-roundup-12.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2013/12/23/community-roundup-12.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "7b697010b56a1009e3cf490f761c68f1",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2013/12/30/community-roundup-13.html": {
      "layout": "index",
      "jsonName": "blog-2013-12-30-community-roundup-13-html.json",
      "internalComponentName": "ComponentBlog20131230CommunityRoundup13Html",
      "path": "/blog/2013/12/30/community-roundup-13.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2013/12/30/community-roundup-13.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2013/12/30/community-roundup-13.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "a7621ad680846c13373ae68c6552d366",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/01/02/react-chrome-developer-tools.html": {
      "layout": "index",
      "jsonName": "blog-2014-01-02-react-chrome-developer-tools-html.json",
      "internalComponentName": "ComponentBlog20140102ReactChromeDeveloperToolsHtml",
      "path": "/blog/2014/01/02/react-chrome-developer-tools.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/01/02/react-chrome-developer-tools.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/01/02/react-chrome-developer-tools.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "6e420364c62115d1752525ed3ad33989",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/02/05/community-roundup-15.html": {
      "layout": "index",
      "jsonName": "blog-2014-02-05-community-roundup-15-html.json",
      "internalComponentName": "ComponentBlog20140205CommunityRoundup15Html",
      "path": "/blog/2014/02/05/community-roundup-15.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/02/05/community-roundup-15.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/02/05/community-roundup-15.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "fd68ac19327a9accc0cbd522c58856be",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/02/15/community-roundup-16.html": {
      "layout": "index",
      "jsonName": "blog-2014-02-15-community-roundup-16-html.json",
      "internalComponentName": "ComponentBlog20140215CommunityRoundup16Html",
      "path": "/blog/2014/02/15/community-roundup-16.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/02/15/community-roundup-16.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/02/15/community-roundup-16.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "0c5ade62d18665ccbc851f8496e39af2",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/02/16/react-v0.9-rc1.html": {
      "layout": "index",
      "jsonName": "blog-2014-02-16-react-v-0-9-rc-1-html.json",
      "internalComponentName": "ComponentBlog20140216ReactV09Rc1Html",
      "path": "/blog/2014/02/16/react-v0.9-rc1.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/02/16/react-v0.9-rc1.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/02/16/react-v0.9-rc1.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "27293b0890bc4d2088ca9689b2f01187",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/01/06/community-roundup-14.html": {
      "layout": "index",
      "jsonName": "blog-2014-01-06-community-roundup-14-html.json",
      "internalComponentName": "ComponentBlog20140106CommunityRoundup14Html",
      "path": "/blog/2014/01/06/community-roundup-14.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/01/06/community-roundup-14.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/01/06/community-roundup-14.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "16c302d11fb86dd4389345ae25b4e758",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/02/24/community-roundup-17.html": {
      "layout": "index",
      "jsonName": "blog-2014-02-24-community-roundup-17-html.json",
      "internalComponentName": "ComponentBlog20140224CommunityRoundup17Html",
      "path": "/blog/2014/02/24/community-roundup-17.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/02/24/community-roundup-17.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/02/24/community-roundup-17.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "4f3b59041f1d21410f16b7b00d34e7e3",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/03/14/community-roundup-18.html": {
      "layout": "index",
      "jsonName": "blog-2014-03-14-community-roundup-18-html.json",
      "internalComponentName": "ComponentBlog20140314CommunityRoundup18Html",
      "path": "/blog/2014/03/14/community-roundup-18.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/03/14/community-roundup-18.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/03/14/community-roundup-18.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "f0ee4fa362974e9cada85e947dc47ca9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/03/19/react-v0.10-rc1.html": {
      "layout": "index",
      "jsonName": "blog-2014-03-19-react-v-0-10-rc-1-html.json",
      "internalComponentName": "ComponentBlog20140319ReactV010Rc1Html",
      "path": "/blog/2014/03/19/react-v0.10-rc1.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/03/19/react-v0.10-rc1.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/03/19/react-v0.10-rc1.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "65f32f34c4ab0f714b3ba4eb5bf001de",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/03/21/react-v0.10.html": {
      "layout": "index",
      "jsonName": "blog-2014-03-21-react-v-0-10-html.json",
      "internalComponentName": "ComponentBlog20140321ReactV010Html",
      "path": "/blog/2014/03/21/react-v0.10.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/03/21/react-v0.10.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/03/21/react-v0.10.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "05b26186df0339708b5609908ed12803",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/04/04/reactnet.html": {
      "layout": "index",
      "jsonName": "blog-2014-04-04-reactnet-html.json",
      "internalComponentName": "ComponentBlog20140404ReactnetHtml",
      "path": "/blog/2014/04/04/reactnet.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/04/04/reactnet.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/04/04/reactnet.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "5bf66b8def5559d8d393ecfde67d14b6",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/03/28/the-road-to-1.0.html": {
      "layout": "index",
      "jsonName": "blog-2014-03-28-the-road-to-1-0-html.json",
      "internalComponentName": "ComponentBlog20140328TheRoadTo10Html",
      "path": "/blog/2014/03/28/the-road-to-1.0.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/03/28/the-road-to-1.0.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/03/28/the-road-to-1.0.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "87dc488d253506636435ccbece061a53",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/05/06/flux.html": {
      "layout": "index",
      "jsonName": "blog-2014-05-06-flux-html.json",
      "internalComponentName": "ComponentBlog20140506FluxHtml",
      "path": "/blog/2014/05/06/flux.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/05/06/flux.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/05/06/flux.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "a71135c131047607eefcd1ce2ed87e81",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/05/29/one-year-of-open-source-react.html": {
      "layout": "index",
      "jsonName": "blog-2014-05-29-one-year-of-open-source-react-html.json",
      "internalComponentName": "ComponentBlog20140529OneYearOfOpenSourceReactHtml",
      "path": "/blog/2014/05/29/one-year-of-open-source-react.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/05/29/one-year-of-open-source-react.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/05/29/one-year-of-open-source-react.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "54a1cff45048426860fd1d22124d1e8c",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/06/27/community-roundup-19.html": {
      "layout": "index",
      "jsonName": "blog-2014-06-27-community-roundup-19-html.json",
      "internalComponentName": "ComponentBlog20140627CommunityRoundup19Html",
      "path": "/blog/2014/06/27/community-roundup-19.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/06/27/community-roundup-19.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/06/27/community-roundup-19.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "1b4244ab6da7991f6b3fb71552b596a3",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/07/13/react-v0.11-rc1.html": {
      "layout": "index",
      "jsonName": "blog-2014-07-13-react-v-0-11-rc-1-html.json",
      "internalComponentName": "ComponentBlog20140713ReactV011Rc1Html",
      "path": "/blog/2014/07/13/react-v0.11-rc1.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/07/13/react-v0.11-rc1.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/07/13/react-v0.11-rc1.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "190965e8f7fd3d071fa0d34af922fbe4",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/07/25/react-v0.11.1.html": {
      "layout": "index",
      "jsonName": "blog-2014-07-25-react-v-0-11-1-html.json",
      "internalComponentName": "ComponentBlog20140725ReactV0111Html",
      "path": "/blog/2014/07/25/react-v0.11.1.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/07/25/react-v0.11.1.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/07/25/react-v0.11.1.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "ccf0fad3729d2b8a552eb9e6407a3c30",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/07/28/community-roundup-20.html": {
      "layout": "index",
      "jsonName": "blog-2014-07-28-community-roundup-20-html.json",
      "internalComponentName": "ComponentBlog20140728CommunityRoundup20Html",
      "path": "/blog/2014/07/28/community-roundup-20.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/07/28/community-roundup-20.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/07/28/community-roundup-20.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "ba203431e786a06f5939876d24a4652b",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/07/30/flux-actions-and-the-dispatcher.html": {
      "layout": "index",
      "jsonName": "blog-2014-07-30-flux-actions-and-the-dispatcher-html.json",
      "internalComponentName": "ComponentBlog20140730FluxActionsAndTheDispatcherHtml",
      "path": "/blog/2014/07/30/flux-actions-and-the-dispatcher.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/07/30/flux-actions-and-the-dispatcher.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/07/30/flux-actions-and-the-dispatcher.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "4bacac61ec732d52e95900cb8cdbe8a3",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/08/03/community-roundup-21.html": {
      "layout": "index",
      "jsonName": "blog-2014-08-03-community-roundup-21-html.json",
      "internalComponentName": "ComponentBlog20140803CommunityRoundup21Html",
      "path": "/blog/2014/08/03/community-roundup-21.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/08/03/community-roundup-21.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/08/03/community-roundup-21.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "1ca82ea61a07f86f8acf7efd7cbc5a83",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/09/03/introducing-the-jsx-specification.html": {
      "layout": "index",
      "jsonName": "blog-2014-09-03-introducing-the-jsx-specification-html.json",
      "internalComponentName": "ComponentBlog20140903IntroducingTheJsxSpecificationHtml",
      "path": "/blog/2014/09/03/introducing-the-jsx-specification.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/09/03/introducing-the-jsx-specification.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/09/03/introducing-the-jsx-specification.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "eb69960d77b1ddfe6946ee226f317db9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/09/12/community-round-up-22.html": {
      "layout": "index",
      "jsonName": "blog-2014-09-12-community-round-up-22-html.json",
      "internalComponentName": "ComponentBlog20140912CommunityRoundUp22Html",
      "path": "/blog/2014/09/12/community-round-up-22.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/09/12/community-round-up-22.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/09/12/community-round-up-22.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "585d6df03637410720fbcfd753160b18",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/09/16/react-v0.11.2.html": {
      "layout": "index",
      "jsonName": "blog-2014-09-16-react-v-0-11-2-html.json",
      "internalComponentName": "ComponentBlog20140916ReactV0112Html",
      "path": "/blog/2014/09/16/react-v0.11.2.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/09/16/react-v0.11.2.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/09/16/react-v0.11.2.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "1a40c0bc496dc2b242021d384ab0e6f2",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/10/16/react-v0.12-rc1.html": {
      "layout": "index",
      "jsonName": "blog-2014-10-16-react-v-0-12-rc-1-html.json",
      "internalComponentName": "ComponentBlog20141016ReactV012Rc1Html",
      "path": "/blog/2014/10/16/react-v0.12-rc1.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/10/16/react-v0.12-rc1.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/10/16/react-v0.12-rc1.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "59e1b40c915b6209b472691ea63fbf12",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/10/27/react-js-conf.html": {
      "layout": "index",
      "jsonName": "blog-2014-10-27-react-js-conf-html.json",
      "internalComponentName": "ComponentBlog20141027ReactJsConfHtml",
      "path": "/blog/2014/10/27/react-js-conf.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/10/27/react-js-conf.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/10/27/react-js-conf.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "1852f70c77ab90502fa1fa2c172a3a73",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/10/28/react-v0.12.html": {
      "layout": "index",
      "jsonName": "blog-2014-10-28-react-v-0-12-html.json",
      "internalComponentName": "ComponentBlog20141028ReactV012Html",
      "path": "/blog/2014/10/28/react-v0.12.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/10/28/react-v0.12.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/10/28/react-v0.12.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "d6d302efdc931f5dfd7aff9594747e5c",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/11/24/react-js-conf-updates.html": {
      "layout": "index",
      "jsonName": "blog-2014-11-24-react-js-conf-updates-html.json",
      "internalComponentName": "ComponentBlog20141124ReactJsConfUpdatesHtml",
      "path": "/blog/2014/11/24/react-js-conf-updates.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/11/24/react-js-conf-updates.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/11/24/react-js-conf-updates.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "9324122f89b2efd09b1b43cb1873091c",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/12/18/react-v0.12.2.html": {
      "layout": "index",
      "jsonName": "blog-2014-12-18-react-v-0-12-2-html.json",
      "internalComponentName": "ComponentBlog20141218ReactV0122Html",
      "path": "/blog/2014/12/18/react-v0.12.2.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/12/18/react-v0.12.2.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/12/18/react-v0.12.2.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "04bc532d254861599395f919566a25d4",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/12/19/react-js-conf-diversity-scholarship.html": {
      "layout": "index",
      "jsonName": "blog-2014-12-19-react-js-conf-diversity-scholarship-html.json",
      "internalComponentName": "ComponentBlog20141219ReactJsConfDiversityScholarshipHtml",
      "path": "/blog/2014/12/19/react-js-conf-diversity-scholarship.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/12/19/react-js-conf-diversity-scholarship.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/12/19/react-js-conf-diversity-scholarship.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "da937140ede75d325b12c78d1fcac6cc",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/01/27/react-v0.13.0-beta-1.html": {
      "layout": "index",
      "jsonName": "blog-2015-01-27-react-v-0-13-0-beta-1-html.json",
      "internalComponentName": "ComponentBlog20150127ReactV0130Beta1Html",
      "path": "/blog/2015/01/27/react-v0.13.0-beta-1.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/01/27/react-v0.13.0-beta-1.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/01/27/react-v0.13.0-beta-1.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "36f9f687f4efa5b2f2734d285c25f1ba",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/02/20/introducing-relay-and-graphql.html": {
      "layout": "index",
      "jsonName": "blog-2015-02-20-introducing-relay-and-graphql-html.json",
      "internalComponentName": "ComponentBlog20150220IntroducingRelayAndGraphqlHtml",
      "path": "/blog/2015/02/20/introducing-relay-and-graphql.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/02/20/introducing-relay-and-graphql.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/02/20/introducing-relay-and-graphql.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "e4f65a9e48fe9f2b85c7275589577620",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/02/24/react-v0.13-rc1.html": {
      "layout": "index",
      "jsonName": "blog-2015-02-24-react-v-0-13-rc-1-html.json",
      "internalComponentName": "ComponentBlog20150224ReactV013Rc1Html",
      "path": "/blog/2015/02/24/react-v0.13-rc1.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/02/24/react-v0.13-rc1.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/02/24/react-v0.13-rc1.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "87ab1e49d4ccea60a59aa976d10cd91c",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/03/03/react-v0.13-rc2.html": {
      "layout": "index",
      "jsonName": "blog-2015-03-03-react-v-0-13-rc-2-html.json",
      "internalComponentName": "ComponentBlog20150303ReactV013Rc2Html",
      "path": "/blog/2015/03/03/react-v0.13-rc2.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/03/03/react-v0.13-rc2.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/03/03/react-v0.13-rc2.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "384c598db529bf1955a2d6fb3a9d83d0",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/03/04/community-roundup-25.html": {
      "layout": "index",
      "jsonName": "blog-2015-03-04-community-roundup-25-html.json",
      "internalComponentName": "ComponentBlog20150304CommunityRoundup25Html",
      "path": "/blog/2015/03/04/community-roundup-25.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/03/04/community-roundup-25.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/03/04/community-roundup-25.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "4ea9ffeec288d53be0723a1c4b31a7c4",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/03/10/react-v0.13.html": {
      "layout": "index",
      "jsonName": "blog-2015-03-10-react-v-0-13-html.json",
      "internalComponentName": "ComponentBlog20150310ReactV013Html",
      "path": "/blog/2015/03/10/react-v0.13.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/03/10/react-v0.13.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/03/10/react-v0.13.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "479dcb13eaa3ee623cff6abb1bf86926",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/03/16/react-v0.13.1.html": {
      "layout": "index",
      "jsonName": "blog-2015-03-16-react-v-0-13-1-html.json",
      "internalComponentName": "ComponentBlog20150316ReactV0131Html",
      "path": "/blog/2015/03/16/react-v0.13.1.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/03/16/react-v0.13.1.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/03/16/react-v0.13.1.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "a93ef9f289aa996b426e88ee76fe64f9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/03/26/introducing-react-native.html": {
      "layout": "index",
      "jsonName": "blog-2015-03-26-introducing-react-native-html.json",
      "internalComponentName": "ComponentBlog20150326IntroducingReactNativeHtml",
      "path": "/blog/2015/03/26/introducing-react-native.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/03/26/introducing-react-native.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/03/26/introducing-react-native.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "e728c79dcf4b862a38dfdeb1c20045bd",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/03/30/community-roundup-26.html": {
      "layout": "index",
      "jsonName": "blog-2015-03-30-community-roundup-26-html.json",
      "internalComponentName": "ComponentBlog20150330CommunityRoundup26Html",
      "path": "/blog/2015/03/30/community-roundup-26.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/03/30/community-roundup-26.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/03/30/community-roundup-26.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "4695836bb6657fd827a6abf78e1e404c",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/04/17/react-native-v0.4.html": {
      "layout": "index",
      "jsonName": "blog-2015-04-17-react-native-v-0-4-html.json",
      "internalComponentName": "ComponentBlog20150417ReactNativeV04Html",
      "path": "/blog/2015/04/17/react-native-v0.4.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/04/17/react-native-v0.4.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/04/17/react-native-v0.4.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "144d4afe11922553292b587da84a1037",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/04/18/react-v0.13.2.html": {
      "layout": "index",
      "jsonName": "blog-2015-04-18-react-v-0-13-2-html.json",
      "internalComponentName": "ComponentBlog20150418ReactV0132Html",
      "path": "/blog/2015/04/18/react-v0.13.2.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/04/18/react-v0.13.2.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/04/18/react-v0.13.2.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "26b89f21d78f8a6afe96a286857c6d40",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/05/08/react-v0.13.3.html": {
      "layout": "index",
      "jsonName": "blog-2015-05-08-react-v-0-13-3-html.json",
      "internalComponentName": "ComponentBlog20150508ReactV0133Html",
      "path": "/blog/2015/05/08/react-v0.13.3.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/05/08/react-v0.13.3.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/05/08/react-v0.13.3.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "ae0cc350ba9d26e5620ce1b9561aaa4d",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/05/22/react-native-release-process.html": {
      "layout": "index",
      "jsonName": "blog-2015-05-22-react-native-release-process-html.json",
      "internalComponentName": "ComponentBlog20150522ReactNativeReleaseProcessHtml",
      "path": "/blog/2015/05/22/react-native-release-process.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/05/22/react-native-release-process.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/05/22/react-native-release-process.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "a8d7005df5188e41f93fe19d196bdce3",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/06/12/deprecating-jstransform-and-react-tools.html": {
      "layout": "index",
      "jsonName": "blog-2015-06-12-deprecating-jstransform-and-react-tools-html.json",
      "internalComponentName": "ComponentBlog20150612DeprecatingJstransformAndReactToolsHtml",
      "path": "/blog/2015/06/12/deprecating-jstransform-and-react-tools.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/06/12/deprecating-jstransform-and-react-tools.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/06/12/deprecating-jstransform-and-react-tools.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "fe476da0ee098b8bb930ce1ccf6f5b17",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/07/03/react-v0.14-beta-1.html": {
      "layout": "index",
      "jsonName": "blog-2015-07-03-react-v-0-14-beta-1-html.json",
      "internalComponentName": "ComponentBlog20150703ReactV014Beta1Html",
      "path": "/blog/2015/07/03/react-v0.14-beta-1.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/07/03/react-v0.14-beta-1.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/07/03/react-v0.14-beta-1.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "b7f7e3c61c0d8f6841f1bd74d027ae4f",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/08/03/new-react-devtools-beta.html": {
      "layout": "index",
      "jsonName": "blog-2015-08-03-new-react-devtools-beta-html.json",
      "internalComponentName": "ComponentBlog20150803NewReactDevtoolsBetaHtml",
      "path": "/blog/2015/08/03/new-react-devtools-beta.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/08/03/new-react-devtools-beta.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/08/03/new-react-devtools-beta.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "d261bf498e99b6300bb99d0dcf059333",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/08/11/relay-technical-preview.html": {
      "layout": "index",
      "jsonName": "blog-2015-08-11-relay-technical-preview-html.json",
      "internalComponentName": "ComponentBlog20150811RelayTechnicalPreviewHtml",
      "path": "/blog/2015/08/11/relay-technical-preview.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/08/11/relay-technical-preview.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/08/11/relay-technical-preview.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "ffbb08ef00f8370e013bc63dac64a530",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/08/13/reacteurope-roundup.html": {
      "layout": "index",
      "jsonName": "blog-2015-08-13-reacteurope-roundup-html.json",
      "internalComponentName": "ComponentBlog20150813ReacteuropeRoundupHtml",
      "path": "/blog/2015/08/13/reacteurope-roundup.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/08/13/reacteurope-roundup.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/08/13/reacteurope-roundup.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "19d1f88abb74891b95ba56e30a9e9104",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/09/02/new-react-developer-tools.html": {
      "layout": "index",
      "jsonName": "blog-2015-09-02-new-react-developer-tools-html.json",
      "internalComponentName": "ComponentBlog20150902NewReactDeveloperToolsHtml",
      "path": "/blog/2015/09/02/new-react-developer-tools.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/09/02/new-react-developer-tools.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/09/02/new-react-developer-tools.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "ef70f8f7acc2d2d58279cedb09f861c4",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/10/01/react-render-and-top-level-api.html": {
      "layout": "index",
      "jsonName": "blog-2015-10-01-react-render-and-top-level-api-html.json",
      "internalComponentName": "ComponentBlog20151001ReactRenderAndTopLevelApiHtml",
      "path": "/blog/2015/10/01/react-render-and-top-level-api.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/10/01/react-render-and-top-level-api.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/10/01/react-render-and-top-level-api.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "59dfd59d55a8b22655ef2d35a79cf550",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/10/19/reactiflux-is-moving-to-discord.html": {
      "layout": "index",
      "jsonName": "blog-2015-10-19-reactiflux-is-moving-to-discord-html.json",
      "internalComponentName": "ComponentBlog20151019ReactifluxIsMovingToDiscordHtml",
      "path": "/blog/2015/10/19/reactiflux-is-moving-to-discord.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/10/19/reactiflux-is-moving-to-discord.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/10/19/reactiflux-is-moving-to-discord.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "c0d88cf40ffcff016c3988f93f607c22",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/10/28/react-v0.14.1.html": {
      "layout": "index",
      "jsonName": "blog-2015-10-28-react-v-0-14-1-html.json",
      "internalComponentName": "ComponentBlog20151028ReactV0141Html",
      "path": "/blog/2015/10/28/react-v0.14.1.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/10/28/react-v0.14.1.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/10/28/react-v0.14.1.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "83b09f1e8f1bb7fc7ff2ffd84e3d9c43",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/11/02/react-v0.14.2.html": {
      "layout": "index",
      "jsonName": "blog-2015-11-02-react-v-0-14-2-html.json",
      "internalComponentName": "ComponentBlog20151102ReactV0142Html",
      "path": "/blog/2015/11/02/react-v0.14.2.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/11/02/react-v0.14.2.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/11/02/react-v0.14.2.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "1ef0f6a2c97bfe7c8ae7645cd751b7fe",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/11/18/react-v0.14.3.html": {
      "layout": "index",
      "jsonName": "blog-2015-11-18-react-v-0-14-3-html.json",
      "internalComponentName": "ComponentBlog20151118ReactV0143Html",
      "path": "/blog/2015/11/18/react-v0.14.3.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/11/18/react-v0.14.3.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/11/18/react-v0.14.3.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "8936f4993832f5624fe687af24e147e6",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/12/04/react-js-conf-2016-diversity-scholarship.html": {
      "layout": "index",
      "jsonName": "blog-2015-12-04-react-js-conf-2016-diversity-scholarship-html.json",
      "internalComponentName": "ComponentBlog20151204ReactJsConf2016DiversityScholarshipHtml",
      "path": "/blog/2015/12/04/react-js-conf-2016-diversity-scholarship.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/12/04/react-js-conf-2016-diversity-scholarship.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/12/04/react-js-conf-2016-diversity-scholarship.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "0dc36997bd002c52f17612f24dc93352",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/12/16/ismounted-antipattern.html": {
      "layout": "index",
      "jsonName": "blog-2015-12-16-ismounted-antipattern-html.json",
      "internalComponentName": "ComponentBlog20151216IsmountedAntipatternHtml",
      "path": "/blog/2015/12/16/ismounted-antipattern.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/12/16/ismounted-antipattern.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/12/16/ismounted-antipattern.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "c6d84344e806ddd89d199a77c52cd12c",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/12/29/react-v0.14.4.html": {
      "layout": "index",
      "jsonName": "blog-2015-12-29-react-v-0-14-4-html.json",
      "internalComponentName": "ComponentBlog20151229ReactV0144Html",
      "path": "/blog/2015/12/29/react-v0.14.4.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/12/29/react-v0.14.4.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/12/29/react-v0.14.4.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "ab735537298d3f46da4b93bfeb8689d9",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2016/01/08/A-implies-B-does-not-imply-B-implies-A.html": {
      "layout": "index",
      "jsonName": "blog-2016-01-08-a-implies-b-does-not-imply-b-implies-a-html.json",
      "internalComponentName": "ComponentBlog20160108AImpliesBDoesNotImplyBImpliesAHtml",
      "path": "/blog/2016/01/08/A-implies-B-does-not-imply-B-implies-A.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2016/01/08/A-implies-B-does-not-imply-B-implies-A.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2016/01/08/A-implies-B-does-not-imply-B-implies-A.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "1648b63dcbc1d22753c8e019e2581ee8",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2016/01/12/discontinuing-ie8-support.html": {
      "layout": "index",
      "jsonName": "blog-2016-01-12-discontinuing-ie-8-support-html.json",
      "internalComponentName": "ComponentBlog20160112DiscontinuingIe8SupportHtml",
      "path": "/blog/2016/01/12/discontinuing-ie8-support.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2016/01/12/discontinuing-ie8-support.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2016/01/12/discontinuing-ie8-support.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "2f34d15d50959424243b65dde84a95f2",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2016/02/19/new-versioning-scheme.html": {
      "layout": "index",
      "jsonName": "blog-2016-02-19-new-versioning-scheme-html.json",
      "internalComponentName": "ComponentBlog20160219NewVersioningSchemeHtml",
      "path": "/blog/2016/02/19/new-versioning-scheme.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2016/02/19/new-versioning-scheme.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2016/02/19/new-versioning-scheme.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "b945d615b1bd768c8890989f9dcb03c2",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2016/03/16/react-v15-rc2.html": {
      "layout": "index",
      "jsonName": "blog-2016-03-16-react-v-15-rc-2-html.json",
      "internalComponentName": "ComponentBlog20160316ReactV15Rc2Html",
      "path": "/blog/2016/03/16/react-v15-rc2.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2016/03/16/react-v15-rc2.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2016/03/16/react-v15-rc2.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "25e9fcbd6886217d64508b71af1d8642",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2016/03/29/react-v0.14.8.html": {
      "layout": "index",
      "jsonName": "blog-2016-03-29-react-v-0-14-8-html.json",
      "internalComponentName": "ComponentBlog20160329ReactV0148Html",
      "path": "/blog/2016/03/29/react-v0.14.8.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2016/03/29/react-v0.14.8.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2016/03/29/react-v0.14.8.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "9d8766d0505e241dba4f07d3a852faa6",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2016/04/08/react-v15.0.1.html": {
      "layout": "index",
      "jsonName": "blog-2016-04-08-react-v-15-0-1-html.json",
      "internalComponentName": "ComponentBlog20160408ReactV1501Html",
      "path": "/blog/2016/04/08/react-v15.0.1.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2016/04/08/react-v15.0.1.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2016/04/08/react-v15.0.1.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "f1263a8ddc21e3872953090ea0d7f435",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2016/07/11/introducing-reacts-error-code-system.html": {
      "layout": "index",
      "jsonName": "blog-2016-07-11-introducing-reacts-error-code-system-html.json",
      "internalComponentName": "ComponentBlog20160711IntroducingReactsErrorCodeSystemHtml",
      "path": "/blog/2016/07/11/introducing-reacts-error-code-system.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2016/07/11/introducing-reacts-error-code-system.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2016/07/11/introducing-reacts-error-code-system.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "93240c250d551b1ef4253362b51a4c57",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2017/06/13/react-v15.6.0.html": {
      "layout": "index",
      "jsonName": "blog-2017-06-13-react-v-15-6-0-html.json",
      "internalComponentName": "ComponentBlog20170613ReactV1560Html",
      "path": "/blog/2017/06/13/react-v15.6.0.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2017/06/13/react-v15.6.0.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2017/06/13/react-v15.6.0.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "9af134e8b57146e7bbe47607db6b7617",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2017/07/26/error-handle-in-react-16.html": {
      "layout": "index",
      "jsonName": "blog-2017-07-26-error-handle-in-react-16-html.json",
      "internalComponentName": "ComponentBlog20170726ErrorHandleInReact16Html",
      "path": "/blog/2017/07/26/error-handle-in-react-16.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2017/07/26/error-handle-in-react-16.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2017/07/26/error-handle-in-react-16.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "fd431c06bc8ee35dc691a318bfb37766",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2017/07/26/error-handling-in-react-16.html": {
      "layout": "index",
      "jsonName": "blog-2017-07-26-error-handling-in-react-16-html.json",
      "internalComponentName": "ComponentBlog20170726ErrorHandlingInReact16Html",
      "path": "/blog/2017/07/26/error-handling-in-react-16.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2017/07/26/error-handling-in-react-16.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2017/07/26/error-handling-in-react-16.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "5bbea9cd6608478f8434b099e18067a0",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2017/09/08/dom-attributes-in-react-16.html": {
      "layout": "index",
      "jsonName": "blog-2017-09-08-dom-attributes-in-react-16-html.json",
      "internalComponentName": "ComponentBlog20170908DomAttributesInReact16Html",
      "path": "/blog/2017/09/08/dom-attributes-in-react-16.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2017/09/08/dom-attributes-in-react-16.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2017/09/08/dom-attributes-in-react-16.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "bf8257d4ba98a8058f2d7894001bd912",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2017/09/25/react-v15.6.2.html": {
      "layout": "index",
      "jsonName": "blog-2017-09-25-react-v-15-6-2-html.json",
      "internalComponentName": "ComponentBlog20170925ReactV1562Html",
      "path": "/blog/2017/09/25/react-v15.6.2.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2017/09/25/react-v15.6.2.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2017/09/25/react-v15.6.2.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "1472b55b7c68474e4e0962edf7f70830",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2017/12/07/introducing-the-react-rfc-process.html": {
      "layout": "index",
      "jsonName": "blog-2017-12-07-introducing-the-react-rfc-process-html.json",
      "internalComponentName": "ComponentBlog20171207IntroducingTheReactRfcProcessHtml",
      "path": "/blog/2017/12/07/introducing-the-react-rfc-process.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2017/12/07/introducing-the-react-rfc-process.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2017/12/07/introducing-the-react-rfc-process.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "c7af98e26c4e18967485577946a8af6b",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2018/03/01/sneak-peek-beyond-react-16.html": {
      "layout": "index",
      "jsonName": "blog-2018-03-01-sneak-peek-beyond-react-16-html.json",
      "internalComponentName": "ComponentBlog20180301SneakPeekBeyondReact16Html",
      "path": "/blog/2018/03/01/sneak-peek-beyond-react-16.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2018/03/01/sneak-peek-beyond-react-16.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2018/03/01/sneak-peek-beyond-react-16.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "402c6020e29066d5cec29c21777c9b30",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2018/03/29/react-v-16-3.html": {
      "layout": "index",
      "jsonName": "blog-2018-03-29-react-v-16-3-html.json",
      "internalComponentName": "ComponentBlog20180329ReactV163Html",
      "path": "/blog/2018/03/29/react-v-16-3.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2018/03/29/react-v-16-3.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2018/03/29/react-v-16-3.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "f28486432b85c64ac0058c825527be54",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2018/08/01/react-v-16-4-2.html": {
      "layout": "index",
      "jsonName": "blog-2018-08-01-react-v-16-4-2-html.json",
      "internalComponentName": "ComponentBlog20180801ReactV1642Html",
      "path": "/blog/2018/08/01/react-v-16-4-2.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2018/08/01/react-v-16-4-2.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2018/08/01/react-v-16-4-2.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "bcd6409d1e236dcad06369581c41a2d7",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2018/11/13/react-conf-recap.html": {
      "layout": "index",
      "jsonName": "blog-2018-11-13-react-conf-recap-html.json",
      "internalComponentName": "ComponentBlog20181113ReactConfRecapHtml",
      "path": "/blog/2018/11/13/react-conf-recap.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2018/11/13/react-conf-recap.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2018/11/13/react-conf-recap.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "4a16636a31f55b91086fc1c4a9673ec5",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2018/12/19/react-v-16-7.html": {
      "layout": "index",
      "jsonName": "blog-2018-12-19-react-v-16-7-html.json",
      "internalComponentName": "ComponentBlog20181219ReactV167Html",
      "path": "/blog/2018/12/19/react-v-16-7.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2018/12/19/react-v-16-7.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2018/12/19/react-v-16-7.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "9df4d4f3d27a863355c8c9f594620d00",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /community/conferences.html": {
      "layout": "index",
      "jsonName": "community-conferences-html.json",
      "internalComponentName": "ComponentCommunityConferencesHtml",
      "path": "/community/conferences.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "componentChunkName": "component---src-templates-community-js",
      "context": {
        "slug": "community/conferences.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "id": "SitePage /community/conferences.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "0b665498f197adfd9f34d82ebb5dbd19",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /community/ui-components.html": {
      "layout": "index",
      "jsonName": "community-ui-components-html.json",
      "internalComponentName": "ComponentCommunityUiComponentsHtml",
      "path": "/community/ui-components.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "componentChunkName": "component---src-templates-community-js",
      "context": {
        "slug": "community/ui-components.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/community.js",
      "id": "SitePage /community/ui-components.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "dc4b41883b68a562aa0f7dd211d3f4bd",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/videos-it-IT.html": {
      "layout": "index",
      "jsonName": "docs-videos-it-it-html.json",
      "internalComponentName": "ComponentDocsVideosItItHtml",
      "path": "/docs/videos-it-IT.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/videos-it-IT.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/videos-it-IT.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "024baf317506b620acdad2a9794ceb46",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/videos-ko-KR.html": {
      "layout": "index",
      "jsonName": "docs-videos-ko-kr-html.json",
      "internalComponentName": "ComponentDocsVideosKoKrHtml",
      "path": "/docs/videos-ko-KR.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/videos-ko-KR.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/videos-ko-KR.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "ddd976404bb1e846c1b45e5a0b55ea81",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/accessibility.html": {
      "layout": "index",
      "jsonName": "docs-accessibility-html.json",
      "internalComponentName": "ComponentDocsAccessibilityHtml",
      "path": "/docs/accessibility.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/accessibility.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/accessibility.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "0e67906dbf5894d6ea972c8f9e4f0e65",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/animation.html": {
      "layout": "index",
      "jsonName": "docs-animation-html.json",
      "internalComponentName": "ComponentDocsAnimationHtml",
      "path": "/docs/animation.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/animation.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/animation.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "393e475d53a9858ca5fc7184e7be08a3",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/error-boundaries.html": {
      "layout": "index",
      "jsonName": "docs-error-boundaries-html.json",
      "internalComponentName": "ComponentDocsErrorBoundariesHtml",
      "path": "/docs/error-boundaries.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/error-boundaries.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/error-boundaries.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "f3e4e6722792cc97612cbb7356cb8936",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/faq-functions.html": {
      "layout": "index",
      "jsonName": "docs-faq-functions-html.json",
      "internalComponentName": "ComponentDocsFaqFunctionsHtml",
      "path": "/docs/faq-functions.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/faq-functions.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/faq-functions.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "f0d3e8e26e4185554caf1ab0a9d7e8fb",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/forms.html": {
      "layout": "index",
      "jsonName": "docs-forms-html.json",
      "internalComponentName": "ComponentDocsFormsHtml",
      "path": "/docs/forms.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/forms.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/forms.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "522ebb52bd6d444dc40f4476cab575e7",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/hooks-custom.html": {
      "layout": "index",
      "jsonName": "docs-hooks-custom-html.json",
      "internalComponentName": "ComponentDocsHooksCustomHtml",
      "path": "/docs/hooks-custom.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/hooks-custom.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/hooks-custom.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "8a04781d2c2b7d06709e3e2309765ca0",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/hooks-intro.html": {
      "layout": "index",
      "jsonName": "docs-hooks-intro-html.json",
      "internalComponentName": "ComponentDocsHooksIntroHtml",
      "path": "/docs/hooks-intro.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/hooks-intro.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/hooks-intro.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "e8c5ebd497fcff692e474bd776876e26",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/hooks-overview.html": {
      "layout": "index",
      "jsonName": "docs-hooks-overview-html.json",
      "internalComponentName": "ComponentDocsHooksOverviewHtml",
      "path": "/docs/hooks-overview.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/hooks-overview.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/hooks-overview.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "91e99e8ae85c5bdb80a7602ff20b3008",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/hooks-reference.html": {
      "layout": "index",
      "jsonName": "docs-hooks-reference-html.json",
      "internalComponentName": "ComponentDocsHooksReferenceHtml",
      "path": "/docs/hooks-reference.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/hooks-reference.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/hooks-reference.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "e3060a8534953236cf38a998cc17d79a",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/how-to-contribute.html": {
      "layout": "index",
      "jsonName": "docs-how-to-contribute-html.json",
      "internalComponentName": "ComponentDocsHowToContributeHtml",
      "path": "/docs/how-to-contribute.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/how-to-contribute.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/how-to-contribute.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "77a9b1e3f1ad7f7aa6b6c309fdb03bbf",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/jsx-in-depth.html": {
      "layout": "index",
      "jsonName": "docs-jsx-in-depth-html.json",
      "internalComponentName": "ComponentDocsJsxInDepthHtml",
      "path": "/docs/jsx-in-depth.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/jsx-in-depth.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/jsx-in-depth.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "2d9ff453e6d826a292de64ad30543015",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/lifting-state-up.html": {
      "layout": "index",
      "jsonName": "docs-lifting-state-up-html.json",
      "internalComponentName": "ComponentDocsLiftingStateUpHtml",
      "path": "/docs/lifting-state-up.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/lifting-state-up.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/lifting-state-up.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "ea49645485b1200648598e794fd05174",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/lists-and-keys.html": {
      "layout": "index",
      "jsonName": "docs-lists-and-keys-html.json",
      "internalComponentName": "ComponentDocsListsAndKeysHtml",
      "path": "/docs/lists-and-keys.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/lists-and-keys.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/lists-and-keys.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "4d2a48bd51818fe7744bcbc23fdd258e",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/dom-elements.html": {
      "layout": "index",
      "jsonName": "docs-dom-elements-html.json",
      "internalComponentName": "ComponentDocsDomElementsHtml",
      "path": "/docs/dom-elements.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/dom-elements.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/dom-elements.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "275e3d342a1726b56f5c0c6c7fe002f7",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/glossary.html": {
      "layout": "index",
      "jsonName": "docs-glossary-html.json",
      "internalComponentName": "ComponentDocsGlossaryHtml",
      "path": "/docs/glossary.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/glossary.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/glossary.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "5154d6222996393aede0f0507767b42b",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/react-api.html": {
      "layout": "index",
      "jsonName": "docs-react-api-html.json",
      "internalComponentName": "ComponentDocsReactApiHtml",
      "path": "/docs/react-api.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/react-api.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/react-api.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "0370324058b7bb69772a5c9497ed10d8",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/refs-and-the-dom.html": {
      "layout": "index",
      "jsonName": "docs-refs-and-the-dom-html.json",
      "internalComponentName": "ComponentDocsRefsAndTheDomHtml",
      "path": "/docs/refs-and-the-dom.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/refs-and-the-dom.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/refs-and-the-dom.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "b035af172bb0ac1b5e776841ec8eb1c0",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/render-props.html": {
      "layout": "index",
      "jsonName": "docs-render-props-html.json",
      "internalComponentName": "ComponentDocsRenderPropsHtml",
      "path": "/docs/render-props.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/render-props.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/render-props.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "9d33b817cb1f0ffad6366fab7d7d7587",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/state-and-lifecycle.html": {
      "layout": "index",
      "jsonName": "docs-state-and-lifecycle-html.json",
      "internalComponentName": "ComponentDocsStateAndLifecycleHtml",
      "path": "/docs/state-and-lifecycle.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/state-and-lifecycle.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/state-and-lifecycle.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "4796825121d69939a9e12a2b143e62a4",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/static-type-checking.html": {
      "layout": "index",
      "jsonName": "docs-static-type-checking-html.json",
      "internalComponentName": "ComponentDocsStaticTypeCheckingHtml",
      "path": "/docs/static-type-checking.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/static-type-checking.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/static-type-checking.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "9bc8ac74b5bd7039cb777809c52669e7",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/thinking-in-react.html": {
      "layout": "index",
      "jsonName": "docs-thinking-in-react-html.json",
      "internalComponentName": "ComponentDocsThinkingInReactHtml",
      "path": "/docs/thinking-in-react.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/thinking-in-react.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/thinking-in-react.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "a7e5f990e106bf883ba7f11ce8e90513",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2013/11/06/community-roundup-10.html": {
      "layout": "index",
      "jsonName": "blog-2013-11-06-community-roundup-10-html.json",
      "internalComponentName": "ComponentBlog20131106CommunityRoundup10Html",
      "path": "/blog/2013/11/06/community-roundup-10.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2013/11/06/community-roundup-10.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2013/11/06/community-roundup-10.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "7624091ee09d6cf83bea058f9220799d",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/02/20/react-v0.9.html": {
      "layout": "index",
      "jsonName": "blog-2014-02-20-react-v-0-9-html.json",
      "internalComponentName": "ComponentBlog20140220ReactV09Html",
      "path": "/blog/2014/02/20/react-v0.9.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/02/20/react-v0.9.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/02/20/react-v0.9.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "252abb32aef86845e920bb2d15c62afc",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/07/17/react-v0.11.html": {
      "layout": "index",
      "jsonName": "blog-2014-07-17-react-v-0-11-html.json",
      "internalComponentName": "ComponentBlog20140717ReactV011Html",
      "path": "/blog/2014/07/17/react-v0.11.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/07/17/react-v0.11.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/07/17/react-v0.11.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "881da1cffe9d924eac971bdc3628042a",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/09/24/testing-flux-applications.html": {
      "layout": "index",
      "jsonName": "blog-2014-09-24-testing-flux-applications-html.json",
      "internalComponentName": "ComponentBlog20140924TestingFluxApplicationsHtml",
      "path": "/blog/2014/09/24/testing-flux-applications.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/09/24/testing-flux-applications.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/09/24/testing-flux-applications.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "7ba144ad6b11106e0dfd0f19be29f655",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/10/14/introducing-react-elements.html": {
      "layout": "index",
      "jsonName": "blog-2014-10-14-introducing-react-elements-html.json",
      "internalComponentName": "ComponentBlog20141014IntroducingReactElementsHtml",
      "path": "/blog/2014/10/14/introducing-react-elements.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/10/14/introducing-react-elements.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/10/14/introducing-react-elements.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "21d91acb8269224133b60c9db9e6dea1",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/10/17/community-roundup-23.html": {
      "layout": "index",
      "jsonName": "blog-2014-10-17-community-roundup-23-html.json",
      "internalComponentName": "ComponentBlog20141017CommunityRoundup23Html",
      "path": "/blog/2014/10/17/community-roundup-23.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/10/17/community-roundup-23.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/10/17/community-roundup-23.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "0e7c366b76a5c585da73f71acbcf2eb4",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2014/11/25/community-roundup-24.html": {
      "layout": "index",
      "jsonName": "blog-2014-11-25-community-roundup-24-html.json",
      "internalComponentName": "ComponentBlog20141125CommunityRoundup24Html",
      "path": "/blog/2014/11/25/community-roundup-24.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2014/11/25/community-roundup-24.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2014/11/25/community-roundup-24.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "8e7e3944d5ae257d0b830fc4ad4c306b",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/02/24/streamlining-react-elements.html": {
      "layout": "index",
      "jsonName": "blog-2015-02-24-streamlining-react-elements-html.json",
      "internalComponentName": "ComponentBlog20150224StreamliningReactElementsHtml",
      "path": "/blog/2015/02/24/streamlining-react-elements.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/02/24/streamlining-react-elements.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/02/24/streamlining-react-elements.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "6f4ae195e3a297f2c7e58fe3abafba57",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/03/19/building-the-facebook-news-feed-with-relay.html": {
      "layout": "index",
      "jsonName": "blog-2015-03-19-building-the-facebook-news-feed-with-relay-html.json",
      "internalComponentName": "ComponentBlog20150319BuildingTheFacebookNewsFeedWithRelayHtml",
      "path": "/blog/2015/03/19/building-the-facebook-news-feed-with-relay.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/03/19/building-the-facebook-news-feed-with-relay.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/03/19/building-the-facebook-news-feed-with-relay.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "d1f24638346970a1115949597b441017",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/05/01/graphql-introduction.html": {
      "layout": "index",
      "jsonName": "blog-2015-05-01-graphql-introduction-html.json",
      "internalComponentName": "ComponentBlog20150501GraphqlIntroductionHtml",
      "path": "/blog/2015/05/01/graphql-introduction.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/05/01/graphql-introduction.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/05/01/graphql-introduction.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "87cbb561a77771069087c9dbca0a9899",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/09/10/react-v0.14-rc1.html": {
      "layout": "index",
      "jsonName": "blog-2015-09-10-react-v-0-14-rc-1-html.json",
      "internalComponentName": "ComponentBlog20150910ReactV014Rc1Html",
      "path": "/blog/2015/09/10/react-v0.14-rc1.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/09/10/react-v0.14-rc1.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/09/10/react-v0.14-rc1.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "fe564e26e2d794c9ce97a105e38b2a91",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/09/14/community-roundup-27.html": {
      "layout": "index",
      "jsonName": "blog-2015-09-14-community-roundup-27-html.json",
      "internalComponentName": "ComponentBlog20150914CommunityRoundup27Html",
      "path": "/blog/2015/09/14/community-roundup-27.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/09/14/community-roundup-27.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/09/14/community-roundup-27.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "805b497389c48097a23609b88039e61e",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/12/18/react-components-elements-and-instances.html": {
      "layout": "index",
      "jsonName": "blog-2015-12-18-react-components-elements-and-instances-html.json",
      "internalComponentName": "ComponentBlog20151218ReactComponentsElementsAndInstancesHtml",
      "path": "/blog/2015/12/18/react-components-elements-and-instances.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/12/18/react-components-elements-and-instances.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/12/18/react-components-elements-and-instances.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "e8437b72212f127c25452a771fc3c02e",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2016/03/07/react-v15-rc1.html": {
      "layout": "index",
      "jsonName": "blog-2016-03-07-react-v-15-rc-1-html.json",
      "internalComponentName": "ComponentBlog20160307ReactV15Rc1Html",
      "path": "/blog/2016/03/07/react-v15-rc1.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2016/03/07/react-v15-rc1.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2016/03/07/react-v15-rc1.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "c2dda97f25e78f2ca33036506639d0ee",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2016/07/22/create-apps-with-no-configuration.html": {
      "layout": "index",
      "jsonName": "blog-2016-07-22-create-apps-with-no-configuration-html.json",
      "internalComponentName": "ComponentBlog20160722CreateAppsWithNoConfigurationHtml",
      "path": "/blog/2016/07/22/create-apps-with-no-configuration.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2016/07/22/create-apps-with-no-configuration.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2016/07/22/create-apps-with-no-configuration.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "6f455bb6eea0437c2fbf762b3ed7d961",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2016/08/05/relay-state-of-the-state.html": {
      "layout": "index",
      "jsonName": "blog-2016-08-05-relay-state-of-the-state-html.json",
      "internalComponentName": "ComponentBlog20160805RelayStateOfTheStateHtml",
      "path": "/blog/2016/08/05/relay-state-of-the-state.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2016/08/05/relay-state-of-the-state.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2016/08/05/relay-state-of-the-state.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "01881c262e2e709effbac8c11076daab",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2016/09/28/our-first-50000-stars.html": {
      "layout": "index",
      "jsonName": "blog-2016-09-28-our-first-50000-stars-html.json",
      "internalComponentName": "ComponentBlog20160928OurFirst50000StarsHtml",
      "path": "/blog/2016/09/28/our-first-50000-stars.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2016/09/28/our-first-50000-stars.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2016/09/28/our-first-50000-stars.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "e4de46bb59c340ec993c325955b2fb33",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2016/11/16/react-v15.4.0.html": {
      "layout": "index",
      "jsonName": "blog-2016-11-16-react-v-15-4-0-html.json",
      "internalComponentName": "ComponentBlog20161116ReactV1540Html",
      "path": "/blog/2016/11/16/react-v15.4.0.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2016/11/16/react-v15.4.0.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2016/11/16/react-v15.4.0.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "2b32a55c463cc3ed229aab57ad17cd23",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2017/04/07/react-v15.5.0.html": {
      "layout": "index",
      "jsonName": "blog-2017-04-07-react-v-15-5-0-html.json",
      "internalComponentName": "ComponentBlog20170407ReactV1550Html",
      "path": "/blog/2017/04/07/react-v15.5.0.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2017/04/07/react-v15.5.0.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2017/04/07/react-v15.5.0.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "cdeca3918a0e453245f386d63adc6aac",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2017/05/18/whats-new-in-create-react-app.html": {
      "layout": "index",
      "jsonName": "blog-2017-05-18-whats-new-in-create-react-app-html.json",
      "internalComponentName": "ComponentBlog20170518WhatsNewInCreateReactAppHtml",
      "path": "/blog/2017/05/18/whats-new-in-create-react-app.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2017/05/18/whats-new-in-create-react-app.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2017/05/18/whats-new-in-create-react-app.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "da9ca212385b1129fde40b5c54d455df",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2017/09/26/react-v16.0.html": {
      "layout": "index",
      "jsonName": "blog-2017-09-26-react-v-16-0-html.json",
      "internalComponentName": "ComponentBlog20170926ReactV160Html",
      "path": "/blog/2017/09/26/react-v16.0.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2017/09/26/react-v16.0.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2017/09/26/react-v16.0.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "bf1f00d71544505841cc21d54cff978d",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2017/11/28/react-v16.2.0-fragment-support.html": {
      "layout": "index",
      "jsonName": "blog-2017-11-28-react-v-16-2-0-fragment-support-html.json",
      "internalComponentName": "ComponentBlog20171128ReactV1620FragmentSupportHtml",
      "path": "/blog/2017/11/28/react-v16.2.0-fragment-support.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2017/11/28/react-v16.2.0-fragment-support.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2017/11/28/react-v16.2.0-fragment-support.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "1f878b080e548ff10928b77d5671ab78",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2018/05/23/react-v-16-4.html": {
      "layout": "index",
      "jsonName": "blog-2018-05-23-react-v-16-4-html.json",
      "internalComponentName": "ComponentBlog20180523ReactV164Html",
      "path": "/blog/2018/05/23/react-v-16-4.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2018/05/23/react-v-16-4.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2018/05/23/react-v-16-4.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "8191f48627438e21cf85223f8b8e2484",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2018/09/10/introducing-the-react-profiler.html": {
      "layout": "index",
      "jsonName": "blog-2018-09-10-introducing-the-react-profiler-html.json",
      "internalComponentName": "ComponentBlog20180910IntroducingTheReactProfilerHtml",
      "path": "/blog/2018/09/10/introducing-the-react-profiler.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2018/09/10/introducing-the-react-profiler.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2018/09/10/introducing-the-react-profiler.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "d643a895fd8705595c4032d5e738aab8",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2018/10/01/create-react-app-v2.html": {
      "layout": "index",
      "jsonName": "blog-2018-10-01-create-react-app-v-2-html.json",
      "internalComponentName": "ComponentBlog20181001CreateReactAppV2Html",
      "path": "/blog/2018/10/01/create-react-app-v2.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2018/10/01/create-react-app-v2.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2018/10/01/create-react-app-v2.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "82b736e46aeae7fa8fc03141be043daa",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2018/10/23/react-v-16-6.html": {
      "layout": "index",
      "jsonName": "blog-2018-10-23-react-v-16-6-html.json",
      "internalComponentName": "ComponentBlog20181023ReactV166Html",
      "path": "/blog/2018/10/23/react-v-16-6.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2018/10/23/react-v-16-6.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2018/10/23/react-v-16-6.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "29d1dd6ef2afe440d191d002e2e7dd62",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/design-principles.html": {
      "layout": "index",
      "jsonName": "docs-design-principles-html.json",
      "internalComponentName": "ComponentDocsDesignPrinciplesHtml",
      "path": "/docs/design-principles.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/design-principles.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/design-principles.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "d6b1a7108e092b785eb2540ecbd670ee",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/higher-order-components.html": {
      "layout": "index",
      "jsonName": "docs-higher-order-components-html.json",
      "internalComponentName": "ComponentDocsHigherOrderComponentsHtml",
      "path": "/docs/higher-order-components.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/higher-order-components.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/higher-order-components.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "ee09073fa2fd78101c2a9ab7a2840e56",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/hooks-effect.html": {
      "layout": "index",
      "jsonName": "docs-hooks-effect-html.json",
      "internalComponentName": "ComponentDocsHooksEffectHtml",
      "path": "/docs/hooks-effect.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/hooks-effect.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/hooks-effect.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "664ce17a5d132f17ca85ea150ec2292e",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/hooks-state.html": {
      "layout": "index",
      "jsonName": "docs-hooks-state-html.json",
      "internalComponentName": "ComponentDocsHooksStateHtml",
      "path": "/docs/hooks-state.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/hooks-state.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/hooks-state.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "6caa5eeb1b6bde8d3f004c484d7b3b7a",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/integrating-with-other-libraries.html": {
      "layout": "index",
      "jsonName": "docs-integrating-with-other-libraries-html.json",
      "internalComponentName": "ComponentDocsIntegratingWithOtherLibrariesHtml",
      "path": "/docs/integrating-with-other-libraries.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/integrating-with-other-libraries.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/integrating-with-other-libraries.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "aa994df6cea21fda86d01f3657935189",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/optimizing-performance.html": {
      "layout": "index",
      "jsonName": "docs-optimizing-performance-html.json",
      "internalComponentName": "ComponentDocsOptimizingPerformanceHtml",
      "path": "/docs/optimizing-performance.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/optimizing-performance.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/optimizing-performance.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "8f7307373a39266888cc507e47a2ad28",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/02/18/react-conf-roundup-2015.html": {
      "layout": "index",
      "jsonName": "blog-2015-02-18-react-conf-roundup-2015-html.json",
      "internalComponentName": "ComponentBlog20150218ReactConfRoundup2015Html",
      "path": "/blog/2015/02/18/react-conf-roundup-2015.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/02/18/react-conf-roundup-2015.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/02/18/react-conf-roundup-2015.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "3621bcda1bc4d8f4cdc30c8663bfb5b5",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2015/10/07/react-v0.14.html": {
      "layout": "index",
      "jsonName": "blog-2015-10-07-react-v-0-14-html.json",
      "internalComponentName": "ComponentBlog20151007ReactV014Html",
      "path": "/blog/2015/10/07/react-v0.14.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2015/10/07/react-v0.14.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2015/10/07/react-v0.14.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "e86bf8e0470506dfd01b36f5a8dfe0d1",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2018/03/27/update-on-async-rendering.html": {
      "layout": "index",
      "jsonName": "blog-2018-03-27-update-on-async-rendering-html.json",
      "internalComponentName": "ComponentBlog20180327UpdateOnAsyncRenderingHtml",
      "path": "/blog/2018/03/27/update-on-async-rendering.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2018/03/27/update-on-async-rendering.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2018/03/27/update-on-async-rendering.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "9d21ca83da1a43ee75fd6d58984653d6",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2018/06/07/you-probably-dont-need-derived-state.html": {
      "layout": "index",
      "jsonName": "blog-2018-06-07-you-probably-dont-need-derived-state-html.json",
      "internalComponentName": "ComponentBlog20180607YouProbablyDontNeedDerivedStateHtml",
      "path": "/blog/2018/06/07/you-probably-dont-need-derived-state.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2018/06/07/you-probably-dont-need-derived-state.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2018/06/07/you-probably-dont-need-derived-state.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "c80537f68ec7c8985c641b031e1c2a10",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2018/11/27/react-16-roadmap.html": {
      "layout": "index",
      "jsonName": "blog-2018-11-27-react-16-roadmap-html.json",
      "internalComponentName": "ComponentBlog20181127React16RoadmapHtml",
      "path": "/blog/2018/11/27/react-16-roadmap.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2018/11/27/react-16-roadmap.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2018/11/27/react-16-roadmap.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "83b50598597f34fd5a206afc84c85aeb",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/codebase-overview.html": {
      "layout": "index",
      "jsonName": "docs-codebase-overview-html.json",
      "internalComponentName": "ComponentDocsCodebaseOverviewHtml",
      "path": "/docs/codebase-overview.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/codebase-overview.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/codebase-overview.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "a74e267f2b9a6e8f2250fdb09aa56c75",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/hooks-faq.html": {
      "layout": "index",
      "jsonName": "docs-hooks-faq-html.json",
      "internalComponentName": "ComponentDocsHooksFaqHtml",
      "path": "/docs/hooks-faq.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/hooks-faq.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/hooks-faq.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "653f33a0b4b24e0d419ece3dcb8f1ae4",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/react-component.html": {
      "layout": "index",
      "jsonName": "docs-react-component-html.json",
      "internalComponentName": "ComponentDocsReactComponentHtml",
      "path": "/docs/react-component.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/react-component.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/react-component.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "7262443bfb318cd012c219a0e68834c6",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2016/04/07/react-v15.html": {
      "layout": "index",
      "jsonName": "blog-2016-04-07-react-v-15-html.json",
      "internalComponentName": "ComponentBlog20160407ReactV15Html",
      "path": "/blog/2016/04/07/react-v15.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2016/04/07/react-v15.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2016/04/07/react-v15.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "e4e24da91847bcb33bb39419aee78bbb",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2016/07/13/mixins-considered-harmful.html": {
      "layout": "index",
      "jsonName": "blog-2016-07-13-mixins-considered-harmful-html.json",
      "internalComponentName": "ComponentBlog20160713MixinsConsideredHarmfulHtml",
      "path": "/blog/2016/07/13/mixins-considered-harmful.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2016/07/13/mixins-considered-harmful.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2016/07/13/mixins-considered-harmful.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "4e755990f927ec002f58acc6efb8085d",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/implementation-notes.html": {
      "layout": "index",
      "jsonName": "docs-implementation-notes-html.json",
      "internalComponentName": "ComponentDocsImplementationNotesHtml",
      "path": "/docs/implementation-notes.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "componentChunkName": "component---src-templates-docs-js",
      "context": {
        "slug": "docs/implementation-notes.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/docs.js",
      "id": "SitePage /docs/implementation-notes.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "ed406316308ecfd253106e1ba5764a3d",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /tutorial/tutorial.html": {
      "layout": "index",
      "jsonName": "tutorial-tutorial-html.json",
      "internalComponentName": "ComponentTutorialTutorialHtml",
      "path": "/tutorial/tutorial.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/tutorial.js",
      "componentChunkName": "component---src-templates-tutorial-js",
      "context": {
        "slug": "tutorial/tutorial.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/tutorial.js",
      "id": "SitePage /tutorial/tutorial.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "e85af1a8e5eb4d51cf2810b96e601de7",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/2017/12/15/improving-the-repository-infrastructure.html": {
      "layout": "index",
      "jsonName": "blog-2017-12-15-improving-the-repository-infrastructure-html.json",
      "internalComponentName": "ComponentBlog20171215ImprovingTheRepositoryInfrastructureHtml",
      "path": "/blog/2017/12/15/improving-the-repository-infrastructure.html",
      "component": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "componentChunkName": "component---src-templates-blog-js",
      "context": {
        "slug": "/blog/2017/12/15/improving-the-repository-infrastructure.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/templates/blog.js",
      "id": "SitePage /blog/2017/12/15/improving-the-repository-infrastructure.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "9bb179a5c559989da1c7453d7c5772fa",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /404/": {
      "layout": "index",
      "jsonName": "404.json",
      "internalComponentName": "Component404",
      "path": "/404/",
      "component": "/Users/yubolun/Desktop/react/src/pages/404.js",
      "componentChunkName": "component---src-pages-404-js",
      "context": {},
      "pluginCreator___NODE": "Plugin component-page-creator",
      "pluginCreatorId": "Plugin component-page-creator",
      "componentPath": "/Users/yubolun/Desktop/react/src/pages/404.js",
      "id": "SitePage /404/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "1c7d1be1365b190c9793fd3a62236f87",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /acknowledgements.html/": {
      "layout": "index",
      "jsonName": "acknowledgements-html.json",
      "internalComponentName": "ComponentAcknowledgementsHtml",
      "path": "/acknowledgements.html/",
      "component": "/Users/yubolun/Desktop/react/src/pages/acknowledgements.html.js",
      "componentChunkName": "component---src-pages-acknowledgements-html-js",
      "context": {},
      "pluginCreator___NODE": "Plugin component-page-creator",
      "pluginCreatorId": "Plugin component-page-creator",
      "componentPath": "/Users/yubolun/Desktop/react/src/pages/acknowledgements.html.js",
      "id": "SitePage /acknowledgements.html/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "385316e32405627dd95ad8a505e101d1",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/all.html/": {
      "layout": "index",
      "jsonName": "blog-all-html.json",
      "internalComponentName": "ComponentBlogAllHtml",
      "path": "/blog/all.html/",
      "component": "/Users/yubolun/Desktop/react/src/pages/blog/all.html.js",
      "componentChunkName": "component---src-pages-blog-all-html-js",
      "context": {},
      "pluginCreator___NODE": "Plugin component-page-creator",
      "pluginCreatorId": "Plugin component-page-creator",
      "componentPath": "/Users/yubolun/Desktop/react/src/pages/blog/all.html.js",
      "id": "SitePage /blog/all.html/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "9a901a2ff5959f2cc5f4b547fb96cd86",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /docs/error-decoder.html/": {
      "layout": "index",
      "jsonName": "docs-error-decoder-html.json",
      "internalComponentName": "ComponentDocsErrorDecoderHtml",
      "path": "/docs/error-decoder.html/",
      "matchPath": "docs/error-decoder:path?",
      "component": "/Users/yubolun/Desktop/react/src/pages/docs/error-decoder.html.js",
      "componentChunkName": "component---src-pages-docs-error-decoder-html-js",
      "context": {
        "slug": "docs/error-decoder.html"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/yubolun/Desktop/react/src/pages/docs/error-decoder.html.js",
      "id": "SitePage /docs/error-decoder.html/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "e805681764d1922b43207bb5b9a69874",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /": {
      "layout": "index",
      "jsonName": "index.json",
      "internalComponentName": "ComponentIndex",
      "path": "/",
      "component": "/Users/yubolun/Desktop/react/src/pages/index.js",
      "componentChunkName": "component---src-pages-index-js",
      "context": {},
      "pluginCreator___NODE": "Plugin component-page-creator",
      "pluginCreatorId": "Plugin component-page-creator",
      "componentPath": "/Users/yubolun/Desktop/react/src/pages/index.js",
      "id": "SitePage /",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "da13b0ddfa50e8dc7be2bca25cdb3f7b",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /jsx-compiler.html/": {
      "layout": "index",
      "jsonName": "jsx-compiler-html.json",
      "internalComponentName": "ComponentJsxCompilerHtml",
      "path": "/jsx-compiler.html/",
      "component": "/Users/yubolun/Desktop/react/src/pages/jsx-compiler.html.js",
      "componentChunkName": "component---src-pages-jsx-compiler-html-js",
      "context": {},
      "pluginCreator___NODE": "Plugin component-page-creator",
      "pluginCreatorId": "Plugin component-page-creator",
      "componentPath": "/Users/yubolun/Desktop/react/src/pages/jsx-compiler.html.js",
      "id": "SitePage /jsx-compiler.html/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "ee7931f39889cc97e77acea05413a68f",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /versions/": {
      "layout": "index",
      "jsonName": "versions.json",
      "internalComponentName": "ComponentVersions",
      "path": "/versions/",
      "component": "/Users/yubolun/Desktop/react/src/pages/versions.js",
      "componentChunkName": "component---src-pages-versions-js",
      "context": {},
      "pluginCreator___NODE": "Plugin component-page-creator",
      "pluginCreatorId": "Plugin component-page-creator",
      "componentPath": "/Users/yubolun/Desktop/react/src/pages/versions.js",
      "id": "SitePage /versions/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "37e50a45862a57f68f35ec73c8222910",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /404.html": {
      "layout": "index",
      "jsonName": "404-html.json",
      "internalComponentName": "Component404Html",
      "path": "/404.html",
      "component": "/Users/yubolun/Desktop/react/src/pages/404.js",
      "componentChunkName": "component---src-pages-404-js",
      "context": {},
      "pluginCreator___NODE": "Plugin prod-404",
      "pluginCreatorId": "Plugin prod-404",
      "componentPath": "/Users/yubolun/Desktop/react/src/pages/404.js",
      "id": "SitePage /404.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "dd35b055d48ba3e28724554ffc9c0ffb",
        "owner": "internal-data-bridge"
      }
    }
  },
  "status": {
    "plugins": {},
    "PLUGINS_HASH": "534d266e1a8e0cd5dcbbd9fa66d9041a"
  },
  "componentDataDependencies": {
    "nodes": {
      "/Users/yubolun/Desktop/react/content/community/articles.md absPath of file >>> MarkdownRemark": [
        "/community/articles.html"
      ],
      "/Users/yubolun/Desktop/react/content/community/complementary-tools.it-IT.md absPath of file >>> MarkdownRemark": [
        "/docs/complementary-tools-it-IT.html"
      ],
      "/Users/yubolun/Desktop/react/content/community/complementary-tools.zh-CN.md absPath of file >>> MarkdownRemark": [
        "/docs/complementary-tools-zh-CN.html"
      ],
      "/Users/yubolun/Desktop/react/content/community/complementary-tools.ko-KR.md absPath of file >>> MarkdownRemark": [
        "/docs/complementary-tools-ko-KR.html"
      ],
      "/Users/yubolun/Desktop/react/content/community/conferences.it-IT.md absPath of file >>> MarkdownRemark": [
        "/docs/conferences-it-IT.html"
      ],
      "/Users/yubolun/Desktop/react/content/community/complementary-tools.md absPath of file >>> MarkdownRemark": [
        "/docs/complementary-tools.html"
      ],
      "/Users/yubolun/Desktop/react/content/community/conferences.ko-KR.md absPath of file >>> MarkdownRemark": [
        "/docs/conferences-ko-KR.html"
      ],
      "/Users/yubolun/Desktop/react/content/community/conferences.zh-CN.md absPath of file >>> MarkdownRemark": [
        "/docs/conferences-zh-CN.html"
      ],
      "/Users/yubolun/Desktop/react/content/community/courses.md absPath of file >>> MarkdownRemark": [
        "/community/courses.html"
      ],
      "/Users/yubolun/Desktop/react/content/community/examples.it-IT.md absPath of file >>> MarkdownRemark": [
        "/docs/examples-it-IT.html"
      ],
      "/Users/yubolun/Desktop/react/content/community/examples.ko-KR.md absPath of file >>> MarkdownRemark": [
        "/docs/examples-ko-KR.html"
      ],
      "/Users/yubolun/Desktop/react/content/community/examples.md absPath of file >>> MarkdownRemark": [
        "/community/examples.html"
      ],
      "/Users/yubolun/Desktop/react/content/community/examples.zh-CN.md absPath of file >>> MarkdownRemark": [
        "/docs/examples-zh-CN.html"
      ],
      "/Users/yubolun/Desktop/react/content/community/external-resources.md absPath of file >>> MarkdownRemark": [
        "/community/external-resources.html"
      ],
      "/Users/yubolun/Desktop/react/content/community/meetups.md absPath of file >>> MarkdownRemark": [
        "/community/meetups.html"
      ],
      "/Users/yubolun/Desktop/react/content/community/podcasts.md absPath of file >>> MarkdownRemark": [
        "/community/podcasts.html"
      ],
      "/Users/yubolun/Desktop/react/content/community/support.md absPath of file >>> MarkdownRemark": [
        "/community/support.html"
      ],
      "/Users/yubolun/Desktop/react/content/community/tools-comp-workbenches.md absPath of file >>> MarkdownRemark": [
        "/community/component-workbenches.html"
      ],
      "/Users/yubolun/Desktop/react/content/community/tools-data-fetching.md absPath of file >>> MarkdownRemark": [
        "/community/data-fetching.html"
      ],
      "/Users/yubolun/Desktop/react/content/community/tools-debugging.md absPath of file >>> MarkdownRemark": [
        "/community/debugging-tools.html"
      ],
      "/Users/yubolun/Desktop/react/content/community/tools-jsx.md absPath of file >>> MarkdownRemark": [
        "/community/jsx-integrations.html"
      ],
      "/Users/yubolun/Desktop/react/content/community/tools-misc.md absPath of file >>> MarkdownRemark": [
        "/community/misc.html"
      ],
      "/Users/yubolun/Desktop/react/content/community/tools-model-mgmt.md absPath of file >>> MarkdownRemark": [
        "/community/model-management.html"
      ],
      "/Users/yubolun/Desktop/react/content/community/tools-routing.md absPath of file >>> MarkdownRemark": [
        "/community/routing.html"
      ],
      "/Users/yubolun/Desktop/react/content/community/tools-starter-kits.md absPath of file >>> MarkdownRemark": [
        "/community/starter-kits.html"
      ],
      "/Users/yubolun/Desktop/react/content/community/tools-testing.md absPath of file >>> MarkdownRemark": [
        "/community/testing.html"
      ],
      "/Users/yubolun/Desktop/react/content/community/videos.md absPath of file >>> MarkdownRemark": [
        "/community/videos.html"
      ],
      "/Users/yubolun/Desktop/react/content/community/videos.zh-CN.md absPath of file >>> MarkdownRemark": [
        "/docs/videos-zh-CN.html"
      ],
      "/Users/yubolun/Desktop/react/content/warnings/dont-call-proptypes.md absPath of file >>> MarkdownRemark": [
        "/warnings/dont-call-proptypes.html"
      ],
      "/Users/yubolun/Desktop/react/content/warnings/invalid-aria-prop.md absPath of file >>> MarkdownRemark": [
        "/warnings/invalid-aria-prop.html"
      ],
      "/Users/yubolun/Desktop/react/content/warnings/legacy-factories.md absPath of file >>> MarkdownRemark": [
        "/warnings/legacy-factories.html"
      ],
      "/Users/yubolun/Desktop/react/content/warnings/refs-must-have-owner.md absPath of file >>> MarkdownRemark": [
        "/warnings/refs-must-have-owner.html"
      ],
      "/Users/yubolun/Desktop/react/content/warnings/special-props.md absPath of file >>> MarkdownRemark": [
        "/warnings/special-props.html"
      ],
      "/Users/yubolun/Desktop/react/content/warnings/unknown-prop.md absPath of file >>> MarkdownRemark": [
        "/warnings/unknown-prop.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/add-react-to-a-new-app.md absPath of file >>> MarkdownRemark": [
        "/docs/add-react-to-a-new-app.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/add-react-to-an-existing-app.md absPath of file >>> MarkdownRemark": [
        "/docs/add-react-to-an-existing-app.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/addons-create-fragment.md absPath of file >>> MarkdownRemark": [
        "/docs/create-fragment.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/addons-perf.md absPath of file >>> MarkdownRemark": [
        "/docs/perf.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/addons-pure-render-mixin.md absPath of file >>> MarkdownRemark": [
        "/docs/pure-render-mixin.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/addons-shallow-compare.md absPath of file >>> MarkdownRemark": [
        "/docs/shallow-compare.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/addons-shallow-renderer.md absPath of file >>> MarkdownRemark": [
        "/docs/shallow-renderer.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/addons-test-utils.md absPath of file >>> MarkdownRemark": [
        "/docs/test-utils.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/addons-two-way-binding-helpers.md absPath of file >>> MarkdownRemark": [
        "/docs/two-way-binding-helpers.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/addons-update.md absPath of file >>> MarkdownRemark": [
        "/docs/update.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/addons.md absPath of file >>> MarkdownRemark": [
        "/docs/addons.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/cdn-links.md absPath of file >>> MarkdownRemark": [
        "/docs/cdn-links.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/code-splitting.md absPath of file >>> MarkdownRemark": [
        "/docs/code-splitting.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/components-and-props.md absPath of file >>> MarkdownRemark": [
        "/docs/components-and-props.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/composition-vs-inheritance.md absPath of file >>> MarkdownRemark": [
        "/docs/composition-vs-inheritance.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/conditional-rendering.md absPath of file >>> MarkdownRemark": [
        "/docs/conditional-rendering.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/context.md absPath of file >>> MarkdownRemark": [
        "/docs/context.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/cross-origin-errors.md absPath of file >>> MarkdownRemark": [
        "/docs/cross-origin-errors.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/create-a-new-react-app.md absPath of file >>> MarkdownRemark": [
        "/docs/create-a-new-react-app.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/faq-ajax.md absPath of file >>> MarkdownRemark": [
        "/docs/faq-ajax.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/faq-build.md absPath of file >>> MarkdownRemark": [
        "/docs/faq-build.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/faq-internals.md absPath of file >>> MarkdownRemark": [
        "/docs/faq-internals.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/faq-state.md absPath of file >>> MarkdownRemark": [
        "/docs/faq-state.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/faq-structure.md absPath of file >>> MarkdownRemark": [
        "/docs/faq-structure.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/faq-styling.md absPath of file >>> MarkdownRemark": [
        "/docs/faq-styling.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/forwarding-refs.md absPath of file >>> MarkdownRemark": [
        "/docs/forwarding-refs.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/fragments.md absPath of file >>> MarkdownRemark": [
        "/docs/fragments.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/getting-started.md absPath of file >>> MarkdownRemark": [
        "/docs/getting-started.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/handling-events.md absPath of file >>> MarkdownRemark": [
        "/docs/handling-events.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/hello-world.md absPath of file >>> MarkdownRemark": [
        "/docs/hello-world.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/hooks-rules.md absPath of file >>> MarkdownRemark": [
        "/docs/hooks-rules.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/installation.md absPath of file >>> MarkdownRemark": [
        "/docs/installation.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/introducing-jsx.md absPath of file >>> MarkdownRemark": [
        "/docs/introducing-jsx.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/legacy-context.md absPath of file >>> MarkdownRemark": [
        "/docs/legacy-context.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/portals.md absPath of file >>> MarkdownRemark": [
        "/docs/portals.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/react-without-es6.md absPath of file >>> MarkdownRemark": [
        "/docs/react-without-es6.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/react-without-jsx.md absPath of file >>> MarkdownRemark": [
        "/docs/react-without-jsx.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/reconciliation.md absPath of file >>> MarkdownRemark": [
        "/docs/reconciliation.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/reference-events.md absPath of file >>> MarkdownRemark": [
        "/docs/events.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/reference-javascript-environment-requirements.md absPath of file >>> MarkdownRemark": [
        "/docs/javascript-environment-requirements.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/reference-react-dom-server.md absPath of file >>> MarkdownRemark": [
        "/docs/react-dom-server.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/reference-react-dom.md absPath of file >>> MarkdownRemark": [
        "/docs/react-dom.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/reference-test-renderer.md absPath of file >>> MarkdownRemark": [
        "/docs/test-renderer.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/rendering-elements.md absPath of file >>> MarkdownRemark": [
        "/docs/rendering-elements.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/strict-mode.md absPath of file >>> MarkdownRemark": [
        "/docs/strict-mode.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/typechecking-with-proptypes.md absPath of file >>> MarkdownRemark": [
        "/docs/typechecking-with-proptypes.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/uncontrolled-components.md absPath of file >>> MarkdownRemark": [
        "/docs/uncontrolled-components.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/web-components.md absPath of file >>> MarkdownRemark": [
        "/docs/web-components.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2013-06-02-jsfiddle-integration.md absPath of file >>> MarkdownRemark": [
        "/blog/2013/06/02/jsfiddle-integration.html"
      ],
      "vjeux": [
        "/blog/2013/06/02/jsfiddle-integration.html",
        "/blog/2013/06/12/community-roundup.html",
        "/blog/2013/06/19/community-roundup-2.html",
        "/blog/2013/06/27/community-roundup-3.html",
        "/blog/2013/07/03/community-roundup-4.html",
        "/blog/2013/07/23/community-roundup-5.html",
        "/blog/2013/08/05/community-roundup-6.html",
        "/blog/2013/08/26/community-roundup-7.html",
        "/blog/2013/09/24/community-roundup-8.html",
        "/blog/2013/10/3/community-roundup-9.html",
        "/blog/2013/11/18/community-roundup-11.html",
        "/blog/2013/12/30/community-roundup-13.html",
        "/blog/2013/12/23/community-roundup-12.html",
        "/blog/2014/01/06/community-roundup-14.html",
        "/blog/2014/10/27/react-js-conf.html",
        "/blog/2014/11/24/react-js-conf-updates.html",
        "/blog/2015/03/30/community-roundup-26.html",
        "/blog/2015/04/17/react-native-v0.4.html",
        "/blog/2015/05/22/react-native-release-process.html",
        "/blog/2013/11/06/community-roundup-10.html",
        "/blog/2016/09/28/our-first-50000-stars.html",
        "/blog/all.html/"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2013-06-05-why-react.md absPath of file >>> MarkdownRemark": [
        "/blog/2013/06/05/why-react.html"
      ],
      "petehunt": [
        "/blog/2013/06/05/why-react.html",
        "/blog/all.html/"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2013-06-12-community-roundup.md absPath of file >>> MarkdownRemark": [
        "/blog/2013/06/12/community-roundup.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2013-06-19-community-roundup-2.md absPath of file >>> MarkdownRemark": [
        "/blog/2013/06/19/community-roundup-2.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2013-06-21-react-v0-3-3.md absPath of file >>> MarkdownRemark": [
        "/blog/2013/06/21/react-v0-3-3.html"
      ],
      "zpao": [
        "/blog/2013/06/21/react-v0-3-3.html",
        "/blog/2013/07/02/react-v0-4-autobind-by-default.html",
        "/blog/2013/07/11/react-v0-4-prop-validation-and-default-values.html",
        "/blog/2013/07/17/react-v0-4-0.html",
        "/blog/2013/07/26/react-v0-4-1.html",
        "/blog/2013/07/30/use-react-and-jsx-in-ruby-on-rails.html",
        "/blog/2013/10/16/react-v0.5.0.html",
        "/blog/2013/10/29/react-v0-5-1.html",
        "/blog/2013/12/18/react-v0.5.2-v0.4.2.html",
        "/blog/2013/12/19/react-v0.8.0.html",
        "/blog/2014/03/19/react-v0.10-rc1.html",
        "/blog/2014/03/21/react-v0.10.html",
        "/blog/2014/03/28/the-road-to-1.0.html",
        "/blog/2014/07/13/react-v0.11-rc1.html",
        "/blog/2014/07/25/react-v0.11.1.html",
        "/blog/2014/09/16/react-v0.11.2.html",
        "/blog/2014/10/28/react-v0.12.html",
        "/blog/2014/12/18/react-v0.12.2.html",
        "/blog/2014/12/19/react-js-conf-diversity-scholarship.html",
        "/blog/2015/02/24/react-v0.13-rc1.html",
        "/blog/2015/03/16/react-v0.13.1.html",
        "/blog/2015/04/18/react-v0.13.2.html",
        "/blog/2015/05/08/react-v0.13.3.html",
        "/blog/2015/06/12/deprecating-jstransform-and-react-tools.html",
        "/blog/2015/10/28/react-v0.14.1.html",
        "/blog/2015/11/02/react-v0.14.2.html",
        "/blog/2015/11/18/react-v0.14.3.html",
        "/blog/2015/12/04/react-js-conf-2016-diversity-scholarship.html",
        "/blog/2016/03/16/react-v15-rc2.html",
        "/blog/2016/04/08/react-v15.0.1.html",
        "/blog/2014/07/17/react-v0.11.html",
        "/blog/2016/03/07/react-v15-rc1.html",
        "/blog/all.html/"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2013-06-27-community-roundup-3.md absPath of file >>> MarkdownRemark": [
        "/blog/2013/06/27/community-roundup-3.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2013-07-02-react-v0-4-autobind-by-default.md absPath of file >>> MarkdownRemark": [
        "/blog/2013/07/02/react-v0-4-autobind-by-default.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2013-07-11-react-v0-4-prop-validation-and-default-values.md absPath of file >>> MarkdownRemark": [
        "/blog/2013/07/11/react-v0-4-prop-validation-and-default-values.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2013-07-03-community-roundup-4.md absPath of file >>> MarkdownRemark": [
        "/blog/2013/07/03/community-roundup-4.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2013-07-17-react-v0-4-0.md absPath of file >>> MarkdownRemark": [
        "/blog/2013/07/17/react-v0-4-0.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2013-07-23-community-roundup-5.md absPath of file >>> MarkdownRemark": [
        "/blog/2013/07/23/community-roundup-5.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2013-07-26-react-v0-4-1.md absPath of file >>> MarkdownRemark": [
        "/blog/2013/07/26/react-v0-4-1.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2013-07-30-use-react-and-jsx-in-ruby-on-rails.md absPath of file >>> MarkdownRemark": [
        "/blog/2013/07/30/use-react-and-jsx-in-ruby-on-rails.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2013-08-05-community-roundup-6.md absPath of file >>> MarkdownRemark": [
        "/blog/2013/08/05/community-roundup-6.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2013-08-19-use-react-and-jsx-in-python-applications.md absPath of file >>> MarkdownRemark": [
        "/blog/2013/08/19/use-react-and-jsx-in-python-applications.html"
      ],
      "kmeht": [
        "/blog/2013/08/19/use-react-and-jsx-in-python-applications.html",
        "/blog/all.html/"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2013-08-26-community-roundup-7.md absPath of file >>> MarkdownRemark": [
        "/blog/2013/08/26/community-roundup-7.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2013-09-24-community-roundup-8.md absPath of file >>> MarkdownRemark": [
        "/blog/2013/09/24/community-roundup-8.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2013-10-16-react-v0.5.0.md absPath of file >>> MarkdownRemark": [
        "/blog/2013/10/16/react-v0.5.0.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2013-10-29-react-v0-5-1.md absPath of file >>> MarkdownRemark": [
        "/blog/2013/10/29/react-v0-5-1.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2013-10-3-community-roundup-9.md absPath of file >>> MarkdownRemark": [
        "/blog/2013/10/3/community-roundup-9.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2013-11-18-community-roundup-11.md absPath of file >>> MarkdownRemark": [
        "/blog/2013/11/18/community-roundup-11.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2013-12-18-react-v0.5.2-v0.4.2.md absPath of file >>> MarkdownRemark": [
        "/blog/2013/12/18/react-v0.5.2-v0.4.2.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2013-12-19-react-v0.8.0.md absPath of file >>> MarkdownRemark": [
        "/blog/2013/12/19/react-v0.8.0.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2013-12-30-community-roundup-13.md absPath of file >>> MarkdownRemark": [
        "/blog/2013/12/30/community-roundup-13.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2013-12-23-community-roundup-12.md absPath of file >>> MarkdownRemark": [
        "/blog/2013/12/23/community-roundup-12.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-01-02-react-chrome-developer-tools.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/01/02/react-chrome-developer-tools.html"
      ],
      "sebmarkbage": [
        "/blog/2014/01/02/react-chrome-developer-tools.html",
        "/blog/2014/09/03/introducing-the-jsx-specification.html",
        "/blog/2014/10/16/react-v0.12-rc1.html",
        "/blog/2015/01/27/react-v0.13.0-beta-1.html",
        "/blog/2015/03/03/react-v0.13-rc2.html",
        "/blog/2015/10/01/react-render-and-top-level-api.html",
        "/blog/2016/02/19/new-versioning-scheme.html",
        "/blog/2014/10/14/introducing-react-elements.html",
        "/blog/2015/02/24/streamlining-react-elements.html",
        "/blog/2018/10/23/react-v-16-6.html",
        "/blog/all.html/"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-02-05-community-roundup-15.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/02/05/community-roundup-15.html"
      ],
      "jgebhardt": [
        "/blog/2014/02/05/community-roundup-15.html",
        "/blog/2014/02/15/community-roundup-16.html",
        "/blog/2014/02/24/community-roundup-17.html",
        "/blog/2014/03/14/community-roundup-18.html",
        "/blog/all.html/"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-02-15-community-roundup-16.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/02/15/community-roundup-16.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-02-16-react-v0.9-rc1.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/02/16/react-v0.9-rc1.html"
      ],
      "sophiebits": [
        "/blog/2014/02/16/react-v0.9-rc1.html",
        "/blog/2015/03/10/react-v0.13.html",
        "/blog/2015/03/26/introducing-react-native.html",
        "/blog/2015/07/03/react-v0.14-beta-1.html",
        "/blog/2015/09/02/new-react-developer-tools.html",
        "/blog/2015/12/29/react-v0.14.4.html",
        "/blog/2016/01/12/discontinuing-ie8-support.html",
        "/blog/2018/03/01/sneak-peek-beyond-react-16.html",
        "/blog/2014/02/20/react-v0.9.html",
        "/blog/2015/09/10/react-v0.14-rc1.html",
        "/blog/2015/10/07/react-v0.14.html",
        "/blog/all.html/"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-01-06-community-roundup-14.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/01/06/community-roundup-14.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-02-24-community-roundup-17.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/02/24/community-roundup-17.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-03-14-community-roundup-18.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/03/14/community-roundup-18.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-03-19-react-v0.10-rc1.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/03/19/react-v0.10-rc1.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-03-21-react-v0.10.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/03/21/react-v0.10.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-04-04-reactnet.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/04/04/reactnet.html"
      ],
      "Daniel15": [
        "/blog/2014/04/04/reactnet.html",
        "/blog/all.html/"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-03-28-the-road-to-1.0.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/03/28/the-road-to-1.0.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-05-06-flux.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/05/06/flux.html"
      ],
      "fisherwebdev": [
        "/blog/2014/05/06/flux.html",
        "/blog/2014/07/30/flux-actions-and-the-dispatcher.html",
        "/blog/2014/09/24/testing-flux-applications.html",
        "/blog/all.html/"
      ],
      "jingc": [
        "/blog/2014/05/06/flux.html",
        "/blog/all.html/"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-05-29-one-year-of-open-source-react.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/05/29/one-year-of-open-source-react.html"
      ],
      "chenglou": [
        "/blog/2014/05/29/one-year-of-open-source-react.html",
        "/blog/2014/06/27/community-roundup-19.html",
        "/blog/all.html/"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-06-27-community-roundup-19.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/06/27/community-roundup-19.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-07-13-react-v0.11-rc1.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/07/13/react-v0.11-rc1.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-07-25-react-v0.11.1.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/07/25/react-v0.11.1.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-07-28-community-roundup-20.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/07/28/community-roundup-20.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-07-30-flux-actions-and-the-dispatcher.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/07/30/flux-actions-and-the-dispatcher.html"
      ],
      "LoukaN": [
        "/blog/2014/07/28/community-roundup-20.html",
        "/blog/2014/08/03/community-roundup-21.html",
        "/blog/2014/09/12/community-round-up-22.html",
        "/blog/2014/10/17/community-roundup-23.html",
        "/blog/all.html/"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-08-03-community-roundup-21.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/08/03/community-roundup-21.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-09-03-introducing-the-jsx-specification.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/09/03/introducing-the-jsx-specification.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-09-12-community-round-up-22.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/09/12/community-round-up-22.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-09-16-react-v0.11.2.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/09/16/react-v0.11.2.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-10-16-react-v0.12-rc1.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/10/16/react-v0.12-rc1.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-10-27-react-js-conf.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/10/27/react-js-conf.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-10-28-react-v0.12.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/10/28/react-v0.12.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-11-24-react-js-conf-updates.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/11/24/react-js-conf-updates.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-12-18-react-v0.12.2.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/12/18/react-v0.12.2.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-12-19-react-js-conf-diversity-scholarship.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/12/19/react-js-conf-diversity-scholarship.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-01-27-react-v0.13.0-beta-1.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/01/27/react-v0.13.0-beta-1.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-02-20-introducing-relay-and-graphql.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/02/20/introducing-relay-and-graphql.html"
      ],
      "wincent": [
        "/blog/2015/02/20/introducing-relay-and-graphql.html",
        "/blog/all.html/"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-02-24-react-v0.13-rc1.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/02/24/react-v0.13-rc1.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-03-03-react-v0.13-rc2.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/03/03/react-v0.13-rc2.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-03-04-community-roundup-25.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/03/04/community-roundup-25.html"
      ],
      "matthewjohnston4": [
        "/blog/2015/03/04/community-roundup-25.html",
        "/blog/2015/08/13/reacteurope-roundup.html",
        "/blog/all.html/"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-03-10-react-v0.13.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/03/10/react-v0.13.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-03-16-react-v0.13.1.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/03/16/react-v0.13.1.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-03-26-introducing-react-native.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/03/26/introducing-react-native.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-03-30-community-roundup-26.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/03/30/community-roundup-26.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-04-17-react-native-v0.4.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/04/17/react-native-v0.4.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-04-18-react-v0.13.2.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/04/18/react-v0.13.2.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-05-08-react-v0.13.3.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/05/08/react-v0.13.3.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-05-22-react-native-release-process.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/05/22/react-native-release-process.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-06-12-deprecating-jstransform-and-react-tools.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/06/12/deprecating-jstransform-and-react-tools.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-07-03-react-v0.14-beta-1.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/07/03/react-v0.14-beta-1.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-08-03-new-react-devtools-beta.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/08/03/new-react-devtools-beta.html"
      ],
      "jaredly": [
        "/blog/2015/08/03/new-react-devtools-beta.html",
        "/blog/all.html/"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-08-11-relay-technical-preview.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/08/11/relay-technical-preview.html"
      ],
      "josephsavona": [
        "/blog/2015/08/11/relay-technical-preview.html",
        "/blog/2015/03/19/building-the-facebook-news-feed-with-relay.html",
        "/blog/2016/08/05/relay-state-of-the-state.html",
        "/blog/all.html/"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-08-13-reacteurope-roundup.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/08/13/reacteurope-roundup.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-09-02-new-react-developer-tools.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/09/02/new-react-developer-tools.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-10-01-react-render-and-top-level-api.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/10/01/react-render-and-top-level-api.html"
      ],
      "jimfb": [
        "/blog/2015/10/01/react-render-and-top-level-api.html",
        "/blog/2015/12/16/ismounted-antipattern.html",
        "/blog/2016/01/08/A-implies-B-does-not-imply-B-implies-A.html",
        "/blog/all.html/"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-10-19-reactiflux-is-moving-to-discord.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/10/19/reactiflux-is-moving-to-discord.html"
      ],
      "benigeri": [
        "/blog/2015/10/19/reactiflux-is-moving-to-discord.html",
        "/blog/all.html/"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-10-28-react-v0.14.1.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/10/28/react-v0.14.1.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-11-02-react-v0.14.2.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/11/02/react-v0.14.2.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-11-18-react-v0.14.3.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/11/18/react-v0.14.3.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-12-04-react-js-conf-2016-diversity-scholarship.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/12/04/react-js-conf-2016-diversity-scholarship.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-12-16-ismounted-antipattern.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/12/16/ismounted-antipattern.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-12-29-react-v0.14.4.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/12/29/react-v0.14.4.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2016-01-08-A-implies-B-does-not-imply-B-implies-A.md absPath of file >>> MarkdownRemark": [
        "/blog/2016/01/08/A-implies-B-does-not-imply-B-implies-A.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2016-01-12-discontinuing-ie8-support.md absPath of file >>> MarkdownRemark": [
        "/blog/2016/01/12/discontinuing-ie8-support.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2016-02-19-new-versioning-scheme.md absPath of file >>> MarkdownRemark": [
        "/blog/2016/02/19/new-versioning-scheme.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2016-03-16-react-v15-rc2.md absPath of file >>> MarkdownRemark": [
        "/blog/2016/03/16/react-v15-rc2.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2016-03-29-react-v0.14.8.md absPath of file >>> MarkdownRemark": [
        "/blog/2016/03/29/react-v0.14.8.html"
      ],
      "gaearon": [
        "/blog/2016/03/29/react-v0.14.8.html",
        "/blog/2017/07/26/error-handle-in-react-16.html",
        "/blog/2017/07/26/error-handling-in-react-16.html",
        "/blog/2017/09/08/dom-attributes-in-react-16.html",
        "/blog/2018/08/01/react-v-16-4-2.html",
        "/blog/2015/12/18/react-components-elements-and-instances.html",
        "/blog/2016/07/22/create-apps-with-no-configuration.html",
        "/blog/2016/11/16/react-v15.4.0.html",
        "/blog/2017/05/18/whats-new-in-create-react-app.html",
        "/blog/2018/10/01/create-react-app-v2.html",
        "/blog/2018/11/27/react-16-roadmap.html",
        "/blog/2016/04/07/react-v15.html",
        "/blog/2016/07/13/mixins-considered-harmful.html",
        "/blog/2017/12/15/improving-the-repository-infrastructure.html",
        "/blog/all.html/"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2016-04-08-react-v15.0.1.md absPath of file >>> MarkdownRemark": [
        "/blog/2016/04/08/react-v15.0.1.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2016-07-11-introducing-reacts-error-code-system.md absPath of file >>> MarkdownRemark": [
        "/blog/2016/07/11/introducing-reacts-error-code-system.html"
      ],
      "keyanzhang": [
        "/blog/2016/07/11/introducing-reacts-error-code-system.html",
        "/blog/all.html/"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2017-06-13-react-v15.6.0.md absPath of file >>> MarkdownRemark": [
        "/blog/2017/06/13/react-v15.6.0.html"
      ],
      "flarnie": [
        "/blog/2017/06/13/react-v15.6.0.html",
        "/blog/all.html/"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2017-07-26-error-handle-in-react-16.md absPath of file >>> MarkdownRemark": [
        "/blog/2017/07/26/error-handle-in-react-16.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2017-07-26-error-handling-in-react-16.md absPath of file >>> MarkdownRemark": [
        "/blog/2017/07/26/error-handling-in-react-16.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2017-09-08-dom-attributes-in-react-16.md absPath of file >>> MarkdownRemark": [
        "/blog/2017/09/08/dom-attributes-in-react-16.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2017-09-25-react-v15.6.2.md absPath of file >>> MarkdownRemark": [
        "/blog/2017/09/25/react-v15.6.2.html"
      ],
      "nhunzaker": [
        "/blog/2017/09/25/react-v15.6.2.html",
        "/blog/all.html/"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2017-12-07-introducing-the-react-rfc-process.md absPath of file >>> MarkdownRemark": [
        "/blog/2017/12/07/introducing-the-react-rfc-process.html"
      ],
      "acdlite": [
        "/blog/2017/12/07/introducing-the-react-rfc-process.html",
        "/blog/2018/12/19/react-v-16-7.html",
        "/blog/2017/04/07/react-v15.5.0.html",
        "/blog/2017/09/26/react-v16.0.html",
        "/blog/2018/05/23/react-v-16-4.html",
        "/blog/all.html/"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2018-03-01-sneak-peek-beyond-react-16.md absPath of file >>> MarkdownRemark": [
        "/blog/2018/03/01/sneak-peek-beyond-react-16.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2018-03-29-react-v-16-3.md absPath of file >>> MarkdownRemark": [
        "/blog/2018/03/29/react-v-16-3.html"
      ],
      "bvaughn": [
        "/blog/2018/03/29/react-v-16-3.html",
        "/blog/2018/09/10/introducing-the-react-profiler.html",
        "/blog/2018/03/27/update-on-async-rendering.html",
        "/blog/2018/06/07/you-probably-dont-need-derived-state.html",
        "/blog/2017/12/15/improving-the-repository-infrastructure.html",
        "/blog/all.html/"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2018-08-01-react-v-16-4-2.md absPath of file >>> MarkdownRemark": [
        "/blog/2018/08/01/react-v-16-4-2.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2018-11-13-react-conf-recap.md absPath of file >>> MarkdownRemark": [
        "/blog/2018/11/13/react-conf-recap.html"
      ],
      "tomocchino": [
        "/blog/2018/11/13/react-conf-recap.html",
        "/blog/all.html/"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2018-12-19-react-v-16-7.md absPath of file >>> MarkdownRemark": [
        "/blog/2018/12/19/react-v-16-7.html"
      ],
      "/Users/yubolun/Desktop/react/content/community/conferences.md absPath of file >>> MarkdownRemark": [
        "/community/conferences.html"
      ],
      "/Users/yubolun/Desktop/react/content/community/tools-ui-components.md absPath of file >>> MarkdownRemark": [
        "/community/ui-components.html"
      ],
      "/Users/yubolun/Desktop/react/content/community/videos.it-IT.md absPath of file >>> MarkdownRemark": [
        "/docs/videos-it-IT.html"
      ],
      "/Users/yubolun/Desktop/react/content/community/videos.ko-KR.md absPath of file >>> MarkdownRemark": [
        "/docs/videos-ko-KR.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/accessibility.md absPath of file >>> MarkdownRemark": [
        "/docs/accessibility.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/addons-animation.md absPath of file >>> MarkdownRemark": [
        "/docs/animation.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/error-boundaries.md absPath of file >>> MarkdownRemark": [
        "/docs/error-boundaries.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/faq-functions.md absPath of file >>> MarkdownRemark": [
        "/docs/faq-functions.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/forms.md absPath of file >>> MarkdownRemark": [
        "/docs/forms.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/hooks-custom.md absPath of file >>> MarkdownRemark": [
        "/docs/hooks-custom.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/hooks-intro.md absPath of file >>> MarkdownRemark": [
        "/docs/hooks-intro.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/hooks-overview.md absPath of file >>> MarkdownRemark": [
        "/docs/hooks-overview.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/hooks-reference.md absPath of file >>> MarkdownRemark": [
        "/docs/hooks-reference.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/how-to-contribute.md absPath of file >>> MarkdownRemark": [
        "/docs/how-to-contribute.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/jsx-in-depth.md absPath of file >>> MarkdownRemark": [
        "/docs/jsx-in-depth.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/lifting-state-up.md absPath of file >>> MarkdownRemark": [
        "/docs/lifting-state-up.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/lists-and-keys.md absPath of file >>> MarkdownRemark": [
        "/docs/lists-and-keys.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/reference-dom-elements.md absPath of file >>> MarkdownRemark": [
        "/docs/dom-elements.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/reference-glossary.md absPath of file >>> MarkdownRemark": [
        "/docs/glossary.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/reference-react.md absPath of file >>> MarkdownRemark": [
        "/docs/react-api.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/refs-and-the-dom.md absPath of file >>> MarkdownRemark": [
        "/docs/refs-and-the-dom.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/render-props.md absPath of file >>> MarkdownRemark": [
        "/docs/render-props.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/state-and-lifecycle.md absPath of file >>> MarkdownRemark": [
        "/docs/state-and-lifecycle.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/static-type-checking.md absPath of file >>> MarkdownRemark": [
        "/docs/static-type-checking.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/thinking-in-react.md absPath of file >>> MarkdownRemark": [
        "/docs/thinking-in-react.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2013-11-06-community-roundup-10.md absPath of file >>> MarkdownRemark": [
        "/blog/2013/11/06/community-roundup-10.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-02-20-react-v0.9.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/02/20/react-v0.9.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-07-17-react-v0.11.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/07/17/react-v0.11.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-10-14-introducing-react-elements.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/10/14/introducing-react-elements.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-09-24-testing-flux-applications.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/09/24/testing-flux-applications.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-10-17-community-roundup-23.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/10/17/community-roundup-23.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2014-11-25-community-roundup-24.md absPath of file >>> MarkdownRemark": [
        "/blog/2014/11/25/community-roundup-24.html"
      ],
      "steveluscher": [
        "/blog/2014/11/25/community-roundup-24.html",
        "/blog/2015/09/14/community-roundup-27.html",
        "/blog/2015/02/18/react-conf-roundup-2015.html",
        "/blog/all.html/"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-02-24-streamlining-react-elements.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/02/24/streamlining-react-elements.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-03-19-building-the-facebook-news-feed-with-relay.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/03/19/building-the-facebook-news-feed-with-relay.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-05-01-graphql-introduction.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/05/01/graphql-introduction.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-09-10-react-v0.14-rc1.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/09/10/react-v0.14-rc1.html"
      ],
      "schrockn": [
        "/blog/2015/05/01/graphql-introduction.html",
        "/blog/all.html/"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-09-14-community-roundup-27.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/09/14/community-roundup-27.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2016-03-07-react-v15-rc1.md absPath of file >>> MarkdownRemark": [
        "/blog/2016/03/07/react-v15-rc1.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-12-18-react-components-elements-and-instances.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/12/18/react-components-elements-and-instances.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2016-07-22-create-apps-with-no-configuration.md absPath of file >>> MarkdownRemark": [
        "/blog/2016/07/22/create-apps-with-no-configuration.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2016-08-05-relay-state-of-the-state.md absPath of file >>> MarkdownRemark": [
        "/blog/2016/08/05/relay-state-of-the-state.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2016-09-28-our-first-50000-stars.md absPath of file >>> MarkdownRemark": [
        "/blog/2016/09/28/our-first-50000-stars.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2016-11-16-react-v15.4.0.md absPath of file >>> MarkdownRemark": [
        "/blog/2016/11/16/react-v15.4.0.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2017-04-07-react-v15.5.0.md absPath of file >>> MarkdownRemark": [
        "/blog/2017/04/07/react-v15.5.0.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2017-05-18-whats-new-in-create-react-app.md absPath of file >>> MarkdownRemark": [
        "/blog/2017/05/18/whats-new-in-create-react-app.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2017-09-26-react-v16.0.md absPath of file >>> MarkdownRemark": [
        "/blog/2017/09/26/react-v16.0.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2017-11-28-react-v16.2.0-fragment-support.md absPath of file >>> MarkdownRemark": [
        "/blog/2017/11/28/react-v16.2.0-fragment-support.html"
      ],
      "clemmy": [
        "/blog/2017/11/28/react-v16.2.0-fragment-support.html",
        "/blog/all.html/"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2018-05-23-react-v-16-4.md absPath of file >>> MarkdownRemark": [
        "/blog/2018/05/23/react-v-16-4.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2018-09-10-introducing-the-react-profiler.md absPath of file >>> MarkdownRemark": [
        "/blog/2018/09/10/introducing-the-react-profiler.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2018-10-01-create-react-app-v2.md absPath of file >>> MarkdownRemark": [
        "/blog/2018/10/01/create-react-app-v2.html"
      ],
      "timer": [
        "/blog/2018/10/01/create-react-app-v2.html",
        "/blog/all.html/"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2018-10-23-react-v-16-6.md absPath of file >>> MarkdownRemark": [
        "/blog/2018/10/23/react-v-16-6.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/design-principles.md absPath of file >>> MarkdownRemark": [
        "/docs/design-principles.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/higher-order-components.md absPath of file >>> MarkdownRemark": [
        "/docs/higher-order-components.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/hooks-effect.md absPath of file >>> MarkdownRemark": [
        "/docs/hooks-effect.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/hooks-state.md absPath of file >>> MarkdownRemark": [
        "/docs/hooks-state.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/integrating-with-other-libraries.md absPath of file >>> MarkdownRemark": [
        "/docs/integrating-with-other-libraries.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/optimizing-performance.md absPath of file >>> MarkdownRemark": [
        "/docs/optimizing-performance.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-02-18-react-conf-roundup-2015.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/02/18/react-conf-roundup-2015.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2015-10-07-react-v0.14.md absPath of file >>> MarkdownRemark": [
        "/blog/2015/10/07/react-v0.14.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2018-03-27-update-on-async-rendering.md absPath of file >>> MarkdownRemark": [
        "/blog/2018/03/27/update-on-async-rendering.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2018-06-07-you-probably-dont-need-derived-state.md absPath of file >>> MarkdownRemark": [
        "/blog/2018/06/07/you-probably-dont-need-derived-state.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2018-11-27-react-16-roadmap.md absPath of file >>> MarkdownRemark": [
        "/blog/2018/11/27/react-16-roadmap.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/codebase-overview.md absPath of file >>> MarkdownRemark": [
        "/docs/codebase-overview.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/hooks-faq.md absPath of file >>> MarkdownRemark": [
        "/docs/hooks-faq.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/reference-react-component.md absPath of file >>> MarkdownRemark": [
        "/docs/react-component.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2016-04-07-react-v15.md absPath of file >>> MarkdownRemark": [
        "/blog/2016/04/07/react-v15.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2016-07-13-mixins-considered-harmful.md absPath of file >>> MarkdownRemark": [
        "/blog/2016/07/13/mixins-considered-harmful.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/implementation-notes.md absPath of file >>> MarkdownRemark": [
        "/docs/implementation-notes.html"
      ],
      "/Users/yubolun/Desktop/react/content/tutorial/tutorial.md absPath of file >>> MarkdownRemark": [
        "/tutorial/tutorial.html"
      ],
      "/Users/yubolun/Desktop/react/content/blog/2017-12-15-improving-the-repository-infrastructure.md absPath of file >>> MarkdownRemark": [
        "/blog/2017/12/15/improving-the-repository-infrastructure.html"
      ],
      "/Users/yubolun/Desktop/react/content/docs/error-decoder.md absPath of file >>> MarkdownRemark": [
        "/docs/error-decoder.html/"
      ],
      "error-codes": [
        "/docs/error-decoder.html/"
      ]
    },
    "connections": {
      "MarkdownRemark": [
        "/blog/2013/06/02/jsfiddle-integration.html",
        "/blog/2013/06/05/why-react.html",
        "/blog/2013/06/12/community-roundup.html",
        "/blog/2013/06/19/community-roundup-2.html",
        "/blog/2013/06/21/react-v0-3-3.html",
        "/blog/2013/06/27/community-roundup-3.html",
        "/blog/2013/07/02/react-v0-4-autobind-by-default.html",
        "/blog/2013/07/11/react-v0-4-prop-validation-and-default-values.html",
        "/blog/2013/07/03/community-roundup-4.html",
        "/blog/2013/07/17/react-v0-4-0.html",
        "/blog/2013/07/23/community-roundup-5.html",
        "/blog/2013/07/26/react-v0-4-1.html",
        "/blog/2013/07/30/use-react-and-jsx-in-ruby-on-rails.html",
        "/blog/2013/08/05/community-roundup-6.html",
        "/blog/2013/08/19/use-react-and-jsx-in-python-applications.html",
        "/blog/2013/08/26/community-roundup-7.html",
        "/blog/2013/09/24/community-roundup-8.html",
        "/blog/2013/10/16/react-v0.5.0.html",
        "/blog/2013/10/29/react-v0-5-1.html",
        "/blog/2013/10/3/community-roundup-9.html",
        "/blog/2013/11/18/community-roundup-11.html",
        "/blog/2013/12/18/react-v0.5.2-v0.4.2.html",
        "/blog/2013/12/19/react-v0.8.0.html",
        "/blog/2013/12/30/community-roundup-13.html",
        "/blog/2013/12/23/community-roundup-12.html",
        "/blog/2014/01/02/react-chrome-developer-tools.html",
        "/blog/2014/02/05/community-roundup-15.html",
        "/blog/2014/02/15/community-roundup-16.html",
        "/blog/2014/02/16/react-v0.9-rc1.html",
        "/blog/2014/01/06/community-roundup-14.html",
        "/blog/2014/02/24/community-roundup-17.html",
        "/blog/2014/03/14/community-roundup-18.html",
        "/blog/2014/03/19/react-v0.10-rc1.html",
        "/blog/2014/03/21/react-v0.10.html",
        "/blog/2014/04/04/reactnet.html",
        "/blog/2014/03/28/the-road-to-1.0.html",
        "/blog/2014/05/06/flux.html",
        "/blog/2014/05/29/one-year-of-open-source-react.html",
        "/blog/2014/06/27/community-roundup-19.html",
        "/blog/2014/07/13/react-v0.11-rc1.html",
        "/blog/2014/07/25/react-v0.11.1.html",
        "/blog/2014/07/28/community-roundup-20.html",
        "/blog/2014/07/30/flux-actions-and-the-dispatcher.html",
        "/blog/2014/08/03/community-roundup-21.html",
        "/blog/2014/09/03/introducing-the-jsx-specification.html",
        "/blog/2014/09/12/community-round-up-22.html",
        "/blog/2014/09/16/react-v0.11.2.html",
        "/blog/2014/10/16/react-v0.12-rc1.html",
        "/blog/2014/10/27/react-js-conf.html",
        "/blog/2014/10/28/react-v0.12.html",
        "/blog/2014/11/24/react-js-conf-updates.html",
        "/blog/2014/12/18/react-v0.12.2.html",
        "/blog/2014/12/19/react-js-conf-diversity-scholarship.html",
        "/blog/2015/01/27/react-v0.13.0-beta-1.html",
        "/blog/2015/02/20/introducing-relay-and-graphql.html",
        "/blog/2015/02/24/react-v0.13-rc1.html",
        "/blog/2015/03/03/react-v0.13-rc2.html",
        "/blog/2015/03/04/community-roundup-25.html",
        "/blog/2015/03/10/react-v0.13.html",
        "/blog/2015/03/16/react-v0.13.1.html",
        "/blog/2015/03/26/introducing-react-native.html",
        "/blog/2015/03/30/community-roundup-26.html",
        "/blog/2015/04/17/react-native-v0.4.html",
        "/blog/2015/04/18/react-v0.13.2.html",
        "/blog/2015/05/08/react-v0.13.3.html",
        "/blog/2015/05/22/react-native-release-process.html",
        "/blog/2015/06/12/deprecating-jstransform-and-react-tools.html",
        "/blog/2015/07/03/react-v0.14-beta-1.html",
        "/blog/2015/08/03/new-react-devtools-beta.html",
        "/blog/2015/08/11/relay-technical-preview.html",
        "/blog/2015/08/13/reacteurope-roundup.html",
        "/blog/2015/09/02/new-react-developer-tools.html",
        "/blog/2015/10/01/react-render-and-top-level-api.html",
        "/blog/2015/10/19/reactiflux-is-moving-to-discord.html",
        "/blog/2015/10/28/react-v0.14.1.html",
        "/blog/2015/11/02/react-v0.14.2.html",
        "/blog/2015/11/18/react-v0.14.3.html",
        "/blog/2015/12/04/react-js-conf-2016-diversity-scholarship.html",
        "/blog/2015/12/16/ismounted-antipattern.html",
        "/blog/2015/12/29/react-v0.14.4.html",
        "/blog/2016/01/08/A-implies-B-does-not-imply-B-implies-A.html",
        "/blog/2016/01/12/discontinuing-ie8-support.html",
        "/blog/2016/02/19/new-versioning-scheme.html",
        "/blog/2016/03/16/react-v15-rc2.html",
        "/blog/2016/03/29/react-v0.14.8.html",
        "/blog/2016/04/08/react-v15.0.1.html",
        "/blog/2016/07/11/introducing-reacts-error-code-system.html",
        "/blog/2017/06/13/react-v15.6.0.html",
        "/blog/2017/07/26/error-handle-in-react-16.html",
        "/blog/2017/07/26/error-handling-in-react-16.html",
        "/blog/2017/09/08/dom-attributes-in-react-16.html",
        "/blog/2017/09/25/react-v15.6.2.html",
        "/blog/2017/12/07/introducing-the-react-rfc-process.html",
        "/blog/2018/03/01/sneak-peek-beyond-react-16.html",
        "/blog/2018/03/29/react-v-16-3.html",
        "/blog/2018/08/01/react-v-16-4-2.html",
        "/blog/2018/11/13/react-conf-recap.html",
        "/blog/2018/12/19/react-v-16-7.html",
        "/blog/2013/11/06/community-roundup-10.html",
        "/blog/2014/02/20/react-v0.9.html",
        "/blog/2014/07/17/react-v0.11.html",
        "/blog/2014/10/14/introducing-react-elements.html",
        "/blog/2014/09/24/testing-flux-applications.html",
        "/blog/2014/10/17/community-roundup-23.html",
        "/blog/2014/11/25/community-roundup-24.html",
        "/blog/2015/02/24/streamlining-react-elements.html",
        "/blog/2015/03/19/building-the-facebook-news-feed-with-relay.html",
        "/blog/2015/05/01/graphql-introduction.html",
        "/blog/2015/09/10/react-v0.14-rc1.html",
        "/blog/2015/09/14/community-roundup-27.html",
        "/blog/2016/03/07/react-v15-rc1.html",
        "/blog/2015/12/18/react-components-elements-and-instances.html",
        "/blog/2016/07/22/create-apps-with-no-configuration.html",
        "/blog/2016/08/05/relay-state-of-the-state.html",
        "/blog/2016/09/28/our-first-50000-stars.html",
        "/blog/2016/11/16/react-v15.4.0.html",
        "/blog/2017/04/07/react-v15.5.0.html",
        "/blog/2017/05/18/whats-new-in-create-react-app.html",
        "/blog/2017/09/26/react-v16.0.html",
        "/blog/2017/11/28/react-v16.2.0-fragment-support.html",
        "/blog/2018/05/23/react-v-16-4.html",
        "/blog/2018/09/10/introducing-the-react-profiler.html",
        "/blog/2018/10/01/create-react-app-v2.html",
        "/blog/2018/10/23/react-v-16-6.html",
        "/blog/2015/02/18/react-conf-roundup-2015.html",
        "/blog/2015/10/07/react-v0.14.html",
        "/blog/2018/03/27/update-on-async-rendering.html",
        "/blog/2018/06/07/you-probably-dont-need-derived-state.html",
        "/blog/2018/11/27/react-16-roadmap.html",
        "/blog/2016/04/07/react-v15.html",
        "/blog/2016/07/13/mixins-considered-harmful.html",
        "/blog/2017/12/15/improving-the-repository-infrastructure.html",
        "/blog/all.html/",
        "/"
      ],
      "ExampleCode": [
        "/"
      ]
    }
  }
}